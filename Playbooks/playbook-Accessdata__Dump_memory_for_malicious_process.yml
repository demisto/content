id: Accessdata_Dump_memory_for_malicious_process
version: -1
fromversion: 4.1.0
name: 'Accessdata: Dump memory for malicious process'
description: This playbook dumps memory  if given process is running on legacy AD
  agent
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 8ad54dd6-b579-41ef-81da-1423e2aa8f4f
    type: start
    task:
      id: 8ad54dd6-b579-41ef-81da-1423e2aa8f4f
      version: -1
      name: ""
      description: Playbook entry point
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10
        }
      }
    note: false
    timertriggers: []
  "1":
    id: "1"
    taskid: 6c822883-2638-48b1-8c41-c09e0eb4a633
    type: regular
    task:
      id: 6c822883-2638-48b1-8c41-c09e0eb4a633
      version: -1
      name: Get process list from legacy agent
      description: Call command to get process list from legacy agent
      script: '|||accessdata-legacyagent-get-processlist'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      caseid:
        simple: ${inputs.caseid}
      target_ip:
        simple: ${inputs.target_ip}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 290
        }
      }
    note: false
    timertriggers: []
  "7":
    id: "7"
    taskid: 15ba3de3-acd0-4849-8f4c-6e9c37a559d2
    type: title
    task:
      id: 15ba3de3-acd0-4849-8f4c-6e9c37a559d2
      version: -1
      name: Done
      description: Playbook exit point
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1715
        }
      }
    note: false
    timertriggers: []
  "8":
    id: "8"
    taskid: f496a274-70f8-4bb7-85dc-6f0973b5e0fc
    type: regular
    task:
      id: f496a274-70f8-4bb7-85dc-6f0973b5e0fc
      version: -1
      name: DeleteContext
      description: Clear current context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 135
        }
      }
    note: false
    timertriggers: []
  "10":
    id: "10"
    taskid: a86bc2bd-549d-49fc-8500-cc18f8c37cd0
    type: regular
    task:
      id: a86bc2bd-549d-49fc-8500-cc18f8c37cd0
      version: -1
      name: Read snapshot file from case folder
      description: Reads a file from case folder and saves its content in current
        contet
      script: Quinc|||accessdata-read-casefile
      type: regular
      iscommand: true
      brand: Quinc
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      filepath:
        simple: ${Accessdata.Job.Result.SnapshotDetails.File}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 740
        }
      }
    note: false
    timertriggers: []
  "11":
    id: "11"
    taskid: 82060579-995f-40d1-8f86-59d3449515df
    type: regular
    task:
      id: 82060579-995f-40d1-8f86-59d3449515df
      version: -1
      name: Check if process exists in process list
      description: Reads contetn of XML file from context, converts it to JSON and
        checks if given filename exists in process list. Returs yes or no
      scriptName: AccessdataCheckProcessExistsInSnapshot
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      process:
        simple: ${inputs.process_name}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
    timertriggers: []
  "12":
    id: "12"
    taskid: f3fe6bad-370b-4640-8f4f-90336c9a5cc7
    type: condition
    task:
      id: f3fe6bad-370b-4640-8f4f-90336c9a5cc7
      version: -1
      name: Does the  process exist?
      description: Simple conditional task
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: Accessdata.Process.Exists
            iscontext: true
          right:
            value:
              simple: "Yes"
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1050
        }
      }
    note: false
    timertriggers: []
  "13":
    id: "13"
    taskid: 38356887-dc93-4eee-8a88-13b90c05a5f0
    type: regular
    task:
      id: 38356887-dc93-4eee-8a88-13b90c05a5f0
      version: -1
      name: Create memory dump job
      description: Creates legacy agent memory dump
      script: Quinc|||accessdata-legacyagent-get-memorydump
      type: regular
      iscommand: true
      brand: Quinc
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      caseid:
        simple: ${inputs.caseid}
      target_ip:
        simple: ${inputs.target_ip}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 350,
          "y": 1240
        }
      }
    note: false
    timertriggers: []
  "15":
    id: "15"
    taskid: 925a6043-1df2-4d21-8d0f-b602a82a5906
    type: playbook
    task:
      id: 925a6043-1df2-4d21-8d0f-b602a82a5906
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      Ids:
        simple: ${Accessdata.Job.CaseJobID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: caseJobID
      PollingCommandName:
        simple: accessdata-jobstatus-scan
      Timeout:
        simple: "15"
      dt:
        simple: Accessdata.Job(val.State == 'Unknown' || val.State == 'Started' ||
          val.State == 'Pending' || val.State == 'Submitted' || val.State == 'InProgress').CaseJobID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 440
        }
      }
    note: false
    timertriggers: []
  "17":
    id: "17"
    taskid: 223b7515-94c0-4291-87af-73b9b2a2f31f
    type: playbook
    task:
      id: 223b7515-94c0-4291-87af-73b9b2a2f31f
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      Ids:
        simple: ${Accessdata.Job.CaseJobID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: caseJobID
      PollingCommandName:
        simple: accessdata-jobstatus-scan
      Timeout:
        simple: "20"
      dt:
        simple: Accessdata.Job(val.State == 'Unknown' || val.State == 'Started' ||
          val.State == 'Pending' || val.State == 'Submitted' || val.State == 'InProgress').CaseJobID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 350,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
  "18":
    id: "18"
    taskid: d90593ce-0302-4593-8a4f-bdf4f8bb9e8f
    type: regular
    task:
      id: d90593ce-0302-4593-8a4f-bdf4f8bb9e8f
      version: -1
      name: Get memory dump job result
      description: Get status of job
      script: Quinc|||accessdata-get-jobstatus
      type: regular
      iscommand: true
      brand: Quinc
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      caseID:
        simple: ${inputs.caseid}
      jobID:
        simple: ${Accessdata.Job(val.Type=="LegacyMemoryDump").ID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 350,
          "y": 1545
        }
      }
    note: false
    timertriggers: []
  "19":
    id: "19"
    taskid: 3de887f6-3ffe-4a19-8007-4da5d69cfbb7
    type: regular
    task:
      id: 3de887f6-3ffe-4a19-8007-4da5d69cfbb7
      version: -1
      name: Get process list job result
      description: Get snapshot path from result of the process list job
      script: Quinc|||accessdata-get-jobstatus-processlist
      type: regular
      iscommand: true
      brand: Quinc
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      caseID:
        simple: ${inputs.caseid}
      jobID:
        simple: ${Accessdata.Job(val.Type=="Volatile").ID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 590
        }
      }
    note: false
    timertriggers: []
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1770,
        "width": 680,
        "x": 50,
        "y": 10
      }
    }
  }
inputs:
- key: caseid
  value:
    simple: "1"
  required: true
  description: ""
- key: target_ip
  value:
    simple: X.X.X.X
  required: true
  description: ""
- key: process_name
  value:
    simple: explorer.exe
  required: true
  description: ""
outputs:
- contextPath: Result
  description: ""
- contextPath: State
  description: ""
tests:
  - No test
