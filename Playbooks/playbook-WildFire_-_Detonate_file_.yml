id: WildFire - Detonate file
version: -1
name: WildFire - Detonate file
description: Detonate files through WildFire
fromversion: 3.5.0
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 29dcbc1e-0bb0-45f1-82ed-eb65b6ce039d
    type: start
    task:
      id: 29dcbc1e-0bb0-45f1-82ed-eb65b6ce039d
      version: -1
      name: ""
      iscommand: false
      description: ""
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    view: |-
      {
        "position": {
          "x": 152.5,
          "y": 50
        }
      }
  "4":
    id: "4"
    taskid: 3b9613c2-336f-4934-8c0d-935b95580d42
    type: regular
    task:
      id: 3b9613c2-336f-4934-8c0d-935b95580d42
      version: -1
      name: DetonateFile (WildFire)
      description: Detonate the file in WildFire.
      script: WildFire|||detonate-file
      type: regular
      iscommand: true
      brand: WildFire
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      delay: ""
      entryID: ${inputs.File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0).EntryID}
      format: ""
      hash: ""
      interval: ""
      md5: ""
      timeout: ""
      upload: ${inputs.File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0).EntryID}
      verbose: ""
    view: |-
      {
        "position": {
          "x": 71,
          "y": 545
        }
      }
  "5":
    id: "5"
    taskid: ca3bc370-80b9-4b97-80c6-ed99a5b851f5
    type: condition
    task:
      id: ca3bc370-80b9-4b97-80c6-ed99a5b851f5
      version: -1
      name: Is WildFire enabled?
      description: Check if a given value exists in the context. Will return 'no'
        for empty empty arrays. To be used mostly with DQ and selectors.
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "6"
      "yes":
      - "7"
    scriptarguments:
      value: ${modules(val.brand == 'WildFire' && val.state == 'active')}
    view: |-
      {
        "position": {
          "x": 152.5,
          "y": 195
        }
      }
  "6":
    id: "6"
    taskid: e6a670a6-eff4-4b16-883b-f08e7d7e7bd3
    type: title
    task:
      id: e6a670a6-eff4-4b16-883b-f08e7d7e7bd3
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    view: |-
      {
        "position": {
          "x": 71,
          "y": 720
        }
      }
  "7":
    id: "7"
    taskid: 0469d0c7-99b4-4495-8d6c-05c1803bd4d4
    type: condition
    task:
      id: 0469d0c7-99b4-4495-8d6c-05c1803bd4d4
      version: -1
      name: Is file type supported?
      description: Check if file type is supported
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "8"
      "yes":
      - "4"
    scriptarguments:
      value: ${inputs.File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0)}
    view: |-
      {
        "position": {
          "x": 26,
          "y": 378
        }
      }
  "8":
    id: "8"
    taskid: 4312a9b3-70fc-462f-8846-fac07a824d41
    type: regular
    task:
      id: 4312a9b3-70fc-462f-8846-fac07a824d41
      version: -1
      name: File type is not supported
      description: Prints text to war room that file type is not supported
      scriptName: Print
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      value: File type is not supported for detonation through WildFire
    view: |-
      {
        "position": {
          "x": -369,
          "y": 548
        }
      }
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 735,
        "width": 901.5,
        "x": -369,
        "y": 50
      }
    }
  }
inputs:
- key: File
  value: ${File}
  description: File object of file to be uploaded
outputs:
- contextPath: File.Name
  description: Filename
  type: string
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score
  type: string
- contextPath: DBotScore.Score
  description: The actual score
  type: number
- contextPath: DBotScore.Indicator
  description: The indicator we tested
  type: string
- contextPath: File.Type
  description: File type e.g. "PE"
  type: string
- contextPath: File.MD5
  description: MD5 hash of the file
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file
  type: string
- contextPath: File.SHA256
  description: SHA256 hash of the file
  type: string
releaseNotes: "-"
