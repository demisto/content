id: Prisma Cloud Remediation - AWS IAM Password Policy Does Not Expire In 90 Days
version: -1
fromversion: 5.0.0
name: Prisma Cloud Remediation - AWS IAM Password Policy Does Not Expire In 90 Days
description: This playbook remediates an IAM password policy which does not have password
  expiration set to 90 days. AWS IAM (Identity & Access Management) allows customers
  to secure AWS console access. As a security best practice, customers must have strong
  password policies in place.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
    type: start
    task:
      id: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 690,
          "y": -180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: fdbb4eb8-e231-4a75-8852-3e61c0f75ba0
    type: condition
    task:
      id: fdbb4eb8-e231-4a75-8852-3e61c0f75ba0
      version: -1
      name: Is AWS - IAM integration enabled?
      description: Check to see if the IAM integration is enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "2"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: AWS - IAM
                accessor: brand
            iscontext: true
          right:
            value:
              simple: AWS - IAM
    view: |-
      {
        "position": {
          "x": 690,
          "y": -30
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: 7d230dec-76ad-47c9-853a-61e2f25f33a0
    type: regular
    task:
      id: 7d230dec-76ad-47c9-853a-61e2f25f33a0
      version: -1
      name: Get IAM password policy
      description: Get AWS account's password policy.
      script: '|||aws-iam-get-account-password-policy'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 6b54cc95-828a-44a2-8c89-eeb15b536866
    type: condition
    task:
      id: 6b54cc95-828a-44a2-8c89-eeb15b536866
      version: -1
      name: Update IAM password policy automatically?
      description: Automatically runs the playbook remediation on your behalf.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.AutoUpdatePasswordPolicy
                transformers:
                - operator: toLowerCase
            iscontext: true
          right:
            value:
              simple: "yes"
    view: |-
      {
        "position": {
          "x": 400,
          "y": 300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 0f64a791-2d93-4be9-8e00-807eec3ef100
    type: regular
    task:
      id: 0f64a791-2d93-4be9-8e00-807eec3ef100
      version: -1
      name: Automatically update IAM password policy
      description: Create/update password policy.
      script: '|||aws-iam-update-account-password-policy'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      allowUsersToChangePassword: {}
      hardExpiry: {}
      maxPasswordAge:
        simple: "90"
      minimumPasswordLength: {}
      passwordReusePrevention: {}
      requireLowercaseCharacters: {}
      requireNumbers: {}
      requireSymbols: {}
      requireUppercaseCharacters: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 100c5376-9157-4e10-857e-565c20ca1e51
    type: condition
    task:
      id: 100c5376-9157-4e10-857e-565c20ca1e51
      version: -1
      name: Auto remediate?
      description: Ask to auto remediate. If true, remediation runs on your behalf.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "Yes":
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 140,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to: null
      subject: null
      body:
        simple: ${incident.id} Autoremediate?
      methods: []
      format: ""
      bcc: null
      cc: null
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
      replyOptions:
      - "Yes"
      - "No"
  "6":
    id: "6"
    taskid: d13d81f1-0b8d-4bec-8bfe-04433656aeb4
    type: regular
    task:
      id: d13d81f1-0b8d-4bec-8bfe-04433656aeb4
      version: -1
      name: Manually update IAM password policy
      description: |-
        1. Login to the AWS console and navigate to the IAM dashboard
        2. On the left navigation panel, click on Account Settings
        3. Check Enable password expiration and enter expire passwords in 90 days
        4. Click on Save changes
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 140,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: f741e20d-8d26-403f-8017-96a45c53fe65
    type: regular
    task:
      id: f741e20d-8d26-403f-8017-96a45c53fe65
      version: -1
      name: Close investigation
      description: commands.local.cmd.close.inv
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      emailclassification: {}
      id:
        complex:
          root: incident
          accessor: id
      phishingsubtype: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: a8d06dc1-f186-4459-87b6-3d05d85f70d0
    type: title
    task:
      id: a8d06dc1-f186-4459-87b6-3d05d85f70d0
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 690,
          "y": 1290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 9288f313-79f7-4c8f-82bc-c94878f794c4
    type: regular
    task:
      id: 9288f313-79f7-4c8f-82bc-c94878f794c4
      version: -1
      name: Dismiss Prisma Cloud alert
      description: Dismiss the alerts matching the given filter. Must provide either
        policy IDs or alert IDs.
      script: RedLock|||redlock-dismiss-alerts
      type: regular
      iscommand: true
      brand: RedLock
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      alert-id:
        complex:
          root: incident
          accessor: labels
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: id
      alert-rule-name: {}
      alert-status: {}
      cloud-account: {}
      cloud-region: {}
      cloud-type: {}
      dismissal-note:
        simple: ${incident.labels.id} has been remediated by Demisto.
      policy-compliance-standard: {}
      policy-id:
        complex:
          root: incident
          accessor: labels.policy
          transformers:
          - operator: ParseJSON
          - operator: getField
            args:
              field:
                value:
                  simple: policyId
      policy-label: {}
      policy-name: {}
      policy-severity: {}
      policy-type: {}
      resource-id: {}
      resource-name: {}
      resource-type: {}
      risk-grade: {}
      time-range-date-from: {}
      time-range-date-to: {}
      time-range-unit: {}
      time-range-value: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1115
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "1_2_yes": 0.49,
      "1_8_#default#": 0.34,
      "3_4_yes": 0.58,
      "3_5_#default#": 0.56,
      "5_4_Yes": 0.49,
      "5_6_#default#": 0.5
    },
    "paper": {
      "dimensions": {
        "height": 1535,
        "width": 930,
        "x": 140,
        "y": -180
      }
    }
  }
inputs:
- key: AutoUpdatePasswordPolicy
  value:
    simple: "no"
  required: false
  description: Update AWS IAM password policy automatically?
outputs: []
tests:
- No Test
