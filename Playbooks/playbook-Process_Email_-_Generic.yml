id: process_email_-_generic
version: -1
name: Process Email - Generic
fromversion: 4.0.0
description: Add email details to the relevant context entities and handle the case
  where original emails are attached.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: ccd00127-175c-4a93-8edb-14e71f7d47ea
    type: start
    task:
      id: ccd00127-175c-4a93-8edb-14e71f7d47ea
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: be757276-3df5-4c10-87a9-7a5b49646bff
    type: condition
    task:
      id: be757276-3df5-4c10-87a9-7a5b49646bff
      version: -1
      name: Do we have original emails attached?
      description: Check if we have any attachments with relevant attachment types
        like eml or rfc822
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "16"
      "yes":
      - "3"
    scriptarguments:
      value:
        simple: ${inputs.File((val.Type.toLowerCase().indexOf('composite document
                  file v2 document') >= 0 || val.Type.toLowerCase().indexOf('rfc 822 mail') >= 0 ||
                  val.Extension == 'eml') && val.Type.toLowerCase().indexOf('ascii') >= 0 &&
                  val.Type.toLowerCase().indexOf('crlf') >= 0).EntryID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 195
        }
      }
    note: false
  "2":
    id: "2"
    taskid: 0dd910be-f198-4b5d-8dbb-8d7170049463
    type: regular
    task:
      id: 0dd910be-f198-4b5d-8dbb-8d7170049463
      version: -1
      name: Add original email details to context
      description: ""
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      append: {}
      key:
        simple: Email
      value:
        simple: '${inputs={To: val[''Email''], CC: val[''Email/cc''], From: val[''Email/from''],
          Subject: val[''Email/subject''], Text: val[''Email/text''], HTML: val[''Email/html''],
          Headers: val[''Email/headers''], Format: val[''Email/format'']}}'
    reputationcalc: 2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
  "3":
    id: "3"
    taskid: ba7f4d0b-5fab-436a-877c-c5cfaac66580
    type: regular
    task:
      id: ba7f4d0b-5fab-436a-877c-c5cfaac66580
      version: -1
      name: Add original email attachments to context
      description: ""
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      entryid:
        simple: ${inputs.File(val.Type.toLowerCase().indexOf('composite document file
          v2 document') >= 0 || val.Type.toLowerCase().indexOf('rfc 822 mail') >= 0 ||
          val.Extension == 'eml' && val.Type.toLowerCase().indexOf('ascii') >= 0 &&
          val.Type.toLowerCase().indexOf('crlf') >= 0).EntryID}
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 720
        }
      }
    note: false
  "4":
    id: "4"
    taskid: be6f6daf-0497-423e-8a48-d669ccad567f
    type: condition
    task:
      id: be6f6daf-0497-423e-8a48-d669ccad567f
      version: -1
      name: Is there an HTML label in the email?
      description: ""
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Email
                accessor: HTML
            iscontext: true
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 1215
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 2373f9de-c13d-42ca-84be-8735743156e6
    type: regular
    task:
      id: 2373f9de-c13d-42ca-84be-8735743156e6
      version: -1
      name: Render HTML to an image
      description: ""
      script: Rasterize|||rasterize-email
      type: regular
      iscommand: true
      brand: Rasterize
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      height: {}
      htmlBody:
        complex:
          root: Email
          accessor: HTML
      type: {}
      width: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1390
        }
      }
    note: false
  "6":
    id: "6"
    taskid: dd0d5106-965e-4a81-8e67-79392ea47d7f
    type: title
    task:
      id: dd0d5106-965e-4a81-8e67-79392ea47d7f
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 1915
        }
      }
    note: false
  "11":
    id: "11"
    taskid: 104966c4-8595-4a5a-8c75-c84f55e51c84
    type: title
    task:
      id: 104966c4-8595-4a5a-8c75-c84f55e51c84
      version: -1
      name: Advance features
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 1070
        }
      }
    note: false
  "13":
    id: "13"
    taskid: 290c46f5-b31b-412e-860a-5758b94081ad
    type: regular
    task:
      id: 290c46f5-b31b-412e-860a-5758b94081ad
      version: -1
      name: Set incident with the Email object data
      description: ""
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      addLabels: {}
      app: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname:
        complex:
          root: Email
          accessor: Attachments
          transformers:
          - operator: Stringify
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      bugtraq: {}
      customFields: {}
      cve: {}
      cvss: {}
      daysbetweenreportcreation: {}
      dest: {}
      destntdomain: {}
      details: {}
      duration: {}
      emailbcc:
        complex:
          root: Email
          accessor: BCC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          root: Email
          accessor: Text
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          root: Email
          accessor: Format
          transformers:
          - operator: Stringify
      emailbodyhtml:
        complex:
          root: Email
          accessor: HTML
          transformers:
          - operator: Stringify
      emailcc:
        complex:
          root: Email
          accessor: CC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclientname: {}
      emailfrom:
        complex:
          root: Email
          accessor: From
          transformers:
          - operator: uniq
          - operator: Stringify
      emailinreplyto:
        complex:
          root: Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Email.Headers.name
                iscontext: true
              right:
                value:
                  simple: In-Reply-To
          accessor: Headers
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: In-Reply-To
              field:
                value:
                  simple: name
              getField:
                value:
                  simple: value
          - operator: StripChars
            args:
              chars:
                value:
                  simple: <>
      emailkeywords: {}
      emailmessageid:
        complex:
          root: Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Email.Headers.name
                iscontext: true
              right:
                value:
                  simple: Message-ID
          accessor: Headers
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: Message-ID
              field:
                value:
                  simple: name
              getField:
                value:
                  simple: value
          - operator: StripChars
            args:
              chars:
                value:
                  simple: <>
      emailreceived: {}
      emailreplyto:
        complex:
          root: Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Email.Headers.name
                iscontext: true
              right:
                value:
                  simple: Reply-To
          accessor: Headers
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: Reply-To
              field:
                value:
                  simple: name
              getField:
                value:
                  simple: value
          - operator: StripChars
            args:
              chars:
                value:
                  simple: <>
      emailreturnpath:
        complex:
          root: Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Email.Headers.name
                iscontext: true
              right:
                value:
                  simple: Return-Path
          accessor: Headers
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: Return-Path
              field:
                value:
                  simple: name
              getField:
                value:
                  simple: value
          - operator: StripChars
            args:
              chars:
                value:
                  simple: <>
      emailsenderip:
        complex:
          root: Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Email.Headers.name
                iscontext: true
              right:
                value:
                  simple: x-originating-ip
          accessor: Headers
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: x-originating-ip
              field:
                value:
                  simple: name
              getField:
                value:
                  simple: value
          - operator: StripChars
            args:
              chars:
                value:
                  simple: '[]'
      emailsize:
        complex:
          root: Email
          accessor: Text
          transformers:
          - operator: strLength
      emailsource: {}
      emailsubject:
        complex:
          root: Email
          accessor: Subject
          transformers:
          - operator: uniq
          - operator: Stringify
      emailto:
        complex:
          root: Email
          accessor: To
          transformers:
          - operator: uniq
          - operator: Stringify
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      labels: {}
      malwarefamily: {}
      mdtest: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      replacePlaybook: {}
      reporteduser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      severity: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
    reputationcalc: 2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 895
        }
      }
    note: false
  "14":
    id: "14"
    taskid: 89a7a856-46ff-46f6-8f1c-b2f772c12881
    type: regular
    task:
      id: 89a7a856-46ff-46f6-8f1c-b2f772c12881
      version: -1
      name: Set HTML Image custom field
      description: Set the base64 of the rendered image to the custom field and the
        Summary page
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      addLabels: {}
      app: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      bugtraq: {}
      customFields: {}
      cve: {}
      cvss: {}
      daysbetweenreportcreation: {}
      dest: {}
      destntdomain: {}
      details: {}
      duration: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclientname: {}
      emailfrom: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      htmlimage:
        simple: |
          ![HTML render](data:image/png;base64,${Base64.encoded})
      htmlrenderedimage:
        simple: '![HTML render](data:image/png;base64,${Base64.encoded})'
      id: {}
      important: {}
      importantfield: {}
      labels: {}
      malwarefamily: {}
      mdtest: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      replacePlaybook: {}
      reporteduser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      severity: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 592.5,
          "y": 1740
        }
      }
    note: false
  "15":
    id: "15"
    taskid: 50661f40-4640-4b90-8f01-8143cec44c79
    type: condition
    task:
      id: 50661f40-4640-4b90-8f01-8143cec44c79
      version: -1
      name: Is there a base64 encoding for the rendered image?
      description: ""
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "14"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Base64.encoded
            iscontext: true
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1565
        }
      }
    note: false
  "16":
    id: "16"
    taskid: bc0dd5a2-6073-4f44-8abc-9bc48e3e08c1
    type: condition
    task:
      id: bc0dd5a2-6073-4f44-8abc-9bc48e3e08c1
      version: -1
      name: Should retrieve the original email?
      description: If True, retrieve the original email in the thread
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "17"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.GetOriginalEmail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 152.5,
          "y": 370
        }
      }
    note: false
  "17":
    id: "17"
    taskid: e6915e5d-bdca-4d59-8636-2e65b2e680e1
    type: playbook
    task:
      id: e6915e5d-bdca-4d59-8636-2e65b2e680e1
      version: -1
      name: Get Original Message - Generic
      description: ""
      playbookName: Get Original Email - Generic
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": 265,
          "y": 545
        }
      }
    note: false
  "18":
    id: "18"
    taskid: 9a505e0b-27c1-424a-880a-253135d80683
    type: condition
    task:
      id: 9a505e0b-27c1-424a-880a-253135d80683
      version: -1
      name: Was the original email retrieved?
      description: Is there an email object in the context?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Email
            iscontext: true
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1930,
        "width": 1025,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: File
  value:
    complex:
      root: File
  required: false
  description: An EML or MSG file with
- key: Email
  value:
    complex:
      root: incident
      accessor: labels.Email
  required: false
  description: The receiving email address
- key: Email/cc
  value:
    complex:
      root: incident
      accessor: labels.CC
  required: false
  description: CC addresses
- key: Email/from
  value:
    complex:
      root: incident
      accessor: labels.Email/from
  required: false
  description: The originator of the email
- key: Email/subject
  value:
    complex:
      root: incident
      accessor: labels.Email/subject
  required: false
  description: The email’s subject
- key: Email/text
  value:
    complex:
      root: incident
      accessor: labels.Email/text
  required: false
  description: The email’s text
- key: Email/html
  value:
    complex:
      root: incident
      accessor: labels.Email/html
  required: false
  description: The emai’sl html
- key: Email/headers
  value:
    complex:
      root: incident
      accessor: labels.Email/headers
  required: false
  description: The email’s headers
- key: Email/format
  value:
    complex:
      root: incident
      accessor: labels.Email/format
  required: false
  description: The email’s format
- key: GetOriginalEmail
  value:
    simple: "False"
  required: false
  description: |-
    Retrieve the original email in the thread. Default is "False".

    You must have the necessary permissions in your email service to execute global search.

    - EWS: eDiscovery
    - Gmail: Google Apps Domain-Wide Delegation of Authority
outputs:
- contextPath: Email.HTML
  description: Email 'html' body if exists
  type: string
- contextPath: Email
  description: Email object
  type: unknown
- contextPath: Email.CC
  description: Email 'cc' addresses
  type: string
- contextPath: Email.From
  description: Email 'from' sender
  type: string
- contextPath: Email.Subject
  description: Email subject
  type: string
- contextPath: Email.To
  description: Email 'to' addresses
  type: string
- contextPath: Email.Text
  description: Email 'text' body if exists
  type: string
- contextPath: Email.Headers
  description: The full email headers as a single string
  type: string
- contextPath: Email.Attachments
  description: The list of attachment names in the email
  type: string
- contextPath: Email.Format
  description: The format of the email if available
  type: string
- contextPath: File
  description: The File object
  type: unknown
