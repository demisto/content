id: PAN-OS DAG Configuration
version: -1
name: PAN-OS DAG Configuration
fromversion: 4.0.0
description: "This playbook utilizes the Dynamic Address Group (DAG) capability of
  PAN-OS.\nDAG enables analysts to create a rule one time, where the group is the
  source/destination, and adds IP addresses dynamically without the need to commit
  the configuration every time.\n\nThe playbook checks if the given tag already exists.
  If the tag exists, then the IP address is added to the tag.\n\nIf the tag does not
  exist, a new address group is created with the given tag and a matching rule, and
  the configuration is committed. \n"
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 24fcd4ca-bf27-4bc1-86fd-569548dd22ba
    type: start
    task:
      id: 24fcd4ca-bf27-4bc1-86fd-569548dd22ba
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 320fbaaa-b322-4d39-8549-2663d87df56e
    type: condition
    task:
      id: 320fbaaa-b322-4d39-8549-2663d87df56e
      version: -1
      name: Is PAN-OS integration enabled?
      description: Checks if there is an active instance of PAN-OS enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "2"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Panorama
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: 2235c4df-c6d7-40ff-8ac3-6c43b66fe753
    type: regular
    task:
      id: 2235c4df-c6d7-40ff-8ac3-6c43b66fe753
      version: -1
      name: List Address Groups
      description: Lists all address groups in PAN-OS.
      script: '|||panorama-list-address-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: cf23bd70-8c0b-469e-8872-6b294bf3e9be
    type: condition
    task:
      id: cf23bd70-8c0b-469e-8872-6b294bf3e9be
      version: -1
      name: Check if tag exists in address groups
      description: Checks if the given tag exists in the address groups.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsString
          left:
            value:
              complex:
                root: Panorama
                accessor: AddressGroups.Match
                transformers:
                - operator: Stringify
                - operator: join
                  args:
                    separator:
                      value:
                        simple: ' '
            iscontext: true
          right:
            value:
              simple: inputs.tag_name
            iscontext: true
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 367.5,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 4b656ae4-3cbb-4da3-8964-3d773b436d2d
    type: regular
    task:
      id: 4b656ae4-3cbb-4da3-8964-3d773b436d2d
      version: -1
      name: Register IP address to a tag
      description: Registers IP addresses to a tag.
      script: '|||panorama-register-ip-tag'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      IPs:
        simple: ${inputs.ip_list}
      persistent: {}
      tag:
        simple: ${inputs.tag_name}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 325,
          "y": 2450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: ee06ca45-8577-4b16-8911-2ac2560b2142
    type: title
    task:
      id: ee06ca45-8577-4b16-8911-2ac2560b2142
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 325,
          "y": 2720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: 27618a8f-d6e1-4ba8-821c-37dfa0e19acf
    type: regular
    task:
      id: 27618a8f-d6e1-4ba8-821c-37dfa0e19acf
      version: -1
      name: Create Address Group
      description: Creates an address group. Can be "static" or "dynamic".
      script: '|||panorama-create-address-group'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      addresses: {}
      description: {}
      match:
        simple: ${inputs.tag_name}
      name:
        simple: ${inputs.address_group_name}
      type:
        simple: dynamic
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 720,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: 19cf90dc-4544-47e9-809f-38090341f269
    type: regular
    task:
      id: 19cf90dc-4544-47e9-809f-38090341f269
      version: -1
      name: Manually commit
      description: Allows the analyst to manually commit the changes. This will be
        operational if auto-commit is "false".
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 1400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 2bd82322-f586-4e9c-881c-f4385d43d012
    type: playbook
    task:
      id: 2bd82322-f586-4e9c-881c-f4385d43d012
      version: -1
      name: PAN-OS-Commit-Configuration
      description: ""
      playbookName: PAN-OS Commit Configuration
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": 570,
          "y": 1400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 31f00bc1-3fee-484e-8189-a0a011fd5f71
    type: condition
    task:
      id: 31f00bc1-3fee-484e-8189-a0a011fd5f71
      version: -1
      name: Is auto-commit defined?
      description: Checks if the values provided in arguments are equal. If either
        of the arguments are missing, "no" is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "15"
      "yes":
      - "16"
    scriptarguments:
      left:
        simple: ${inputs.auto_commit}
      right:
        simple: "Yes"
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 720,
          "y": 1170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 08d03cb7-aace-4ff1-8bc5-475010b122db
    type: playbook
    task:
      id: 08d03cb7-aace-4ff1-8bc5-475010b122db
      version: -1
      name: Panorama Rule Handling
      description: 'Creates or edits a panorama rule with the given DAG, and places the rule 
      in the desired location in the rulebase.'
      playbookName: PAN-OS - Create Or Edit Rule
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      action-type:
        simple: ${inputs.action-type}
      element-to-add:
        simple: ${inputs.address_group_name}
      inbound-or-outbound-rule:
        simple: ${inputs.inbound-or-outbound-rule}
      log-forwarding-object-name:
        simple: ${inputs.log-forwarding-object-name}
      pre-post-rulebase:
        simple: ${inputs.pre-post-rulebase}
      relative-rule-name:
        simple: ${inputs.relative-rule-name}
      rule-position:
        simple: ${inputs.rule-position}
      rule_name:
        simple: ${inputs.rule_name}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 720,
          "y": 940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "17_15_#default#": 0.24,
      "17_16_yes": 0.34,
      "1_5_#default#": 0.1,
      "3_4_yes": 0.4,
      "3_6_#default#": 0.65
    },
    "paper": {
      "dimensions": {
        "height": 2735,
        "width": 1330,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: tag_name
  value:
    simple: DavidTag5
  required: true
  description: The name of the tag to add to PAN-OS.
- key: ip_list
  value:
    simple: 192.168.1.12
  required: true
  description: The list of the IP addresses to block.
- key: address_group_name
  value:
    simple: DavidAG5
  required: true
  description: The name of the group that will be created if the tag does not exist.
- key: rule_name
  value:
    simple: meshi-rule
  required: false
  description: The name of the rule to update, or the name of the rule that will be
    created.
- key: auto_commit
  value:
    simple: "Yes"
  required: false
  description: Whether the rule will be committed automatically.
- key: log-forwarding-object-name
  value: {}
  required: false
  description: The server address to which to forward logs.
- key: rule-position
  value:
    simple: before
  required: true
  description: |-
    The position of the rule in the ruleset. Valid values are:
      * Top
      * Bottom
      * Before
      * After
- key: relative-rule-name
  value:
    simple: pan-os-edl-test-edl-rule
  required: false
  description: 'If the rule-position that is chosen is before or after, 
    specify the rule name to which it is related.'
- key: inbound-or-outbound-rule
  value:
    simple: outbound
  required: false
  description: Determines if the rule is inbound or outbound.
- key: action-type
  value:
    simple: drop
  required: false
  description: |-
    The action that will be defined in the rule. Valid values are:
    * allow
    * deny
    * drop
- key: pre-post-rulebase
  value:
    simple: pre-rulebase
  required: true
  description: 'Determines whether the rule is a pre-rulebase or post-rulebase rule, according to the rule structure.
    Exists only in panorama!'
outputs: []
