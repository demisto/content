id: Prisma Cloud Remediation - AWS IAM Password Policy Does Not Have An Uppercase
version: -1
fromversion: 5.0.0
name: Prisma Cloud Remediation - AWS IAM Password Policy Does Not Include an Uppercase
  Character
description: This playbook remediates an IAM password policy that does not require
  an uppercase character. AWS IAM (Identity & Access Management) allows customers
  to secure AWS console access. As a security best practice, customers must have strong
  password policies in place.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
    type: start
    task:
      id: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 690,
          "y": -180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: f38c9f21-b796-470b-848c-0f1de834816e
    type: condition
    task:
      id: f38c9f21-b796-470b-848c-0f1de834816e
      version: -1
      name: Is AWS - IAM integration enabled?
      description: Check to see if the IAM integration is enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "2"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: AWS - IAM
                accessor: brand
            iscontext: true
          right:
            value:
              simple: AWS - IAM
    view: |-
      {
        "position": {
          "x": 690,
          "y": -30
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: 379825b4-d083-413e-844d-4354b516bb95
    type: regular
    task:
      id: 379825b4-d083-413e-844d-4354b516bb95
      version: -1
      name: Get IAM password policy
      description: Get AWS account's password policy.
      script: '|||aws-iam-get-account-password-policy'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 420,
          "y": 140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: cf451b53-2b1e-4948-8165-5e29d2632d4c
    type: condition
    task:
      id: cf451b53-2b1e-4948-8165-5e29d2632d4c
      version: -1
      name: Update IAM password policy automatically?
      description: Automatically runs the playbook remediation on your behalf.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.AutoUpdatePasswordPolicy
                transformers:
                - operator: toLowerCase
            iscontext: true
          right:
            value:
              simple: "yes"
    view: |-
      {
        "position": {
          "x": 420,
          "y": 330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: b6b08fb9-44e9-4b61-801f-ac8584eecc13
    type: regular
    task:
      id: b6b08fb9-44e9-4b61-801f-ac8584eecc13
      version: -1
      name: Automatically update IAM password policy
      description: Create/update password policy.
      script: '|||aws-iam-update-account-password-policy'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      allowUsersToChangePassword: {}
      hardExpiry: {}
      maxPasswordAge: {}
      minimumPasswordLength: {}
      passwordReusePrevention: {}
      requireLowercaseCharacters: {}
      requireNumbers: {}
      requireSymbols: {}
      requireUppercaseCharacters:
        simple: "True"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 420,
          "y": 670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 9847a235-1b87-4ea6-89c3-2a9b2e77f18f
    type: condition
    task:
      id: 9847a235-1b87-4ea6-89c3-2a9b2e77f18f
      version: -1
      name: Auto remediate?
      description: Ask to auto remediate. If true, remediation runs on your behalf.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "Yes":
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 160,
          "y": 500
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to: null
      subject: null
      body:
        simple: ${incident.id} Autoremediate?
      methods: []
      format: ""
      bcc: null
      cc: null
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
      replyOptions:
      - "Yes"
      - "No"
  "6":
    id: "6"
    taskid: f939d36d-7779-4b80-8841-9d1be0113bf8
    type: regular
    task:
      id: f939d36d-7779-4b80-8841-9d1be0113bf8
      version: -1
      name: Manually update IAM password policy
      description: |-
        1. Login to the AWS console and navigate to the IAM dashboard
        2. On the left navigation panel, click on Account Settings
        3. Check Require at least one uppercase letter
        4. Click on Apply password policy
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 160,
          "y": 810
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: fa6de4b2-b9c7-4d8e-8dbe-d256586621bf
    type: regular
    task:
      id: fa6de4b2-b9c7-4d8e-8dbe-d256586621bf
      version: -1
      name: Close investigation
      description: commands.local.cmd.close.inv
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      emailclassification: {}
      id:
        complex:
          root: incident
          accessor: id
      phishingsubtype: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 420,
          "y": 980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: a8d06dc1-f186-4459-87b6-3d05d85f70d0
    type: title
    task:
      id: a8d06dc1-f186-4459-87b6-3d05d85f70d0
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 690,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 7cac6041-0900-450b-843e-b1b6708d2924
    type: regular
    task:
      id: 7cac6041-0900-450b-843e-b1b6708d2924
      version: -1
      name: Dismiss Prisma Cloud alert
      description: Dismiss the alerts matching the given filter. Must provide either
        policy IDs or alert IDs.
      script: RedLock|||redlock-dismiss-alerts
      type: regular
      iscommand: true
      brand: RedLock
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      alert-id:
        complex:
          root: incident
          accessor: labels
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: id
      alert-rule-name: {}
      alert-status: {}
      cloud-account: {}
      cloud-region: {}
      cloud-type: {}
      dismissal-note:
        simple: ${incident.labels.id} has been remediated by Demisto.
      policy-compliance-standard: {}
      policy-id:
        complex:
          root: incident
          accessor: labels.policy
          transformers:
          - operator: ParseJSON
          - operator: getField
            args:
              field:
                value:
                  simple: policyId
      policy-label: {}
      policy-name: {}
      policy-severity: {}
      policy-type: {}
      resource-id: {}
      resource-name: {}
      resource-type: {}
      risk-grade: {}
      time-range-date-from: {}
      time-range-date-to: {}
      time-range-unit: {}
      time-range-value: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 420,
          "y": 1150
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "1_2_yes": 0.49,
      "1_8_#default#": 0.34,
      "3_4_yes": 0.58,
      "3_5_#default#": 0.56,
      "5_4_Yes": 0.49,
      "5_6_#default#": 0.5
    },
    "paper": {
      "dimensions": {
        "height": 1565,
        "width": 910,
        "x": 160,
        "y": -180
      }
    }
  }
inputs:
- key: AutoUpdatePasswordPolicy
  value:
    simple: "no"
  required: false
  description: Update AWS IAM password policy automatically?
outputs: []
tests:
- No Test
