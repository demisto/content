id: WildFire - Detonate File From URL
version: -1
name: WildFire - Detonate File From URL
description: |-
  Detonates one or more remote files using the WildFire sandbox integration.
  Returns relevant reports to the War Room and file reputations to the context data.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: b0d19219-9074-4049-83a9-c065ad43df9a
    type: start
    task:
      id: b0d19219-9074-4049-83a9-c065ad43df9a
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: 7340bca5-6bb4-41c8-8a14-9cbf035c755c
    type: regular
    task:
      id: 7340bca5-6bb4-41c8-8a14-9cbf035c755c
      version: -1
      name: WildFire Upload File Remote
      script: WildFire|||wildfire-upload-file-remote
      type: regular
      iscommand: true
      brand: WildFire
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      upload:
        simple: ${inputs.FileURL}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
  "2":
    id: "2"
    taskid: 86c6acc2-95fa-4fbd-8d91-14562140c021
    type: playbook
    task:
      id: 86c6acc2-95fa-4fbd-8d91-14562140c021
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      Ids:
        simple: ${WildFire.Report.SHA256}
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: hash
      PollingCommandName:
        simple: wildfire-report
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: WildFire.Report(val.Status != 'Success').SHA256
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 08dceb2e-4895-4930-8c21-dc2925cc423d
    type: title
    task:
      id: 08dceb2e-4895-4930-8c21-dc2925cc423d
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 5f8eb7ef-2b8d-4c1b-85f9-7622b60f3042
    type: condition
    task:
      id: 5f8eb7ef-2b8d-4c1b-85f9-7622b60f3042
      version: -1
      name: Is there a File to detonate?
      description: Look for file URLs to detonate
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: inputs.FileURL
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
  "7":
    id: "7"
    taskid: 137e563a-88a3-4ec9-8518-ae4124fca837
    type: condition
    task:
      id: 137e563a-88a3-4ec9-8518-ae4124fca837
      version: -1
      name: Is WildFire sandbox enabled?
      description: Check if integration instance is enabled
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: WildFire
                transformers:
                - operator: getField
                  args:
                    field:
                      value:
                        simple: state
            iscontext: true
          right:
            value:
              simple: active
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
    note: false
  "8":
    id: "8"
    taskid: 180e27d9-3b62-44bd-8fd7-0f6ff1e9f346
    type: regular
    task:
      id: 180e27d9-3b62-44bd-8fd7-0f6ff1e9f346
      version: -1
      name: WildFire Get Report
      description: Retrieve results for a file hash using WildFire
      script: WildFire|||wildfire-report
      type: regular
      iscommand: true
      brand: WildFire
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      format: {}
      hash:
        complex:
          root: WildFire
          accessor: Report.SHA256
      md5: {}
      verbose: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 888
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: FileURL
  value:
    simple: ${FileURL}
  required: false
  description: URL of the web file to detonate. The FileUrl is taken from the context.
- key: Interval
  value:
    simple: "1"
  required: false
  description: Duration for executing the pooling (in minutes)
- key: Timeout
  value:
    simple: "15"
  required: false
  description: The duration after which to stop pooling and to resume the playbook
    (in minutes)
outputs:
- contextPath: File.SHA1
  description: SHA1 hash of the file
  type: string
- contextPath: File.SHA256
  description: SHA256 hash of the file
  type: string
- contextPath: WildFire.Report.SHA256
  description: SHA256 of the submission
  type: string
- contextPath: WildFire.Report.FileType
  description: The type of the submission
  type: string
- contextPath: WildFire.Report.Size
  description: The size of the submission
  type: number
- contextPath: WildFire.Report.MD5
  description: MD5 of the submission
  type: string
- contextPath: WildFire.Report.Status
  description: The status of the submission
  type: string
- contextPath: WildFire.Report
  description: WildFire report object
  type: unknown
- contextPath: File
  description: The File object
  type: unknown
- contextPath: File.Name
  description: Filename
  type: string
- contextPath: File.Type
  description: File type e.g. "PE"
  type: string
- contextPath: File.Size
  description: File size
  type: number
- contextPath: File.MD5
  description: MD5 hash of the file
  type: string
- contextPath: File.Malicious
  description: The Malicious Object
  type: unknown
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: DBotScore
  description: The DBotScore object
  type: unknown
- contextPath: DBotScore.Indicator
  description: The indicator we tested
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score
  type: string
- contextPath: DBotScore.Score
  description: The actual score
  type: number
- contextPath: InfoFile
  description: The Report File object
  type: unknown
- contextPath: InfoFile.EntryID
  description: The EntryID of the report file
  type: string
- contextPath: InfoFile.Extension
  description: The extension of the report file
  type: string
- contextPath: InfoFile.Name
  description: The name of the report file
  type: string
- contextPath: InfoFile.Info
  description: The info of the report file
  type: string
- contextPath: InfoFile.Size
  description: The size of the report file
  type: number
- contextPath: InfoFile.Type
  description: The type of the report file
  type: string
releaseNotes: Detonate File from URL playbook using the new GenericPolling playbook, allows multiple detonations.