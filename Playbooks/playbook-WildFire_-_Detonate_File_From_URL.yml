id: WildFire - Detonate File From URL
version: -1
name: WildFire - Detonate File From URL
description: |-
  Detonate one or more files using the Wildfire integration. This playbook returns relevant reports to the War Room and file reputations to the context data.
  The detonation supports the following file types -
  APK, JAR, DOC, DOCX, RTF, XLS, XLSX, PPT, PPTX, XML, PE32, PDF, DMG, PKG, RAR, 7Z
fromversion: 4.0.0
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 219dcb92-ee7d-420e-816e-3f70b24bd953
    type: start
    task:
      id: 219dcb92-ee7d-420e-816e-3f70b24bd953
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: 0f6db3a2-537d-45db-8abc-20accf11ec59
    type: regular
    task:
      id: 0f6db3a2-537d-45db-8abc-20accf11ec59
      version: -1
      name: WildFire Upload File Remote
      description: ""
      script: WildFire|||wildfire-upload-file-remote
      type: regular
      iscommand: true
      brand: WildFire
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      upload:
        complex:
          root: inputs.FileURL
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
  "2":
    id: "2"
    taskid: 4f0aa551-1874-4223-875d-9701c6192be6
    type: playbook
    task:
      id: 4f0aa551-1874-4223-875d-9701c6192be6
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      Ids:
        complex:
          root: WildFire
          accessor: Report.SHA256
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: hash
      PollingCommandName:
        simple: wildfire-report
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: WildFire.Report(val.Status != 'Success').SHA256
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 11650265-0035-421f-8e92-143af887b7a7
    type: title
    task:
      id: 11650265-0035-421f-8e92-143af887b7a7
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 4a6315f7-7947-4cfc-8554-4e6b3edb4478
    type: condition
    task:
      id: 4a6315f7-7947-4cfc-8554-4e6b3edb4478
      version: -1
      name: Is there a File to detonate?
      description: Look for file URLs to detonate
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: inputs.FileURL
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
  "7":
    id: "7"
    taskid: 2a98f575-de73-4805-874d-87f4af43d99b
    type: condition
    task:
      id: 2a98f575-de73-4805-874d-87f4af43d99b
      version: -1
      name: Is WildFire sandbox enabled?
      description: Check if integration instance is enabled
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: WildFire
                transformers:
                - operator: getField
                  args:
                    field:
                      value:
                        simple: state
            iscontext: true
          right:
            value:
              simple: active
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
    note: false
  "8":
    id: "8"
    taskid: f8f9d5c4-2e83-42c6-827d-8a49b94e1013
    type: regular
    task:
      id: f8f9d5c4-2e83-42c6-827d-8a49b94e1013
      version: -1
      name: WildFire Get Report
      description: Retrieve results for a file hash using WildFire
      script: WildFire|||wildfire-report
      type: regular
      iscommand: true
      brand: WildFire
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      format: {}
      hash:
        complex:
          root: WildFire
          accessor: Report.SHA256
      md5: {}
      verbose: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 888
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: FileURL
  value:
    simple: ${FileURL}
  required: false
  description: URL of the web file to detonate. The FileUrl is taken from the context.
- key: Interval
  value:
    simple: "1"
  required: false
  description: Duration for executing the pooling (in minutes)
- key: Timeout
  value:
    simple: "15"
  required: false
  description: The duration after which to stop pooling and to resume the playbook
    (in minutes)
- key: ReportFileType
  value: {}
  required: false
  description: The resource type to download. Default is pdf. xml is also possible.
outputs:
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: File.Name
  description: Filename (only in case of report type=json)
  type: string
- contextPath: File.Size
  description: File size (only in case of report type=json)
  type: number
- contextPath: File.MD5
  description: MD5 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.Type
  description: File type e.g. "PE" (only in case of report type=json)
  type: string
- contextPath: File.SHA256
  description: SHA256 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.EntryID
  description: The Entry ID of the sample
  type: string
- contextPath: File.Malicious.Description
  description: For malicious files, the reason for the vendor to make the decision
  type: string
- contextPath: DBotScore.Indicator
  description: The indicator we tested (only in case of report type=json)
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator (only in case of report type=json)
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score (only in case of report type=json)
  type: string
- contextPath: IP.Address
  description: IP's relevant to the sample
  type: string
- contextPath: DBotScore.Score
  description: The actual score (only in case of report type=json)
  type: number
releaseNotes: Detonate File from URL playbook using the new GenericPolling playbook, allows multiple detonations