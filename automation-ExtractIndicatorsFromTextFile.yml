args:
- description: War Room entryID of the file to read.
  name: entryID
  required: true
- description: Maximal file size to load, in bytes. Default is 1000000 (1MB).
  name: maxFileSize
comment: |-
  Extract indicators from a text-based file.
  Indicators that can be extracted:
  * IP
  * Domain
  * URL
  * File Hash
  * Email Address
commonfields:
  id: ExtractIndicatorsFromTextFile
  version: -1
enabled: true
name: ExtractIndicatorsFromTextFile
outputs:
- contextPath: Domain.Name
  description: Extracted domains
  type: string
- contextPath: Account.Email.Address
  description: Extracted emails
  type: string
- contextPath: File.MD5
  description: Extracted MD5
  type: string
- contextPath: File.SHA1
  description: Extracted SHA1
  type: string
- contextPath: File.SHA256
  description: Extracted SHA256
  type: string
- contextPath: IP.Address
  description: Extracted IPs
  type: string
- contextPath: URL.Data
  description: Extracted URLs
  type: string
runas: DBotWeakRole
runonce: false
script: |2-



  try:
      maxFileSize = int(demisto.args().get('maxFileSize'))
  except Exception:
      maxFileSize = 1024**2

  res = demisto.executeCommand('getFilePath', {
      'id': demisto.args()['entryID']
  })


  try:
      filePath = res[0]['Contents']['path']
  except Exception:
      return_error("File was not found")

  with open(filePath, mode='r') as f:
      data = f.read(maxFileSize)
      try:
          data = data.decode('unicode_escape').encode('utf-8')
      # unicode_escape might throw UnicodeDecodeError for strings that contain \ char followed by ascii characters
      except UnicodeDecodeError:
          data = data.encode('utf-8')

      # Extract indicators (omitting context output, letting auto-extract work)
      indicators_hr = demisto.executeCommand("extractIndicators", {
          'text': data})[0][u'Contents']
      demisto.results({
          'Type': entryTypes['note'],
          'ContentsFormat': formats['text'],
          'Contents': indicators_hr,
          'HumanReadable': indicators_hr
      })
scripttarget: 0
system: true
tags: []
type: python
