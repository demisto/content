args:
- default: true
  description: Time interval start
  name: rangeFrom
- description: Time interval end
  name: rangeTo
- description: Specific Time
  name: specificTime
- auto: PREDEFINED
  description: Define time filter mode. mandatory if filtering by time.
  name: timeFilterType
  predefined:
  - LAST_HOUR
  - LAST_24_HOURS
  - LAST_7_DAYS
  - CUSTOM_RANGE
  - SPECIFIC_TIME
- description: Filter by host group ID
  name: hostGroupID
- description: Filter by host ID
  name: hostID
- description: Filter by host security profile ID
  name: securityProfileID
- auto: PREDEFINED
  description: Define host filter mode. mandatory if filtering by host/s.
  name: hostFilterType
  predefined:
  - ALL_HOSTS
  - HOSTS_IN_GROUP
  - HOSTS_USING_SECURITY_PROFILE
  - HOSTS_IN_GROUP_AND_ALL_SUBGROUPS
  - SPECIFIC_HOST
  - MY_HOSTS
- description: filter by event ID
  name: eventID
- auto: PREDEFINED
  description: event ID operator
  name: eventFilterOperator
  predefined:
  - GREATER_THAN
  - LESS_THAN
  - EQUAL
comment: Get anti malware events
commonfields:
  id: TrendmicroAntiMalwareEventRetrieve
  version: -1
dependson:
  must:
  - trendmicro-anti-malware-event-retrieve
name: TrendmicroAntiMalwareEventRetrieve
runonce: false
script: |
  hostIds = argToList(demisto.get(demisto.args(),"hostID"))
  resps = []
  dArgs = demisto.args()
  err = []
  res = []

  if hostIds:
      for hostId in hostIds:
          dArgs["hostID"] = hostId
          temp_resp = demisto.executeCommand("trendmicro-anti-malware-event-retrieve", dArgs)
          if isError(temp_resp[0]):
              err += temp_resp
          else:
              resps += temp_resp
  else:
      resps = demisto.executeCommand("trendmicro-anti-malware-event-retrieve", dArgs)
  for resp in resps:
      data = demisto.get(resp, "Contents.antiMalwareEventRetrieveReturn.antiMalwareEvents.item")
      if data:
          data = data if isinstance(data, list) else [data]
          data = [{k: formatCell(row[k]) for k in row} for row in data]
          res += [{"ContentsFormat": formats["table"], "Type": entryTypes["note"], "Contents": data}]

      res += err
  if res:
      demisto.results(res)
  else:
      demisto.results("No results.")
scripttarget: 0
system: true
tags:
- Trend Micro
type: python
