args:
- description: An array of email addresses to be filtered by domain.
  isArray: true
  name: value
  required: true
- description: An array of domains to blacklist.
  isArray: true
  name: domain_list
  required: true
comment: Accepts an array of domains as a blacklist, and a list of email addresses.
  The script then filters out any email address whose domain is in the blacklist.  The
  filtered list will be returned as an array.
commonfields:
  id: EmailDomainBlacklist
  version: -1
dockerimage: demisto/python3:3.7.4.977
enabled: true
name: EmailDomainBlacklist
runas: DBotWeakRole
runonce: false
script: |2-



  def csv_string_to_list(v):
      if type(v) == str:  # requires python3
          return v.lower().replace(' ', '').replace('\n', '').split(',')
      v = [val.lower() for val in v]
      return v


  def main():
      DOMAIN_LIST = csv_string_to_list(demisto.args()['domain_list'])
      EMAIL_ADDRESSES = csv_string_to_list(demisto.args()['value'])

      filtered_addresses = []

      for address in EMAIL_ADDRESSES:
          [user, domain] = address.split('@')

          if domain not in DOMAIN_LIST:
              filtered_addresses.append(address)

      if len(filtered_addresses) != 0:
          demisto.results(filtered_addresses)
      else:
          demisto.results(None)


  if __name__ == "__builtin__" or __name__ == "builtins":
      main()
scripttarget: 0
system: true
tags:
- transformer
- general
- entirelist
type: python
