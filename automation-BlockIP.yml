args:
- default: true
  description: IP to block
  name: ip
  required: true
- description: Rule name
  name: rulename
- auto: PREDEFINED
  description: Direction to block (to, from or both - default)
  name: direction
  predefined:
  - to
  - from
  - both
  required: true
- description: Base name for added ip/hosts inside checkpoint db
  name: ipname
comment: Blocks IP in configured firewall
commonfields:
  id: BlockIP
  version: -1
dependson:
  should:
  - panorama
  - checkpoint
enabled: true
name: BlockIP
runonce: false
script: |-
  var blockPanorama = !!executeCommand('IsIntegrationAvailable',{'brandname': 'panorama'})[0].Contents;
  var blockCP = !!executeCommand('IsIntegrationAvailable',{'brandname': 'check point'})[0].Contents;

  if (args['using-brand']) {
      switch (args['using-brand'].toLowerCase()) {
          case 'panorama':
              blockCP = false;
              break;
          case 'check point':
              blockPanorama = false;
              break;
      }
  }

  if (!args.rulename) {
      args.rulename = 'ip' + args.ip + ' blocked in direction ' + args.direction;
  }

  var entries = [];
  if (blockPanorama) {
      entries.push(executeCommand('PanoramaBlockIP', args));
  }

  if (blockCP) {
      if (!args.ipname) {
          args.ipname = + args.ip + ' . ' + args.direction;
      }
      entries.push(executeCommand('CPBlockIP', args));
  }

  return entries;
scripttarget: 0
system: true
tags:
- firewall
- checkpoint
- panorama
type: javascript
