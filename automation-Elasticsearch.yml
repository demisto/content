args:
- description: Computes a score explanation for a query and a specific document, default
    false
  name: explain
- description: Fields to fetch, leave empty to bring the entire document
  name: fields
- description: Index name/s to query, comma separated
  name: index
  required: true
- default: true
  description: search query
  name: query
  required: true
- description: Page number to start search from, default 0
  name: page
- description: Page size, 1 - 10000, default 100
  name: size
- description: Sort field[:order] order = true for ascending, default true
  name: sort
comment: |-
  Deprecated. Use the Elasticsearch v2 integration instead.

  Run a search query using Elasticsearch
commonfields:
  id: Elasticsearch
  version: -1
dependson:
  must:
  - elasticsearch|||search
deprecated: true
enabled: true
name: Elasticsearch
runonce: false
script: |+
  dArgs = demisto.args()
  dArgs['using-brand'] = 'elasticsearch'
  res = demisto.executeCommand('search', dArgs)
  if isError(res[0]):
      demisto.results(res)
  else:
      md = '### Elasticsearch results\n'
      md += '* Query: ' + dArgs['query'] + '\n'
      md += '* Index: ' + dArgs['index'] + '\n'
      if demisto.get(res[0],'Contents.total'):
          data = demisto.get(res[0], 'Contents.hits')
          data = flattenTable(data)
          demisto.results({'ContentsFormat': formats['table'], 'Type': entryTypes['note'], 'Contents': data})
      else:
          demisto.results({'ContentsFormat': formats['text'], 'Type': entryTypes['note'], 'Contents': 'No results.'})


scripttarget: 0
system: true
tags:
- Elasticsearch
type: python
