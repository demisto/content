description: This is a playbook for performing Google Vault search in Groups and display
  the results.
id: Google-Vault-Search-Groups
inputs:
- description: |2-

    matterID
  key: matterID
  required: true
  value: {}
- description: Export Name
  key: exportName
  required: true
  value: {}
- description: Choice of Search scope
  key: dataScope
  required: false
  value:
    simple: All Data
- description: Enter one or more Groups separated by commas. You can search up to
    50 Groups.
  key: groups
  required: false
  value: {}
- description: 'Search time frame. E.g: "1 min ago","2 weeks ago","3 months ago"'
  key: timeFrame
  required: false
  value: {}
- description: UTC start time (2018-10-16T12:59:02.584000Z)
  key: startTime
  required: false
  value: {}
- description: UTC end time (2018-10-16T12:59:02.584000Z)
  key: endTime
  required: false
  value: {}
- description: Add specific terms for the search (subject:example)
  key: terms
  required: false
  value: {}
- description: Export format
  key: exportPST
  required: false
  value:
    simple: "true"
- description: Export format
  key: exportMBOX
  required: false
  value:
    simple: "false"
- description: Interval to check export status (minutes)
  key: pollInterval
  required: false
  value:
    simple: "2"
- description: Timeout to terminate the poll (minutes)
  key: pollTimeout
  required: false
  value:
    simple: "30"
- description: The maximal number of result to be displayed
  key: maxResultForDisplay
  required: false
  value:
    simple: "30"
- description: If set to true the export file created will be downloaded into the
    War Room
  key: downloadFile
  required: false
  value:
    simple: "false"
name: Google Vault - Search Groups
outputs:
- contextPath: GoogleVault.Matter.Export.MatterID
  description: Matter ID
  type: string
- contextPath: GoogleVault.Matter.Export.ExportID
  description: Export ID
  type: string
- contextPath: GoogleVault.Matter.Export.Name
  description: Export's name
  type: string
- contextPath: GoogleVault.Matter.Export.CreateTime
  description: Export's creation time
  type: string
- contextPath: GoogleVault.Matter.Export.Results.CC
  description: CC of the message
  type: string
- contextPath: GoogleVault.Matter.Export.Results.BCC
  description: BCC of the message
  type: string
- contextPath: GoogleVault.Matter.Export.Results.DateSent
  description: The date the message
  type: string
- contextPath: GoogleVault.Matter.Export.Results.From
  description: The sender of the message
  type: string
- contextPath: GoogleVault.Matter.Export.Results.Subject
  description: The subject of the message
  type: string
- contextPath: GoogleVault.Matter.Export.Results.DateReceived
  description: The date the message was received
  type: string
- contextPath: GoogleVault.Matter.Export.Results.To
  description: The address the message was sent to
  type: string
- contextPath: GoogleVault.Matter.Export.Status
  description: Export Status (COMPLETED,FAILED,IN_PROGRESS)
  type: string
- contextPath: GoogleVault.Matter.Export.BucketName
  description: Bucket holder name for this export
  type: string
- contextPath: GoogleVault.Matter.Export.DownloadID
  description: ID to be used by the download-export command
  type: string
- contextPath: GoogleVault.Matter.Export.ViewID
  description: ID to be used by the get-X-results command (X=drive/mail/groups)
  type: string
- contextPath: GoogleVault.Matter
  description: Matter object
  type: unknown
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 14cac14a-3745-46d2-8ef6-da411a06da52
      iscommand: false
      name: ""
      version: -1
    taskid: 14cac14a-3745-46d2-8ef6-da411a06da52
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 50,
          "y": 200
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    scriptarguments:
      dataScope:
        simple: ${inputs.dataScope}
      endTime:
        complex:
          root: inputs.endTime
      exportMBOX:
        simple: ${inputs.exportMBOX}
      exportName:
        complex:
          root: inputs.exportName
      exportPST:
        simple: ${inputs.exportPST}
      groups:
        complex:
          root: inputs.groups
      matterID:
        complex:
          root: inputs.matterID
      startTime:
        complex:
          root: inputs.startTime
      terms:
        complex:
          root: inputs.terms
      timeFrame:
        complex:
          root: inputs.timeFrame
    separatecontext: false
    task:
      brand: ""
      description: Creates a Google Vault export in order to perform search actions
        on emails.
      id: 40d47276-5b8c-4a16-8bfc-986b89a39382
      iscommand: true
      name: Create Group Export
      script: '|||gvault-create-export-groups'
      type: regular
      version: -1
    taskid: 40d47276-5b8c-4a16-8bfc-986b89a39382
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "16"
    note: false
    scriptarguments:
      Ids:
        simple: ${GoogleVault.Matter.MatterID}#${GoogleVault.Matter.Export.[0].ExportID}
      Interval:
        complex:
          root: inputs.pollInterval
      PollingCommandArgName:
        simple: queryIDS
      PollingCommandName:
        simple: gvault-export-status
      Timeout:
        complex:
          root: inputs.pollTimeout
      dt:
        simple: GoogleVault.Matter.Export(val.Status != 'COMPLETED')=val.MatterID
          + '#' + val.ExportID
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: 2499c394-d9b8-4fc2-8e39-006e6ed21018
      iscommand: false
      name: GenericPolling
      playbookName: GenericPolling
      type: playbook
      version: -1
    taskid: 2499c394-d9b8-4fc2-8e39-006e6ed21018
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 550
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    scriptarguments:
      bucketName:
        complex:
          accessor: Matter.Export.BucketName
          root: GoogleVault
      maxResult:
        complex:
          root: inputs.maxResultForDisplay
      viewID:
        complex:
          accessor: Matter.Export.ViewID
          root: GoogleVault
    separatecontext: false
    task:
      brand: ""
      description: Get the results of a given mail export
      id: 31d85c78-3d02-4ef9-8734-3d41200a8857
      iscommand: true
      name: Get Groups results
      script: '|||gvault-get-groups-results'
      type: regular
      version: -1
    taskid: 31d85c78-3d02-4ef9-8734-3d41200a8857
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1120
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 9ed8fed0-adb4-4d5a-8de3-4390979be049
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 9ed8fed0-adb4-4d5a-8de3-4390979be049
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 780,
          "y": 1760
        }
      }
  "15":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.downloadFile
          operator: isEqualString
          right:
            value:
              simple: "true"
      label: "yes"
    id: "15"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "17"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: aa748877-64f6-403b-8a28-5a48d7470abf
      iscommand: false
      name: Check downloadFile
      type: condition
      version: -1
    taskid: aa748877-64f6-403b-8a28-5a48d7470abf
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1330
        }
      }
  "16":
    id: "16"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "18"
    note: false
    scriptarguments:
      exportID:
        complex:
          accessor: Matter.Export.ExportID
          root: GoogleVault
      exportIDS:
        complex:
          accessor: Matter.Export.ExportID
          root: GoogleVault
      matterId:
        complex:
          accessor: Matter.Export.MatterID
          root: GoogleVault
      queryIDS: {}
    separatecontext: false
    task:
      brand: ""
      id: 97311171-052d-4110-8cac-66da6235bd3b
      iscommand: true
      name: Get Export status to context
      script: '|||gvault-export-status'
      type: regular
      version: -1
    taskid: 97311171-052d-4110-8cac-66da6235bd3b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 730
        }
      }
  "17":
    id: "17"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    scriptarguments:
      bucketName:
        complex:
          accessor: Matter.Export.BucketName
          root: GoogleVault
      downloadID:
        complex:
          accessor: Matter.Export.DownloadID
          root: GoogleVault
    separatecontext: false
    task:
      brand: ""
      id: afc45103-f1da-466f-8950-4b4a4227378e
      iscommand: true
      name: Download Export file
      script: '|||gvault-download-results'
      type: regular
      version: -1
    taskid: afc45103-f1da-466f-8950-4b4a4227378e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1550
        }
      }
  "18":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Matter.Export.Status
                root: GoogleVault
          operator: isEqualString
          right:
            value:
              simple: COMPLETED
      label: "yes"
    id: "18"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "19"
      "yes":
      - "3"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 0273f108-4e62-44b6-82aa-bb543619668d
      iscommand: false
      name: Check if status COMPLETED
      type: condition
      version: -1
    taskid: 0273f108-4e62-44b6-82aa-bb543619668d
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 50,
          "y": 920
        }
      }
  "19":
    id: "19"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    scriptarguments:
      message:
        simple: 'Polling time out: Your search is taking a bit more time. To see your
          results please run playbook ''Google Vault - Display Results'' with a grater
          ''PollIntarval'' and ''PollTimeout'' using this ExportID: ${GoogleVault.Matter.Export.ExportID}
          and MatterID: ${GoogleVault.Matter.Export.MatterID}'
    separatecontext: false
    task:
      brand: ""
      id: 1fb0571b-bd21-423c-85ae-0f9ca53649f2
      iscommand: false
      name: Polling Timeout
      scriptName: PrintErrorEntry
      type: regular
      version: -1
    taskid: 1fb0571b-bd21-423c-85ae-0f9ca53649f2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1110
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1625,
        "width": 1110,
        "x": 50,
        "y": 200
      }
    }
  }
