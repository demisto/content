args:
- default: true
  description: The host's name
  name: name
- description: The host's IP address
  name: ip
comment: Mark a host as resolved in LightCyber Magna. Will return an error if you
  try to resolve a host that isn't in the detected entities list or if the host is
  already resolved (You can use "unresolve" to change this property back).
commonfields:
  id: LCMAcknowledgeHost
  version: -1
dependson:
  must:
  - lcm-acknowledge-host
name: LCMAcknowledgeHost
runonce: false
script: |
  import re
  ID_REGEX = r'Id: ([a-zA-Z0-9\-]+)'

  dArgs = demisto.args()
  resp = demisto.executeCommand("LCMHosts", dArgs)
  if isError(resp[0]):
      demisto.results(resp)
  elif  resp[0]['Contents'] == 'No results.':
      demisto.results('Host not found in LightCyber.')
  else:
      demisto.log(str(resp))
      hosts = resp[0]['Contents']
      if isinstance(hosts, list) and len(hosts) == 1 :
          reMatch = re.search(ID_REGEX, hosts[0]['HostId'], re.I)
          if reMatch and len(reMatch.groups()) > 0:
              hostID = reMatch.group(1)
          if hostID:
              resp = demisto.executeCommand("lcm-acknowledge-host", {'id': hostID})
              if isError(resp[0]) or resp[0]['Contents'] != 'No result returned':
                  demisto.results(resp)
              else:
                  demisto.results('Done')
          else:
              demisto.results( { "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'Could not extract host ID.' } )
      else:
          demisto.results( { "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'Results weren\'t a single host: ' + str(resp)[:3000] } )
scripttarget: 0
system: true
tags:
- lightcyber
type: python
