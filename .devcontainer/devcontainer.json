// Development container for Content.
{
	"name": "XSOAR Content",
	"build": {
		"dockerfile": "Dockerfile"
	},
	"runArgs": [
		"--init",
		"--privileged"
	],
	"overrideCommand": false,
	"mounts": [
		"source=venv,target=${containerWorkspaceFolder}/.venv,type=volume",
		"source=poetry-venv,target=/home/demisto/.cache/pypoetry,type=volume",
		"source=node-modules,target=${containerWorkspaceFolder}/node_modules,type=volume",
		"source=dind-var-lib-docker,target=/var/lib/docker,type=volume"
	],
	"containerUser": "demisto",
	"remoteUser": "demisto",
	"remoteEnv": {
		"LOCAL_WORKSPACE_PATH": "${localWorkspaceFolder}",
		"PATH": "${containerEnv:PATH}:${containerWorkspaceFolder}/.venv/bin",
		"CONTENT": "${containerWorkspaceFolder}",
		"DEMISTO_SDK_CONTENT_PATH": "${containerWorkspaceFolder}",
		"PYTHONPATH": "${containerWorkspaceFolder}:${containerWorkspaceFolder}/Packs/Base/Scripts/CommonServerPython/:${containerWorkspaceFolder}/Packs/Base/Scripts/CommonServerUserPython/:${containerWorkspaceFolder}/Tests/demistomock/:${containerEnv:PYTHONPATH}",
		"MYPYPATH": "${containerWorkspaceFolder}:${containerWorkspaceFolder}/Packs/Base/Scripts/CommonServerPython/:${containerWorkspaceFolder}/Packs/Base/Scripts/CommonServerUserPython/:${containerWorkspaceFolder}/Tests/demistomock/:${containerEnv:PYTHONPATH}",
		"DEMISTO_BASE_URL": "${localEnv:DEMISTO_BASE_URL}",
		"DEMISTO_USERNAME": "${localEnv:DEMISTO_USERNAME}",
		"DEMISTO_PASSWORD": "${localEnv:DEMISTO_PASSWORD}",
		"DEMISTO_VERIFY_SSL": "${localEnv:DEMISTO_VERIFY_SSL}",
		"DEMISTO_API_KEY": "${localEnv:DEMISTO_API_KEY}"
	},
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.defaultProfile.linux": "zsh",
				"terminal.integrated.profiles.linux": {
					"zsh": {
						"path": "/bin/zsh"
					}
				},
				"cSpell.words": [
					"demisto",
					"xsoar",
					"xsiam",
					"fromversion",
					"toversion",
					"marketplacev",
					"ciac",
					"whois",
				]
			},
			"extensions": [
				"cortexxsoarext.xsoar",
				"GitLab.gitlab-workflow",
				"ms-python.python",
				"GitHub.vscode-pull-request-github",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker",
				"ms-vscode-remote.remote-containers",
				"streetsidesoftware.code-spell-checker",
				"njpwerner.autodocstring",
				"VisualStudioExptTeam.vscodeintellicode",
				"redhat.vscode-yaml",
				"PKief.material-icon-theme",
				"mikestead.dotenv",
				"KevinRose.vsc-python-indent",
				"LittleFoxTeam.vscode-python-test-adapter",
				"charliermarsh.ruff",
				"ryanluker.vscode-coverage-gutters",
				"ms-python.debugpy",
				"EditorConfig.EditorConfig",
				"DavidAnson.vscode-markdownlint",
				"ms-vscode.powershell"
			]
		}
	},
// this is commented out until VSCode will fix self signed certificate issues
// "features": {
// 	"ghcr.io/devcontainers/features/docker-in-docker:1": {
// 		"version": "latest"
// 	},
// 	"ghcr.io/devcontainers/features/git:1": {
// 		"version": "os-provided"
// 	},
// 	"ghcr.io/devcontainers/features/powershell:1": {
// 		"version": "latest"
// 	},
// 	"ghcr.io/devcontainers/features/common-utils:1": {
// 		"version": "latest"
// 	},
// 	"ghcr.io/devcontainers/features/node:1": {
// 		"version": "latest"
// 	}
// },
// "overrideFeatureInstallOrder": [
// 	"ghcr.io/devcontainers/features/common-utils:1"
// ],
"onCreateCommand": "sudo dos2unix -n .devcontainer/createCommand.sh .devcontainer/createCommand_unix.sh && bash .devcontainer/createCommand_unix.sh",
"postStartCommand": "poetry install && poetry run demisto-sdk pre-commit >/dev/null 2>&1 || true",
"hostRequirements": {
	"cpus": 4,
	"memory": "8gb",
	"storage": "32gb"
 }
}