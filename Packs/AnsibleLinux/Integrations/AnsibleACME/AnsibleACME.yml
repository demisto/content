category: IT Services
commonfields:
  id: AnsibleACME
  version: -1
configuration:
- additionalinfo: The credentials to associate with the instance. SSH keys can be configured using the credential manager.
  display: Username
  name: creds
  required: true
  type: 9
- additionalinfo: The default port to use if one is not specified in the commands `host` argument.
  defaultvalue: 22
  display: Default SSH Port
  name: port
  required: true
  type: 0
- additionalinfo: If multiple hosts are specified in a command, how many hosts should be interacted with concurrently.
  defaultvalue: '4'
  display: Concurrency Factor
  name: concurrency
  required: true
  type: 0
- display: Escalate Privileges
  additionalinfo: |
    Ansible allows you to ‘become’ another user, different from the user that
    logged into the machine (remote user).
  name: become
  required: true
  type: 15
  options:
  - "Yes"
  - "No"
  defaultvalue: 'Yes'
- display: Privilege Escalation Method
  additionalinfo: Which privilege escalation method should be used.
  name: become_method
  required: true
  type: 15
  options:
  - "sudo"
  - "su"
  - "doas"
  defaultvalue: 'sudo'
- display: Privilege Escalation User
  additionalinfo: Set the user you become through privilege escalation
  name: become_user
  type: 0
  defaultvalue: 'root'
  required: false
- display: Privilege Escalation Password
  additionalinfo: Set the privilege escalation password.
  name: become_password
  type: 4
  required: false
description: Control Automatic Certificate Management Environment on Linux hosts
display: Ansible ACME
fromversion: 6.0.0
name: AnsibleACME
script:
  commands:
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      description: 'The state of the account, to be identified by its account key. If the state is `absent`, the account will either not exist or be deactivated. If the state is `changed_key`, the account must exist. The account key will be changed; no other information will be touched.'
      name: state
      predefined:
      - present
      - absent
      - changed_key
      required: true
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: Whether account creation is allowed (when state is `present`).
      name: allow_creation
      predefined:
      - 'Yes'
      - 'No'
    - description: 'A list of contact URLs. Email addresses must be prefixed with `mailto:`. See `https://tools.ietf.org/html/rfc8555#section-7.3` for what is allowed. Must be specified when state is `present`. Will be ignored if state is `absent` or `changed_key`.'
      isArray: true
      name: contact
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Boolean indicating whether you agree to the terms of service document. ACME servers can require this to be true.'
      name: terms_agreed
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key to change to. Same restrictions apply as to `account_key_src`. Mutually exclusive with `new_account_key_content`. Required if `new_account_key_content` is not used and state is `changed_key`.'
      name: new_account_key_src
    - description: 'Content of the ACME account RSA or Elliptic Curve key to change to. Same restrictions apply as to `account_key_content`. Mutually exclusive with `new_account_key_src`. Required if `new_account_key_src` is not used and state is `changed_key`.'
      name: new_account_key_content
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key. RSA keys can be created with `openssl genrsa ...`. Elliptic curve keys can be created with `openssl ecparam -genkey ...`. Any other tool creating private keys in PEM format can be used as well. Mutually exclusive with `account_key_content`. Required if `account_key_content` is not used.'
      name: account_key_src
    - description: "Content of the ACME account RSA or Elliptic Curve key.\nMutually exclusive with `account_key_src`.\nRequired if `account_key_src` is not used.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: account_key_content
    - description: If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this URI does not exist, the module fails.
      name: account_uri
    - auto: PREDEFINED
      defaultValue: '1'
      description: 'The ACME version of the endpoint. Must be 1 for the classic Let''s Encrypt and Buypass ACME endpoints, or 2 for standardized ACME v2 endpoints.'
      name: acme_version
      predefined:
      - '1'
      - '2'
    - defaultValue: https://acme-staging.api.letsencrypt.org/directory
      description: 'The ACME directory to use. This is the entry point URL to access CA server API. For safety reasons the default is set to the Let''s Encrypt staging server (for the ACME v1 protocol). This will create technically correct, but untrusted certificates. For Let''s Encrypt, all staging endpoints can be found here: `https://letsencrypt.org/docs/staging-environment/`. For Buypass, all endpoints can be found here: `https://community.buypass.com/t/63d4ay/buypass-go-ssl-endpoints` For Let''s Encrypt, the production directory URL for ACME v1 is `https://acme-v01.api.letsencrypt.org/directory`, and the production directory URL for ACME v2 is `https://acme-v02.api.letsencrypt.org/directory`. For Buypass, the production directory URL for ACME v2 and v1 is `https://api.buypass.com/acme/directory`. `Warning`: So far, the module has only been tested against Let''s Encrypt (staging and production), Buypass (staging and production), and `Pebble testing server,https://github.com/letsencrypt/Pebble`.'
      name: acme_directory
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether calls to the ACME directory will validate TLS certificates. `Warning`: Should `only ever` be set to `no` for testing purposes, for example when testing against a local Pebble server.'
      name: validate_certs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: auto
      description: 'Determines which crypto backend to use. The default choice is `auto`, which tries to use `cryptography` if available, and falls back to `openssl`. If set to `openssl`, will try to use the `openssl` binary. If set to `cryptography`, will try to use the `cryptography,https://cryptography.io/` library.'
      name: select_crypto_backend
      predefined:
      - auto
      - cryptography
      - openssl
    description: "Create, modify or delete ACME accounts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_account_module.html"
    name: acme-account
    outputs:
    - contextPath: ACME.AcmeAccount.account_uri
      description: ACME account URI, or None if account does not exist.
      type: string
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      defaultValue: ignore
      description: 'Whether to retrieve the list of order URLs or order objects, if provided by the ACME server. A value of `ignore` will not fetch the list of orders. Currently, Let''s Encrypt does not return orders, so the `orders` result will always be empty.'
      name: retrieve_orders
      predefined:
      - ignore
      - url_list
      - object_list
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key. RSA keys can be created with `openssl genrsa ...`. Elliptic curve keys can be created with `openssl ecparam -genkey ...`. Any other tool creating private keys in PEM format can be used as well. Mutually exclusive with `account_key_content`. Required if `account_key_content` is not used.'
      name: account_key_src
    - description: "Content of the ACME account RSA or Elliptic Curve key.\nMutually exclusive with `account_key_src`.\nRequired if `account_key_src` is not used.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: account_key_content
    - description: If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this URI does not exist, the module fails.
      name: account_uri
    - auto: PREDEFINED
      defaultValue: '1'
      description: 'The ACME version of the endpoint. Must be 1 for the classic Let''s Encrypt and Buypass ACME endpoints, or 2 for standardized ACME v2 endpoints.'
      name: acme_version
      predefined:
      - '1'
      - '2'
    - defaultValue: https://acme-staging.api.letsencrypt.org/directory
      description: 'The ACME directory to use. This is the entry point URL to access CA server API. For safety reasons the default is set to the Let''s Encrypt staging server (for the ACME v1 protocol). This will create technically correct, but untrusted certificates. For Let''s Encrypt, all staging endpoints can be found here: `https://letsencrypt.org/docs/staging-environment/`. For Buypass, all endpoints can be found here: `https://community.buypass.com/t/63d4ay/buypass-go-ssl-endpoints` For Let''s Encrypt, the production directory URL for ACME v1 is `https://acme-v01.api.letsencrypt.org/directory`, and the production directory URL for ACME v2 is `https://acme-v02.api.letsencrypt.org/directory`. For Buypass, the production directory URL for ACME v2 and v1 is `https://api.buypass.com/acme/directory`. `Warning`: So far, the module has only been tested against Let''s Encrypt (staging and production), Buypass (staging and production), and `Pebble testing server,https://github.com/letsencrypt/Pebble`.'
      name: acme_directory
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether calls to the ACME directory will validate TLS certificates. `Warning`: Should `only ever` be set to `no` for testing purposes, for example when testing against a local Pebble server.'
      name: validate_certs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: auto
      description: 'Determines which crypto backend to use. The default choice is `auto`, which tries to use `cryptography` if available, and falls back to `openssl`. If set to `openssl`, will try to use the `openssl` binary. If set to `cryptography`, will try to use the `cryptography,https://cryptography.io/` library.'
      name: select_crypto_backend
      predefined:
      - auto
      - cryptography
      - openssl
    description: "Retrieves information on ACME accounts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_account_info_module.html"
    name: acme-account-info
    outputs:
    - contextPath: ACME.AcmeAccountInfo.exists
      description: Whether the account exists.
      type: boolean
    - contextPath: ACME.AcmeAccountInfo.account_uri
      description: ACME account URI, or None if account does not exist.
      type: string
    - contextPath: ACME.AcmeAccountInfo.account
      description: The account information, as retrieved from the ACME server.
      type: unknown
    - contextPath: ACME.AcmeAccountInfo.orders
      description: 'The list of orders. If `retrieve_orders` is `url_list`, this will be a list of URLs. If `retrieve_orders` is `object_list`, this will be a list of objects.'
      type: unknown
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: 'The email address associated with this account. It will be used for certificate expiration warnings. Note that when `modify_account` is not set to `no` and you also used the `acme_account` module to specify more than one contact for your account, this module will update your account and restrict it to the (at most one) contact email address specified here.'
      name: account_email
    - description: 'URI to a terms of service document you agree to when using the ACME v1 service at `acme_directory`. Default is latest gathered from `acme_directory` URL. This option will only be used when `acme_version` is 1.'
      name: agreement
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Boolean indicating whether you agree to the terms of service document. ACME servers can require this to be true. This option will only be used when `acme_version` is not 1.'
      name: terms_agreed
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Boolean indicating whether the module should create the account if necessary, and update its contact data. Set to `no` if you want to use the `acme_account` module to manage your account instead, and to avoid accidental creation of a new account using an old key if you changed the account key with `acme_account`. If set to `no`, `terms_agreed` and `account_email` are ignored.'
      name: modify_account
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: http-01
      description: The challenge to be performed.
      name: challenge
      predefined:
      - http-01
      - dns-01
      - tls-alpn-01
    - description: 'File containing the CSR for the new certificate. Can be created with `openssl req ...`. The CSR may contain multiple Subject Alternate Names, but each one will lead to an individual challenge that must be fulfilled for the CSR to be signed. `Note`: the private key used to create the CSR `must not` be the account key. This is a bad idea from a security point of view, and the CA should not accept the CSR. The ACME server should return an error in this case.'
      name: csr
      required: true
    - description: 'The data to validate ongoing challenges. This must be specified for the second run of the module only. The value that must be used here will be provided by a previous use of this module. See the examples for more details. Note that for ACME v2, only the `order_uri` entry of `data` will be used. For ACME v1, `data` must be non-empty to indicate the second stage is active; all needed data will be taken from the CSR. `Note`: the `data` option was marked as `no_log` up to Ansible 2.5. From Ansible 2.6 on, it is no longer marked this way as it causes error messages to be come unusable, and `data` does not contain any information which can be used without having access to the account key or which are not public anyway.'
      isArray: true
      name: data
    - description: 'The destination file for the certificate. Required if `fullchain_dest` is not specified.'
      name: dest
    - description: 'The destination file for the full chain (i.e. certificate followed by chain of intermediate certificates). Required if `dest` is not specified.'
      name: fullchain_dest
    - description: If specified, the intermediate certificate will be written to this file.
      name: chain_dest
    - defaultValue: '10'
      description: 'The number of days the certificate must have left being valid. If `cert_days < remaining_days`, then it will be renewed. If the certificate is not renewed, module return values will not include `challenge_data`. To make sure that the certificate is renewed in any case, you can use the `force` option.'
      name: remaining_days
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Deactivate authentication objects (authz) after issuing a certificate, or when issuing the certificate failed. Authentication objects are bound to an account key and remain valid for a certain amount of time, and can be used to issue certificates without having to re-authenticate the domain. This can be a security concern.'
      name: deactivate_authzs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Enforces the execution of the challenge and validation, even if an existing certificate is still valid for more than `remaining_days`. This is especially helpful when having an updated CSR e.g. with additional domains for which a new certificate is desired.'
      name: force
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'No'
      description: When set to `yes`, will retrieve all alternate chains offered by the ACME CA. These will not be written to disk, but will be returned together with the main chain as `all_chains`. See the documentation for the `all_chains` return value for details.
      name: retrieve_all_alternates
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key. RSA keys can be created with `openssl genrsa ...`. Elliptic curve keys can be created with `openssl ecparam -genkey ...`. Any other tool creating private keys in PEM format can be used as well. Mutually exclusive with `account_key_content`. Required if `account_key_content` is not used.'
      name: account_key_src
    - description: "Content of the ACME account RSA or Elliptic Curve key.\nMutually exclusive with `account_key_src`.\nRequired if `account_key_src` is not used.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: account_key_content
    - description: If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this URI does not exist, the module fails.
      name: account_uri
    - auto: PREDEFINED
      defaultValue: '1'
      description: 'The ACME version of the endpoint. Must be 1 for the classic Let''s Encrypt and Buypass ACME endpoints, or 2 for standardized ACME v2 endpoints.'
      name: acme_version
      predefined:
      - '1'
      - '2'
    - defaultValue: https://acme-staging.api.letsencrypt.org/directory
      description: 'The ACME directory to use. This is the entry point URL to access CA server API. For safety reasons the default is set to the Let''s Encrypt staging server (for the ACME v1 protocol). This will create technically correct, but untrusted certificates. For Let''s Encrypt, all staging endpoints can be found here: `https://letsencrypt.org/docs/staging-environment/`. For Buypass, all endpoints can be found here: `https://community.buypass.com/t/63d4ay/buypass-go-ssl-endpoints` For Let''s Encrypt, the production directory URL for ACME v1 is `https://acme-v01.api.letsencrypt.org/directory`, and the production directory URL for ACME v2 is `https://acme-v02.api.letsencrypt.org/directory`. For Buypass, the production directory URL for ACME v2 and v1 is `https://api.buypass.com/acme/directory`. `Warning`: So far, the module has only been tested against Let''s Encrypt (staging and production), Buypass (staging and production), and `Pebble testing server,https://github.com/letsencrypt/Pebble`.'
      name: acme_directory
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether calls to the ACME directory will validate TLS certificates. `Warning`: Should `only ever` be set to `no` for testing purposes, for example when testing against a local Pebble server.'
      name: validate_certs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: auto
      description: 'Determines which crypto backend to use. The default choice is `auto`, which tries to use `cryptography` if available, and falls back to `openssl`. If set to `openssl`, will try to use the `openssl` binary. If set to `cryptography`, will try to use the `cryptography,https://cryptography.io/` library.'
      name: select_crypto_backend
      predefined:
      - auto
      - cryptography
      - openssl
    description: "Create SSL/TLS certificates with the ACME protocol\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_certificate_module.html"
    name: acme-certificate
    outputs:
    - contextPath: ACME.AcmeCertificate.cert_days
      description: The number of days the certificate remains valid.
      type: number
    - contextPath: ACME.AcmeCertificate.challenge_data
      description: 'Per identifier / challenge type challenge data. Since Ansible 2.8.5, only challenges which are not yet valid are returned.'
      type: unknown
    - contextPath: ACME.AcmeCertificate.challenge_data_dns
      description: 'List of TXT values per DNS record, in case challenge is `dns-01`. Since Ansible 2.8.5, only challenges which are not yet valid are returned.'
      type: unknown
    - contextPath: ACME.AcmeCertificate.authorizations
      description: 'ACME authorization data. Maps an identifier to ACME authorization objects. See `https://tools.ietf.org/html/rfc8555#section-7.1.4`.'
      type: unknown
    - contextPath: ACME.AcmeCertificate.order_uri
      description: ACME order URI.
      type: string
    - contextPath: ACME.AcmeCertificate.finalization_uri
      description: ACME finalization URI.
      type: string
    - contextPath: ACME.AcmeCertificate.account_uri
      description: ACME account URI.
      type: string
    - contextPath: ACME.AcmeCertificate.all_chains
      description: 'When `retrieve_all_alternates` is set to `yes`, the module will query the ACME server for alternate chains. This return value will contain a list of all chains returned, the first entry being the main chain returned by the server. See `Section 7.4.2 of RFC8555,https://tools.ietf.org/html/rfc8555#section-7.4.2` for details.'
      type: unknown
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Path to the certificate to revoke.
      name: certificate
      required: true
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key. RSA keys can be created with `openssl rsa ...`. Elliptic curve keys can be created with `openssl ecparam -genkey ...`. Any other tool creating private keys in PEM format can be used as well. Mutually exclusive with `account_key_content`. Required if `account_key_content` is not used.'
      name: account_key_src
    - description: "Content of the ACME account RSA or Elliptic Curve key.\nNote that exactly one of `account_key_src`, `account_key_content`, `private_key_src` or `private_key_content` must be specified.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: account_key_content
    - description: 'Path to the certificate''s private key. Note that exactly one of `account_key_src`, `account_key_content`, `private_key_src` or `private_key_content` must be specified.'
      name: private_key_src
    - description: "Content of the certificate's private key.\nNote that exactly one of `account_key_src`, `account_key_content`, `private_key_src` or `private_key_content` must be specified.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: private_key_content
    - description: 'One of the revocation reasonCodes defined in `Section 5.3.1 of RFC5280,https://tools.ietf.org/html/rfc5280#section-5.3.1`. Possible values are `0` (unspecified), `1` (keyCompromise), `2` (cACompromise), `3` (affiliationChanged), `4` (superseded), `5` (cessationOfOperation), `6` (certificateHold), `8` (removeFromCRL), `9` (privilegeWithdrawn), `10` (aACompromise)'
      name: revoke_reason
    - description: If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this URI does not exist, the module fails.
      name: account_uri
    - auto: PREDEFINED
      defaultValue: '1'
      description: 'The ACME version of the endpoint. Must be 1 for the classic Let''s Encrypt and Buypass ACME endpoints, or 2 for standardized ACME v2 endpoints.'
      name: acme_version
      predefined:
      - '1'
      - '2'
    - defaultValue: https://acme-staging.api.letsencrypt.org/directory
      description: 'The ACME directory to use. This is the entry point URL to access CA server API. For safety reasons the default is set to the Let''s Encrypt staging server (for the ACME v1 protocol). This will create technically correct, but untrusted certificates. For Let''s Encrypt, all staging endpoints can be found here: `https://letsencrypt.org/docs/staging-environment/`. For Buypass, all endpoints can be found here: `https://community.buypass.com/t/63d4ay/buypass-go-ssl-endpoints` For Let''s Encrypt, the production directory URL for ACME v1 is `https://acme-v01.api.letsencrypt.org/directory`, and the production directory URL for ACME v2 is `https://acme-v02.api.letsencrypt.org/directory`. For Buypass, the production directory URL for ACME v2 and v1 is `https://api.buypass.com/acme/directory`. `Warning`: So far, the module has only been tested against Let''s Encrypt (staging and production), Buypass (staging and production), and `Pebble testing server,https://github.com/letsencrypt/Pebble`.'
      name: acme_directory
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether calls to the ACME directory will validate TLS certificates. `Warning`: Should `only ever` be set to `no` for testing purposes, for example when testing against a local Pebble server.'
      name: validate_certs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: auto
      description: 'Determines which crypto backend to use. The default choice is `auto`, which tries to use `cryptography` if available, and falls back to `openssl`. If set to `openssl`, will try to use the `openssl` binary. If set to `cryptography`, will try to use the `cryptography,https://cryptography.io/` library.'
      name: select_crypto_backend
      predefined:
      - auto
      - cryptography
      - openssl
    description: "Revoke certificates with the ACME protocol\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_certificate_revoke_module.html"
    name: acme-certificate-revoke
    outputs: []
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      description: The challenge type.
      name: challenge
      predefined:
      - tls-alpn-01
      required: true
    - description: The `challenge_data` entry provided by `acme_certificate` for the challenge.
      isArray: true
      name: challenge_data
      required: true
    - description: 'Path to a file containing the private key file to use for this challenge certificate. Mutually exclusive with `private_key_content`.'
      name: private_key_src
    - description: 'Content of the private key to use for this challenge certificate. Mutually exclusive with `private_key_src`.'
      name: private_key_content
    description: "Prepare certificates required for ACME challenges such as C(tls-alpn-01)\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_challenge_cert_helper_module.html"
    name: acme-challenge-cert-helper
    outputs:
    - contextPath: ACME.AcmeChallengeCertHelper.domain
      description: The domain the challenge is for. The certificate should be provided if this is specified in the request's the `Host` header.
      type: string
    - contextPath: ACME.AcmeChallengeCertHelper.identifier_type
      description: The identifier type for the actual resource identifier. Will be `dns` or `ip`.
      type: string
    - contextPath: ACME.AcmeChallengeCertHelper.identifier
      description: The identifier for the actual resource. Will be a domain name if the type is `dns`, or an IP address if the type is `ip`.
      type: string
    - contextPath: ACME.AcmeChallengeCertHelper.challenge_certificate
      description: The challenge certificate in PEM format.
      type: string
    - contextPath: ACME.AcmeChallengeCertHelper.regular_certificate
      description: 'A self-signed certificate for the challenge domain. If no existing certificate exists, can be used to set-up https in the first place if that is needed for providing the challenge.'
      type: string
  - arguments:
    - description: Hostname or IP of target. Optionally the port can be specified using :PORT. If multiple targets are specified using an array, the integration will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: 'The URL to send the request to. Must be specified if `method` is not `directory-only`.'
      name: url
    - auto: PREDEFINED
      defaultValue: get
      description: 'The method to use to access the given URL on the ACME server. The value `post` executes an authenticated POST request. The content must be specified in the `content` option. The value `get` executes an authenticated POST-as-GET request for ACME v2, and a regular GET request for ACME v1. The value `directory-only` only retrieves the directory, without doing a request.'
      name: method
      predefined:
      - get
      - post
      - directory-only
    - description: 'An encoded JSON object which will be sent as the content if `method` is `post`. Required when `method` is `post`, and not allowed otherwise.'
      name: content
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: If `method` is `post` or `get`, make the module fail in case an ACME error is returned.
      name: fail_on_acme_error
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Path to a file containing the ACME account RSA or Elliptic Curve key. RSA keys can be created with `openssl genrsa ...`. Elliptic curve keys can be created with `openssl ecparam -genkey ...`. Any other tool creating private keys in PEM format can be used as well. Mutually exclusive with `account_key_content`. Required if `account_key_content` is not used.'
      name: account_key_src
    - description: "Content of the ACME account RSA or Elliptic Curve key.\nMutually exclusive with `account_key_src`.\nRequired if `account_key_src` is not used.\n`Warning`: the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their private keys —, this might not be acceptable.\nIn case `cryptography` is used, the content is not written into a temporary file. It can still happen that it is written to disk by Ansible in the process of moving the module with its argument to the node where it is executed."
      name: account_key_content
    - description: If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this URI does not exist, the module fails.
      name: account_uri
    - auto: PREDEFINED
      defaultValue: '1'
      description: 'The ACME version of the endpoint. Must be 1 for the classic Let''s Encrypt and Buypass ACME endpoints, or 2 for standardized ACME v2 endpoints.'
      name: acme_version
      predefined:
      - '1'
      - '2'
    - defaultValue: https://acme-staging.api.letsencrypt.org/directory
      description: 'The ACME directory to use. This is the entry point URL to access CA server API. For safety reasons the default is set to the Let''s Encrypt staging server (for the ACME v1 protocol). This will create technically correct, but untrusted certificates. For Let''s Encrypt, all staging endpoints can be found here: `https://letsencrypt.org/docs/staging-environment/`. For Buypass, all endpoints can be found here: `https://community.buypass.com/t/63d4ay/buypass-go-ssl-endpoints` For Let''s Encrypt, the production directory URL for ACME v1 is `https://acme-v01.api.letsencrypt.org/directory`, and the production directory URL for ACME v2 is `https://acme-v02.api.letsencrypt.org/directory`. For Buypass, the production directory URL for ACME v2 and v1 is `https://api.buypass.com/acme/directory`. `Warning`: So far, the module has only been tested against Let''s Encrypt (staging and production), Buypass (staging and production), and `Pebble testing server,https://github.com/letsencrypt/Pebble`.'
      name: acme_directory
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether calls to the ACME directory will validate TLS certificates. `Warning`: Should `only ever` be set to `no` for testing purposes, for example when testing against a local Pebble server.'
      name: validate_certs
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: auto
      description: 'Determines which crypto backend to use. The default choice is `auto`, which tries to use `cryptography` if available, and falls back to `openssl`. If set to `openssl`, will try to use the `openssl` binary. If set to `cryptography`, will try to use the `cryptography,https://cryptography.io/` library.'
      name: select_crypto_backend
      predefined:
      - auto
      - cryptography
      - openssl
    description: "Send direct requests to an ACME server\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/acme_inspect_module.html"
    name: acme-inspect
    outputs:
    - contextPath: ACME.AcmeInspect.directory
      description: The ACME directory's content
      type: unknown
    - contextPath: ACME.AcmeInspect.headers
      description: The request's HTTP headers (with lowercase keys)
      type: unknown
    - contextPath: ACME.AcmeInspect.output_text
      description: The raw text output
      type: string
    - contextPath: ACME.AcmeInspect.output_json
      description: The output parsed as JSON
      type: unknown
  dockerimage: demisto/ansible-runner:1.0.0.24037
  script: ''
  subtype: python3
  type: python
tests:
- No tests (auto formatted)
