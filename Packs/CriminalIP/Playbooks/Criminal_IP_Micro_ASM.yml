id: 2a264092-558b-4e1f-8e07-eb832eb6c855
version: 36
vcShouldKeepItemLegacyProdMachine: false
name: Criminal IP Micro ASM
description: |-
  This playbook takes domains as a List argument and executes the sub-playbook 'Criminal IP Run Micro ASM' for each domain in the List, then delivers the 'micro-asm' results to the user via email.
  Therefore, the user must set up the relevant arguments for the #4 send-mail command.
  Additionally, the user can register this playbook as a job to automate the entire process.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 7cfa5294-9d33-4492-838e-f2beb157e7b7
    type: start
    task:
      id: 7cfa5294-9d33-4492-838e-f2beb157e7b7
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: b5125def-262e-4bca-b0eb-0ed9cda4aeea
    type: playbook
    task:
      id: b5125def-262e-4bca-b0eb-0ed9cda4aeea
      version: -1
      name: Criminal IP Run Micro ASM
      description: |-
        For a single domain, we perform a 'domain-full-scan' and once the scan is complete, we execute 'micro-asm'.
        You can find the 'micro-asm' results in the context.
        Also, this playbook is for the 'Criminal IP Micro ASM' playbook. For more details, please refer to the 'Criminal IP Micro ASM' playbook.
      playbookName: Criminal IP Run Micro ASM
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      Domain:
        simple: ${Domains}
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 60
      max: 100
      forEach: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: cf115d01-8a9a-4d9e-9050-42bee52bc6c4
    type: regular
    task:
      id: cf115d01-8a9a-4d9e-9050-42bee52bc6c4
      version: -1
      name: Set
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      key:
        simple: Domains
      value:
        simple: ${inputs.Domains}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: a5e5aa38-ca32-4dd9-b794-98b95a144643
    type: regular
    task:
      id: a5e5aa38-ca32-4dd9-b794-98b95a144643
      version: -1
      name: send-mail
      description: Send an email
      script: mail-sender|||send-mail
      type: regular
      iscommand: true
      brand: mail-sender
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      body:
        simple: ${subplaybook-1.CriminalIP.Micro_ASM(val.result.indexOf('=') >=0)=val.result}
      subject:
        simple: Criminal IP Micro ASM Report
      to:
        simple: mjlee@aispera.com
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 818
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 7425fc60-ea8c-45e8-a418-447b12d27c20
    type: condition
    task:
      id: 7425fc60-ea8c-45e8-a418-447b12d27c20
      version: -1
      name: Mail Body Check
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEmpty
          left:
            value:
              simple: ${subplaybook-1.CriminalIP.Micro_ASM(val.result.indexOf('=')
                >=0)=val.result}
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 576
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: f097c788-3844-4384-8ec9-cd5ac7a1fce5
    type: title
    task:
      id: f097c788-3844-4384-8ec9-cd5ac7a1fce5
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1077
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "5_4_#default#": 0.79,
      "5_6_yes": 0.86
    },
    "paper": {
      "dimensions": {
        "height": 1087,
        "width": 381,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: Domains
  value: {}
  required: true
  description: "A list of domains that require Micro ASM analysis. This must be provided as a list-type input.\n\nex)\n[\n\"www.example.com\",
    \n\"www.criminalip.io\"\n]"
  playbookInputQuery: null
inputSections:
- inputs:
  - Domains
  name: General (Inputs group)
  description: Generic group for inputs
outputSections:
- outputs: []
  name: General (Outputs group)
  description: Generic group for outputs
outputs: []
dirtyInputs: true
