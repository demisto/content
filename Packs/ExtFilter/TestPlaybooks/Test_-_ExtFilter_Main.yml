id: Test - ExtFilter Main
version: -1
name: Test - ExtFilter Main
description: Run Test Suite for ExtFilter
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 6a2465df-56f5-4b11-8e19-664a03d39cda
    type: start
    task:
      id: 6a2465df-56f5-4b11-8e19-664a03d39cda
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "251"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: 912ea05f-3c03-4a20-8ad5-d2473380dfd7
    type: playbook
    task:
      id: 912ea05f-3c03-4a20-8ad5-d2473380dfd7
      version: -1
      name: matches conditions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "CSV": [{
                          "ActivityName": "File uploaded",
                          "DeviceID": "D000001"
                        }, {
                          "ActivityName": "User Logged In - Failed",
                          "DeviceID": "D000003"
                        }
                      ],
                      "TrustedDevices": ["D000002", "D000003"]
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "ActivityName": {
                          "==": "User Logged In - Failed"
                        }
                      },
                      "or",
                      [
                        {
                          "ActivityName": {
                            "in list": "File uploaded,File downloaded"
                          }
                        },
                        "and",
                        "not",
                        {
                          "DeviceID": {
                            "matches any string of": "${Input.TrustedDevices}"
                          }
                        }
                      ]
                    ]
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath:
        simple: CSV
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "TrustedDevices": ["D000002","D000003"],
                      "CSV": [
                        {
                          "ActivityName": "User Logged In - Success",
                          "DeviceID": "D000001"
                        },
                        {
                          "ActivityName": "File uploaded",
                          "DeviceID": "D000001"
                        },
                        {
                          "ActivityName": "File downloaded",
                          "DeviceID": "D000002"
                        },
                        {
                          "ActivityName": "User Logged In - Failed",
                          "DeviceID": "D000003"
                        }
                      ]
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: 6596ab93-1cfe-4df1-8569-79d80db44ebc
    type: playbook
    task:
      id: 6596ab93-1cfe-4df1-8569-79d80db44ebc
      version: -1
      name: is filtered with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Contents": {
                        "File": [
                          {
                            "Name": "b.exe",
                            "Size": 200
                          }
                        ],
                        "Host": [
                          {
                            "Name": "computer1",
                            "IP": "1.1.1.1"
                          },
                          {
                            "Name": "computer2",
                            "IP": "2.2.2.2"
                          }
                        ]
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Name": {
                        "ends with": ".exe"
                      }
                    }
      ExtFilterOperation:
        simple: is filtered with
      ExtFilterPath:
        simple: Contents.File
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Contents": {
                        "File": [
                          {
                            "Name": "a.dat",
                            "Size": 100
                          },
                          {
                            "Name": "b.exe",
                            "Size": 200
                          },
                          {
                            "Name": "c.txt",
                            "Size": 300
                          }
                        ],
                        "Host": [
                          {
                            "Name": "computer1",
                            "IP": "1.1.1.1"
                          },
                          {
                            "Name": "computer2",
                            "IP": "2.2.2.2"
                          }
                        ]
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: 6e975698-8235-45a7-8136-6689e762a580
    type: playbook
    task:
      id: 6e975698-8235-45a7-8136-6689e762a580
      version: -1
      name: value matches conditions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Autofocus": {
                        "detected": true,
                        "version": 456
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "detected": {
                        "==": true
                      }
                    }
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Trendmicro": {
                        "detected": false,
                        "version": 123
                      },
                      "Autofocus": {
                        "detected": true,
                        "version": 456
                      },
                      "XXX": {
                        "version": 789
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: f2db516a-9e31-4ef2-8156-74ebce8d951d
    type: playbook
    task:
      id: f2db516a-9e31-4ef2-8156-74ebce8d951d
      version: -1
      name: matches conditions of (wildcard)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      }
                    ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Host" : {
                        "wildcard: matches": "COMPUTER*"
                      }
                    }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      },
                      {
                        "IP": "2.2.2.2",
                        "Host": "SERVER2",
                        "User": "NGOTOH"
                      }
                    ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "22":
    id: "22"
    taskid: 828521cc-50d9-4d0e-8749-3f0c51c23e9b
    type: playbook
    task:
      id: 828521cc-50d9-4d0e-8749-3f0c51c23e9b
      version: -1
      name: matches conditions of (regex)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      }
                    ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Host" : {
                        "regex: matches": "COMPUTER.*"
                      }
                    }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      },
                      {
                        "IP": "2.2.2.2",
                        "Host": "SERVER2",
                        "User": "NGOTOH"
                      }
                    ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "23":
    id: "23"
    taskid: 49603102-a96c-46ab-880b-a5ad27e2b33f
    type: playbook
    task:
      id: 49603102-a96c-46ab-880b-a5ad27e2b33f
      version: -1
      name: value matches conditions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "COMPXX1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 40,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.1",
                        "UserName": "NAOKI",
                        "RiskScore": 40
                      },
                      "SRVXYY1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 30,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "ssh",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 22,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.2",
                        "UserName": "TGOTOH",
                        "RiskScore": 10
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "Log": {
                          "is filtered with" : [
                            {
                              "risk.score": {
                                ">=": 20, "<=": 50
                              }
                            },
                            "or",
                            {
                              "protocol": {
                                "==": "ssh"
                              }
                            }
                          ]
                        }
                      },
                      "and",
                      {
                        "RiskScore": {
                          ">=" : 10
                        }
                      }
                    ]
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "COMPXX1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 40,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:02 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "3.3.3.3",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 60,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.1",
                        "UserName": "NAOKI",
                        "RiskScore": 40
                      },
                      "SRVXYY1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 30,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:02 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "3.3.3.3",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "ssh",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 22,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.2",
                        "UserName": "TGOTOH",
                        "RiskScore": 10
                      },
                      "SRVXZZ2": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.3",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.3",
                        "UserName": "GMACHIDA",
                        "RiskScore": 0
                      }
                    }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: 32ea3756-400e-4159-8e03-0c68fa74300a
    type: playbook
    task:
      id: 32ea3756-400e-4159-8e03-0c68fa74300a
      version: -1
      name: value is filtered with
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      ExpectedOutput:
        simple: |-
          {
            "aaa": [
              "bbb",
              "${incident.name}"
            ]
          }
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "includes": "${incident.name}"
                    }
      ExtFilterOperation:
        simple: value is filtered with
      ExtFilterPath: {}
      Input:
        simple: |-
          {
            "aaa": [
              "bbb",
              "${incident.name}"
            ],
            "xxx": [
              "yyy",
              "zzz"
            ]
          }
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "25":
    id: "25"
    taskid: 366e01d0-1ba8-43c8-83e5-97c0d42699cc
    type: playbook
    task:
      id: 366e01d0-1ba8-43c8-83e5-97c0d42699cc
      version: -1
      name: keeps (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2
                        [
                          {
                            "Host": "JDOH"
                          },
                          {
                            "User": "John Doe"
                          },
                          {
                            "Host": "YTARO",
                            "User": "Taro Yamada"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Host",
                          "User"
                        ]
      ExtFilterOperation:
        simple: keeps
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": "JDOH",
                            "IP": "1.1.1.1"
                          },
                          {
                            "User": "John Doe",
                            "First Name": "John",
                            "Last Name": "Doe"
                          },
                          {
                            "Host": "YTARO",
                            "User": "Taro Yamada"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "26":
    id: "26"
    taskid: cd8dd8ce-de08-489b-863e-bf4421f86b5b
    type: playbook
    task:
      id: cd8dd8ce-de08-489b-863e-bf4421f86b5b
      version: -1
      name: is existing key (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": "JDOH",
                            "IP": "1.1.1.1"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: existing key
      ExtFilterOperation:
        simple: is
      ExtFilterPath:
        simple: Host
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": "JDOH",
                            "IP": "1.1.1.1"
                          },
                          {
                            "User": "John Doe",
                            "Email": "jdoe@domain.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "27":
    id: "27"
    taskid: 60fb4428-77ca-46d8-8d60-945aec0910a6
    type: playbook
    task:
      id: 60fb4428-77ca-46d8-8d60-945aec0910a6
      version: -1
      name: is existing key (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": {
                              "IP": "1.1.1.1",
                              "Score": 50,
                              "User": "JDOE"
                            },
                            "User": {
                              "ID": 1000,
                              "Name": "John Doe"
                            }
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: existing key
      ExtFilterOperation:
        simple: is
      ExtFilterPath:
        simple: Host.User
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": {
                              "IP": "1.1.1.1",
                              "Score": 50,
                              "User": "JDOE"
                            },
                            "User": {
                              "ID": 1000,
                              "Name": "John Doe"
                            }
                          },
                          {
                            "Host": {
                              "IP": "2.2.2.2",
                              "Score": 30
                            }
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "28":
    id: "28"
    taskid: 40dbdf98-e46f-41ef-88ac-54cd30c616f1
    type: playbook
    task:
      id: 40dbdf98-e46f-41ef-88ac-54cd30c616f1
      version: -1
      name: isn't empty (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: empty
      ExtFilterOperation:
        simple: isn't
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                          },
                          null,
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "29":
    id: "29"
    taskid: aab91091-711f-4cf9-8711-4e46b016cf34
    type: playbook
    task:
      id: aab91091-711f-4cf9-8711-4e46b016cf34
      version: -1
      name: isn't null
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                          },
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
      ExtFilterOperation:
        simple: isn't
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                          },
                          null,
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "30":
    id: "30"
    taskid: 72d43efe-f2b2-4a51-8036-d686f3742679
    type: playbook
    task:
      id: 72d43efe-f2b2-4a51-8036-d686f3742679
      version: -1
      name: isn't any integer
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: any integer
      ExtFilterOperation:
        simple: isn't
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "123",
                          "xxx"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "31":
    id: "31"
    taskid: c55940af-a6dc-4b4c-83bb-b9cacc636c09
    type: playbook
    task:
      id: c55940af-a6dc-4b4c-83bb-b9cacc636c09
      version: -1
      name: isn't existing key (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": {
                              "IP": "2.2.2.2",
                              "Score": 30
                            }
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: existing key
      ExtFilterOperation:
        simple: isn't
      ExtFilterPath:
        simple: Host.User
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Host": {
                              "IP": "1.1.1.1",
                              "Score": 50,
                              "User": "JDOE"
                            },
                            "User": {
                              "ID": 1000,
                              "Name": "John Doe"
                            }
                          },
                          {
                            "Host": {
                              "IP": "2.2.2.2",
                              "Score": 30
                            }
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "32":
    id: "32"
    taskid: 89ec6db1-f6ef-4267-8ab5-6e60a94004db
    type: playbook
    task:
      id: 89ec6db1-f6ef-4267-8ab5-6e60a94004db
      version: -1
      name: equals (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: equals
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "33":
    id: "33"
    taskid: 4879e9a6-af4a-4518-8f04-15d32ed9de9d
    type: playbook
    task:
      id: 4879e9a6-af4a-4518-8f04-15d32ed9de9d
      version: -1
      name: doesn't equal (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: doesn't equal
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: 0737bf02-1a17-4e90-89c9-b9493fc40c13
    type: playbook
    task:
      id: 0737bf02-1a17-4e90-89c9-b9493fc40c13
      version: -1
      name: greater or equal (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "35"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: greater or equal
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "35":
    id: "35"
    taskid: a680bf47-cf4c-4617-8428-d5a7bbf70bab
    type: playbook
    task:
      id: a680bf47-cf4c-4617-8428-d5a7bbf70bab
      version: -1
      name: greater than (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "36"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: greater than
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "36":
    id: "36"
    taskid: ea113d8b-d152-48d8-8f57-91dc8d458b18
    type: playbook
    task:
      id: ea113d8b-d152-48d8-8f57-91dc8d458b18
      version: -1
      name: less or equal (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: less or equal
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "37":
    id: "37"
    taskid: 6803eb80-8a88-4d4a-85e1-8c463c74352e
    type: playbook
    task:
      id: 6803eb80-8a88-4d4a-85e1-8c463c74352e
      version: -1
      name: less than (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "38"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: less than
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "38":
    id: "38"
    taskid: 1dedf0cd-c1ad-4873-87a4-dd5a4a03162b
    type: playbook
    task:
      id: 1dedf0cd-c1ad-4873-87a4-dd5a4a03162b
      version: -1
      name: in range (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "39"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          "30"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: 10,100
      ExtFilterOperation:
        simple: in range
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          1,
                          10,
                          "10",
                          "30",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "39":
    id: "39"
    taskid: 44c1d660-d0d0-4eca-8db2-afa65af62943
    type: playbook
    task:
      id: 44c1d660-d0d0-4eca-8db2-afa65af62943
      version: -1
      name: starts with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "xxx.exe"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx
      ExtFilterOperation:
        simple: starts with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "40":
    id: "40"
    taskid: 1531af10-018e-4889-830c-cb4f5918efaf
    type: playbook
    task:
      id: 1531af10-018e-4889-830c-cb4f5918efaf
      version: -1
      name: starts with caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "41"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "xxx.exe",
                          "XXX.EXE"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx
      ExtFilterOperation:
        simple: starts with caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "XXX.EXE",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "41":
    id: "41"
    taskid: 993f2561-c0db-4d5c-8b8c-4f6eb82fafcd
    type: playbook
    task:
      id: 993f2561-c0db-4d5c-8b8c-4f6eb82fafcd
      version: -1
      name: doesn't start with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx
      ExtFilterOperation:
        simple: doesn't start with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "42":
    id: "42"
    taskid: 7377c8d2-020f-40ec-84a1-7f6a1d0bb647
    type: playbook
    task:
      id: 7377c8d2-020f-40ec-84a1-7f6a1d0bb647
      version: -1
      name: doesn't start with caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx
      ExtFilterOperation:
        simple: doesn't start with caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "XXX.EXE",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "43":
    id: "43"
    taskid: 7b08d02b-3689-4067-8f3f-6a71c7ee5396
    type: playbook
    task:
      id: 7b08d02b-3689-4067-8f3f-6a71c7ee5396
      version: -1
      name: ends with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "44"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "xxx.exe"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .exe
      ExtFilterOperation:
        simple: ends with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "44":
    id: "44"
    taskid: 375ad8e4-ce6a-4bc9-89ef-f3e0f07b8f5e
    type: playbook
    task:
      id: 375ad8e4-ce6a-4bc9-89ef-f3e0f07b8f5e
      version: -1
      name: ends with caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "45"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "xxx.exe",
                          "XXX.EXE"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .exe
      ExtFilterOperation:
        simple: ends with caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "XXX.EXE",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "45":
    id: "45"
    taskid: 72e3120c-572d-4d50-8653-e9f90a7ed336
    type: playbook
    task:
      id: 72e3120c-572d-4d50-8653-e9f90a7ed336
      version: -1
      name: doesn't end with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "46"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .exe
      ExtFilterOperation:
        simple: doesn't end with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 5970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "46":
    id: "46"
    taskid: 8c421b7b-94f0-4042-8d24-ea8e07cba3ec
    type: playbook
    task:
      id: 8c421b7b-94f0-4042-8d24-ea8e07cba3ec
      version: -1
      name: doesn't end with caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "50"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .exe
      ExtFilterOperation:
        simple: doesn't end with caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "xxx.exe",
                          "XXX.EXE",
                          "yyy.pdf",
                          {
                            "xxx": "x"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 6145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "47":
    id: "47"
    taskid: 428da616-a63d-41c1-83f4-4200b4998add
    type: playbook
    task:
      id: 428da616-a63d-41c1-83f4-4200b4998add
      version: -1
      name: includes (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "48"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com",
                          "www.paloaltonetworks.co.jp"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: includes
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "www.paloaltonetworks.co.jp",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 6495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "48":
    id: "48"
    taskid: 731f1c01-727b-451a-8e67-a97bfed63dd4
    type: playbook
    task:
      id: 731f1c01-727b-451a-8e67-a97bfed63dd4
      version: -1
      name: includes caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "49"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: includes caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 6670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "49":
    id: "49"
    taskid: 36835d67-660c-4c9c-8573-b57204f7cd8c
    type: playbook
    task:
      id: 36835d67-660c-4c9c-8573-b57204f7cd8c
      version: -1
      name: doesn't include (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "51"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't include
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "www.paloaltonetworks.co.jp",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 6845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "50":
    id: "50"
    taskid: ca5803ef-525e-4a68-8b0f-446cec9898a1
    type: playbook
    task:
      id: ca5803ef-525e-4a68-8b0f-446cec9898a1
      version: -1
      name: includes (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "47"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: includes
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 6320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "51":
    id: "51"
    taskid: e17a3463-de9e-4f77-860d-d31e3952a782
    type: playbook
    task:
      id: e17a3463-de9e-4f77-860d-d31e3952a782
      version: -1
      name: doesn't include caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "52"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't include caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "52":
    id: "52"
    taskid: 6eb35a1a-7d43-457e-8990-28753c630b5a
    type: playbook
    task:
      id: 6eb35a1a-7d43-457e-8990-28753c630b5a
      version: -1
      name: doesn't include caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "53"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't include caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "53":
    id: "53"
    taskid: 6404e71b-52cc-41a2-8003-c4df61d03b6f
    type: playbook
    task:
      id: 6404e71b-52cc-41a2-8003-c4df61d03b6f
      version: -1
      name: finds (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "54"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: finds
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "54":
    id: "54"
    taskid: 2efbcc04-75f2-4711-830c-953dbc613e96
    type: playbook
    task:
      id: 2efbcc04-75f2-4711-830c-953dbc613e96
      version: -1
      name: finds (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "63"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: finds
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "55":
    id: "55"
    taskid: 6544bae8-5ed9-4ec3-8ef0-4deb6ec4eca4
    type: playbook
    task:
      id: 6544bae8-5ed9-4ec3-8ef0-4deb6ec4eca4
      version: -1
      name: finds caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "56"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: PALOALTONETWORKS
      ExtFilterOperation:
        simple: finds caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "56":
    id: "56"
    taskid: e1daa471-cb70-4222-80ee-a5e4785491ac
    type: playbook
    task:
      id: e1daa471-cb70-4222-80ee-a5e4785491ac
      version: -1
      name: finds caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "57"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: PALOALTONETWORKS
      ExtFilterOperation:
        simple: finds caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "57":
    id: "57"
    taskid: 7a54272e-5d18-49f7-8981-bd1d95a2a11a
    type: playbook
    task:
      id: 7a54272e-5d18-49f7-8981-bd1d95a2a11a
      version: -1
      name: doesn't find (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "58"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't find
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "58":
    id: "58"
    taskid: da08a2e6-8550-4491-8c5b-a54abfdceda0
    type: playbook
    task:
      id: da08a2e6-8550-4491-8c5b-a54abfdceda0
      version: -1
      name: doesn't find (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "59"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't find
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "59":
    id: "59"
    taskid: e914eff8-fe3a-4468-893b-aacd20667baa
    type: playbook
    task:
      id: e914eff8-fe3a-4468-893b-aacd20667baa
      version: -1
      name: doesn't find (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "60"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx.paloaltonetworks
      ExtFilterOperation:
        simple: doesn't find
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "60":
    id: "60"
    taskid: 3f635d1f-2927-475a-8e38-990502eceb39
    type: playbook
    task:
      id: 3f635d1f-2927-475a-8e38-990502eceb39
      version: -1
      name: doesn't find caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: PALOALTONETWORKS
      ExtFilterOperation:
        simple: doesn't find caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "61":
    id: "61"
    taskid: 2c063f26-60fb-4f4a-8026-840b2aba8c68
    type: playbook
    task:
      id: 2c063f26-60fb-4f4a-8026-840b2aba8c68
      version: -1
      name: doesn't find caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "62"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't find caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 8945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "62":
    id: "62"
    taskid: d95526ff-f18f-4c96-82bf-ef08693727cd
    type: playbook
    task:
      id: d95526ff-f18f-4c96-82bf-ef08693727cd
      version: -1
      name: doesn't find caseless (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "64"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx.paloaltonetworks
      ExtFilterOperation:
        simple: doesn't find caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "63":
    id: "63"
    taskid: efd5ba78-7f09-4979-8fd2-50b55a8a8755
    type: playbook
    task:
      id: efd5ba78-7f09-4979-8fd2-50b55a8a8755
      version: -1
      name: finds (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "55"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: xxx.paloaltonetworks
      ExtFilterOperation:
        simple: finds
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "www.paloaltonetworks.com",
                          "WWW.PALOALTONETWORKS.COM",
                          {
                            "xxx": "xxx.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 7720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "64":
    id: "64"
    taskid: b0d2158b-c050-4600-8fff-34c0f7189c1e
    type: playbook
    task:
      id: b0d2158b-c050-4600-8fff-34c0f7189c1e
      version: -1
      name: matches (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "65"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: www.paloaltonetworks.com
      ExtFilterOperation:
        simple: matches
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "65":
    id: "65"
    taskid: 1a3887f2-d1fa-4088-878d-0c71cffd8349
    type: playbook
    task:
      id: 1a3887f2-d1fa-4088-878d-0c71cffd8349
      version: -1
      name: matches (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "66"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: matches
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "66":
    id: "66"
    taskid: 3b8ee480-7834-4069-83c8-b167c2ba49b2
    type: playbook
    task:
      id: 3b8ee480-7834-4069-83c8-b167c2ba49b2
      version: -1
      name: matches (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "67"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: www.paloaltonetworks.com
      ExtFilterOperation:
        simple: matches
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "67":
    id: "67"
    taskid: 3b6ca8e6-02d4-4162-8eb3-082e8cbbea42
    type: playbook
    task:
      id: 3b6ca8e6-02d4-4162-8eb3-082e8cbbea42
      version: -1
      name: matches caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "68"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: WWW.PALOALTONETWORKS.COM
      ExtFilterOperation:
        simple: matches caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "68":
    id: "68"
    taskid: 478318da-16f0-403a-827b-a23c943a4ac6
    type: playbook
    task:
      id: 478318da-16f0-403a-827b-a23c943a4ac6
      version: -1
      name: matches caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "69"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: matches caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 9995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "69":
    id: "69"
    taskid: c29f8448-3569-4fb2-858e-20c27ddc4543
    type: playbook
    task:
      id: c29f8448-3569-4fb2-858e-20c27ddc4543
      version: -1
      name: matches caseless (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "70"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: WWW.PALOALTONETWORKS.COM
      ExtFilterOperation:
        simple: matches caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "70":
    id: "70"
    taskid: b0b85e92-d9e5-447d-8058-575d61611fed
    type: playbook
    task:
      id: b0b85e92-d9e5-447d-8058-575d61611fed
      version: -1
      name: doesn't match (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "71"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: www.paloaltonetworks.com
      ExtFilterOperation:
        simple: doesn't match
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "71":
    id: "71"
    taskid: ece6750a-958a-4992-8381-670b24d5ddc3
    type: playbook
    task:
      id: ece6750a-958a-4992-8381-670b24d5ddc3
      version: -1
      name: doesn't match (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "72"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't match
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "72":
    id: "72"
    taskid: 0694782a-5657-4420-8a15-4121eccd5f2c
    type: playbook
    task:
      id: 0694782a-5657-4420-8a15-4121eccd5f2c
      version: -1
      name: doesn't match (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "73"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: www.paloaltonetworks.com
      ExtFilterOperation:
        simple: doesn't match
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "73":
    id: "73"
    taskid: 4f9982e3-52f3-4d40-8de2-20b432a26c4e
    type: playbook
    task:
      id: 4f9982e3-52f3-4d40-8de2-20b432a26c4e
      version: -1
      name: doesn't match caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "74"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: WWW.PALOALTONETWORKS.COM
      ExtFilterOperation:
        simple: doesn't match caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 10870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "74":
    id: "74"
    taskid: b4ca9a99-fd33-43f4-8b4a-8494ac405d42
    type: playbook
    task:
      id: b4ca9a99-fd33-43f4-8b4a-8494ac405d42
      version: -1
      name: doesn't match caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "75"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: paloaltonetworks
      ExtFilterOperation:
        simple: doesn't match caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "75":
    id: "75"
    taskid: 92ac677d-5784-419a-8ca2-77eb8454114f
    type: playbook
    task:
      id: 92ac677d-5784-419a-8ca2-77eb8454114f
      version: -1
      name: doesn't match caseless (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "76"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: WWW.PALOALTONETWORKS.COM
      ExtFilterOperation:
        simple: doesn't match caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "76":
    id: "76"
    taskid: 02a30d2d-9c86-4964-8401-04f6ddc8e082
    type: playbook
    task:
      id: 02a30d2d-9c86-4964-8401-04f6ddc8e082
      version: -1
      name: 'wildcard: matches (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "77"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: matches'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "77":
    id: "77"
    taskid: 67049035-0e00-4b74-8832-7f3b1980bdc5
    type: playbook
    task:
      id: 67049035-0e00-4b74-8832-7f3b1980bdc5
      version: -1
      name: 'wildcard: matches (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "78"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: matches'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "78":
    id: "78"
    taskid: 06908935-52e0-4f0c-8b8c-b764331e3aae
    type: playbook
    task:
      id: 06908935-52e0-4f0c-8b8c-b764331e3aae
      version: -1
      name: 'wildcard: matches caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "79"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.PaloAltoNetworks.*
      ExtFilterOperation:
        simple: 'wildcard: matches caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "79":
    id: "79"
    taskid: d1bc097f-4dc3-4da2-8450-e10fd1b5a6a7
    type: playbook
    task:
      id: d1bc097f-4dc3-4da2-8450-e10fd1b5a6a7
      version: -1
      name: 'wildcard: matches caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "80"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "WWW.PaloAltoNetworks.COM"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.PaloAltoNetworks.*
      ExtFilterOperation:
        simple: 'wildcard: matches caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "WWW.PaloAltoNetworks.COM",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 11920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "80":
    id: "80"
    taskid: f7b4b454-e639-4e19-8de1-6436d9136ed4
    type: playbook
    task:
      id: f7b4b454-e639-4e19-8de1-6436d9136ed4
      version: -1
      name: 'wildcard: doesn''t match (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "81"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "81":
    id: "81"
    taskid: 2bc0f85b-8275-4458-8cbb-d3f7f9408bbf
    type: playbook
    task:
      id: 2bc0f85b-8275-4458-8cbb-d3f7f9408bbf
      version: -1
      name: 'wildcard: doesn''t match (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "82"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "82":
    id: "82"
    taskid: f5368608-be9a-4f01-8cdb-99f8efad49fc
    type: playbook
    task:
      id: f5368608-be9a-4f01-8cdb-99f8efad49fc
      version: -1
      name: 'wildcard: doesn''t match caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "83"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "83":
    id: "83"
    taskid: 5f22a073-1c88-433e-81b7-fc4b4eacdbb2
    type: playbook
    task:
      id: 5f22a073-1c88-433e-81b7-fc4b4eacdbb2
      version: -1
      name: 'wildcard: doesn''t match caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "84"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ???.paloaltonetworks.*
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "WWW.PaloAltoNetworks.COM",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "84":
    id: "84"
    taskid: 0bdfa850-96ed-4648-85fa-9fdcfbf47747
    type: playbook
    task:
      id: 0bdfa850-96ed-4648-85fa-9fdcfbf47747
      version: -1
      name: 'regex: matches (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "85"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: matches'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "85":
    id: "85"
    taskid: 6d0f75c6-108f-43c7-86e2-462e4996b44d
    type: playbook
    task:
      id: 6d0f75c6-108f-43c7-86e2-462e4996b44d
      version: -1
      name: 'regex: matches (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "86"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.paloaltonetworks.com"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: matches'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 12970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "86":
    id: "86"
    taskid: 0a371109-70e7-4329-8914-f1ad2d15eb16
    type: playbook
    task:
      id: 0a371109-70e7-4329-8914-f1ad2d15eb16
      version: -1
      name: 'regex: matches caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "87"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: matches caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 13145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "87":
    id: "87"
    taskid: 7c7eddf7-3e67-4f15-87e1-21bd6e6074e1
    type: playbook
    task:
      id: 7c7eddf7-3e67-4f15-87e1-21bd6e6074e1
      version: -1
      name: 'regex: matches caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "88"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "WWW.PaloAltoNetworks.COM"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: matches caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "WWW.PaloAltoNetworks.COM",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 13320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "88":
    id: "88"
    taskid: 9749c3b8-4389-47ce-8a23-6492bea11c04
    type: playbook
    task:
      id: 9749c3b8-4389-47ce-8a23-6492bea11c04
      version: -1
      name: 'regex: doesn''t match (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "89"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: doesn''t match'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"www.paloaltonetworks.com"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 13495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "89":
    id: "89"
    taskid: 57095ee6-fb85-48a8-8b7a-0aa21c50b1ee
    type: playbook
    task:
      id: 57095ee6-fb85-48a8-8b7a-0aa21c50b1ee
      version: -1
      name: 'regex: doesn''t match (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "90"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: doesn''t match'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "www.paloaltonetworks.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 13670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "90":
    id: "90"
    taskid: 6f91a03d-569d-4c69-8c3c-df1e16531da5
    type: playbook
    task:
      id: 6f91a03d-569d-4c69-8c3c-df1e16531da5
      version: -1
      name: 'regex: doesn''t match caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "91"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[null]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: doesn''t match caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"WWW.PaloAltoNetworks.COM"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 13845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "91":
    id: "91"
    taskid: 1b9ee719-ae46-42d9-8185-b8712ddec856
    type: playbook
    task:
      id: 1b9ee719-ae46-42d9-8185-b8712ddec856
      version: -1
      name: 'regex: doesn''t match caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "92"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*paloaltonetworks.*
      ExtFilterOperation:
        simple: 'regex: doesn''t match caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "www.demisto.com",
                          "WWW.PaloAltoNetworks.COM",
                          {
                            "Host": "www.paloaltonetworks.com"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "92":
    id: "92"
    taskid: 1971ad4f-8393-4a3f-83cd-4dba0768cd11
    type: playbook
    task:
      id: 1971ad4f-8393-4a3f-83cd-4dba0768cd11
      version: -1
      name: in list (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "93"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: in list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "93":
    id: "93"
    taskid: 6c0cfda7-d6a9-4486-83d7-5037569e7169
    type: playbook
    task:
      id: 6c0cfda7-d6a9-4486-83d7-5037569e7169
      version: -1
      name: in list (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "94"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: in list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "melon",
                          "banana",
                          {
                            "fruit": "orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "94":
    id: "94"
    taskid: 92a7cdbd-c0af-4c2b-8e9e-fea2ccf71086
    type: playbook
    task:
      id: 92a7cdbd-c0af-4c2b-8e9e-fea2ccf71086
      version: -1
      name: in caseless list (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "95"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: in caseless list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "95":
    id: "95"
    taskid: e711dc80-4c42-4162-8a47-d03c23f092e1
    type: playbook
    task:
      id: e711dc80-4c42-4162-8a47-d03c23f092e1
      version: -1
      name: in caseless list (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "96"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: in caseless list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Melon",
                          "Banana",
                          {
                            "Fruit": "Orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "96":
    id: "96"
    taskid: 63dc7308-ad44-48a5-821d-cf767dd5e5ab
    type: playbook
    task:
      id: 63dc7308-ad44-48a5-821d-cf767dd5e5ab
      version: -1
      name: not in list (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "97"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"melon"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: not in list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"melon"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 14895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "97":
    id: "97"
    taskid: 24c52de6-a52c-4f1d-8c14-4ded06a77397
    type: playbook
    task:
      id: 24c52de6-a52c-4f1d-8c14-4ded06a77397
      version: -1
      name: not in list (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "98"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          {
                            "fruit": "orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: not in list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "melon",
                          "banana",
                          {
                            "fruit": "orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "98":
    id: "98"
    taskid: 0288972a-708d-407b-86cf-ff8c45c430af
    type: playbook
    task:
      id: 0288972a-708d-407b-86cf-ff8c45c430af
      version: -1
      name: not in caseless list (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "99"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Melon"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: not in caseless list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Melon"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "99":
    id: "99"
    taskid: a0e7ab5e-b87b-4e10-8cd4-edebbe93c5c1
    type: playbook
    task:
      id: a0e7ab5e-b87b-4e10-8cd4-edebbe93c5c1
      version: -1
      name: not in caseless list (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "100"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Melon",
                          {
                            "Fruit": "Orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple,banana,cherry
      ExtFilterOperation:
        simple: not in caseless list
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Melon",
                          "Banana",
                          {
                            "Fruit": "Orange"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "100":
    id: "100"
    taskid: f7fde1ab-45d0-437e-84fc-ef95e62dae73
    type: playbook
    task:
      id: f7fde1ab-45d0-437e-84fc-ef95e62dae73
      version: -1
      name: contains (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "101"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: contains
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "101":
    id: "101"
    taskid: 15f333c3-6025-49f1-8061-ab72043f70a1
    type: playbook
    task:
      id: 15f333c3-6025-49f1-8061-ab72043f70a1
      version: -1
      name: contains (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "102"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: contains
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "102":
    id: "102"
    taskid: de7a968a-41bd-4c6c-8089-a13c609cde2d
    type: playbook
    task:
      id: de7a968a-41bd-4c6c-8089-a13c609cde2d
      version: -1
      name: contains (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "106"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: contains
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 15945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "103":
    id: "103"
    taskid: 0551899c-e5d9-4185-8957-61e104febefb
    type: playbook
    task:
      id: 0551899c-e5d9-4185-8957-61e104febefb
      version: -1
      name: doesn't contain (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "104"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "104":
    id: "104"
    taskid: 58a25cc8-08de-4103-83ec-74c78b8b34a3
    type: playbook
    task:
      id: 58a25cc8-08de-4103-83ec-74c78b8b34a3
      version: -1
      name: doesn't contain (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "105"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "105":
    id: "105"
    taskid: c075fa5f-2165-499a-8888-a7cfcb6513d5
    type: playbook
    task:
      id: c075fa5f-2165-499a-8888-a7cfcb6513d5
      version: -1
      name: doesn't contain (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "108"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "106":
    id: "106"
    taskid: 37172107-bedf-4463-8c23-78d224c6eea1
    type: playbook
    task:
      id: 37172107-bedf-4463-8c23-78d224c6eea1
      version: -1
      name: contains caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "107"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: contains caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "107":
    id: "107"
    taskid: 5c9599c8-ee5d-46cf-8333-d38193307f6c
    type: playbook
    task:
      id: 5c9599c8-ee5d-46cf-8333-d38193307f6c
      version: -1
      name: contains caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "103"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: contains caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "108":
    id: "108"
    taskid: 687224de-a5ef-4e48-819e-d270bafe74e6
    type: playbook
    task:
      id: 687224de-a5ef-4e48-819e-d270bafe74e6
      version: -1
      name: doesn't contain caseless (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "109"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 16995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "109":
    id: "109"
    taskid: c6341f39-bc79-4e70-85ad-4d99409070d3
    type: playbook
    task:
      id: c6341f39-bc79-4e70-85ad-4d99409070d3
      version: -1
      name: doesn't contain caseless (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "110"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 17170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "110":
    id: "110"
    taskid: dcb42f70-4a68-4884-8b8a-a920e20ff374
    type: playbook
    task:
      id: dcb42f70-4a68-4884-8b8a-a920e20ff374
      version: -1
      name: doesn't contain caseless (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "111"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: apple
      ExtFilterOperation:
        simple: doesn't contain caseless
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 17345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "111":
    id: "111"
    taskid: b232385f-8911-4927-8659-ffdd63b0777e
    type: playbook
    task:
      id: b232385f-8911-4927-8659-ffdd63b0777e
      version: -1
      name: 'wildcard: contains (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "112"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: contains'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 17520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "112":
    id: "112"
    taskid: f662e778-621a-45ec-82a7-ee6f98acc098
    type: playbook
    task:
      id: f662e778-621a-45ec-82a7-ee6f98acc098
      version: -1
      name: 'wildcard: contains (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "113"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: contains'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 17695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "113":
    id: "113"
    taskid: 8f917122-9d38-4f9b-8215-40bde913c8b6
    type: playbook
    task:
      id: 8f917122-9d38-4f9b-8215-40bde913c8b6
      version: -1
      name: 'wildcard: contains caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "114"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: contains caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 17870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "114":
    id: "114"
    taskid: f12c5a09-2bd0-4522-82d5-cb0e26462cca
    type: playbook
    task:
      id: f12c5a09-2bd0-4522-82d5-cb0e26462cca
      version: -1
      name: 'wildcard: contains caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "115"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: contains caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "115":
    id: "115"
    taskid: 77b472ea-f738-4b64-8f19-275f5d8e7346
    type: playbook
    task:
      id: 77b472ea-f738-4b64-8f19-275f5d8e7346
      version: -1
      name: 'wildcard: doesn''t contain (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "116"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "116":
    id: "116"
    taskid: 57a553ff-ed5e-4632-8b70-5bfa9e303387
    type: playbook
    task:
      id: 57a553ff-ed5e-4632-8b70-5bfa9e303387
      version: -1
      name: 'wildcard: doesn''t contain (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "117"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "117":
    id: "117"
    taskid: c82b4e38-ea5e-48c0-8e0f-f374035c04e4
    type: playbook
    task:
      id: c82b4e38-ea5e-48c0-8e0f-f374035c04e4
      version: -1
      name: 'wildcard: doesn''t contain (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "118"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "cherry",
                          "melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "cherry",
                          "melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "118":
    id: "118"
    taskid: cf3d631e-cefa-475d-8e91-6347ca6072bc
    type: playbook
    task:
      id: cf3d631e-cefa-475d-8e91-6347ca6072bc
      version: -1
      name: 'wildcard: doesn''t contain caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "119"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "119":
    id: "119"
    taskid: 5cdbda09-6d62-4aac-89b1-3fea8c38aaab
    type: playbook
    task:
      id: 5cdbda09-6d62-4aac-89b1-3fea8c38aaab
      version: -1
      name: 'wildcard: doesn''t contain caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "120"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 18920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "120":
    id: "120"
    taskid: 0e15bba5-3962-4403-839b-6398d62ed61d
    type: playbook
    task:
      id: 0e15bba5-3962-4403-839b-6398d62ed61d
      version: -1
      name: 'wildcard: doesn''t contain caseless (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "121"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Cherry",
                          "Melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '*a*'
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Cherry",
                          "Melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "121":
    id: "121"
    taskid: 23137015-61ee-4279-89fc-7571c0376ae0
    type: playbook
    task:
      id: 23137015-61ee-4279-89fc-7571c0376ae0
      version: -1
      name: 'regex: contains (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "122"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: contains'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "122":
    id: "122"
    taskid: 5e6a5b66-2b1a-4f5b-8cd3-313045219abf
    type: playbook
    task:
      id: 5e6a5b66-2b1a-4f5b-8cd3-313045219abf
      version: -1
      name: 'regex: contains (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "123"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: contains'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "123":
    id: "123"
    taskid: 0b1e22fa-b2e8-4f71-8dbb-493989256c96
    type: playbook
    task:
      id: 0b1e22fa-b2e8-4f71-8dbb-493989256c96
      version: -1
      name: 'regex: contains caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "124"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: contains caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "124":
    id: "124"
    taskid: 319bd6f0-213d-4a6d-8b47-a2055a95ce43
    type: playbook
    task:
      id: 319bd6f0-213d-4a6d-8b47-a2055a95ce43
      version: -1
      name: 'regex: contains caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "125"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: contains caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "125":
    id: "125"
    taskid: 790d6b7d-b5fa-4a3f-8238-bb6f6fe0bf72
    type: playbook
    task:
      id: 790d6b7d-b5fa-4a3f-8238-bb6f6fe0bf72
      version: -1
      name: 'regex: doesn''t contain (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "126"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 19970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "126":
    id: "126"
    taskid: 3da27559-fe79-4495-8f95-e0abe27abfa0
    type: playbook
    task:
      id: 3da27559-fe79-4495-8f95-e0abe27abfa0
      version: -1
      name: 'regex: doesn''t contain (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "127"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 20145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "127":
    id: "127"
    taskid: e7e09787-1361-45b2-8730-98d607b1e9b6
    type: playbook
    task:
      id: e7e09787-1361-45b2-8730-98d607b1e9b6
      version: -1
      name: 'regex: doesn''t contain (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "128"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "cherry",
                          "melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "cherry",
                          "melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 20320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "128":
    id: "128"
    taskid: 22fff095-eac8-4a03-802c-0631e7589310
    type: playbook
    task:
      id: 22fff095-eac8-4a03-802c-0631e7589310
      version: -1
      name: 'regex: doesn''t contain caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "129"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Apple"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 20495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "129":
    id: "129"
    taskid: d5d39fa8-bed0-47a5-8811-736052ec1d7c
    type: playbook
    task:
      id: d5d39fa8-bed0-47a5-8811-736052ec1d7c
      version: -1
      name: 'regex: doesn''t contain caseless (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "130"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"cherry"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 20670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "130":
    id: "130"
    taskid: 5a9b22e4-d76b-46cd-87cf-78565964ae72
    type: playbook
    task:
      id: 5a9b22e4-d76b-46cd-87cf-78565964ae72
      version: -1
      name: 'regex: doesn''t contain caseless (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "151"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Cherry",
                          "Melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: .*a.*
      ExtFilterOperation:
        simple: 'regex: doesn''t contain caseless'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Cherry",
                          "Melon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 20845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "131":
    id: "131"
    taskid: c6e9e8b7-6a40-42f8-88d8-83cc1b391e63
    type: playbook
    task:
      id: c6e9e8b7-6a40-42f8-88d8-83cc1b391e63
      version: -1
      name: contains any line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "132"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: contains any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 27320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "132":
    id: "132"
    taskid: cc5c0cba-255c-4aec-8a67-43da4c3feb0f
    type: playbook
    task:
      id: cc5c0cba-255c-4aec-8a67-43da4c3feb0f
      version: -1
      name: contains any line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "133"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: contains any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 27495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "133":
    id: "133"
    taskid: fdc85cbb-19a6-479e-8459-f4f1eb6db580
    type: playbook
    task:
      id: fdc85cbb-19a6-479e-8459-f4f1eb6db580
      version: -1
      name: contains any line of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "134"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    lemon
                    orange
      ExtFilterOperation:
        simple: contains any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 27670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "134":
    id: "134"
    taskid: 4f03938b-8a84-4ed7-83a2-a75cddb26252
    type: playbook
    task:
      id: 4f03938b-8a84-4ed7-83a2-a75cddb26252
      version: -1
      name: contains any caseless line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "135"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: contains any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 27845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "135":
    id: "135"
    taskid: 7c552947-d0df-4672-80ca-21f553d2e560
    type: playbook
    task:
      id: 7c552947-d0df-4672-80ca-21f553d2e560
      version: -1
      name: contains any caseless line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "136"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    orange
                    banana
      ExtFilterOperation:
        simple: contains any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "136":
    id: "136"
    taskid: ed21e6fa-cfb5-4549-8858-b07206953c16
    type: playbook
    task:
      id: ed21e6fa-cfb5-4549-8858-b07206953c16
      version: -1
      name: doesn't contain any line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "137"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: doesn't contain any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "137":
    id: "137"
    taskid: b72494e1-e2e6-4abb-8183-ad68f5b99a5c
    type: playbook
    task:
      id: b72494e1-e2e6-4abb-8183-ad68f5b99a5c
      version: -1
      name: doesn't contain any line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "138"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    lemon
                    orange
      ExtFilterOperation:
        simple: doesn't contain any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "138":
    id: "138"
    taskid: 13861613-2adb-426d-8898-7949a60d853b
    type: playbook
    task:
      id: 13861613-2adb-426d-8898-7949a60d853b
      version: -1
      name: doesn't contain any line of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "139"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    orange
                    banana
      ExtFilterOperation:
        simple: doesn't contain any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "139":
    id: "139"
    taskid: 2c4ce26c-1b27-44aa-85d8-ab9dcbbe67e2
    type: playbook
    task:
      id: 2c4ce26c-1b27-44aa-85d8-ab9dcbbe67e2
      version: -1
      name: doesn't match any caseless line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "140"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: doesn't match any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "140":
    id: "140"
    taskid: 0994283b-5f2a-4091-8e98-4cbeec113610
    type: playbook
    task:
      id: 0994283b-5f2a-4091-8e98-4cbeec113610
      version: -1
      name: doesn't match any caseless line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "141"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    lemon
                    orange
      ExtFilterOperation:
        simple: doesn't match any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 28895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "141":
    id: "141"
    taskid: 791a385d-2c61-4c09-8126-184775ed7cc0
    type: playbook
    task:
      id: 791a385d-2c61-4c09-8126-184775ed7cc0
      version: -1
      name: doesn't match any caseless line of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "178"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    orange
                    banana
      ExtFilterOperation:
        simple: doesn't match any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "142":
    id: "142"
    taskid: 02848ed7-b5ab-40bf-895c-38ccaf31d0b7
    type: playbook
    task:
      id: 02848ed7-b5ab-40bf-895c-38ccaf31d0b7
      version: -1
      name: matches any string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "143"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: matches any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "143":
    id: "143"
    taskid: f650a667-2b9e-47bc-8a15-ae80641fbfbc
    type: playbook
    task:
      id: f650a667-2b9e-47bc-8a15-ae80641fbfbc
      version: -1
      name: matches any string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "144"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "orange",
                          "banana",
                          "apple"
                        ]
      ExtFilterOperation:
        simple: matches any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "144":
    id: "144"
    taskid: 9a7498e5-28c9-4806-8aad-204df14b92d4
    type: playbook
    task:
      id: 9a7498e5-28c9-4806-8aad-204df14b92d4
      version: -1
      name: matches any string of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "145"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
      ExtFilterOperation:
        simple: matches any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "145":
    id: "145"
    taskid: 0d2152d0-2c78-454f-8042-ff8fa03e8e9c
    type: playbook
    task:
      id: 0d2152d0-2c78-454f-8042-ff8fa03e8e9c
      version: -1
      name: matches any caseless string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "146"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: matches any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "146":
    id: "146"
    taskid: 756ad408-b420-42a0-84f6-15f1e9144964
    type: playbook
    task:
      id: 756ad408-b420-42a0-84f6-15f1e9144964
      version: -1
      name: matches any caseless string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "147"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "orange",
                          "banana",
                          "apple"
                        ]
      ExtFilterOperation:
        simple: matches any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "147":
    id: "147"
    taskid: 1bbb6218-586a-493e-8f40-a56827414e99
    type: playbook
    task:
      id: 1bbb6218-586a-493e-8f40-a56827414e99
      version: -1
      name: doesn't match any string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "148"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: doesn't match any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "148":
    id: "148"
    taskid: 9adb6a0b-8f1b-4a18-864b-63eb7dcdc50a
    type: playbook
    task:
      id: 9adb6a0b-8f1b-4a18-864b-63eb7dcdc50a
      version: -1
      name: doesn't match any string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "149"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: doesn't match any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "149":
    id: "149"
    taskid: e8558aed-0760-4095-8d7e-75309015a7c4
    type: playbook
    task:
      id: e8558aed-0760-4095-8d7e-75309015a7c4
      version: -1
      name: doesn't match any caseless string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "150"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: doesn't match any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "150":
    id: "150"
    taskid: 00d8d767-98f8-4d05-84ce-6166fdb729ba
    type: playbook
    task:
      id: 00d8d767-98f8-4d05-84ce-6166fdb729ba
      version: -1
      name: doesn't match any caseless string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "160"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: doesn't match any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 23995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "151":
    id: "151"
    taskid: 147ad671-8332-4ab1-8be1-e35e5e5b92c4
    type: playbook
    task:
      id: 147ad671-8332-4ab1-8be1-e35e5e5b92c4
      version: -1
      name: matches any line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "152"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: matches any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "152":
    id: "152"
    taskid: 29676f99-ee5a-43eb-86d9-c3d9eb9c4364
    type: playbook
    task:
      id: 29676f99-ee5a-43eb-86d9-c3d9eb9c4364
      version: -1
      name: matches any line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "153"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    orange
                    banana
                    apple
      ExtFilterOperation:
        simple: matches any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "153":
    id: "153"
    taskid: 2777b6ac-4b8f-4fda-80ba-8eb496ed3529
    type: playbook
    task:
      id: 2777b6ac-4b8f-4fda-80ba-8eb496ed3529
      version: -1
      name: matches any line of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "154"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    lemon
                    orange
      ExtFilterOperation:
        simple: matches any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "154":
    id: "154"
    taskid: edf09541-9bcd-4997-8914-4e9e34b95827
    type: playbook
    task:
      id: edf09541-9bcd-4997-8914-4e9e34b95827
      version: -1
      name: matches any caseless line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "155"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: matches any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "155":
    id: "155"
    taskid: 451ffc95-f3e7-4f2f-8cc1-19db9787954c
    type: playbook
    task:
      id: 451ffc95-f3e7-4f2f-8cc1-19db9787954c
      version: -1
      name: matches any caseless line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "156"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    orange
                    banana
                    apple
      ExtFilterOperation:
        simple: matches any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "156":
    id: "156"
    taskid: cb1ce579-784e-4498-81d3-a19ea875d86c
    type: playbook
    task:
      id: cb1ce579-784e-4498-81d3-a19ea875d86c
      version: -1
      name: doesn't match any line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "157"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: doesn't match any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 21895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "157":
    id: "157"
    taskid: 5781d89a-00c2-48e2-8ef3-a1c22200f4b6
    type: playbook
    task:
      id: 5781d89a-00c2-48e2-8ef3-a1c22200f4b6
      version: -1
      name: doesn't match any line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "158"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    orange
                    banana
      ExtFilterOperation:
        simple: doesn't match any line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "158":
    id: "158"
    taskid: bd67f472-d645-48ef-8f1a-511669e48738
    type: playbook
    task:
      id: bd67f472-d645-48ef-8f1a-511669e48738
      version: -1
      name: doesn't match any caseless line of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "159"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '[]'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    apple
                    banana
                    cherry
      ExtFilterOperation:
        simple: doesn't match any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "159":
    id: "159"
    taskid: 8764e268-e3e0-4615-8020-9fa7e115585e
    type: playbook
    task:
      id: 8764e268-e3e0-4615-8020-9fa7e115585e
      version: -1
      name: doesn't match any caseless line of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "142"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |
                    melon
                    orange
                    banana
      ExtFilterOperation:
        simple: doesn't match any caseless line of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 22420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "160":
    id: "160"
    taskid: 2479719d-e565-4223-8303-1e4cf8148cd2
    type: playbook
    task:
      id: 2479719d-e565-4223-8303-1e4cf8148cd2
      version: -1
      name: 'wildcard: matches any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "161"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 24170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "161":
    id: "161"
    taskid: bffcb297-024b-4d52-8ef3-8c4fccf14f3e
    type: playbook
    task:
      id: bffcb297-024b-4d52-8ef3-8c4fccf14f3e
      version: -1
      name: 'wildcard: matches any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "162"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 24345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "162":
    id: "162"
    taskid: 3520cb9c-22e4-4136-8ea9-e22bc5992ab4
    type: playbook
    task:
      id: 3520cb9c-22e4-4136-8ea9-e22bc5992ab4
      version: -1
      name: 'wildcard: matches any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "163"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 24520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "163":
    id: "163"
    taskid: 9e17d558-e69a-44d1-8390-eca7d750330b
    type: playbook
    task:
      id: 9e17d558-e69a-44d1-8390-eca7d750330b
      version: -1
      name: 'wildcard: matches any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "164"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: matches any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 24695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "164":
    id: "164"
    taskid: 6042d4f6-cfc2-4d2f-8301-5d3bf1a767c9
    type: playbook
    task:
      id: 6042d4f6-cfc2-4d2f-8301-5d3bf1a767c9
      version: -1
      name: 'wildcard: matches any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "165"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: matches any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 24870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "165":
    id: "165"
    taskid: 8babbf2b-0f58-4885-82a9-02f487181b8a
    type: playbook
    task:
      id: 8babbf2b-0f58-4885-82a9-02f487181b8a
      version: -1
      name: 'wildcard: doesn''t match any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "166"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "166":
    id: "166"
    taskid: 25ced5f1-0bb7-40d0-847d-89d6bd1a4bbe
    type: playbook
    task:
      id: 25ced5f1-0bb7-40d0-847d-89d6bd1a4bbe
      version: -1
      name: 'wildcard: doesn''t match any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "167"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "167":
    id: "167"
    taskid: 6644ccee-9a2a-48c8-8125-6dd9468ec09d
    type: playbook
    task:
      id: 6644ccee-9a2a-48c8-8125-6dd9468ec09d
      version: -1
      name: 'wildcard: doesn''t match any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "168"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "168":
    id: "168"
    taskid: db5b93f5-e10b-43a6-8bf5-89b860d4ac54
    type: playbook
    task:
      id: db5b93f5-e10b-43a6-8bf5-89b860d4ac54
      version: -1
      name: 'wildcard: doesn''t match any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "169"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t match any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "169":
    id: "169"
    taskid: 7c2f6b01-7aad-4cb5-8a95-ee34e56e70e2
    type: playbook
    task:
      id: 7c2f6b01-7aad-4cb5-8a95-ee34e56e70e2
      version: -1
      name: 'regex: matches any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "170"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "170":
    id: "170"
    taskid: 8eaf9cc3-d569-47c0-8240-54cfed9979ea
    type: playbook
    task:
      id: 8eaf9cc3-d569-47c0-8240-54cfed9979ea
      version: -1
      name: 'regex: matches any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "171"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 25920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "171":
    id: "171"
    taskid: a440adf6-77dd-4dc4-86dc-ebafe1d5b411
    type: playbook
    task:
      id: a440adf6-77dd-4dc4-86dc-ebafe1d5b411
      version: -1
      name: 'regex: matches any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "172"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: matches any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "172":
    id: "172"
    taskid: 827ebb9b-0588-4ab6-8bcd-f53a92b9ec20
    type: playbook
    task:
      id: 827ebb9b-0588-4ab6-8bcd-f53a92b9ec20
      version: -1
      name: 'regex: matches any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "173"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: matches any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "173":
    id: "173"
    taskid: f3a4792c-41f5-4bcd-823c-491ae4296010
    type: playbook
    task:
      id: f3a4792c-41f5-4bcd-823c-491ae4296010
      version: -1
      name: 'regex: matches any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "174"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: matches any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "174":
    id: "174"
    taskid: 09822039-d26e-462a-8f3c-99e79c55a69a
    type: playbook
    task:
      id: 09822039-d26e-462a-8f3c-99e79c55a69a
      version: -1
      name: 'regex: doesn''t match any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "175"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t match any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "175":
    id: "175"
    taskid: dc4448f0-89f9-4a63-81e3-bb517d758e5d
    type: playbook
    task:
      id: dc4448f0-89f9-4a63-81e3-bb517d758e5d
      version: -1
      name: 'regex: doesn''t match any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "176"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t match any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "176":
    id: "176"
    taskid: 60fe512a-0a2a-4870-8f23-0cc1da075b6c
    type: playbook
    task:
      id: 60fe512a-0a2a-4870-8f23-0cc1da075b6c
      version: -1
      name: 'regex: doesn''t match any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "177"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t match any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 26970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "177":
    id: "177"
    taskid: 99c56794-d8c3-4f9d-8389-82983f334a3e
    type: playbook
    task:
      id: 99c56794-d8c3-4f9d-8389-82983f334a3e
      version: -1
      name: 'regex: doesn''t match any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "131"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t match any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 27145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "178":
    id: "178"
    taskid: 0aaa46e8-3908-4156-83e3-2d3f7a2ee415
    type: playbook
    task:
      id: 0aaa46e8-3908-4156-83e3-2d3f7a2ee415
      version: -1
      name: contains any string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "179"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
      ExtFilterOperation:
        simple: contains any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "179":
    id: "179"
    taskid: f30031f9-fe4b-41a4-8655-57613a7389b4
    type: playbook
    task:
      id: f30031f9-fe4b-41a4-8655-57613a7389b4
      version: -1
      name: contains any string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "180"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: contains any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "180":
    id: "180"
    taskid: 6e2af846-4de2-4ee2-8c67-75119568da38
    type: playbook
    task:
      id: 6e2af846-4de2-4ee2-8c67-75119568da38
      version: -1
      name: contains any string of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "181"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: contains any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "181":
    id: "181"
    taskid: 20da705d-25f1-45d3-8389-f8bbc841a518
    type: playbook
    task:
      id: 20da705d-25f1-45d3-8389-f8bbc841a518
      version: -1
      name: contains any string of (4)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "182"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
      ExtFilterOperation:
        simple: contains any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "182":
    id: "182"
    taskid: 17da8091-237d-41bd-8d4c-4eb176fe5044
    type: playbook
    task:
      id: 17da8091-237d-41bd-8d4c-4eb176fe5044
      version: -1
      name: contains any caseless string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "183"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: contains any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 29945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "183":
    id: "183"
    taskid: 191581e4-06bf-4074-8e8e-8782a1c26da9
    type: playbook
    task:
      id: 191581e4-06bf-4074-8e8e-8782a1c26da9
      version: -1
      name: contains any caseless string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "184"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: contains any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "184":
    id: "184"
    taskid: 51039620-3cab-437b-83c9-5cc104b9d525
    type: playbook
    task:
      id: 51039620-3cab-437b-83c9-5cc104b9d525
      version: -1
      name: doesn't contain any string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "185"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "185":
    id: "185"
    taskid: 888d5f7c-57d2-4779-83ca-17b8c8aa0b70
    type: playbook
    task:
      id: 888d5f7c-57d2-4779-83ca-17b8c8aa0b70
      version: -1
      name: doesn't contain any string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "186"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "186":
    id: "186"
    taskid: 9a714ffd-31f3-4a36-888a-042d1969b8f5
    type: playbook
    task:
      id: 9a714ffd-31f3-4a36-888a-042d1969b8f5
      version: -1
      name: doesn't contain any string of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "187"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "187":
    id: "187"
    taskid: ec4e8e37-77ad-4637-89e6-dfa5495dbc5b
    type: playbook
    task:
      id: ec4e8e37-77ad-4637-89e6-dfa5495dbc5b
      version: -1
      name: doesn't contain any caseless string of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "188"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "188":
    id: "188"
    taskid: fbadf897-c8a1-493c-8ce9-4f46b6fd680c
    type: playbook
    task:
      id: fbadf897-c8a1-493c-8ce9-4f46b6fd680c
      version: -1
      name: doesn't contain any caseless string of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "189"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 30995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "189":
    id: "189"
    taskid: eb647138-6c32-4130-8a32-a78a0554e2a2
    type: playbook
    task:
      id: eb647138-6c32-4130-8a32-a78a0554e2a2
      version: -1
      name: doesn't contain any caseless string of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "190"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "orange",
                          "banana"
                        ]
      ExtFilterOperation:
        simple: doesn't contain any caseless string of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 31170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "190":
    id: "190"
    taskid: efd6a90e-94c1-4675-8e54-0c86e2a90754
    type: playbook
    task:
      id: efd6a90e-94c1-4675-8e54-0c86e2a90754
      version: -1
      name: 'wildcard: contains any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "191"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"b?????"'
      ExtFilterOperation:
        simple: 'wildcard: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 31345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "191":
    id: "191"
    taskid: c3935554-be64-4a19-8139-934d98fd022d
    type: playbook
    task:
      id: c3935554-be64-4a19-8139-934d98fd022d
      version: -1
      name: 'wildcard: contains any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "192"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 31520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "192":
    id: "192"
    taskid: a758c519-f63f-4725-81ac-e538af1a0c75
    type: playbook
    task:
      id: a758c519-f63f-4725-81ac-e538af1a0c75
      version: -1
      name: 'wildcard: contains any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "193"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 31695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "193":
    id: "193"
    taskid: 8f932f49-2f59-45c1-8849-e5cf88ea830b
    type: playbook
    task:
      id: 8f932f49-2f59-45c1-8849-e5cf88ea830b
      version: -1
      name: 'wildcard: contains any string of (4)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "194"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 31870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "194":
    id: "194"
    taskid: 5b890623-b25e-462b-81a6-8d498fd0228f
    type: playbook
    task:
      id: 5b890623-b25e-462b-81a6-8d498fd0228f
      version: -1
      name: 'wildcard: contains any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "195"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: contains any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "195":
    id: "195"
    taskid: e75e8a32-a639-4a19-83a6-317ec4925d46
    type: playbook
    task:
      id: e75e8a32-a639-4a19-83a6-317ec4925d46
      version: -1
      name: 'wildcard: contains any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "196"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: contains any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "196":
    id: "196"
    taskid: 5955fec5-c68d-44b8-8596-95b99539e2a8
    type: playbook
    task:
      id: 5955fec5-c68d-44b8-8596-95b99539e2a8
      version: -1
      name: 'wildcard: doesn''t contain any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "197"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "197":
    id: "197"
    taskid: 28f3795f-c794-4db7-84e2-b13cb73065ee
    type: playbook
    task:
      id: 28f3795f-c794-4db7-84e2-b13cb73065ee
      version: -1
      name: 'wildcard: doesn''t contain any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "198"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "198":
    id: "198"
    taskid: 90a165b4-69fa-4f56-8587-79e813721405
    type: playbook
    task:
      id: 90a165b4-69fa-4f56-8587-79e813721405
      version: -1
      name: 'wildcard: doesn''t contain any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "199"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "199":
    id: "199"
    taskid: 05a96c41-6612-4625-8185-c6db5adbde58
    type: playbook
    task:
      id: 05a96c41-6612-4625-8185-c6db5adbde58
      version: -1
      name: 'wildcard: doesn''t contain any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "200"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 32920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "200":
    id: "200"
    taskid: f616beb1-068a-4f8a-85e7-003c6e04f91d
    type: playbook
    task:
      id: f616beb1-068a-4f8a-85e7-003c6e04f91d
      version: -1
      name: 'wildcard: doesn''t contain any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "201"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Melon",
                          "Lemon",
                          "Orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Melon",
                          "Lemon",
                          "Orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "201":
    id: "201"
    taskid: cf7c7828-8faf-4c7c-8e4a-092bc4de2628
    type: playbook
    task:
      id: cf7c7828-8faf-4c7c-8e4a-092bc4de2628
      version: -1
      name: 'wildcard: doesn''t contain any caseless string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "202"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b?????",
                          "*c*",
                          "*d*"
                        ]
      ExtFilterOperation:
        simple: 'wildcard: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "202":
    id: "202"
    taskid: 19d87d8a-e614-4f16-8fd1-632f80d2e655
    type: playbook
    task:
      id: 19d87d8a-e614-4f16-8fd1-632f80d2e655
      version: -1
      name: 'regex: contains any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "203"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"b....."'
      ExtFilterOperation:
        simple: 'regex: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "203":
    id: "203"
    taskid: 35668f58-3f24-4395-8ad8-7df7a52f802e
    type: playbook
    task:
      id: 35668f58-3f24-4395-8ad8-7df7a52f802e
      version: -1
      name: 'regex: contains any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "204"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "204":
    id: "204"
    taskid: 7fa06337-ff9f-4e11-8aad-83aa381f4376
    type: playbook
    task:
      id: 7fa06337-ff9f-4e11-8aad-83aa381f4376
      version: -1
      name: 'regex: contains any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "205"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "205":
    id: "205"
    taskid: a0f813f4-4bdf-4741-8aba-d820389fe79e
    type: playbook
    task:
      id: a0f813f4-4bdf-4741-8aba-d820389fe79e
      version: -1
      name: 'regex: contains any string of (4)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "206"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: contains any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 33970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "206":
    id: "206"
    taskid: 6b8e1388-dd0c-4090-8c4a-01eacea609a2
    type: playbook
    task:
      id: 6b8e1388-dd0c-4090-8c4a-01eacea609a2
      version: -1
      name: 'regex: contains any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "207"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: contains any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 34145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "207":
    id: "207"
    taskid: 7c9d10df-2248-4619-85b6-05ed466e020a
    type: playbook
    task:
      id: 7c9d10df-2248-4619-85b6-05ed466e020a
      version: -1
      name: 'regex: contains any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "208"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: contains any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 34320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "208":
    id: "208"
    taskid: c291c1f4-4225-4b04-83e7-182c95b8b01b
    type: playbook
    task:
      id: c291c1f4-4225-4b04-83e7-182c95b8b01b
      version: -1
      name: 'regex: doesn''t contain any string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "209"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 34495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "209":
    id: "209"
    taskid: e4205415-b7dc-47dc-8843-37ea4f94d78b
    type: playbook
    task:
      id: e4205415-b7dc-47dc-8843-37ea4f94d78b
      version: -1
      name: 'regex: doesn''t contain any string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "210"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 34670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "210":
    id: "210"
    taskid: 477b31c1-9c34-458e-8782-d61dd41500f5
    type: playbook
    task:
      id: 477b31c1-9c34-458e-8782-d61dd41500f5
      version: -1
      name: 'regex: doesn''t contain any string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "211"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "melon",
                          "lemon",
                          "orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 34845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "211":
    id: "211"
    taskid: 842ce9b6-46ed-4e69-8d08-f5ad631a23f1
    type: playbook
    task:
      id: 842ce9b6-46ed-4e69-8d08-f5ad631a23f1
      version: -1
      name: 'regex: doesn''t contain any caseless string of (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "212"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"Banana"'
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "212":
    id: "212"
    taskid: 69356ca7-d649-4b61-88f1-dcbf6ecbdb34
    type: playbook
    task:
      id: 69356ca7-d649-4b61-88f1-dcbf6ecbdb34
      version: -1
      name: 'regex: doesn''t contain any caseless string of (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "213"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Melon",
                          "Lemon",
                          "Orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Melon",
                          "Lemon",
                          "Orange"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "213":
    id: "213"
    taskid: 00ff2893-ae1a-4ae7-8ef9-0a10bc41a243
    type: playbook
    task:
      id: 00ff2893-ae1a-4ae7-8ef9-0a10bc41a243
      version: -1
      name: 'regex: doesn''t contain any caseless string of (3)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "214"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "null"
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "b.....",
                          ".*c.*",
                          ".*d.*"
                        ]
      ExtFilterOperation:
        simple: 'regex: doesn''t contain any caseless string of'
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "Apple",
                          "Banana",
                          "Cherry"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "214":
    id: "214"
    taskid: cea3d4be-ef03-493f-8584-259889289f35
    type: playbook
    task:
      id: cea3d4be-ef03-493f-8584-259889289f35
      version: -1
      name: matches expressions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "215"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "ccc.exe"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "ends with": ".exe",
                          "starts with": "c"
                        }
      ExtFilterOperation:
        simple: matches expressions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "aaa.dat",
                          "bbb.exe",
                          "ccc.exe"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "215":
    id: "215"
    taskid: cae5b3cc-ace2-41cc-8f0a-a6dd780d8059
    type: playbook
    task:
      id: cae5b3cc-ace2-41cc-8f0a-a6dd780d8059
      version: -1
      name: matches expressions of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "216"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Domain": [
                            "www.paloaltonetworks.co.jp",
                            "www.demisto.com"
                          ],
                          "IP": [
                            "1.1.1.1",
                            "2.2.2.2",
                            "3.3.3.3"
                          ]
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {"ends with": ".co.jp"},
                          "or",
                          {"includes": "demisto"}
                        ]
      ExtFilterOperation:
        simple: matches expressions of
      ExtFilterPath:
        simple: Domain
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Domain": [
                            "www.paloaltonetworks.com",
                            "www.paloaltonetworks.co.jp",
                            "www.demisto.com"
                          ],
                          "IP": [
                            "1.1.1.1",
                            "2.2.2.2",
                            "3.3.3.3"
                          ]
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "216":
    id: "216"
    taskid: e42e7853-217c-414e-8e0a-e619700c9164
    type: playbook
    task:
      id: e42e7853-217c-414e-8e0a-e619700c9164
      version: -1
      name: matches conditions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "217"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Events": [
                             {
                              "Description": "File uploaded",
                              "DeviceID": "D000001"
                            },
                            {
                              "Description": "User Logged In - Failed",
                              "DeviceID": "D000003"
                            }
                          ],
                          "TrustedDevices": [
                            "D000002",
                            "D000003"
                          ]
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Description": {
                              "==": "User Logged In - Failed"
                            }
                          },
                          "or",
                          [
                            {
                              "Description": {
                                "in list": "File uploaded,File downloaded"
                              }
                            },
                            "and",
                            "not",
                            {
                              "DeviceID": {
                                "matches any string of": "${local.TrustedDevices}"
                              }
                            }
                          ]
                        ]
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath:
        simple: Events
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "TrustedDevices": [
                            "D000002",
                            "D000003"
                          ],
                          "Events": [
                            {
                              "Description": "User Logged In - Success",
                              "DeviceID": "D000001"
                            },
                            {
                              "Description": "File uploaded",
                              "DeviceID": "D000001"
                            },
                            {
                              "Description": "File downloaded",
                              "DeviceID": "D000002"
                            },
                            {
                              "Description": "User Logged In - Failed",
                              "DeviceID": "D000003"
                            }
                          ]
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 35895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "217":
    id: "217"
    taskid: 50b591b4-57e7-48cd-8857-41ea242ec6ee
    type: playbook
    task:
      id: 50b591b4-57e7-48cd-8857-41ea242ec6ee
      version: -1
      name: matches conditions of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "218"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result": {
                            "File": [
                              {
                                "Name": "b.exe",
                                "Size": 200
                              }
                            ],
                            "Host": [
                              {
                                "Name": "server1",
                                "IP": "2.2.2.2"
                              }
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result.File": {
                            "is filtered with" : {
                              "Name": {
                                "ends with": ".exe"
                              }
                            }
                          },
                          "Result.Host": {
                            "is filtered with" : {
                              "Name": {
                                "starts with": "server"
                              }
                            }
                          }
                        }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result": {
                            "File": [
                              {
                                "Name": "a.dat",
                                "Size": 100
                              },
                              {
                                "Name": "b.exe",
                                "Size": 200
                              },
                              {
                                "Name": "c.txt",
                                "Size": 300
                              }
                            ],
                            "Host": [
                              {
                                "Name": "computer1",
                                "IP": "1.1.1.1"
                              },
                              {
                                "Name": "server1",
                                "IP": "2.2.2.2"
                              }
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "218":
    id: "218"
    taskid: 8c43a577-aaba-4efe-8ff3-d3ab11fdb0a9
    type: playbook
    task:
      id: 8c43a577-aaba-4efe-8ff3-d3ab11fdb0a9
      version: -1
      name: matches conditions of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "219"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result": {
                            "File": [
                              {
                                "Name": "b.exe",
                                "Size": 200
                              }
                            ],
                            "Host": [
                              {
                                "Name": "server1",
                                "IP": "2.2.2.2"
                              }
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result": {
                            "is filtered with" : {
                              "File": {
                                "is filtered with": {
                                  "Name": {
                                    "ends with": ".exe"
                                  }
                                }
                              },
                              "Host": {
                                "is filtered with": {
                                  "Name": {
                                    "starts with": "server"
                                  }
                                }
                              }
                            }
                          }
                        }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result": {
                            "File": [
                              {
                                "Name": "a.dat",
                                "Size": 100
                              },
                              {
                                "Name": "b.exe",
                                "Size": 200
                              },
                              {
                                "Name": "c.txt",
                                "Size": 300
                              }
                            ],
                            "Host": [
                              {
                                "Name": "computer1",
                                "IP": "1.1.1.1"
                              },
                              {
                                "Name": "server1",
                                "IP": "2.2.2.2"
                              }
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "219":
    id: "219"
    taskid: 7339ea00-3cd6-49e5-827e-c0b7cdf5f3c6
    type: playbook
    task:
      id: 7339ea00-3cd6-49e5-827e-c0b7cdf5f3c6
      version: -1
      name: matches conditions of (4)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "220"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result" : {
                            "Domain" : [
                              "www.paloaltonetworks.com",
                              "www.demisto.com"
                            ],
                            "IP" : [
                              "1.1.1.1",
                              "2.2.2.2",
                              "3.3.3.3"
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result.Domain": {
                            "is filtered with": {
                              "": {
                                "starts with": "www."
                              }
                            }
                          }
                        }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Result" : {
                            "Domain" : [
                              "www.paloaltonetworks.com",
                              "www.demisto.com",
                              "paloaltonetowrks.com"
                            ],
                            "IP" : [
                              "1.1.1.1",
                              "2.2.2.2",
                              "3.3.3.3"
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "220":
    id: "220"
    taskid: 1dcb0e05-8e18-4c4e-85b9-2ae335d69a6b
    type: playbook
    task:
      id: 1dcb0e05-8e18-4c4e-85b9-2ae335d69a6b
      version: -1
      name: value matches expressions of (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "221"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "1.1.1.1"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "contains": "1.1.1.1"
                        }
      ExtFilterOperation:
        simple: value matches expressions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "1.1.1.1",
                          "2.2.2.2",
                          "3.3.3.3"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "221":
    id: "221"
    taskid: aad806ca-ee44-4705-81a6-f294696344e1
    type: playbook
    task:
      id: aad806ca-ee44-4705-81a6-f294696344e1
      version: -1
      name: value matches expressions of (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "222"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Communication": {
                            "Host1": [
                              "1.1.1.1",
                              "2.2.2.2"
                            ],
                            "Host2": "1.1.1.1"
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "contains": "1.1.1.1"
                        }
      ExtFilterOperation:
        simple: value matches expressions of
      ExtFilterPath:
        simple: Communication
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Communication": {
                            "Host1": [
                              "1.1.1.1",
                              "2.2.2.2"
                            ],
                            "Host2": "1.1.1.1",
                            "Host3": [
                              "3.3.3.3",
                              "4.4.4.4"
                            ]
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "222":
    id: "222"
    taskid: 07367649-8b3d-49a7-8d88-4acf12c2651f
    type: playbook
    task:
      id: 07367649-8b3d-49a7-8d88-4acf12c2651f
      version: -1
      name: value matches conditions of (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "223"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Score": {
                            ">=": 20
                          }
                        }
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30
                          },
                          "Host2": {
                            "User": "TYAMADA",
                            "IP": "192.168.1.2",
                            "Score": 10
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 36945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "223":
    id: "223"
    taskid: 6c5891d7-e175-4559-8533-f59217a60ba9
    type: playbook
    task:
      id: 6c5891d7-e175-4559-8533-f59217a60ba9
      version: -1
      name: value matches conditions of (4)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "224"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30,
                            "File": {
                              "Risk": [
                                "xxx.exe"
                              ]
                            }
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40,
                            "File": {
                              "Risk": [
                                "bbb.exe"
                              ]
                            }
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Score": {
                            ">=": 20
                          },
                          "File.Risk": {
                            "is filtered with": {
                              "": {
                                "ends with": ".exe"
                              }
                            }
                          }
                        }
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30,
                            "File": {
                              "Risk": [
                                "xxx.exe",
                                "yyy.pdf"
                              ]
                            }
                          },
                          "Host2": {
                            "User": "TYAMADA",
                            "IP": "192.168.1.2",
                            "Score": 10
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40,
                            "File": {
                              "Risk": [
                                "aaa.pdf",
                                "bbb.exe"
                              ]
                            }
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "224":
    id: "224"
    taskid: 80e8f6c3-059b-44e7-89b6-8dd02e5b5686
    type: playbook
    task:
      id: 80e8f6c3-059b-44e7-89b6-8dd02e5b5686
      version: -1
      name: value is filtered with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "225"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "192.168.1.1",
                          "192.168.1.2"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "starts with": "192.168."
                        }
      ExtFilterOperation:
        simple: value is filtered with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "192.168.1.1",
                          "1.1.1.1",
                          "192.168.1.2"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "225":
    id: "225"
    taskid: 2857db63-cb31-4c92-86ee-9456c6460a45
    type: playbook
    task:
      id: 2857db63-cb31-4c92-86ee-9456c6460a45
      version: -1
      name: value is filtered with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "226"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          ">=": 20
                        }
      ExtFilterOperation:
        simple: value is filtered with
      ExtFilterPath:
        simple: Score
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "Host1": {
                            "User": "JDOE",
                            "IP": "192.168.1.1",
                            "Score": 30
                          },
                          "Host2": {
                            "User": "TYAMADA",
                            "IP": "192.168.1.2",
                            "Score": 10
                          },
                          "Host3": {
                            "User": "MBLACK",
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "226":
    id: "226"
    taskid: 2d876a1c-6f7f-44f9-895b-2040ad5213f4
    type: playbook
    task:
      id: 2d876a1c-6f7f-44f9-895b-2040ad5213f4
      version: -1
      name: '"===" (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "227"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        complex:
          root: ${
          accessor: ="==="}
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "227":
    id: "227"
    taskid: 93604654-e687-4f3f-8116-c1691a7ae709
    type: playbook
    task:
      id: 93604654-e687-4f3f-8116-c1691a7ae709
      version: -1
      name: '"===" (2)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "228"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "10"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '"10"'
      ExtFilterOperation:
        complex:
          root: ${
          accessor: ="==="}
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "228":
    id: "228"
    taskid: 2db931cc-f158-40cd-849f-215d798b86d8
    type: playbook
    task:
      id: 2db931cc-f158-40cd-849f-215d798b86d8
      version: -1
      name: '!== (1)'
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "231"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: "10"
      ExtFilterOperation:
        simple: '!=='
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          "10",
                          123
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 37995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "230":
    id: "230"
    taskid: bb9a11c0-b5f6-4c5d-868e-efbc8632612b
    type: condition
    task:
      id: bb9a11c0-b5f6-4c5d-868e-efbc8632612b
      version: -1
      name: encode (1)
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "18"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: |2-
                              [
                                {
                                  "xxx": 10
                                },
                                20
                              ]
                - operator: ParseJSON
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'json: encode'
                    path: {}
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'base64: encode'
                    path: {}
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'base64: decode'
                    path: {}
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{"algorithm": "sha256"}'
                    operation:
                      value:
                        simple: digest
                    path: {}
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'json: encode array'
                    path: {}
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'base64: encode'
                    path: {}
            iscontext: true
          right:
            value:
              simple: WyI5ODcyYzdjYzk4MDY1NDkxN2NkNDhlNzgwNmIwMmEwZTlkNWJmMzI0M2I2Yzg4YmI4NGI5MzgwOWM1MzQzNzg0IiwgIjA0NjQxOWNhNWVjZWJlYjM0ZmRmZTlkZGU4MTA2Y2NlZTVjZTM5ZjhlNGRkMTE1ZThlZjIwYjg2OWY4YmVkODIiXQ==
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "231":
    id: "231"
    taskid: bd534444-86f9-4015-80b5-796cbf0b7f7a
    type: playbook
    task:
      id: bd534444-86f9-4015-80b5-796cbf0b7f7a
      version: -1
      name: is replaced with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "232"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "fruit" : [
                              "apple",
                              "banana"
                            ]
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "fruit" : "${local}"
                          }
                        ]
      ExtFilterOperation:
        simple: is replaced with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 38170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "232":
    id: "232"
    taskid: 29f633ab-005c-46d7-8305-7bbce5cd4e4e
    type: playbook
    task:
      id: 29f633ab-005c-46d7-8305-7bbce5cd4e4e
      version: -1
      name: is replaced with (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "235"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "fruit": "banana",
                          "vegitable": "tomato"
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "fruit": "banana",
                          "vegitable": "tomato"
                        }
      ExtFilterOperation:
        simple: is replaced with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "fruit": "apple"
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 38345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "235":
    id: "235"
    taskid: f5888ce0-ea9d-4dac-869d-b241d1bc7efe
    type: playbook
    task:
      id: f5888ce0-ea9d-4dac-869d-b241d1bc7efe
      version: -1
      name: is updated with (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "236"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "fruit" : [
                              "apple",
                              "banana"
                            ]
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "fruit" : "${local}"
                          }
                        ]
      ExtFilterOperation:
        simple: is updated with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 38520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "236":
    id: "236"
    taskid: 814c7809-03e5-42c2-8af3-93d8e939d4b1
    type: playbook
    task:
      id: 814c7809-03e5-42c2-8af3-93d8e939d4b1
      version: -1
      name: is updated with (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "237"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "fruit": "apple",
                          "vegitable": "tomato"
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "vegitable": "tomato"
                        }
      ExtFilterOperation:
        simple: is updated with
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "fruit": "apple"
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 38695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "237":
    id: "237"
    taskid: adf90a54-ab10-4833-8197-6b3bf5751e8e
    type: playbook
    task:
      id: adf90a54-ab10-4833-8197-6b3bf5751e8e
      version: -1
      name: appends (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "238"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana",
                          "cherry",
                          "lemon"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "cherry",
                          "lemon"
                        ]
      ExtFilterOperation:
        simple: appends
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "apple",
                          "banana"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 38870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "238":
    id: "238"
    taskid: 16cef67b-64e9-48a9-8bd7-e141728f4ed0
    type: playbook
    task:
      id: 16cef67b-64e9-48a9-8bd7-e141728f4ed0
      version: -1
      name: appends (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "239"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "File": [
                              "a.exe",
                              "b.pdf"
                            ]
                          },
                          {
                            "IP": [
                              "1.1.1.1",
                              "2.2.2.2"
                            ]
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "IP": [
                            "1.1.1.1",
                            "2.2.2.2"
                          ]
                        }
      ExtFilterOperation:
        simple: appends
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "File": [
                            "a.exe",
                            "b.pdf"
                          ]
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "239":
    id: "239"
    taskid: 4b3527cb-c583-486d-8406-4a62cb95b6f8
    type: playbook
    task:
      id: 4b3527cb-c583-486d-8406-4a62cb95b6f8
      version: -1
      name: if-then-else (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "240"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Name": "a.dat",
                            "Size": 100,
                            "Executable": false
                          },
                          {
                            "Name": "b.exe",
                            "Size": 200,
                            "Executable": true
                          },
                          {
                            "Name": "c.txt",
                            "Size": 300,
                            "Executable": false
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "if": {
                            "is filtered with": {
                              "Name": {
                                "ends with": ".exe"
                              }
                            }
                          },
                          "then": {
                            "is updated with": {
                              "Executable": true
                            }
                          },
                          "else": {
                            "is updated with": {
                              "Executable": false
                            }
                          }
                        }
      ExtFilterOperation:
        simple: if-then-else
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "Name": "a.dat",
                            "Size": 100
                          },
                          {
                            "Name": "b.exe",
                            "Size": 200
                          },
                          {
                            "Name": "c.txt",
                            "Size": 300
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "240":
    id: "240"
    taskid: 50fb1879-759e-42f3-8eec-5e914e43ec60
    type: playbook
    task:
      id: 50fb1879-759e-42f3-8eec-5e914e43ec60
      version: -1
      name: if-then-else (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "241"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "a.dat",
                          10,
                          "c.txt"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "if": {
                            "ends with": ".exe"
                          },
                          "then": {
                            "is replaced with": 10
                          }
                        }
      ExtFilterOperation:
        simple: if-then-else
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "a.dat",
                          "b.exe",
                          "c.txt"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "241":
    id: "241"
    taskid: c298def4-9814-4682-84cd-43e85f070020
    type: playbook
    task:
      id: c298def4-9814-4682-84cd-43e85f070020
      version: -1
      name: if-then-else (3)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "242"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          10,
                          10,
                          10
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "then": {
                            "is replaced with": 10
                          }
                        }
      ExtFilterOperation:
        simple: if-then-else
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "a.dat",
                          "b.exe",
                          "c.txt"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "242":
    id: "242"
    taskid: 2195875e-122c-4c40-88a6-53f71c86a5aa
    type: playbook
    task:
      id: 2195875e-122c-4c40-88a6-53f71c86a5aa
      version: -1
      name: switch-case (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "243"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "IP": "1.1.1.1",
                            "Score": 80,
                            "Risk": "high"
                          },
                          {
                            "IP": "2.2.2.2",
                            "Score": 50,
                            "Risk": "middle"
                          },
                          {
                            "IP": "3.3.3.3",
                            "Score": 20,
                            "Risk": "low"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "switch": {
                            "#low": {
                              "is filtered with": {
                                "Score": {
                                  "<=": 30
                                }
                              }
                            },
                            "#high": {
                              "is filtered with": {
                                "Score": {
                                  ">=": 70
                                }
                              }
                            }
                          },
                          "#low": {
                            "is updated with": {
                              "Risk": "low"
                            }
                          },
                          "#high": {
                            "is updated with": {
                              "Risk": "high"
                            }
                          },
                          "default": {
                            "is updated with": {
                              "Risk": "middle"
                            }
                          }
                        }
      ExtFilterOperation:
        simple: switch-case
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "IP": "1.1.1.1",
                            "Score": 80
                          },
                          {
                            "IP": "2.2.2.2",
                            "Score": 50
                          },
                          {
                            "IP": "3.3.3.3",
                            "Score": 20
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "243":
    id: "243"
    taskid: 506b8486-1725-4868-865e-8b5bbcc1bf21
    type: playbook
    task:
      id: 506b8486-1725-4868-865e-8b5bbcc1bf21
      version: -1
      name: switch-case (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "244"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "IP": "1.1.1.1",
                            "Score": 80,
                            "Risk": "high"
                          },
                          {
                            "IP": "2.2.2.2",
                            "Score": 50
                          },
                          {
                            "IP": "3.3.3.3",
                            "Score": 20,
                            "Risk": "low"
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "switch": {
                            "#low": {
                              "is filtered with": {
                                "Score": {
                                  "<=": 30
                                }
                              }
                            },
                            "#high": {
                              "is filtered with": {
                                "Score": {
                                  ">=": 70
                                }
                              }
                            }
                          },
                          "#low": {
                            "is updated with": {
                              "Risk": "low"
                            }
                          },
                          "#high": {
                            "is updated with": {
                              "Risk": "high"
                            }
                          }
                        }
      ExtFilterOperation:
        simple: switch-case
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "IP": "1.1.1.1",
                            "Score": 80
                          },
                          {
                            "IP": "2.2.2.2",
                            "Score": 50
                          },
                          {
                            "IP": "3.3.3.3",
                            "Score": 20
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 39920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "244":
    id: "244"
    taskid: 36a33017-59d0-475a-80ea-eb0a600904d4
    type: playbook
    task:
      id: 36a33017-59d0-475a-80ea-eb0a600904d4
      version: -1
      name: collects values (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "248"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          {
                            "IP": [
                              "1.1.1.1",
                              "1.1.1.2"
                            ],
                            "Score": 30
                          },
                          {
                            "IP": "3.3.3.3",
                            "Score": 40
                          },
                          {
                            "IP": "2.2.2.2",
                            "Score": 10
                          }
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '{}'
      ExtFilterOperation:
        simple: collects values
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "JDOE": {
                            "IP": [
                              "1.1.1.1",
                              "1.1.1.2"
                            ],
                            "Score": 30
                          },
                          "TYAMADA": {
                            "IP": "2.2.2.2",
                            "Score": 10
                          },
                          "MBLACK": {
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 40095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "245":
    id: "245"
    taskid: 8d252cbd-404d-4744-8548-7ad88fe6f383
    type: playbook
    task:
      id: 8d252cbd-404d-4744-8548-7ad88fe6f383
      version: -1
      name: collects keys (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "246"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "JDOE",
                          "MBLACK",
                          "TYAMADA"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '{}'
      ExtFilterOperation:
        simple: collects keys
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "JDOE": {
                            "IP": [
                              "1.1.1.1",
                              "1.1.1.2"
                            ],
                            "Score": 30
                          },
                          "TYAMADA": {
                            "IP": "2.2.2.2",
                            "Score": 10
                          },
                          "MBLACK": {
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 40445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "246":
    id: "246"
    taskid: de27693e-0c65-43be-8b60-d494b01477cc
    type: playbook
    task:
      id: de27693e-0c65-43be-8b60-d494b01477cc
      version: -1
      name: flattens with values (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "247"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "1.1.1.1",
                          "1.1.1.2",
                          30,
                          "3.3.3.3",
                          40,
                          "2.2.2.2",
                          10
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '{}'
      ExtFilterOperation:
        simple: flattens with values
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "JDOE": {
                            "IP": [
                              "1.1.1.1",
                              "1.1.1.2"
                            ],
                            "Score": 30
                          },
                          "TYAMADA": {
                            "IP": "2.2.2.2",
                            "Score": 10
                          },
                          "MBLACK": {
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 40620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "247":
    id: "247"
    taskid: bbb3f065-0ab3-4b4b-8b24-e86801addb00
    type: playbook
    task:
      id: bbb3f065-0ab3-4b4b-8b24-e86801addb00
      version: -1
      name: flattens with keys (1)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "JDOE",
                          "IP",
                          "Score",
                          "MBLACK",
                          "IP",
                          "Score",
                          "TYAMADA",
                          "IP",
                          "Score"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '{}'
      ExtFilterOperation:
        simple: flattens with keys
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        {
                          "JDOE": {
                            "IP": [
                              "1.1.1.1",
                              "1.1.1.2"
                            ],
                            "Score": 30
                          },
                          "TYAMADA": {
                            "IP": "2.2.2.2",
                            "Score": 10
                          },
                          "MBLACK": {
                            "IP": "3.3.3.3",
                            "Score": 40
                          }
                        }
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 40795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "248":
    id: "248"
    taskid: dbcc39fe-40a5-4099-8ce1-d1cb8d80bd02
    type: playbook
    task:
      id: dbcc39fe-40a5-4099-8ce1-d1cb8d80bd02
      version: -1
      name: collects values (2)
      description: Run ExtFilter for a test
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "245"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "1.1.1.1",
                          "2.2.2.2",
                          "3.3.3.3"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '{}'
      ExtFilterOperation:
        simple: collects values
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2-
                        [
                          "1.1.1.1",
                          "2.2.2.2",
                          "3.3.3.3"
                        ]
          - operator: ExtFilter
            args:
              ctx_demisto: {}
              ctx_incident: {}
              ctx_inputs: {}
              ctx_lists: {}
              filter:
                value:
                  simple: |-
                    [
                      {"json: decode": {}},
                      {"json: encode": {"indent":2}}
                    ]
              operation:
                value:
                  simple: is transformed with
              path: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 40270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "249":
    id: "249"
    taskid: 17860e50-aeb8-4805-8857-62433f98ae87
    type: condition
    task:
      id: 17860e50-aeb8-4805-8857-62433f98ae87
      version: -1
      name: 'email-header: decode (2)'
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "230"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: "ABC =?ISO-2022-JP?B?GyRCJCIkJCQmJCgkKhsoQg==?= XYZ"
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'email-header: decode'
                    path: {}
            iscontext: true
          right:
            value:
              simple: ABC あいうえお XYZ
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "250":
    id: "250"
    taskid: 525fdce3-8eb2-4d35-800b-91b75eeebec4
    type: condition
    task:
      id: 525fdce3-8eb2-4d35-800b-91b75eeebec4
      version: -1
      name: 'email-header: decode (1)'
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "249"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: "=?ISO-2022-JP?B?GyRCJCIkJCQmJCgkKhsoQg==?="
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: '{}'
                    operation:
                      value:
                        simple: 'email-header: decode'
                    path: {}
            iscontext: true
          right:
            value:
              simple: あいうえお
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "251":
    id: "251"
    taskid: ed63320d-318e-46b3-8631-aeeee208258d
    type: condition
    task:
      id: ed63320d-318e-46b3-8631-aeeee208258d
      version: -1
      name: 'regex: replace (1)'
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "252"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: 'Re: Re: Fw: Hello!'
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: |-
                          {
                            "pattern": "( *(Re: *|Fw: *)*)(.*)",
                            "matched": "\\3"
                          }
                    operation:
                      value:
                        simple: 'regex: replace'
                    path: {}
            iscontext: true
          right:
            value:
              simple: Hello!
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "252":
    id: "252"
    taskid: adf4678f-f611-4794-80c7-9c26ff4b6076
    type: condition
    task:
      id: adf4678f-f611-4794-80c7-9c26ff4b6076
      version: -1
      name: 'regex: replace (2)'
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "253"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: xyz
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: |-
                          {
                            "pattern": ".*(abcde).*",
                            "matched": "\\1",
                             "unmatched": "unmatched"
                          }
                    operation:
                      value:
                        simple: 'regex: replace'
                    path: {}
            iscontext: true
          right:
            value:
              simple: unmatched
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "253":
    id: "253"
    taskid: 8f7d27e4-1d02-407b-8e24-7898dda01525
    type: condition
    task:
      id: 8f7d27e4-1d02-407b-8e24-7898dda01525
      version: -1
      name: 'regex: replace (3)'
      description: Run ExtFilter for a test
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "250"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: ${
                accessor: =}
                transformers:
                - operator: concat
                  args:
                    prefix: {}
                    suffix:
                      value:
                        simple: xyz
                - operator: ExtFilter
                  args:
                    ctx_demisto: {}
                    ctx_incident: {}
                    ctx_inputs: {}
                    ctx_lists: {}
                    filter:
                      value:
                        simple: |-
                          {
                            "pattern": ".*(abcde).*",
                            "matched": "\\1"
                          }
                    operation:
                      value:
                        simple: 'regex: replace'
                    path: {}
            iscontext: true
          right:
            value:
              simple: xyz
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 40840,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
