[MODEL: dataset="mongodb_atlas_raw"]
filter source_log_type = "alerts"
| alter
	xdm.event.type = source_log_type,
	xdm.alert.description = acknowledgementComment,
	xdm.source.user.username = acknowledgingUsername,
	xdm.alert.original_alert_id = coalesce(alertConfigId, id),
	xdm.event.original_event_type = eventTypeName,
	xdm.source.user.groups = arraycreate(groupId),
	xdm.observer.unique_identifier = arraystring(arraydistinct(arraymap(links -> [], "@element" -> href)), "|"),
	xdm.alert.subcategory = concat(lowercase(status), "-", _ENTRY_STATUS);

filter source_log_type = "events"
| alter
	get_linkToDetails = arraycreate(linkToDetails),
	get_links_href = arraymap(links -> [], "@element" -> href),
	check_remoteAddress_ipv4 = if(remoteAddress ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", remoteAddress),
	check_remoteAddress_ipv6 = if(remoteAddress ~= "(?:[a-fA-F\d]{0,4}\:){1,7}[a-fA-F\d]{0,4}", remoteAddress)
| alter
	xdm.event.type = source_log_type,
	xdm.alert.original_alert_id = coalesce(alertConfigId, id),
	xdm.event.original_event_type = eventTypeName,
	xdm.source.user.groups = arraycreate(groupId),
	xdm.observer.unique_identifier = arraystring(arraydistinct(arrayconcat(get_linkToDetails, get_links_href)), "|"),
	xdm.source.user.username = arraystring(arraycreate(acknowledgingUsername, username), "|"),
	xdm.auth.privilege_level = if(to_boolean(isGlobalAdmin) = true, XDM_CONST.PRIVILEGE_LEVEL_ADMIN),
	xdm.source.ipv4 = check_remoteAddress_ipv4,
	xdm.source.ipv6 = check_remoteAddress_ipv6,
	xdm.target.user.username = targetUsername,
	xdm.source.user.identifier = userId,
	xdm.database.name = database,
	xdm.target.host.hostname = hostname,
	xdm.target.port = to_integer(port),
	xdm.target.application.name = applicationName,
	xdm.observer.action = to_string(diffs),
	xdm.target.resource.type = if(replicaSetName != null, "replicaSetName"),
	xdm.target.resource.name = if(replicaSetName != null, replicaSetName),
	xdm.database.operation = if(opType ~= "query", XDM_CONST.DB_OPERATION_QUERY, opType ~= "update", XDM_CONST.DB_OPERATION_UPDATE, opType ~= "create", XDM_CONST.DB_OPERATION_CREATE, opType ~= "delete", XDM_CONST.DB_OPERATION_DELETE, opType ~= "alter", XDM_CONST.DB_OPERATION_ALTER, opType = null, null, to_string(opType)),
	xdm.alert.subcategory = concat(lowercase(status), "-", _ENTRY_STATUS),
	xdm.alert.description = ("apiKeyId", apiKeyId, "publicKey", publicKey, "targetPublicKey", targetPublicKey, "collection", collection, "userAlias", userAlias, "clusterName", clusterName, "whitelistEntry", whitelistEntry, "dbUserUsername", dbUserUsername);