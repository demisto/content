"""QutteraWebsiteMalwareScanner Integration for Cortex XSOAR (aka Demisto)
"""
import demistomock as demisto
from CommonServerPython import *


# Disable insecure warnings
urllib3.disable_warnings()

''' CONSTANTS '''
DATE_FORMAT = "%Y-%m-%dT%H:%M:%SZ"


class Client(BaseClient):
    """Client class for basic interaction with Quttera API.
    """
    def scan_start(self, domain: str) -> Dict:
        """Start domain scanning

        :type domain: ``str``
        :param domain: Domain to scan

        :return: dict containing response from start scanning
        :rtype: ``Dict``
        """

        return self._http_request(
            method='POST',
            url_suffix='/url/scan/{}'.format(domain),
        )

def scan_start_command(client: Client, args: Dict[str, Any]) -> CommandResults:
    """
    quttera-scan-start command: initiates scan of the provided URL or domain.

    :type client: ``Client``
    :param Client: Qutter API client

    :type args: ``Dict[str, Any]``
    :param args: all command arguments from ``demisto.args()``

    :return: ``CommandResults`` object contain the start scan response
    :rtype: ``CommandResults``
    """
    domain = args.get('domain', None)
    if not domain:
        raise ValueError('domain is missing')

    start = client.scan_start(domain=domain)
    readable_output = f'Started scan of {domain}'
    if start.get('errorstr') is not 'success':
        readable_output = f'Failed to scan domain {domain}'

    return CommandResults(
        readable_output=readable_output,
        outputs_prefix='',
        outputs_key_field='QutteraWebsiteMalwareScanning.start',
        outputs=start
    )

def quttera_scan_status(self):
    """
    Retrieves scan status for previously submitted domain
    name or URL.

    """
    pass

def quttera_scan_report(self):
    """
    Retrieves scan report for previously submitted domain
    or URL in context or as a File (default)

    """
    pass

def url(self):
    """
    Returns url blacklisting information and reputation.

    """
    pass

def domain(self):
    """
    Returns domain blacklisting information and reputation.

    """
    pass

''' MAIN FUNCTION '''
def main(params: dict, args: dict:, command: str):
    """main function, parses params and runs command functions
    """
    demisto.debug("Command called {command}")
    client = Client(params)
    if command == 'quttera-scan-start':
        results = quttera_scan_start(client, args)
    elif command == 'quttera-scan-report':
        results = quttera_scan_report(client, args)
    elif command == 'quttera_scan_status':
        results = quttera_scan_status(client, args)
    elif command == 'domain':
        results = domain(client, args)
    elif command == 'url':
        results = url(client, args)
    else:
        raise NotImplementedError(f'Command {command} not implemented')
    return_results(results)

if __name__ in ('__main__', '__builtin__', 'builtins'):
    try:
        main(demisto.params(), demisto.args(), demisto.command())
    except Exception as exception:
        return_error(exception)
