commonfields:
  id: TaniumFilterComputersByIndexQueryFileDetails
  version: -1
name: TaniumFilterComputersByIndexQueryFileDetails
script: >
  dArgs = demisto.args()

  question_filters="Index Query File Details"


  sensors=dArgs.get("sensors")

  del dArgs['sensors']


  filter_type = None

  filter_value = None


  if 'filter_type' in dArgs:
      filter_type = dArgs.get('filter_type')
      del dArgs['filter_type']

  if 'filter_value' in dArgs:
      filter_value = dArgs.get('filter_value')
      del dArgs['filter_value']

  params = []

  for key in dArgs:
      params.append(key + "=" + dArgs[key])

  if len(params) > 0:
      question_filters = question_filters + "{" + ','.join(params) + "}"

  if filter_type is not None:
      question_filters = question_filters + ",that "+filter_type+":"+filter_value

  demisto.results(demisto.executeCommand('tn-ask-manual-question', {'sensors':sensors, 'question_filters': question_filters}))
type: python
subtype: python2
tags:
- tanium
comment: "Get the requested sensors from all machines where the Index Query File Details match the given filter.\nE.g. !TaniumFilterQuestionByIndexQueryFileDetails sensors=\"Computer Name\" filter_type=contains filter_value=Demisto limit=5 \nwill be translated the following plain text Tanium question:\n\"Get Computer Name from all machines with any Index Query File Details[*, *, *, *, *, *, *, 5] containing \"Demisto\"\""
enabled: true
args:
- name: directoryPath
  description: Glob of directory name used for searching,e.g. Windows
- name: fileName
  description: Glob of file name used for searching, e.g. *exe
- name: fileSize
  description: Glob of file size used for searching, e.g.10??
- name: fileMD5Hash
  description: Glob of file MD5 hash used for searching, e.g. 1c7b*
- name: fileSHA1Hash
  description: Glob of file SHA1 hash used for searching, e.g. 1c7b*
- name: fileSHA256Hash
  description: Glob of file SHA256 hash used for searching, e.g. 1c7b*
- name: magicNumber
  description: Glob of a magic number used for searching, 4D54*
- name: limit
  description: Maximum number of rows to return
- name: filter_type
  required: true
  auto: PREDEFINED
  predefined:
  - less
  - notless
  - greater
  - notgreater
  - equal
  - notequal
  - contains
  - notcontains
  - startswith
  - endswith
  - notstartswith
  - doesnotendwith
  - regex
  - notregex
  description: Type of filter to apply to the question results
- name: filter_value
  required: true
  description: Value to filter results by
- name: sensors
  description: Semicolon separated list of columns to return. E.g. "Computer Name;IP Address"
  defaultValue: Computer Name
outputs:
- contextPath: Tanium.QuestionResults.Computer Name
  description: Computer Name that contains the index query file details as specified by the filters
- contextPath: Tanium.QuestionResults.Count
  description: Number or results per computer name that match the filter
scripttarget: 0
runonce: false
dependson:
  must:
  - tn-ask-manual-question
fromversion: 5.0.0
