id: Darkfeed - malware download from feed
version: -1
name: Darkfeed - malware download from feed
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 8913d0e7-b681-4f0e-81ac-f1c535c59a13
    type: start
    task:
      id: 8913d0e7-b681-4f0e-81ac-f1c535c59a13
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 497d9ae3-f5d3-4f4a-8802-fc3a565c1975
    type: playbook
    task:
      id: 497d9ae3-f5d3-4f4a-8802-fc3a565c1975
      version: -1
      name: Darkfeed IOC detonation and proactive blocking
      playbookName: Darkfeed IOC detonation and proactive blocking
      type: playbook
      iscommand: false
      brand: ""
      description: ''
    scriptarguments:
      File:
        complex:
          root: File
      Manual download:
        simple: "true"
      URL:
        complex:
          root: URL
          filters:
          - - operator: notStartWith
              left:
                value:
                  simple: URL.Data
                iscontext: true
              right:
                value:
                  simple: https://attack.mitre.org
          - - operator: notStartWith
              left:
                value:
                  simple: URL.Data
                iscontext: true
              right:
                value:
                  simple: https://virustotal.com
          - - operator: notStartWith
              left:
                value:
                  simple: URL.Data
                iscontext: true
              right:
                value:
                  simple: https://portal.cybersixgill.com
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: df123ba9-a21a-412a-87f7-9748d813a962
    type: regular
    task:
      id: df123ba9-a21a-412a-87f7-9748d813a962
      version: -1
      name: SHA-1
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set in context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      append: {}
      key:
        simple: File.SHA1
      stringify: {}
      value:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.type
                iscontext: true
              right:
                value:
                  simple: File
              ignorecase: true
          - - operator: isNotEmpty
              left:
                value:
                  simple: playbookQuery.CustomFields.sha1
                iscontext: true
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: de291ec9-4ad5-44bb-8459-483b5601a842
    type: regular
    task:
      id: de291ec9-4ad5-44bb-8459-483b5601a842
      version: -1
      name: SHA-256
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set in context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      append: {}
      key:
        simple: File.SHA256
      stringify: {}
      value:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.type
                iscontext: true
              right:
                value:
                  simple: File
              ignorecase: true
          - - operator: isNotEmpty
              left:
                value:
                  simple: playbookQuery.CustomFields.sha256
                iscontext: true
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: f04b4607-0add-49fa-897b-19216e2e2a29
    type: regular
    task:
      id: f04b4607-0add-49fa-897b-19216e2e2a29
      version: -1
      name: MD5
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set in context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      append: {}
      key:
        simple: File.MD5
      stringify: {}
      value:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.type
                iscontext: true
              right:
                value:
                  simple: File
              ignorecase: true
          - - operator: isNotEmpty
              left:
                value:
                  simple: playbookQuery.CustomFields.md5
                iscontext: true
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: e4808775-584c-45a1-8870-35c8a74240c8
    type: regular
    task:
      id: e4808775-584c-45a1-8870-35c8a74240c8
      version: -1
      name: URL
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set in context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      append: {}
      key:
        simple: URL.Data
      stringify: {}
      value:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.type
                iscontext: true
              right:
                value:
                  simple: URL
              ignorecase: true
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 630
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 835,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
inputs:
- key: ""
  value: {}
  required: false
  description: ""
  playbookInputQuery:
    query: sourceBrands:Sixgill_Darkfeed and sixgillfeedid:[darkfeed_010,darkfeed_002,darkfeed_012]
      and type:[URL,file]
    queryEntity: indicators
    results:
    daterange:
      fromdate: 0001-01-01T00:00:00Z
      todate: 0001-01-01T00:00:00Z
      period:
        by: ""
        byto: ""
        byfrom: ""
        tovalue:
        fromvalue:
        field: ""
      fromdatelicenseval: 0001-01-01T00:00:00Z
    runFromLastJobTime: true
outputs: []
quiet: true
description: Set this playbook as an automated job in order to automatically download
  malware from new Darkfeed IOCs and run them through the "Darkfeed IOC detonation
  and proactive blocking" playbook
fromversion: 5.5.0
tests:
- No tests (auto formatted)
