category: Cloud Services
description: Cloud integrations are installed from the **Data Sources** page. To configure a cloud integration, go to Settings > Data Sources and click "Add Data Source", select AWS, then in Advanced Settings > Security Capabilities, enable "Automation".
display: Amazon Web Services
name: AWS
commonfields:
  id: AWS
  version: -1
configuration:
- display: Main Role
  name: role_name
  type: 0
  section: Connect
  required: false
  additionalinfo: Main role for authentication, for example 'PowerUserAccess'.
- display: Default AWS Account ID
  name: test_account_id
  type: 0
  section: Connect
  additionalinfo: AWS Account ID used for running integration test
- display: Role Session Name
  name: role_session_name
  type: 0
  defaultvalue: cortex-session
  section: Connect
  advanced: true
  additionalinfo: Role session name to be used for authentication
- display: Role Session Duration
  name: session_duration
  type: 0
  section: Connect
  advanced: true
  required: false
  additionalinfo: Max role session duration
- display: Default AWS Access Key ID
  name: access_key_id
  additionalinfo: "AWS access key ID used for authentication when role-based authentication is not available. Must be used together with 'Default AWS Secret Access Key'. If provided, these credentials provide backup authentication when role assumption fails."
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Default AWS Secret Access Key
  name: secret_access_key
  additionalinfo: "AWS Secret Access Key used for authentication when role-based authentication is not available. Must be used together with 'Default AWS Access Key ID'. If provided, these credentials will be used as a fallback when role assumption fails."
  type: 9
  section: Connect
  advanced: true
  required: false
- display: Default AWS region.
  name: region
  type: 0
  section: Connect
  additionalinfo: "The AWS region to use for API requests when a region is not explicitly specified in a command. This serves as the default region for operations across all AWS service-specific commands."
- display: Timeout
  name: timeout
  type: 0
  section: Connect
  advanced: true
  required: false
  additionalinfo: "The time in seconds until a timeout exception is reached. You can specify just the read timeout (for example 60) or the read and connect timeouts separated by a comma (for example 60,10). Default is 60,10."
  defaultvalue: 60,10
- display: Retries
  additionalinfo: "The maximum number of retry attempts when connection or throttling errors are encountered. Set to 0 to disable retries. The default value is 5 and the limit is 10. Note: Increasing the number of retries will increase the execution time."
  name: retries
  type: 0
  section: Connect
  advanced: true
  required: false
  defaultvalue: 5
- display: PrivateLink service URL.
  name: endpoint_url
  type: 0
  section: Connect
  advanced: true
  required: false
- display: STS PrivateLink URL.
  name: sts_endpoint_url
  type: 0
  section: Connect
  advanced: true
  required: false
- display: AWS STS Regional Endpoints
  name: sts_regional_endpoint
  type: 15
  section: Connect
  advanced: true
  required: false
  additionalinfo: Sets the AWS_STS_REGIONAL_ENDPOINTS environment variable to specify the AWS STS endpoint resolution logic. By default, this option is set to “legacy” in AWS. Leave empty if the environment variable is already set using server configuration.
  options:
  - legacy
  - regional
- display: Role name for cross-organization account access
  name: access_role_name
  type: 0
  section: Connect
  advanced: true
  required: false
  additionalinfo: The role name used to access accounts in the organization. This role name must exist in the accounts provided in "AWS Organization accounts" and be assumable with the credentials provided.
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
script:
  commands:
  - name: aws-s3-public-access-block-update
    description: "Creates or modifies the PublicAccessBlock configuration for an Amazon S3 bucket."
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The name of the Amazon S3 bucket.
      name: bucket
      required: true
    - description: Weather Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket.
      name: block_public_acls
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - description: Weather Amazon S3 should ignore public ACLs for this bucket and objects in this bucket.
      name: ignore_public_acls
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - description: Weather Amazon S3 should block public bucket policies for this bucket.
      name: block_public_policy
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - description: Weather Amazon S3 should restrict public bucket policies for this bucket.
      name: restrict_public_buckets
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'

    
  - name: aws-s3-bucket-acl-put
    description: Sets the access control list (ACL) permissions for an existing Amazon S3 bucket. This command allows you to define who can access the bucket and what actions they can perform, using predefined ACLs. Since 2023, all new S3 buckets *block* ACLs by default for better security.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: acl
      description: 'The canned ACL to apply to the bucket.'
      required: true
      auto: PREDEFINED
      predefined:
      - private
      - public-read
      - public-read-write
      - authenticated-read
    - name: bucket
      description: 'The bucket to which to apply the ACL.'
      required: true

  - name: aws-s3-bucket-acl-set-to-private-quick-action
    description: Sets the Access Control List (ACL) for the S3 bucket to private.
    prettyname: Set Bucket ACL to Private
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: bucket
        prettyname: Bucket Name
        description: 'The bucket to which to apply the ACL.'
        required: true
        prettypredefined:
          Bucket Name: ${asset.xdm.asset.name}
      - name: acl
        description: 'The canned ACL to apply to the bucket.'
        defaultValue: 'private'
        hidden: true

  - name: aws-s3-bucket-logging-put
    description: Configures logging settings for an AWS S3 bucket, enabling monitoring of bucket access through detailed logs delivered to a designated target bucket.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: 'The name of the bucket for which to set the logging parameters.'
      name: bucket
      required: true
    - description: 'The name of the bucket where server access logs should be delivered. If this is NOT provided, logging will be disabled.'
      name: target_bucket
      required: false
    - description: 'The prefix to be used for log object keys (e.g., "logs/"). Objects will be stored as: targetBucket/targetPrefix/sourceBucket/YYYY-MM-DD-HH-MM-SS-UniqueString.'
      name: target_prefix
      required: false

  - name: aws-s3-bucket-enable-bucket-access-logging-quick-action
    description: Enables server access logging for the S3 bucket, delivering detailed logs to a target bucket and prefix.
    prettyname: Enable S3 Access Logging
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: bucket
        prettyname: Bucket Name
        description: The name of the bucket for which to set the logging parameters.
        required: true
        prettypredefined:
          Bucket Name: ${asset.xdm.asset.name}
      - name: target_bucket
        description: 'The name of the bucket where server access logs should be delivered. If this is NOT provided, logging will be disabled.'
        defaultValue: ${asset.xdm.asset.name}
        hidden: true
      - name: target_prefix
        description: 'The prefix to be used for log object keys (e.g., "logs/"). Objects will be stored as: targetBucket/targetPrefix/sourceBucket/YYYY-MM-DD-HH-MM-SS-UniqueString.'
        defaultValue: "AWSLogs/"
        hidden: true

  - name: aws-s3-bucket-versioning-put
    description: Sets the versioning state of an existing bucket.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The name of the bucket for which to set the logging parameters.
      name: bucket
      required: true
    - description: Weather MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.
      name: mfa_delete
      required: false
    - auto: PREDEFINED
      description: The versioning state of the bucket.
      name: status
      predefined:
      - 'Enabled'
      - 'Suspended'
      required: true

  - name: aws-s3-bucket-versioning-enable-quick-action
    description: Enables versioning on the S3 bucket to retain multiple versions of objects.
    prettyname: Enable S3 Versioning
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: bucket
        prettyname: Bucket Name
        description: The name of the bucket for which to set the logging parameters.
        required: true
        prettypredefined:
          Bucket Name: ${asset.xdm.asset.name}
      - name: status
        description: The versioning state of the bucket.
        defaultValue: 'Enabled'
        hidden: true

  - name: aws-s3-bucket-policy-put
    description: Applies an Amazon S3 bucket policy to an Outposts bucket.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: bucket
      description: 'The name of the bucket to which the policy will be applied.'
      required: true
    - name: policy
      description: 'The bucket policy to apply as a JSON string.'
      required: true

  - name: aws-s3-bucket-website-delete
    description: Removes the website configuration for a bucket.
    arguments:
      - name: account_id
        description: The AWS account ID.
        required: true
      - name: region
        description: The AWS region.
        required: true
        auto: PREDEFINED
        predefined:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-2
          - ap-southeast-3
          - ap-southeast-5
          - ap-southeast-4
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ap-southeast-7
          - ap-northeast-1
          - ca-central-1
          - ca-west-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-south-1
          - eu-west-3
          - eu-south-2
          - eu-north-1
          - eu-central-2
          - il-central-1
          - mx-central-1
          - me-south-1
          - me-central-1
          - sa-east-1
      - name: bucket
        description: The name of the S3 bucket from which the website configuration will be removed.
        required: true

  - name: aws-s3-bucket-website-disable-hosting-quick-action
    description: Removes the static website hosting configuration from an S3 bucket.
    prettyname: Disable S3 Website Hosting
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: bucket
        prettyname: Bucket Name
        description: The name of the S3 bucket from which the website configuration will be removed.
        required: true
        prettypredefined:
          Bucket Name: ${asset.xdm.asset.name}

  - name: aws-s3-bucket-ownership-controls-put
    description: Creates or modifies OwnershipControls for an Amazon S3 bucket.
    arguments:
      - name: account_id
        description: The AWS account ID.
        required: true
      - name: region
        description: The AWS region.
        required: true
        auto: PREDEFINED
        predefined:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-2
          - ap-southeast-3
          - ap-southeast-5
          - ap-southeast-4
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ap-southeast-7
          - ap-northeast-1
          - ca-central-1
          - ca-west-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-south-1
          - eu-west-3
          - eu-south-2
          - eu-north-1
          - eu-central-2
          - il-central-1
          - mx-central-1
          - me-south-1
          - me-central-1
          - sa-east-1
      - name: bucket
        description: The name of the Amazon S3 bucket for which to configure Ownership Controls.
        required: true
      - name: ownership_controls_rule
        description: Ownership for a bucket's ownership controls.
        required: true
        auto: PREDEFINED
        predefined:
          - BucketOwnerPreferred
          - ObjectWriter
          - BucketOwnerEnforced

  - name: aws-iam-account-password-policy-get
    description: Gets the AWS account password policy.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: false
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    outputs:
    - contextPath: AWS.IAM.PasswordPolicy.MinimumPasswordLength
      description: Minimum length to require for IAM user passwords.
      type: number
    - contextPath: AWS.IAM.PasswordPolicy.RequireSymbols
      description: Whether IAM user passwords must contain at least one of the symbols.
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.RequireNumbers
      description: Whether IAM user passwords must contain at least one numeric character (0 to 9).
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.RequireUppercaseCharacters
      description: Whether IAM user passwords must contain at least one uppercase character (A to Z).
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.RequireLowercaseCharacters
      description: Whether IAM user passwords must contain at least one lowercase character (a to z).
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.AllowUsersToChangePassword
      description: Whether IAM users are allowed to change their own password.
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.ExpirePasswords
      description: Whether passwords in the account expire.
      type: boolean
    - contextPath: AWS.IAM.PasswordPolicy.MaxPasswordAge
      description: The number of days that an IAM user password is valid.
      type: number
    - contextPath: AWS.IAM.PasswordPolicy.PasswordReusePrevention
      description: The number of previous passwords that IAM users are prevented from reusing.
      type: number
    - contextPath: AWS.IAM.PasswordPolicy.HardExpiry
      description: Whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console after their password has expired.
      type: boolean

  - name: aws-iam-account-password-policy-update
    description: Create or Update AWS account password policy.
    execution: true
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The minimum number of characters allowed in an IAM user password.
      name: minimum_password_length
    - auto: PREDEFINED
      description: Whether IAM user passwords must contain at least one of the non-alphanumeric characters.
      name: require_symbols
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Whether IAM user passwords must contain at least one numeric character (0 to 9).
      name: require_numbers
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Weather IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z). Can be "True" or "False".
      name: require_uppercase_characters
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Weather IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z). Can be "True" or "False".
      name: require_lowercase_characters
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Allows all IAM users in your account to use the AWS Management Console to change their own passwords. Can be "True" or "False".
      name: allow_users_to_change_password
      predefined:
      - 'true'
      - 'false'
    - description: The number of days that an IAM user password is valid.
      name: max_password_age
    - description: The number of previous passwords that IAM users are prevented from reusing.
      name: password_reuse_prevention
    - auto: PREDEFINED
      description: Prevents IAM users from setting a new password after their password has expired. Can be "True" or "False".
      name: hard_expiry
      predefined:
      - 'true'
      - 'false'

  - name: aws-iam-role-policy-put
    description: Adds or updates an inline policy document that is embedded in the specified IAM role.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: role_name
      description: 'The name of the role to associate the policy with. This parameter accepts a string of upper and lowercase letters and numbers, with no spaces. You can also include any of the following characters: _+=,.@-.'
      required: true
    - name: policy_name
      description: 'The name of the policy document. This parameter accepts a string of upper and lowercase letters and numbers, with no spaces. You can also include any of the following characters: _+=,.@-.'
      required: true
    - name: policy_document
      description: 'The policy document in JSON format. Must be a valid IAM policy document that defines the permissions for the role.'
      required: true

  - name: aws-iam-login-profile-delete
    description: Deletes the password for the specified IAM user, which terminates the user's ability to access AWS services through the AWS Management Console.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: user_name
      description: The name of the user whose password you want to delete.
      required: true

  - name: aws-iam-user-policy-put
    description: Adds or updates an inline policy document that is embedded in the specified IAM user.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: user_name
      description: The name of the user to associate the policy with.
      required: true
    - name: policy_name
      description: The name of the policy document.
      required: true
    - name: policy_document
      description: The policy document in JSON format. Must be a valid IAM policy document that defines the permissions for the user.
      required: true

  - name: aws-iam-role-from-instance-profile-remove
    description: Removes the specified IAM role from the specified EC2 instance profile.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_profile_name
      description: The name of the instance profile to update.
      required: true
    - name: role_name
      description: The name of the role to remove.
      required: false

  - name: aws-iam-access-key-update
    description: Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user's access key as part of a key rotation workflow.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: access_key_id
      description: The access key ID of the secret access key you want to update.
      required: true
    - name: status
      description: The status you want to assign to the secret access key.
      required: true
      auto: PREDEFINED
      predefined:
      - 'Active'
      - 'Inactive'
    - name: user_name
      description: The name of the user whose key you want to update. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.
      required: false

  - name: aws-eks-cluster-config-update
    description: 'Updates an Amazon EKS cluster configuration. Only a single type of update can (logging / resources_vpc_config) is allowed per call.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: cluster_name
      description: 'The name of the Amazon EKS cluster to update.'
      required: true
    - name: logging
      description: "Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren’t exported to CloudWatch Logs. For example \"{'clusterLogging': [{'types': ['api', 'audit', 'authenticator', 'controllerManager', 'scheduler'], 'enabled': true}]}\"."
      required: false
    - name: resources_vpc_config
      description: "A JSON representation of the VPC configuration used by the cluster control plane. For example \"{'subnetIds': ['string'], 'securityGroupIds': ['string'], 'endpointPublicAccess': True, 'endpointPrivateAccess': True, 'publicAccessCidrs': ['string']}\"."
      required: false

  - name: aws-eks-describe-cluster
    description: Describes an Amazon EKS cluster.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: cluster_name
      description: The name of the cluster to describe.
      required: true
    - name: region
      description: 'The AWS Region.'
      auto: PREDEFINED
      required: true
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    outputs:
    - contextPath: AWS.EKS.Cluster.name
      description: The name of your cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.arn
      description: The Amazon Resource Name (ARN) of the cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.createdAt
      description: The creation date of the object.
      type: String
    - contextPath: AWS.EKS.Cluster.version
      description: The Kubernetes server version for the cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.endpoint
      description: The endpoint for your Kubernetes API server.
      type: String
    - contextPath: AWS.EKS.Cluster.roleArn
      description: The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.
      type: String
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.subnetIds
      description: The subnets associated with your cluster.
      type: List
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.securityGroupIds
      description: The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.
      type: List
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.clusterSecurityGroupId
      description: The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
      type: String
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.vpcId
      description: The VPC associated with your cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.endpointPublicAccess
      description: Whether the public API server endpoint is enabled.
      type: Boolean
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.endpointPrivateAccess
      description: This parameter indicates whether the Amazon EKS private API server endpoint is enabled.
      type: Boolean
    - contextPath: AWS.EKS.Cluster.resourcesVpcConfig.publicAccessCidrs
      description: The CIDR blocks that are allowed access to your cluster’s public Kubernetes API server endpoint.
      type: List
    - contextPath: AWS.EKS.Cluster.kubernetesNetworkConfig.serviceIpv4Cidr
      description: The CIDR block that Kubernetes Pod and Service object IP addresses are assigned from.
      type: String
    - contextPath: AWS.EKS.Cluster.kubernetesNetworkConfig.serviceIpv6Cidr
      description: The CIDR block that Kubernetes Pod and Service IP addresses are assigned from if you created a 1.21 or later cluster with version 1.10.1 or later of the Amazon VPC CNI add-on and specified ipv6 for ipFamily when you created the cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.kubernetesNetworkConfig.ipFamily
      description: The IP family used to assign Kubernetes Pod and Service objects IP addresses.
      type: String
    - contextPath: AWS.EKS.Cluster.logging.clusterLogging
      description: The cluster control plane logging configuration for your cluster.
      type: Object
    - contextPath: AWS.EKS.Cluster.identity
      description: The identity provider information for the cluster.
      type: Object
    - contextPath: AWS.EKS.Cluster.status
      description: The current status of the cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.certificateAuthority.data
      description: The Base64-encoded certificate data required to communicate with your cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.clientRequestToken
      description: A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
      type: String
    - contextPath: AWS.EKS.Cluster.platformVersion
      description: The platform version of your Amazon EKS cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.tags
      description: A dictionary containing metadata for categorization and organization.
      type: Object
    - contextPath: AWS.EKS.Cluster.encryptionConfig.resources
      description: Specifies the resources to be encrypted. The only supported value is secrets.
      type: List
    - contextPath: AWS.EKS.Cluster.encryptionConfig.provider
      description: Key Management Service (KMS) key.
      type: Object
    - contextPath: AWS.EKS.Cluster.connectorConfig.activationId
      description: A unique ID associated with the cluster for registration purposes.
      type: String
    - contextPath: AWS.EKS.Cluster.connectorConfig.activationCode
      description: A unique code associated with the cluster for registration purposes.
      type: String
    - contextPath: AWS.EKS.Cluster.connectorConfig.activationExpiry
      description: The expiration time of the connected cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.connectorConfig.provider
      description: The cluster’s cloud service provider.
      type: String
    - contextPath: AWS.EKS.Cluster.connectorConfig.roleArn
      description: The Amazon Resource Name (ARN) of the role to communicate with services from the connected Kubernetes cluster.
      type: String
    - contextPath: AWS.EKS.Cluster.id
      description: The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost.
      type: String
    - contextPath: AWS.EKS.Cluster.health.issues
      description: An object representing the health issues of your local Amazon EKS cluster on an Amazon Web Services Outpost.
      type: List
    - contextPath: AWS.EKS.Cluster.outpostConfig.outpostArns
      description: An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost.
      type: Object
    - contextPath: AWS.EKS.Cluster.outpostConfig.controlPlaneInstanceType
      description: The Amazon EC2 instance type used for the control plane.
      type: String
    - contextPath: AWS.EKS.Cluster.outpostConfig.controlPlanePlacement
      description: An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost.
      type: Object
    - contextPath: AWS.EKS.Cluster.accessConfig.bootstrapClusterCreatorAdminPermissions
      description: Specifies whether or not the cluster creator IAM principal was set as a cluster admin access entry during cluster creation time.
      type: Boolean
    - contextPath: AWS.EKS.Cluster.accessConfig.authenticationMode
      description: The current authentication mode of the cluster.
      type: String

  - name: aws-eks-associate-access-policy
    description: Associates an access policy and its scope to an access entry.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: cluster_name
      description: The name of the cluster for which to create an access entry.
      required: true
    - name: principal_arn
      description: 'The Amazon Resource Name (ARN) of the IAM user or role for the AccessEntry that you’re associating the access policy to.'
      required: true
    - name: policy_arn
      description: 'The ARN of the AccessPolicy that you’re associating.'
      required: true
    - name: type
      description: 'The scope type of an access policy.'
      required: true
      auto: PREDEFINED
      predefined:
      - cluster
      - namespace
    - name: namespaces
      description: 'A comma-separated list of Kubernetes namespaces that an access policy is scoped to. A value is required if you specified namespace for type.'
      required: false
    - auto: PREDEFINED
      description: The AWS Region.
      name: region
      required: true
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    outputs:
    - contextPath: AWS.EKS.AssociatedAccessPolicy.clusterName
      description: The name of your cluster.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.principalArn
      description: The ARN of the IAM principal for the AccessEntry.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.policyArn
      description: The ARN of the AccessPolicy.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.accessScope.type
      description: The scope type of an access policy.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.accessScope.namespaces
      description: A Kubernetes namespace that an access policy is scoped to.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.associatedAt
      description: The date and time the AccessPolicy was associated with an AccessEntry.
      type: String
    - contextPath: AWS.EKS.AssociatedAccessPolicy.modifiedAt
      description: The date and time for the last modification to the object.
      type: String

  - name: aws-rds-db-cluster-modify
    description: "Modifies settings for an Amazon RDS DB cluster. Allows you to update cluster settings such as port, master credentials, VPC security groups, deletion protection, and other configuration options."
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: db_cluster_identifier
      description: 'The DB cluster identifier for the modified cluster. This parameter is not case sensitive and is valid for Aurora DB and Multi-AZ DB cluster types. It must match the identifier of an existing DB cluster.'
      required: true
    - name: deletion_protection
      description: 'Weather the DB cluster has deletion protection enabled. The database can’t be deleted when deletion protection is enabled. By default, deletion protection isn’t enabled.'
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: enable_iam_database_authentication
      description: 'Weather to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn’t enabled.'
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'

  - name: aws-rds-db-cluster-enable-iam-auth-quick-action
    description: This action enables 'iam database authentication' for the RDS cluster.
    prettyname: Enable IAM Authentication on RDS Cluster
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_cluster_identifier
        prettyname: RDS Cluster ID
        description: 'The DB cluster identifier for the modified cluster. This parameter is not case sensitive and is valid for Aurora DB and Multi-AZ DB cluster types. It must match the identifier of an existing DB cluster.'
        required: true
        prettypredefined:
          RDS Cluster ID: ${asset.xdm.asset.name}
      - name: enable_iam_database_authentication
        description: 'Whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn’t enabled.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-cluster-snapshot-attribute-modify
    description: Modifies the attributes associated with a DB cluster snapshot.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: db_cluster_snapshot_identifier
      description: 'The identifier for the DB cluster snapshot to modify the attributes for.'
      required: true
    - name: attribute_name
      description: 'The name of the DB cluster snapshot attribute to modify.'
      required: true
    - name: values_to_remove
      description: 'A CSV list of DB cluster snapshot attributes to remove from the attribute specified by AttributeName. Default is all.'
      required: false
    - name: values_to_add
      description: 'A CSV list of DB cluster snapshot attributes to add to the attribute specified by AttributeName.'
      required: false

  - name: aws-rds-db-cluster-snapshot-set-to-private-quick-action
    description: Revokes public access to the RDS DB cluster snapshot, making it private.
    prettyname: Set RDS Cluster Snapshot to Private
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_cluster_snapshot_identifier
        prettyname: RDS Cluster Snapshot ID
        description: 'The identifier for the DB cluster snapshot to modify the attributes for.'
        required: true
        prettypredefined:
          RDS Cluster Snapshot ID: ${asset.xdm.asset.name}
      - name: attribute_name
        description: 'The name of the DB cluster snapshot attribute to modify.'
        defaultValue: 'restore'
        hidden: true
      - name: values_to_remove
        description: 'A CSV list of DB cluster snapshot attributes to remove from the attribute specified by AttributeName. The default value is all.'
        defaultValue: 'all'
        hidden: true

  - name: aws-rds-db-cluster-enable-deletion-protection-quick-action
    description: Enables deletion protection for the RDS DB cluster to prevent accidental deletion.
    prettyname: Enable RDS Cluster Deletion Protection
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_cluster_identifier
        prettyname: RDS Cluster ID
        description: 'The DB cluster identifier for the modified cluster. This parameter is not case sensitive and is valid for Aurora DB and Multi-AZ DB cluster types. It must match the identifier of an existing DB cluster.'
        required: true
        prettypredefined:
          RDS Cluster ID: ${asset.xdm.asset.name}
      - name: deletion_protection
        description: 'Whether the DB cluster has deletion protection enabled. The database can’t be deleted when deletion protection is enabled. By default, deletion protection isn’t enabled.'
        defaultValue: 'true'
        hidden: true


  - name: aws-rds-db-instance-modify
    description: "Modifies an Amazon RDS DB instance. Allows changing various settings of an existing DB instance, such as instance class, storage capacity, security groups, and other configuration parameters."
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: db_instance_identifier
      description: 'The identifier of DB instance to modify. This value is stored as a lowercase string.'
      required: true
    - name: publicly_accessible
      description: 'Weather the DB instance is publicly accessible.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: apply_immediately
      description: 'Weather the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance , or the next failure reboot.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: copy_tags_to_snapshot
      description: 'Weather to copy all tags from the DB instance to snapshots of the DB instance. By default, tags aren’t copied.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: backup_retention_period
      description: 'The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.'
      required: false

    - name: enable_iam_database_authentication
      description: 'Weather to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn’t enabled.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: deletion_protection
      description: 'Weather the DB instance has deletion protection enabled. The database can’t be deleted when deletion protection is enabled. By default, deletion protection isn’t enabled. For more information, see Deleting a DB Instance.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: auto_minor_version_upgrade
      description: 'Weather minor version upgrades are applied automatically to the DB instance during the maintenance window. An outage occurs when all the following conditions are met: The automatic upgrade is enabled for the maintenance window. A newer minor version is available. RDS has enabled automatic patching for the engine version. If any of the preceding conditions isn’t met, Amazon RDS applies the change as soon as possible and doesn’t cause an outage. For an RDS Custom DB instance, don’t enable this setting. Otherwise, the operation returns an error.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: multi_az
      description: 'Weather the DB instance is a Multi-AZ deployment. Changing this parameter doesn’t result in an outage. The change is applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request. This setting doesn’t apply to RDS Custom DB instances.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'

  - name: aws-rds-db-instance-modify-publicly-accessible-quick-action
    description: This action will disable public access for AWS RDS database instance by modifying the instance settings.
    prettyname: Disable Public Access on RDS
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: publicly_accessible
        description: 'Whether the DB instance is publicly accessible.'
        defaultValue: 'false'
        hidden: true
      - name: apply_immediately
        description: 'Whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance, or the next failure reboot.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-modify-copy-tags-on-rds-snapshot-quick-action
    description: This action enables 'copy tags to snapshots' for the RDS instance.
    prettyname: Enable Copy Tags on RDS Snapshot
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: copy_tags_to_snapshot
        description: 'Whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags aren’t copied.'
        defaultValue: 'true'
        hidden: true
      - name: apply_immediately
        description: 'Whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance, or the next failure reboot.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-modify-enable-automatic-backup-quick-action
    description: Enables the automatic backup settings for the RDS DB instance with a default retention period of 30 days.
    prettyname: Enable Automatic Backup for RDS DB
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: backup_retention_period
        description: 'The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.'
        defaultValue: '30'
        hidden: true
      - name: apply_immediately
        description: 'Whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance, or the next failure reboot.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-enable-iam-auth-quick-action
    description: Enables 'iam database authentication' for the RDS DB instance.
    prettyname: Enable IAM Authentication on RDS
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: enable_iam_database_authentication
        description: 'Whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn’t enabled.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-enable-deletion-protection-quick-action
    description: Enables 'deletion protection' for the RDS DB instance.
    prettyname: Enable Deletion Protection on RDS
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: deletion_protection
        description: 'Whether the DB instance has deletion protection enabled. The database can’t be deleted when deletion protection is enabled. By default, deletion protection isn’t enabled. For more information, see [Deleting a DB Instance.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-enable-auto-upgrade-quick-action
    description: Enables automatic minor version upgrades for the RDS DB instance.
    prettyname: Enable RDS Auto Upgrade
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: auto_minor_version_upgrade
        description: 'Whether minor version upgrades are applied automatically to the DB instance during the maintenance window. An outage occurs only if all of the following conditions are met: the automatic upgrade is enabled for the maintenance window, a newer minor version is available, and RDS has enabled automatic patching for the engine version. If any of these conditions are not met, Amazon RDS applies the change as soon as possible without causing an outage. For an RDS Custom DB instance, do not enable this setting; otherwise, the operation returns an error.'
        defaultValue: 'true'
        hidden: true
      - name: apply_immediately
        description: 'Whether the modifications in this request and any pending modifications are applied asynchronously as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance or on the next failure reboot.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-instance-enable-multi-az-quick-action
    description: Enables Multi-AZ deployment for the RDS database instance to enhance availability and durability.
    prettyname: Enable Multi-AZ for RDS
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_instance_identifier
        prettyname: RDS Instance ID
        description: 'The identifier of DB instance to modify.'
        required: true
        prettypredefined:
          RDS Instance ID: ${asset.xdm.asset.name}
      - name: multi_az
        description: 'Whether the DB instance is a Multi-AZ deployment. Changing this parameter does not cause an outage. The change is applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request. This setting does not apply to RDS Custom DB instances.'
        defaultValue: 'true'
        hidden: true
      - name: apply_immediately
        description: 'Whether the modifications in this request and any pending modifications are applied asynchronously as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled. If disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance or on the next failure reboot.'
        defaultValue: 'true'
        hidden: true

  - name: aws-rds-db-snapshot-attribute-modify
    description: 'Adds or removes permission for the specified AWS account ID to restore the specified DB snapshot.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: db_snapshot_identifier
      description: 'The identifier for the DB snapshot to modify the attributes for.'
      required: true
    - name: attribute_name
      description: 'The name of the DB snapshot attribute to modify.'
      required: true
    - name: values_to_add
      description: 'A list of DB snapshot attributes to add to the attribute specified by AttributeName.'
      required: false
      isArray: true
    - name: values_to_remove
      description: 'A list of DB snapshot attributes to remove from the attribute specified by AttributeName.'
      required: false
      isArray: true

  - name: aws-rds-event-subscription-modify
    description: Modifies an existing RDS event notification subscription.
    arguments:
      - name: account_id
        description: The AWS account ID.
        required: true
      - name: region
        description: The AWS region.
        required: true
        auto: PREDEFINED
        predefined:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-2
          - ap-southeast-3
          - ap-southeast-5
          - ap-southeast-4
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ap-southeast-7
          - ap-northeast-1
          - ca-central-1
          - ca-west-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-south-1
          - eu-west-3
          - eu-south-2
          - eu-north-1
          - eu-central-2
          - il-central-1
          - mx-central-1
          - me-south-1
          - me-central-1
          - sa-east-1
      - name: subscription_name
        description: The name of the RDS event notification subscription.
        required: true
      - name: enabled
        description: Specifies whether to activate the subscription.
      - name: event_categories
        description: A list of event categories for a source type (SourceType) that you want to subscribe to.
        isArray: true
      - name: sns_topic_arn
        description: The Amazon Resource Name (ARN) of the SNS topic created for event notification.
      - name: source_type
        description: The type of source that is generating the events.
    outputs:
      - contextPath: AWS.RDS.EventSubscription.CustomerAwsId
        description: The AWS customer account associated with the RDS event notification subscription.
        type: string
      - contextPath: AWS.RDS.EventSubscription.CustSubscriptionId
        description: The RDS event notification subscription Id.
        type: string
      - contextPath: AWS.RDS.EventSubscription.Enabled
        description: Specifies whether the subscription is enabled. True indicates the subscription is enabled.
        type: boolean
      - contextPath: AWS.RDS.EventSubscription.EventCategoriesList
        description: A list of event categories for the RDS event notification subscription.
        type: array
      - contextPath: AWS.RDS.EventSubscription.EventSubscriptionArn
        description: The Amazon Resource Name (ARN) for the event subscription.
        type: string
      - contextPath: AWS.RDS.EventSubscription.SnsTopicArn
        description: The topic ARN of the RDS event notification subscription.
        type: string
      - contextPath: AWS.RDS.EventSubscription.SourceIdsList
        description: A list of source IDs for the RDS event notification subscription.
        type: array
      - contextPath: AWS.RDS.EventSubscription.SourceType
        description: The source type for the RDS event notification subscription.
        type: string
      - contextPath: AWS.RDS.EventSubscription.Status
        description: The status of the RDS event notification subscription.
        type: string
      - contextPath: AWS.RDS.EventSubscription.SubscriptionCreationTime
        description: The time the RDS event notification subscription was created.
        type: string

  - name: aws-rds-db-snapshot-attribute-set-snapshot-to-private-quick-action
    description: Revokes public access to the RDS DB snapshot, making it private.
    prettyname: Set RDS Snapshot to Private
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: db_snapshot_identifier
        prettyname: RDS Snapshot ID
        description: 'The identifier for the DB snapshot to modify the attributes for.'
        required: true
        prettypredefined:
          RDS Snapshot ID: ${asset.xdm.asset.name}
      - name: attribute_name
        description: 'The name of the DB snapshot attribute to modify.'
        defaultValue: 'restore'
        hidden: true
      - name: values_to_remove
        description: 'A list of DB snapshot attributes to remove from the attribute specified by AttributeName.'
        defaultValue: 'all'
        hidden: true

  - name: aws-ec2-security-group-ingress-revoke
    description: 'Revokes one or more ingress rules in a security group.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: group_id
      description: 'The ID of the security group.'
      required: true
    - name: protocol
      description: 'The IP protocol: tcp, udp, icmp, or icmpv6. Use -1 to specify all protocols. When used with port and cidr arguments for simple rule revocation.'
      required: false
    - name: port
      description: 'For TCP or UDP: The range of ports to revoke (e.g., "80" or "80-443"). For ICMP: A single integer or range (type-code) representing the ICMP type and code. Use with protocol and cidr for simple rule revocation.'
      required: false
    - name: cidr
      description: 'The IPv4 address range in CIDR format (e.g., "0.0.0.0/0"). Use with protocol and port for simple rule revocation.'
      required: false
    - name: ip_permissions
      description: 'The sets of IP permissions to revoke, in JSON format. Use this for complex rule configurations or when revoking multiple rules. Cannot be used together with protocol/port/cidr arguments.'
      required: false

  - name: aws-ec2-security-group-ingress-authorize
    description: 'Adds the specified inbound (ingress) rules to a security group.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: group_id
      description: 'The ID of the security group.'
      required: true
    - name: protocol
      description: 'The IP protocol: tcp, udp, icmp, or icmpv6. Use -1 to specify all protocols. When used with port and cidr arguments for simple rule authorization.'
      required: false
    - name: port
      description: 'For TCP or UDP: The range of ports to authorize (e.g., "80" or "80-443"). For ICMP: A single integer or range (type-code) representing the ICMP type and code. Use with protocol and cidr for simple rule authorization.'
      required: false
    - name: cidr
      description: 'The IPv4 address range in CIDR format (e.g., "0.0.0.0/0"). Use with protocol and port for simple rule authorization.'
      required: false
    - name: ip_permissions
      description: 'The sets of IP permissions to authorize, in JSON format. Use this for complex rule configurations or when authorizing multiple rules. Cannot be used together with protocol/port/cidr arguments.'
      required: false

  - name: aws-ec2-security-group-egress-revoke
    description: 'Removes the specified outbound (egress) rules from the specified security group.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: group_id
      description: 'The ID of the security group.'
      required: true
    - name: protocol
      description: 'The IP protocol: tcp, udp, icmp, or icmpv6. Use -1 to specify all protocols. When used with port and cidr arguments for simple rule revocation.'
      required: false
    - name: port
      description: 'For TCP or UDP: The range of ports to revoke (e.g., "80" or "80-443"). For ICMP: A single integer or range (type-code) representing the ICMP type and code. Use with protocol and cidr for simple rule revocation.'
      required: false
    - name: cidr
      description: 'The IPv4 address range in CIDR format (e.g., "0.0.0.0/0"). Use with protocol and port for simple rule revocation.'
      required: false
    - name: ip_permissions
      description: 'The sets of IP permissions to revoke, in JSON format. Use this for complex rule configurations or when revoking multiple rules. Cannot be used together with protocol/port/cidr arguments.'
      required: false

  - name: aws-ec2-snapshot-attribute-modify
    description: 'Adds or removes permission settings for the specified snapshot. Note: snapshots encrypted with the AWS-managed default key (alias/aws/ebs) cannot be shared. Use unencrypted snapshots or those encrypted with a customer-managed KMS key to allow permission modifications.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1

    - name: snapshot_id
      description: 'The ID of the snapshot.'
      required: true
    - name: attribute
      description: 'The snapshot attribute to modify.'
      required: true
      auto: PREDEFINED
      defaultValue: 'createVolumePermission'
    - name: operation_type
      description: 'The operation to perform.'
      required: true
      auto: PREDEFINED
      predefined:
      - 'add'
      - 'remove'
    - name: user_ids
      isArray: true
      description: 'A comma-separated list of AWS user account IDs to add to or remove from the list of users permitted to create EBS volumes from the snapshot.'
      required: false
    - name: group
      description: 'The groups to add to or remove from the list of entities that have permission to create volumes from the snapshot.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'all'

  - name: aws-ec2-instance-attribute-modify
    description: Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The ID of the instance.
      name: instance_id
      required: true
    - description: Whether an instance is enabled for stop protection.
      name: disable_api_stop
      predefined:
      - 'true'
      - 'false'
    - description: "A comma-separated list of security groups to replace the instance's current security groups. You must specify the ID of at least one security group, even if it’s just the default security group for the VPC."
      name: groups
    - name: attribute
      description: 'The name of the attribute to modify. Possible values: sourceDestCheck, groupSet, ebsOptimized, sriovNetSupport, enaSupport, enclaveOptions, disableApiStop.'
      predefined:
      - 'instanceType'
      - 'kernel'
      - 'ramdisk'
      - 'userData'
      - 'disableApiTermination'
      - 'instanceInitiatedShutdownBehavior'
      - 'rootDeviceName'
      - 'blockDeviceMapping'
      - 'productCodes'
      - 'sourceDestCheck'
      - 'groupSet'
      - 'ebsOptimized'
      - 'striovNetSupport'
      - 'enaSupport'
      - 'enclaveOptions'
      - 'disableApiStop'
    - name: value
      description: A new value for the attribute. Use only with the kernel, ramdisk, userData, disableApiTermination, or instanceInitiatedShutdownBehavior attribute.

  - name: aws-ec2-instance-attribute-modify-quick-action
    description: Remove the associated security group from the EC2 instance profile.
    prettyname: Detach Security Group from EC2
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: instance_id
        description: The ID of the instance.
        prettyname: EC2 Instance ID
        prettypredefined:
          EC2 Instance ID: ${asset.xdm.asset.strong_id}
        required: true

  - name: aws-ec2-image-attribute-modify
    description: 'Modifies the specified attribute of the specified AMI.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: image_id
      description: 'The ID of the AMI.'
      required: true
    - name: attribute
      description: 'The AMI attribute to modify.'
      required: true
      auto: PREDEFINED
      predefined:
      - 'description'
      - 'launchPermission'
    - name: operation_type
      description: 'The operation to perform on the attribute.'
      required: false
      auto: PREDEFINED
      predefined:
      - 'add'
      - 'remove'
    - name: user_ids
      description: 'The AWS account IDs to add to or remove from the list of users that have launch permissions for the AMI.'
      required: false
      isArray: true
    - name: user_groups
      description: 'The user groups to add to or remove from the list of user groups that have launch permissions for the AMI.'
      required: false
      isArray: true
    - name: description
      description: 'A new description for the AMI.'
      required: false

  - name: aws-ec2-image-attribute-set-ami-to-private-quick-action
    description: Revokes public launch permissions for the EC2 AMI.
    prettyname: Set AMI to Private
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: image_id
        prettyname: AMI ID
        description: 'The ID of the AMI.'
        required: true
        prettypredefined:
          AMI ID: ${asset.xdm.asset.strong_id}
      - name: attribute
        description: 'The AMI attribute to modify.'
        defaultValue: 'launchPermission'
        hidden: true
      - name: operation_type
        description: 'The operation to perform on the attribute.'
        defaultValue: 'remove'
        hidden: true

  - name: aws-ec2-instance-metadata-options-modify
    description: Modify the EC2 instance metadata parameters on a running or stopped instance.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_id
      description: 'The ID of the instance.'
      required: true

    - description: Whether IMDSv2 is required.
      auto: PREDEFINED
      name: http_tokens
      predefined:
      - 'optional'
      - 'required'
    - description: Enables or disables the HTTP metadata endpoint on your instances.
      name: http_endpoint
      auto: PREDEFINED
      predefined:
      - 'disabled'
      - 'enabled'

  - name: aws-ec2-create-snapshot
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - description: The ID of the EBS volume.
      name: volume_id
      required: true
    - description: A description for the snapshot.
      name: description
    - description: The tags to apply to the snapshot during creation.
      name: tags
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    description: Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.
    outputs:
    - contextPath: AWS.EC2.Snapshot.DataEncryptionKeyId
      description: The data encryption key identifier for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshot.Description
      description: The description for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshot.Encrypted
      description: Indicates whether the snapshot is encrypted.
      type: number
    - contextPath: AWS.EC2.Snapshot.KmsKeyId
      description: The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.
      type: string
    - contextPath: AWS.EC2.Snapshot.OwnerId
      description: The AWS account ID of the EBS snapshot owner.
      type: string
    - contextPath: AWS.EC2.Snapshot.Progress
      description: The progress of the snapshot, as a percentage.
      type: string
    - contextPath: AWS.EC2.Snapshot.SnapshotId
      description: The ID of the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshot.StartTime
      description: The time stamp when the snapshot was initiated.
      type: date
    - contextPath: AWS.EC2.Snapshot.State
      description: The snapshot state.
      type: string
    - contextPath: AWS.EC2.Snapshot.StateMessage
      description: this field displays error state details to help you diagnose why the error occurred.
      type: string
    - contextPath: AWS.EC2.Snapshot.VolumeId
      description: The ID of the volume that was used to create the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshot.VolumeSize
      description: The size of the volume, in GiB.
      type: number
    - contextPath: AWS.EC2.Snapshot.OwnerAlias
      description: Value from an Amazon-maintained list of snapshot owners.
      type: string
    - contextPath: AWS.EC2.Snapshot.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Snapshot.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Snapshot.AccountId
      description: The ID of the AWS account with which the EC2 instance is associated. This key is only present when the parameter "AWS organization accounts" is provided.
      type: string

  - name: aws-ec2-modify-snapshot-permission
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - description: The ID of the EBS snapshot.
      name: snapshot_id
      required: true
    - auto: PREDEFINED
      predefined:
      - 'add'
      - 'remove'
      description: The operation type, add or remove.
      name: operation_type
      required: true
    - description: CSV of security group names. This parameter can be used only when UserIds not provided.
      name: group_names
    - description: CSV of AWS account IDs. This parameter can be used only when groupNames not provided.
      name: user_ids
    - auto: PREDEFINED
      description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: dry_run
      predefined:
      - 'True'
      - 'False'
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    description: Adds or removes permission settings for the specified snapshot.

  - name: aws-ec2-set-snapshot-to-private-quick-action
    description: Revokes public access to the EC2 snapshot.
    prettyname: Set Snapshot to Private
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: snapshot_id
        prettyname: EC2 Snapshot ID
        description: The ID of the EBS snapshot.
        required: true
        prettypredefined:
          EC2 Snapshot ID: ${asset.xdm.asset.name}
      - name: operation_type
        description: The operation type, add or remove.
        defaultValue: 'remove'
        hidden: true
      - name: group_names
        description: A CSV list of security group names. This parameter can be used only when UserIds is not provided.
        defaultValue: 'all'
        hidden: true

  - name: aws-ecs-update-cluster-settings
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - description: The name of the cluster.
      name: cluster_name
      required: true
    - description: The value of the containerInsights setting to update.
      name: value
      required: true
      auto: PREDEFINED
      predefined:
      - 'enabled'
      - 'disabled'
      - 'enhanced'
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    description: Updates the containerInsights setting of an ECS cluster.

  - name: aws-ec2-subnet-attribute-modify
    description: Modifies a subnet attribute.
    arguments:
      - description: The AWS account ID.
        name: account_id
        required: true
      - description: The AWS region.
        name: region
        required: true
        auto: PREDEFINED
        predefined:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-2
          - ap-southeast-3
          - ap-southeast-5
          - ap-southeast-4
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ap-southeast-7
          - ap-northeast-1
          - ca-central-1
          - ca-west-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-south-1
          - eu-west-3
          - eu-south-2
          - eu-north-1
          - eu-central-2
          - il-central-1
          - mx-central-1
          - me-south-1
          - me-central-1
          - sa-east-1
      - description: The ID of the subnet.
        name: subnet_id
        required: true
      - description: Set to true to assign an IPv6 address to network interfaces created in the specified subnet.
        name: assign_ipv6_address_on_creation
      - description: The customer-owned IPv4 address pool associated with the subnet.
        name: customer_owned_ipv4_pool
      - description: Set to true to disable local network interfaces at the current position.
        name: disable_lni_at_device_index
      - description: Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.
        name: enable_dns64
      - description: Indicates the device position for local network interfaces in this subnet.
        name: enable_lni_at_device_index
      - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
        name: enable_resource_name_dns_aaaa_record_on_launch
      - description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
        name: enable_resource_name_dns_a_record_on_launch
      - description: Set to true to assign a customer-owned IPv4 address to network interfaces attached to instances created in the specified subnet.
        name: map_customer_owned_ip_on_launch
      - description: Set to true to assign a public IPv4 address to network interfaces attached to instances created in the specified subnet.
        name: map_public_ip_on_launch
      - description: The type of hostname to assign to instances in the subnet at launch.
        name: private_dns_hostname_type_on_launch

  - name: aws-cloudtrail-trail-update
    description: 'Updates trail settings that control what events you are logging, and how to handle log files. Changes to a trail do not require stopping the CloudTrail service. Use this action to designate an existing bucket for log delivery. If the existing bucket has previously been a target for CloudTrail log files, an IAM policy exists for the bucket. UpdateTrail must be called from the Region in which the trail was created; otherwise, an InvalidHomeRegionException is thrown.'
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: name
      description: The name of the trail or trail ARN.
      required: true
    - name: s3_bucket_name
      description: The name of the Amazon S3 bucket designated for publishing log files.
      required: false
    - name: s3_key_prefix
      description: The Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
      required: false
    - name: sns_topic_name
      description: The name of the Amazon SNS topic defined for notification of log file delivery.
      required: false
    - name: include_global_service_events
      description: Weather the trail is publishing events from global services such as IAM to the log files.
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: is_multi_region_trail
      description: Weather the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted.
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: enable_log_file_validation
      description: Weather log file validation is enabled. The default is false.
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: cloud_watch_logs_log_group_arn
      description: Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
      required: false
    - name: cloud_watch_logs_role_arn
      description: The role for the CloudWatch Logs endpoint to assume to write to a user's log group.
      required: false
    - name: kms_key_id
      description: The KMS key ID to use to encrypt the logs delivered by CloudTrail.
      required: false
    outputs:
    - contextPath: AWS.CloudTrail.Trail.TrailARN
      description: The Amazon Resource Name (ARN) of the trail.
      type: string
    - contextPath: AWS.CloudTrail.Trail.Name
      description: The name of the trail.
      type: string
    - contextPath: AWS.CloudTrail.Trail.S3BucketName
      description: The name of the Amazon S3 bucket into which CloudTrail delivers your trail files.
      type: string
    - contextPath: AWS.CloudTrail.Trail.S3KeyPrefix
      description: The Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
      type: string
    - contextPath: AWS.CloudTrail.Trail.SnsTopicName
      description: The name of the Amazon SNS topic defined for notification of log file delivery.
      type: string
    - contextPath: AWS.CloudTrail.Trail.SnsTopicARN
      description: The Amazon Resource Name (ARN) of the Amazon SNS topic defined for notification of log file delivery.
      type: string
    - contextPath: AWS.CloudTrail.Trail.IncludeGlobalServiceEvents
      description: Set to True to include AWS API calls from AWS global services such as IAM.
      type: boolean
    - contextPath: AWS.CloudTrail.Trail.IsMultiRegionTrail
      description: Weather the trail exists only in one region or exists in all regions.
      type: boolean
    - contextPath: AWS.CloudTrail.Trail.HomeRegion
      description: The region in which the trail was created.
      type: string
    - contextPath: AWS.CloudTrail.Trail.LogFileValidationEnabled
      description: Weather log file validation is enabled.
      type: boolean
    - contextPath: AWS.CloudTrail.Trail.CloudWatchLogsLogGroupArn
      description: Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered.
      type: string
    - contextPath: AWS.CloudTrail.Trail.CloudWatchLogsRoleArn
      description: The role for the CloudWatch Logs endpoint to assume to write to a user's log group.
      type: string
    - contextPath: AWS.CloudTrail.Trail.KMSKeyId
      description: The KMS key ID that encrypts the logs delivered by CloudTrail.
      type: string
    - contextPath: AWS.CloudTrail.Trail.HasCustomEventSelectors
      description: Specifies if the trail has custom event selectors.
      type: boolean
    - contextPath: AWS.CloudTrail.Trail.HasInsightSelectors
      description: Weather a trail has insight selectors enabled.
      type: boolean
    - contextPath: AWS.CloudTrail.Trail.IsOrganizationTrail
      description: Whether the trail is an organization trail.
      type: boolean

  - name: aws-cloudtrail-trail-enable-log-validation-quick-action
    description: Enables log file validation for the reported CloudTrail.
    prettyname: Enable CloudTrail Log Validation
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: name
        prettyname: Name
        description: The name of the trail or trail ARN.
        required: true
        prettypredefined:
          Name: ${asset.xdm.asset.name}
      - name: enable_log_file_validation
        description: Weather log file validation is enabled.
        defaultValue: 'true'
        hidden: true
    outputs:
      - contextPath: AWS.CloudTrail.Trail.TrailARN
        description: The Amazon Resource Name (ARN) of the trail.
        type: string
      - contextPath: AWS.CloudTrail.Trail.Name
        description: The name of the trail.
        type: string
      - contextPath: AWS.CloudTrail.Trail.S3BucketName
        description: The name of the Amazon S3 bucket into which CloudTrail delivers your trail files.
        type: string
      - contextPath: AWS.CloudTrail.Trail.S3KeyPrefix
        description: The Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
        type: string
      - contextPath: AWS.CloudTrail.Trail.SnsTopicName
        description: The name of the Amazon SNS topic defined for notification of log file delivery.
        type: string
      - contextPath: AWS.CloudTrail.Trail.SnsTopicARN
        description: The Amazon Resource Name (ARN) of the Amazon SNS topic defined for notification of log file delivery.
        type: string
      - contextPath: AWS.CloudTrail.Trail.IncludeGlobalServiceEvents
        description: Set to True to include AWS API calls from global services, such as IAM.
        type: boolean
      - contextPath: AWS.CloudTrail.Trail.IsMultiRegionTrail
        description: Whether the trail exists in a single region or in all regions.
        type: boolean
      - contextPath: AWS.CloudTrail.Trail.HomeRegion
        description: The region in which the trail was created.
        type: string
      - contextPath: AWS.CloudTrail.Trail.LogFileValidationEnabled
        description: Whether log file validation is enabled.
        type: boolean
      - contextPath: AWS.CloudTrail.Trail.CloudWatchLogsLogGroupArn
        description: The Amazon Resource Name (ARN), a unique identifier representing the log group to which CloudTrail logs are delivered.
        type: string
      - contextPath: AWS.CloudTrail.Trail.CloudWatchLogsRoleArn
        description: The role that the CloudWatch Logs endpoint assumes to write to a user’s log group.
        type: string
      - contextPath: AWS.CloudTrail.Trail.KMSKeyId
        description: The KMS key ID that encrypts the logs delivered by CloudTrail.
        type: string
      - contextPath: AWS.CloudTrail.Trail.HasCustomEventSelectors
        description: Specifies if the trail has custom event selectors.
        type: boolean
      - contextPath: AWS.CloudTrail.Trail.HasInsightSelectors
        description: Whether a trail has insight selectors enabled.
        type: boolean
      - contextPath: AWS.CloudTrail.Trail.IsOrganizationTrail
        description: Whether the trail is an organization trail.
        type: boolean

  - name: aws-cloudtrail-logging-start
    description: Starts recording AWS API calls and log file delivery for a trail. For a trail enabled in all regions, this operation must be called from the region where the trail was created. This operation cannot be called on shadow trails (replicated trails in other regions) of a trail that is enabled in all regions.
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: name
      description: 'The name or the CloudTrail ARN of the trail for which CloudTrail logs Amazon Web Services API calls. e.g. arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail.'
      required: true

  - name: aws-cloudtrail-logging-start-enable-logging-quick-action
    description: Enables logging of a CloudTrail.
    prettyname: Enable CloudTrail Logging
    hidden: true
    quickaction: true
    arguments:
      - name: account_id
        description: The AWS account ID.
        prettyname: Account ID
        required: true
        prettypredefined:
          Account ID: ${asset.xdm.asset.realm}
      - name: region
        description: The AWS region.
        prettyname: Region
        required: true
        prettypredefined:
          Region: ${asset.xdm.asset.cloud.region}
      - name: name
        prettyname: Name
        description: 'The name or the CloudTrail ARN of the trail for which CloudTrail logs Amazon Web Services API calls. e.g. arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail.'
        required: true
        prettypredefined:
          Name: ${asset.xdm.asset.name}

  - name: aws-ec2-instances-describe
    description: "Describes specified instances or all instances."
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region to query instances from. Must be a valid AWS region identifier.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_ids
      description: "A comma-separated list of instance IDs to describe. If empty, returns all accessible instances in the specified region."
      required: false
      isArray: true
    - name: filters
      description: "One or more custom filters to apply, separated by ';' (for example, name=<name>;values=<values>).You can specify up to 50 filters and up to 200 values per filter in a single request."
      required: false
      isArray: true
    - name: next_token
      description: "Token for pagination when retrieving large result sets. Use the InstancesNextToken value from a previous response to continue listing instances."
      required: false
    - name: limit
      description: "Maximum number of instances to return in a single request. You cannot specify this parameter and the instance IDs parameter in the same request."
      required: false
      defaultValue: 50
    outputs:
    - contextPath: AWS.EC2.InstancesNextToken
      description: Token to use for pagination in subsequent requests.
      type: String
    - contextPath: AWS.EC2.Instances.Architecture
      description: The architecture of the image.
      type: String
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.DeviceName
      description: The device name.
      type: String
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs
      description: Parameters used to automatically set up EBS volumes when the instance is launched.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.ClientToken
      description: The idempotency token you provided when you launched the instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.EbsOptimized
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      type: Boolean
    - contextPath: AWS.EC2.Instances.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Hypervisor
      description: The hypervisor type of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Arn
      description: The Amazon Resource Name (ARN) of the instance profile.
      type: String
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Id
      description: The ID of the instance profile.
      type: String
    - contextPath: AWS.EC2.Instances.InstanceLifecycle
      description: Indicates whether this is a Spot Instance or a Scheduled Instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association
      description: The association information for an Elastic IPv4 associated with the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment
      description: The network interface attachment.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Description
      description: The description of the network interface. Applies only if creating a network interface when launching an instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups
      description: The security groups.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Addresses
      description: The IPv6 addresses associated with the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.MacAddress
      description: The MAC address.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId
      description: The ID of the network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.OwnerId
      description: The ID of the AWS account that owns the network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateDnsName
      description: The private DNS name.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress
      description: The IPv4 address of the network interface within the subnet.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses
      description: The private IPv4 addresses associated with the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SourceDestCheck
      description: Indicates whether to validate network traffic to or from this network interface.
      type: Boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Status
      description: The status of the network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SubnetId
      description: The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.VpcId
      description: The ID of the VPC.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.InterfaceType
      description: The type of network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv4Prefixes
      description: The IPv4 prefixes assigned to the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Prefixes
      description: The IPv6 prefixes assigned to the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.ConnectionTrackingConfiguration
      description: A security group connection tracking configuration that enables you to set the timeout for connection tracking on an Elastic network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Operator
      description: The service provider that manages the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.OutpostArn
      description: The Amazon Resource Name (ARN) of the Outpost.
      type: String
    - contextPath: AWS.EC2.Instances.RootDeviceName
      description: The device name of the root device volume.
      type: String
    - contextPath: AWS.EC2.Instances.RootDeviceType
      description: The root device type used by the AMI.
      type: String
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupId
      description: The ID of the security group.
      type: String
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupName
      description: The name of the security group.
      type: String
    - contextPath: AWS.EC2.Instances.SourceDestCheck
      description: Indicates whether source/destination checking is enabled.
      type: Boolean
    - contextPath: AWS.EC2.Instances.SpotInstanceRequestId
      description: The ID of the request for a Spot Instance request.
      type: String
    - contextPath: AWS.EC2.Instances.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: String
    - contextPath: AWS.EC2.Instances.StateReason
      description: The reason for the most recent state transition. May be an empty string.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.Tags.Key
      description: The key of the tag.
      type: String
    - contextPath: AWS.EC2.Instances.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.EC2.Instances.VirtualizationType
      description: The virtualization type of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.CpuOptions
      description: The CPU options for the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.CapacityBlockId
      description: The ID of the Capacity Block.
      type: String
    - contextPath: AWS.EC2.Instances.CapacityReservationId
      description: The ID of the Capacity Reservation.
      type: String
    - contextPath: AWS.EC2.Instances.CapacityReservationSpecification
      description: Information about the Capacity Reservation targeting option.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.HibernationOptions.Configured
      description: Indicates whether the instance is enabled for hibernation.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Licenses.LicenseConfigurationArn
      description: The Amazon Resource Name (ARN) of the license configuration.
      type: String
    - contextPath: AWS.EC2.Instances.MetadataOptions
      description: The metadata options for the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.EnclaveOptions.Enabled
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
      type: Boolean
    - contextPath: AWS.EC2.Instances.BootMode
      description: The boot mode that was specified by the AMI.
      type: String
    - contextPath: AWS.EC2.Instances.PlatformDetails
      description: The platform details value for the instance.
      type: String
    - contextPath: AWS.EC2.Instances.UsageOperation
      description: The usage operation value for the instance.
      type: String
    - contextPath: AWS.EC2.Instances.UsageOperationUpdateTime
      description: The time that the usage operation was last updated.
      type: Date
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.HostnameType
      description: The type of hostname to assign to an instance.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.EnableResourceNameDnsARecord
      description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
      type: Boolean
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.EnableResourceNameDnsAAAARecord
      description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Ipv6Address
      description: The IPv6 address assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.TpmSupport
      description: If the instance is configured for NitroTPM support, the value is v2.0.
      type: String
    - contextPath: AWS.EC2.Instances.MaintenanceOptions.AutoRecovery
      description: Information on the current automatic recovery behavior of your instance.
      type: String
    - contextPath: AWS.EC2.Instances.MaintenanceOptions.RebootMigration
      description: Specifies whether to attempt reboot migration during a user-initiated reboot of an instance that has a scheduled system-reboot event.
      type: String
    - contextPath: AWS.EC2.Instances.CurrentInstanceBootMode
      description: The boot mode that is used to boot the instance at launch or start.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkPerformanceOptions.BandwidthWeighting
      description: Contains settings for the network performance options for your instance.
      type: String
    - contextPath: AWS.EC2.Instances.Operator
      description: The service provider that manages the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.ImageId
      description: The ID of the AMI used to launch the instance.
      type: String
    - contextPath: AWS.EC2.Instances.State.Code
      description: The current state of the instance as a 16-bit unsigned integer.
      type: Number
    - contextPath: AWS.EC2.Instances.State.Name
      description: The current state of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateDnsName
      description: The private DNS hostname name assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PublicDnsName
      description: The public DNS name assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.StateTransitionReason
      description: The reason for the most recent state transition. May be an empty string.
      type: String
    - contextPath: AWS.EC2.Instances.KeyName
      description: The name of the key pair used when the instance was launched.
      type: String
    - contextPath: AWS.EC2.Instances.AmiLaunchIndex
      description: The AMI launch index, which can be used to find this instance in the launch group.
      type: Number
    - contextPath: AWS.EC2.Instances.ProductCodes
      description: The product codes attached to this instance, if applicable.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Instances.LaunchTime
      description: The time the instance was launched.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZoneId
      description: The ID of the Availability Zone of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.Affinity
      description: The affinity setting for the instance on the Dedicated Host.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.PartitionNumber
      description: The number of the partition that the instance is in.
      type: Number
    - contextPath: AWS.EC2.Instances.Placement.HostId
      description: The ID of the Dedicated Host on which the instance resides.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.Tenancy
      description: The tenancy of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.HostResourceGroupArn
      description: The ARN of the host resource group in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.GroupId
      description: The ID of the placement group that the instance is in.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZone
      description: The availability zone of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.KernelId
      description: The kernel associated with this instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.RamdiskId
      description: The RAM disk associated with this instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.Platform
      description: The platform the instance uses. The value is Windows for Windows instances; otherwise, blank.
      type: String
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled.
      type: String
    - contextPath: AWS.EC2.Instances.SubnetId
      description: The ID of the subnet in which the instance is running.
      type: String
    - contextPath: AWS.EC2.Instances.VpcId
      description: The ID of the VPC in which the instance is running.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateIpAddress
      description: The private IPv4 address assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PublicIpAddress
      description: The public IPv4 address assigned to the instance.
      type: String

  - name: aws-ec2-instances-start
    description: "Starts an Amazon EBS-backed instance that was previously stopped."
    execution: true
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region where target instances are located.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_ids
      description: "A comma-separated list of instance IDs to start, in i-xxxxxxxxx format. Must be in 'stopped' state and user must have permissions."
      required: true
      isArray: true

  - name: aws-ec2-instances-stop
    description: "Stops an Amazon EBS-backed instance."
    execution: true
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region where target instances are located. Must be a valid AWS region identifier.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_ids
      description: "A comma-separated list of instance IDs to stop. Must be in 'running' or 'pending' state. User must have stop permissions for each instance."
      required: true
      isArray: true
    - name: force
      description: "Force stop instances without graceful shutdown. Default: false. Use with caution, as it may cause data loss."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
      defaultValue: 'false'
    - name: hibernate
      description: "Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
      defaultValue: 'false'
  - name: aws-ec2-instances-terminate
    description: "Shuts down specified instances. This operation is idempotent; you can terminate an instance multiple times without causing an error."
    execution: true
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region where target instances are located. Must be a valid AWS region identifier.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: instance_ids
      description: "A comma-separated list of instance IDs to terminate. If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated."
      required: true
      isArray: true
  - name: aws-ec2-instances-run
    description: Launches a specified number of instances using an AMI you have access to. You can save time by creating a launch template containing your parameters and using the template instead of entering the parameters each time. An instance is ready for you to use when it is in the running state. You can check the state of your instance using aws-ec2-instances-describe.
    execution: true
    arguments:
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region where instances will be created. Must be a valid AWS region identifier.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: count
      description: "The number of instances to launch. Must be greater than 0."
      required: true
      defaultValue: "1"
    - name: image_id
      description: "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template."
      required: false
    - name: instance_type
      description: "The instance type, for example: t2.large, t3.medium, m5.xlarge."
      required: false
    - name: security_group_ids
      description: "A comma-separated list of security group IDs. Use this for VPC instances. If you don’t specify a security group ID, we use the default security group for the VPC."
      required: false
      isArray: true
    - name: security_groups_names
      description: "A comma-separated list of security group names. For a nondefault VPC, you must use security group IDs instead."
      required: false
      isArray: true
    - name: subnet_id
      description: "The ID of the subnet to launch the instance into. If you don't choose a subnet, we will use a default one from your default VPC. If you don't have a default VPC, you must specify a subnet ID yourself in the request."
      required: false
    - name: user_data
      description: "The user data to make available to the instance. This value will be base64 encoded automatically. Do not base64 encode this value prior to performing the operation."
      required: false
    - name: disable_api_termination
      description: "Indicates whether termination protection is enabled for the instance. The default is false, which means that you can terminate the instance using the Amazon EC2 console, command line tools, or API."
      required: false
      auto: PREDEFINED
      defaultValue: 'false'
      predefined:
      - 'true'
      - 'false'
    - name: iam_instance_profile_arn
      description: "The Amazon Resource Name (ARN) of the instance profile. Both iam_instance_profile_arn and iam_instance_profile_name are required if you would like to associate an instance profile."
      required: false
    - name: iam_instance_profile_name
      description: "The name of the instance profile. Both iam_instance_profile_arn and iam_instance_profile_name are required if you would like to associate an instance profile."
      required: false
    - name: key_name
      description: "The name of the key pair. Warning - If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in."
      required: false
    - name: ebs_optimized
      description: "Indicates whether the instance is optimized for Amazon EBS I/O."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: device_name
      description: "The device name (for example, /dev/sdh or xvdh). If the argument is given, EBS arguments must also be specified."
      required: false
    - name: ebs_volume_size
      description: "The size of the volume, in GiBs. You must specify either an ebs_snapshot_id or an ebs_volume_size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size."
      required: false
    - name: ebs_volume_type
      description: "The volume type."
      required: false
      auto: PREDEFINED
      predefined:
      - gp2
      - gp3
      - io1
      - io2
      - st1
      - sc1
      - standard
    - name: ebs_iops
      description: "The number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. This parameter is required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS."
      required: false
    - name: ebs_delete_on_termination
      description: "Indicates whether the EBS volume is deleted on instance termination."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: ebs_kms_key_id
      description: "Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted."
      required: false
    - name: ebs_snapshot_id
      description: "The ID of the snapshot."
      required: false
    - name: ebs_encrypted
      description: "Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - name: launch_template_id
      description: "The ID of the launch template to use to launch the instances. Any parameters that you specify in the command override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both."
      required: false
    - name: launch_template_name
      description: "The name of the launch template to use to launch the instances. Any parameters that you specify in the command override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both."
      required: false
    - name: launch_template_version
      description: "The launch template version number, $Latest, or $Default."
      required: false
    - name: tags
      description: "One or more tags to apply to a resource when the resource is being created, separated by ';' (for example, key=<name>;value=<value>)."
      required: false
    - name: host_id
      description: "The Dedicated Host ID."
      required: false
    - name: enabled_monitoring
      description: "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled."
      required: false
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
      defaultValue: 'false'
    outputs:
    - contextPath: AWS.EC2.Instances.Architecture
      description: The architecture of the image.
      type: String
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.DeviceName
      description: The device name.
      type: String
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs
      description: Parameters used to automatically set up EBS volumes when the instance is launched.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.ClientToken
      description: The idempotency token you provided when you launched the instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.EbsOptimized
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      type: Boolean
    - contextPath: AWS.EC2.Instances.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Hypervisor
      description: The hypervisor type of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Arn
      description: The Amazon Resource Name (ARN) of the instance profile.
      type: String
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Id
      description: The ID of the instance profile.
      type: String
    - contextPath: AWS.EC2.Instances.InstanceLifecycle
      description: Indicates whether this is a Spot Instance or a Scheduled Instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association
      description: The association information for an Elastic IPv4 associated with the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment
      description: The network interface attachment.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Description
      description: The description of the network interface. Applies only if creating a network interface when launching an instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups
      description: The security groups.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Addresses
      description: The IPv6 addresses associated with the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.MacAddress
      description: The MAC address.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId
      description: The ID of the network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.OwnerId
      description: The private DNS name.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateDnsName
      description: The IPv4 address of the network interface within the subnet.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress
      description: The IPv4 address of the network interface within the subnet.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses
      description: The private IPv4 addresses associated with the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SourceDestCheck
      description: Indicates whether to validate network traffic to or from this network interface.
      type: Boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Status
      description: The status of the network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SubnetId
      description: The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.VpcId
      description: The ID of the VPC.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.InterfaceType
      description: The type of network interface.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv4Prefixes
      description: The IPv4 prefixes assigned to the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Prefixes
      description: The IPv6 prefixes assigned to the network interface.
      type: Array
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.ConnectionTrackingConfiguration
      description: A security group connection tracking configuration that enables you to set the timeout for connection tracking on an Elastic network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Operator
      description: The service provider that manages the network interface.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.OutpostArn
      description: The Amazon Resource Name (ARN) of the Outpost.
      type: String
    - contextPath: AWS.EC2.Instances.RootDeviceName
      description: The device name of the root device volume.
      type: String
    - contextPath: AWS.EC2.Instances.RootDeviceType
      description: The root device type used by the AMI.
      type: String
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupId
      description: The ID of the security group.
      type: String
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupName
      description: The name of the security group.
      type: String
    - contextPath: AWS.EC2.Instances.SourceDestCheck
      description: Indicates whether source/destination checking is enabled.
      type: Boolean
    - contextPath: AWS.EC2.Instances.SpotInstanceRequestId
      description: The ID of the request for a Spot Instance request.
      type: String
    - contextPath: AWS.EC2.Instances.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: String
    - contextPath: AWS.EC2.Instances.StateReason
      description: The reason for the most recent state transition. May be an empty string.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.Tags.Key
      description: The key of the tag.
      type: String
    - contextPath: AWS.EC2.Instances.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.EC2.Instances.VirtualizationType
      description: The virtualization type of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.CpuOptions
      description: The CPU options for the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.CapacityBlockId
      description: The ID of the Capacity Block.
      type: String
    - contextPath: AWS.EC2.Instances.CapacityReservationId
      description: The ID of the Capacity Reservation.
      type: String
    - contextPath: AWS.EC2.Instances.CapacityReservationSpecification
      description: Information about the Capacity Reservation targeting option.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.HibernationOptions.Configured
      description: Indicates whether the instance is enabled for hibernation.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Licenses.LicenseConfigurationArn
      description: The Amazon Resource Name (ARN) of the license configuration.
      type: String
    - contextPath: AWS.EC2.Instances.MetadataOptions
      description: The metadata options for the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.EnclaveOptions.Enabled
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
      type: Boolean
    - contextPath: AWS.EC2.Instances.BootMode
      description: The boot mode that was specified by the AMI.
      type: String
    - contextPath: AWS.EC2.Instances.PlatformDetails
      description: The platform details value for the instance.
      type: String
    - contextPath: AWS.EC2.Instances.UsageOperation
      description: The usage operation value for the instance.
      type: String
    - contextPath: AWS.EC2.Instances.UsageOperationUpdateTime
      description: The time that the usage operation was last updated.
      type: Date
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.HostnameType
      description: The type of hostname to assign to an instance.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.EnableResourceNameDnsARecord
      description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
      type: Boolean
    - contextPath: AWS.EC2.Instances.PrivateDnsNameOptions.EnableResourceNameDnsAAAARecord
      description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      type: Boolean
    - contextPath: AWS.EC2.Instances.Ipv6Address
      description: The IPv6 address assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.TpmSupport
      description: If the instance is configured for NitroTPM support, the value is v2.0.
      type: String
    - contextPath: AWS.EC2.Instances.MaintenanceOptions.AutoRecovery
      description: Information on the current automatic recovery behavior of your instance.
      type: String
    - contextPath: AWS.EC2.Instances.MaintenanceOptions.RebootMigration
      description: Specifies whether to attempt reboot migration during a user-initiated reboot of an instance that has a scheduled system-reboot event.
      type: String
    - contextPath: AWS.EC2.Instances.CurrentInstanceBootMode
      description: The boot mode that is used to boot the instance at launch or start.
      type: String
    - contextPath: AWS.EC2.Instances.NetworkPerformanceOptions.BandwidthWeighting
      description: Contains settings for the network performance options for your instance.
      type: String
    - contextPath: AWS.EC2.Instances.Operator
      description: The service provider that manages the instance.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.ImageId
      description: The ID of the AMI used to launch the instance.
      type: String
    - contextPath: AWS.EC2.Instances.State.Code
      description: The current state of the instance as a 16-bit unsigned integer.
      type: Number
    - contextPath: AWS.EC2.Instances.State.Name
      description: The current state of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateDnsName
      description: The private DNS hostname name assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PublicDnsName
      description: The public DNS name assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.StateTransitionReason
      description: The reason for the most recent state transition. May be an empty string.
      type: String
    - contextPath: AWS.EC2.Instances.KeyName
      description: The name of the key pair used when the instance was launched.
      type: String
    - contextPath: AWS.EC2.Instances.AmiLaunchIndex
      description: The AMI launch index, which can be used to find this instance in the launch group.
      type: Number
    - contextPath: AWS.EC2.Instances.ProductCodes
      description: The product codes attached to this instance, if applicable.
      type: Dictionary
    - contextPath: AWS.EC2.Instances.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Instances.LaunchTime
      description: The time the instance was launched.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZoneId
      description: The ID of the Availability Zone of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.Affinity
      description: The affinity setting for the instance on the Dedicated Host.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.PartitionNumber
      description: The number of the partition that the instance is in.
      type: Number
    - contextPath: AWS.EC2.Instances.Placement.HostId
      description: The ID of the Dedicated Host on which the instance resides.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.Tenancy
      description: The tenancy of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.HostResourceGroupArn
      description: The ARN of the host resource group in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.GroupId
      description: The ID of the placement group that the instance is in.
      type: String
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZone
      description: The availability zone of the instance.
      type: String
    - contextPath: AWS.EC2.Instances.KernelId
      description: The kernel associated with this instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.RamdiskId
      description: The RAM disk associated with this instance, if applicable.
      type: String
    - contextPath: AWS.EC2.Instances.Platform
      description: The platform the instance uses. The value is Windows for Windows instances; otherwise, blank.
      type: String
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled.
      type: String
    - contextPath: AWS.EC2.Instances.SubnetId
      description: The ID of the subnet in which the instance is running.
      type: String
    - contextPath: AWS.EC2.Instances.VpcId
      description: The ID of the VPC in which the instance is running.
      type: String
    - contextPath: AWS.EC2.Instances.PrivateIpAddress
      description: The private IPv4 address assigned to the instance.
      type: String
    - contextPath: AWS.EC2.Instances.PublicIpAddress
      description: The public IPv4 address assigned to the instance.
      type: String
  - name: aws-cloudtrail-trails-describe
    description: Retrieves settings for the specified trail or returns information about all trails in the current AWS account.
    arguments:
    - description: A comma-separated list of trail names or trail ARNs. If the list is empty, it returns information for the trail in the current region.
      name: trail_names
    - auto: PREDEFINED
      description: Include shadow trails in the response. A shadow trail is a replication in a region of a trail created in another region.
      name: include_shadow_trails
      predefined:
      - 'true'
      - 'false'
      defaultValue: 'true'
    - name: account_id
      description: The AWS account ID.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    outputs:
    - contextPath: AWS.CloudTrail.Trails.Name
      description: The name of the trail, as set in CreateTrail.
      type: string
    - contextPath: AWS.CloudTrail.Trails.S3BucketName
      description: The name of the Amazon S3 bucket where CloudTrail delivers trail files.
      type: string
    - contextPath: AWS.CloudTrail.Trails.S3KeyPrefix
      description: The Amazon S3 key prefix appended to the bucket name designated for log file delivery.
      type: string
    - contextPath: AWS.CloudTrail.Trails.SnsTopicARN
      description: The ARN of the Amazon SNS topic that CloudTrail uses to send notifications when log files are delivered.
      type: string
    - contextPath: AWS.CloudTrail.Trails.IncludeGlobalServiceEvents
      description: Whether to include AWS API calls from AWS global services such as IAM.
      type: boolean
    - contextPath: AWS.CloudTrail.Trails.IsMultiRegionTrail
      description: Specifies whether the trail belongs only to one region or exists in all regions.
      type: boolean
    - contextPath: AWS.CloudTrail.Trails.HomeRegion
      description: The region where the trail was created.
      type: string
    - contextPath: AWS.CloudTrail.Trails.TrailARN
      description: The ARN of the trail.
      type: string
    - contextPath: AWS.CloudTrail.Trails.LogFileValidationEnabled
      description: Whether log file validation is enabled.
      type: boolean
    - contextPath: AWS.CloudTrail.Trails.CloudWatchLogsLogGroupArn
      description: The ARN of the CloudWatch log group to which CloudTrail logs are delivered.
      type: string
    - contextPath: AWS.CloudTrail.Trails.CloudWatchLogsRoleArn
      description: The role assumed by CloudTrail to write logs to the CloudWatch log group.
      type: string
    - contextPath: AWS.CloudTrail.KmsKeyId
      description: The KMS key ID that encrypts logs delivered by CloudTrail.
      type: string
    - contextPath: AWS.CloudTrail.HasCustomEventSelectors
      description: Specifies if the trail has custom event selectors.
      type: boolean
    - contextPath: AWS.CloudTrail.HasInsightSelectors
      description: Specifies whether a trail has insight types specified in an InsightSelector list.
      type: boolean
    - contextPath: AWS.CloudTrail.IsOrganizationTrail
      description: Specifies whether the trail is an organization trail.
      type: boolean
  - name: aws-s3-bucket-policy-delete
    description: Deletes the bucket policy from an Amazon S3 bucket. This operation removes all policy-based access controls from the bucket, potentially changing access permissions.
    execution: true
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The name of the Amazon S3 bucket from which to delete the bucket policy.
      name: bucket
      required: true

  - name: aws-s3-public-access-block-get
    description: Retrieves the public access block configuration for an Amazon S3 bucket. Shows the current settings that control public access to the bucket and its objects.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The name of the Amazon S3 bucket to retrieve public access block configuration from.
      name: bucket
      required: true
    - description: The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails.
      name: expected_bucket_owner
    outputs:
    - contextPath: AWS.S3-Buckets.BucketName
      description: Name of the S3 bucket.
      type: string
    - contextPath: AWS.S3-Buckets.PublicAccessBlock.BlockPublicAcls
      description: Whether Amazon S3 blocks public access control lists (ACLs) for this bucket and objects in this bucket.
      type: boolean
    - contextPath: AWS.S3-Buckets.PublicAccessBlock.IgnorePublicAcls
      description: Whether Amazon S3 ignores public ACLs for this bucket and objects in this bucket.
      type: boolean
    - contextPath: AWS.S3-Buckets.PublicAccessBlock.BlockPublicPolicy
      description: Whether Amazon S3 blocks public bucket policies for this bucket.
      type: boolean
    - contextPath: AWS.S3-Buckets.PublicAccessBlock.RestrictPublicBuckets
      description: Whether Amazon S3 restricts public bucket policies for this bucket.
      type: boolean

  - name: aws-s3-bucket-encryption-get
    description: Retrieves the default encryption configuration for an Amazon S3 bucket. Shows the server-side encryption settings that are applied to new objects stored in the bucket.
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: Name of the S3 bucket to retrieve encryption configuration from. Must follow S3 naming conventions.
      name: bucket
      required: true
    outputs:
    - contextPath: AWS.S3-Buckets.BucketName
      description: Name of the S3 bucket.
      type: string
    - contextPath: AWS.S3-Buckets.ServerSideEncryptionConfiguration.Rules
      description: Container for information about a particular server-side encryption configuration rule.
      type: array

  - name: aws-s3-bucket-policy-get
    description: Retrieves the bucket policy for an Amazon S3 bucket. Returns the policy document in JSON format if one exists.
    execution: true
    arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: The AWS region.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - description: The name of the S3 bucket whose policy you want to retrieve. Must follow S3 naming conventions.
      name: bucket
      required: true
    - description: The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails.
      name: expected_bucket_owner
    outputs:
    - contextPath: AWS.S3-Buckets.BucketName
      description: Name of the S3 bucket.
      type: string
    - contextPath: AWS.S3-Buckets.Policy.Version
      description: The version of the policy.
      type: string
    - contextPath: AWS.S3-Buckets.Policy.Id
      description: The id of the policy.
      type: string
    - contextPath: AWS.S3-Buckets.Policy.Statement.Sid
      description: Identifier of the policy statement.
      type: string
    - contextPath: AWS.S3-Buckets.Policy.Statement.Effect
      description: Specifies whether the statement results in an allow or an explicit deny.
      type: string
    - contextPath: AWS.S3-Buckets.Policy.Statement.Principal
      description: Specify the principal that is allowed or denied access to a resource.
    - contextPath: AWS.S3-Buckets.Policy.Statement.Action
      description: Describes the specific action or actions that will be allowed or denied.
    - contextPath: AWS.S3-Buckets.Policy.Statement.Resource
      description: Defines the object or objects that the statement applies to.
    - contextPath: AWS.S3-Buckets.Policy.Statement.Condition
      description: Specify conditions for when a policy is in effect.
      type: string

  - name: aws-lambda-function-configuration-get
    arguments:
    - name: account_id
      required: true
      description: The AWS account ID.
    - name: region
      required: true
      description: The AWS region.
    - name: function_name
      required: true
      description: Name, ARN, or qualified name of the Lambda function.
    - name: qualifier
      description: Version number or alias name.
    description: Retrieves configuration information about a Lambda function.
    outputs:
    - contextPath: AWS.Lambda.FunctionConfig.FunctionName
      description: The name of the function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.FunctionArn
      description: The function’s Amazon Resource Name (ARN).
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Runtime
      description: The identifier of the function’s runtime.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Role
      description: The function’s execution role.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Handler
      description: The function that Lambda calls to begin running your function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.CodeSize
      description: The size of the function’s deployment package, in bytes.
      type: Number
    - contextPath: AWS.Lambda.FunctionConfig.Description
      description: The function’s description.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Timeout
      description: The amount of time in seconds that Lambda allows a function to run before stopping it.
      type: Number
    - contextPath: AWS.Lambda.FunctionConfig.MemorySize
      description: The amount of memory available to the function at runtime.
      type: Number
    - contextPath: AWS.Lambda.FunctionConfig.LastModified
      description: The date and time that the function was last updated.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.CodeSha256
      description: The SHA256 hash of the function’s deployment package.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Version
      description: The version of the Lambda function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.VpcConfig.SubnetIds
      description: A list of VPC subnet IDs.
    - contextPath: AWS.Lambda.FunctionConfig.VpcConfig.SecurityGroupIds
      description: A list of VPC security group IDs.
    - contextPath: AWS.Lambda.FunctionConfig.VpcConfig.VpcId
      description: The ID of the VPC.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.VpcConfig.Ipv6AllowedForDualStack
      description: Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
      type: Boolean
    - contextPath: AWS.Lambda.FunctionConfig.DeadLetterConfig.TargetArn
      description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Environment.Variables
      description: Environment variable key-value pairs. Omitted from CloudTrail logs.
    - contextPath: AWS.Lambda.FunctionConfig.Environment.Error.ErrorCode
      description: The error code.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Environment.Error.Message
      description: The error message.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.KMSKeyArn
      description: The ARN of the Key Management Service (KMS).
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.TracingConfig.Mode
      description: The tracing mode.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.MasterArn
      description: For Lambda@Edge functions, the ARN of the main function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.RevisionId
      description: The latest updated revision of the function or alias.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Layers.Arn
      description: The Amazon Resource Name (ARN) of the function layer.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Layers.CodeSize
      description: The size of the layer archive in bytes.
      type: Number
    - contextPath: AWS.Lambda.FunctionConfig.Layers.SigningProfileVersionArn
      description: The Amazon Resource Name (ARN) for a signing profile version.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Layers.SigningJobArn
      description: The Amazon Resource Name (ARN) of a signing job.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.State
      description: The current state of the function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.StateReason
      description: The reason for the function’s current state.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.StateReasonCode
      description: The reason code for the function’s current state. 
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LastUpdateStatus
      description: The status of the last update that was performed on the function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LastUpdateStatusReason
      description: The reason for the last update that was performed on the function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LastUpdateStatusReasonCode
      description: The reason code for the last update that was performed on the function.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.FileSystemConfigs.Arn
      description: The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.FileSystemConfigs.LocalMountPath
      description: The path where the function can access the file system, starting with /mnt/.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.PackageType
      description: The type of deployment package.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.ImageConfigResponse.ImageConfig.EntryPoint
      description: Specifies the entry point to their application, which is typically the location of the runtime executable.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.ImageConfigResponse.ImageConfig.Command
      description: Specifies parameters that you want to pass in with ENTRYPOINT.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.ImageConfigResponse.ImageConfig.WorkingDirectory
      description: Specifies the working directory.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.ImageConfigResponse.Error.ErrorCode
      description: Error code.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.ImageConfigResponse.Error.Message
      description: Error message.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.SigningProfileVersionArn
      description: The ARN of the signing profile version.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.SigningJobArn
      description: The ARN of the signing job.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.Architectures
      description: The size of the function’s /tmp directory in MB.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.EphemeralStorage.Size
      description: The size of the function’s /tmp directory.
      type: Number
    - contextPath: AWS.Lambda.FunctionConfig.SnapStart.ApplyOn
      description: When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.SnapStart.OptimizationStatus
      description: When you provide a qualified Amazon Resource Name (ARN), this response element indicates whether SnapStart is activated for the specified function version.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.RuntimeVersionConfig.RuntimeVersionArn
      description: The ARN of the runtime version you want the function to use.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.RuntimeVersionConfig.Error.ErrorCode
      description: The error code.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.RuntimeVersionConfig.Error.Message
      description: The error message.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LoggingConfig.LogFormat
      description: The format in which Lambda sends your function’s application and system logs to CloudWatch.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LoggingConfig.ApplicationLogLevel
      description: Set this property to filter the application logs for your function that Lambda sends to CloudWatch.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LoggingConfig.SystemLogLevel
      description: Set this property to filter the system logs for your function that Lambda sends to CloudWatch.
      type: String
    - contextPath: AWS.Lambda.FunctionConfig.LoggingConfig.LogGroup
      description: The name of the Amazon CloudWatch log group the function sends logs to.
      type: String

  - name: aws-lambda-function-url-config-get
    arguments:
    - name: account_id
      required: true
      description: The AWS account ID.
    - name: region
      required: true
      description: The AWS region.
    - name: function_name
      required: true
      description: Name of the Lambda function.
    - name: qualifier
      description: The alias name or version number.
    description: Returns the configuration for a Lambda function URL.
    outputs:
    - contextPath: AWS.Lambda.FunctionURLConfig.FunctionUrl
      description: The HTTP URL endpoint for your function.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.FunctionArn
      description: The Amazon Resource Name (ARN) of your function.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.AuthType
      description: The type of authentication that your function URL uses.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowCredentials
      description: Whether to allow cookies or other credentials in requests to your function URL.
      type: Boolean
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowHeaders
      description: The HTTP headers that origins can include in requests to your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowMethods
      description: The HTTP methods that are allowed when calling your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowOrigins
      description: The origins that can access your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.ExposeHeaders
      description: The HTTP headers in your function response that you want to expose to origins that call your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.MaxAge
      description: The maximum amount of time, in seconds, that web browsers can cache results of a preflight request.
      type: Number
    - contextPath: AWS.Lambda.FunctionURLConfig.CreationTime
      description: When the function URL was created.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.LastModifiedTime
      description: When the function URL configuration was last updated.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.InvokeMode
      description: BUFFERED or RESPONSE_STREAM.
      type: String

  - name: aws-lambda-policy-get
    arguments:
    - name: account_id
      required: true
      description: The AWS account ID.
    - name: region
      required: true
      description: The AWS region.
    - name: function_name
      required: true
      description: Name of the Lambda function, version, or alias.
    - name: qualifier
      description: Version or alias to get the policy for.
    description: Returns the resource-based IAM policy for a Lambda function.
    outputs:
      - contextPath: AWS.Lambda.Policy.Version
        description: The policy version. 
        type: Date
      - contextPath: AWS.Lambda.Policy.Id
        description: The identifier of the policy.
        type: String
      - contextPath: AWS.Lambda.Policy.Statement.Sid
        description: Identifier of the policy statement.
        type: String
      - contextPath: AWS.Lambda.Policy.Statement.Effect
        description: Specifies whether the statement results in an allow or an explicit deny.
        type: String
      - contextPath: AWS.Lambda.Policy.Statement.Principal
        description: Specify the principal that is allowed or denied access to a resource.
      - contextPath: AWS.Lambda.Policy.Statement.Action
        description: Describes the specific action or actions that will be allowed or denied.
      - contextPath: AWS.Lambda.Policy.Statement.Resource
        description: Defines the object or objects that the statement applies to.
      - contextPath: AWS.Lambda.Policy.Statement.Condition
        description: Specify conditions for when a policy is in effect.
        type: String
      - contextPath: AWS.Lambda.Policy.RevisionId
        description: A unique identifier for the current revision of the policy.
        type: String
  - name: aws-lambda-invoke
    arguments:
    - name: account_id
      required: true
      description: The AWS account ID.
    - name: region
      required: true
      description: The AWS region.
    - name: function_name
      required: true
      description: Name of the Lambda function to invoke.
    - name: invocation_type
      description: RequestResponse (sync), Event (async), or DryRun. Default is RequestResponse.
      defaultValue: RequestResponse
      auto: PREDEFINED
      predefined:
      - RequestResponse
      - Event
      - DryRun
    - name: log_type
      auto: PREDEFINED
      predefined:
      - None
      - Tail
      description: Set to Tail to include execution log in response.
    - name: client_context
      description: Base64-encoded client context data.
    - name: payload
      description: JSON input to provide to the Lambda function.
    - name: qualifier
      description: Version or alias to invoke.
    description: Invokes a Lambda function. Specify just a function name to invoke the latest version of the function. To invoke a published version, use the Qualifier parameter to specify a version or alias. If you use the RequestResponse (synchronous) invocation option, note that the function may be invoked multiple times if a timeout is reached. For functions with a long timeout, your client may be disconnected during synchronous invocation while it waits for a response. If you use the Event (asynchronous) invocation option, the function will be invoked at least once in response to an event and the function must be idempotent to handle this.
    execution: true
    outputs:
    - contextPath: AWS.Lambda.InvokedFunction.StatusCode
      description: The HTTP status code is in the 200 range for a successful request.
      type: Number
    - contextPath: AWS.Lambda.InvokedFunction.FunctionError
      description: If present, indicates that an error occurred during function execution.
      type: String
    - contextPath: AWS.Lambda.InvokedFunction.LogResult
      description: The last 4 KB of the execution log, which is base64-encoded.
      type: String
    - contextPath: AWS.Lambda.InvokedFunction.Payload
      description: The response from the function, or an error object.
      type: Unknown
    - contextPath: AWS.Lambda.InvokedFunction.ExecutedVersion
      description: The version of the function that executed.
      type: String
    - contextPath: AWS.Lambda.InvokedFunction.FunctionName
      description: The name of the Lambda function.
      type: string
  - name: aws-lambda-function-url-config-update
    arguments:
    - name: account_id
      required: true
      description: The AWS account ID.
    - name: region
      required: true
      description: The AWS region.
    - name: function_name
      required: true
      description: Name of the Lambda function.
    - name: qualifier
      description: The alias name or version number.
    - name: auth_type
      description: AWS_IAM or NONE for authentication type.
      auto: PREDEFINED
      predefined:
      - "AWS_IAM"
      - "NONE"
    - name: cors_allow_credentials
      description: Allow credentials in CORS requests.
      auto: PREDEFINED
      predefined:
      - "true"
      - "false"
    - name: cors_allow_headers
      description: Comma-separated list of allowed headers.
      isArray: true
    - name: cors_allow_methods
      description: Comma-separated list of allowed HTTP methods.
      isArray: true
    - name: cors_allow_origins
      description: Comma-separated list of allowed origins.
      isArray: true
    - name: cors_expose_headers
      description: Comma-separated list of headers to expose.
      isArray: true
    - name: cors_max_age
      description: Maximum age for CORS preflight cache.
    - name: invoke_mode
      auto: PREDEFINED
      predefined:
      - "BUFFERED"
      - "RESPONSE_STREAM"
      description: BUFFERED or RESPONSE_STREAM.
    description: Updates the configuration for a Lambda function URL.
    outputs:
    - contextPath: AWS.Lambda.FunctionURLConfig.FunctionUrl
      description: The HTTP URL endpoint for your function.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.FunctionArn
      description: The Amazon Resource Name (ARN) of your function.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.AuthType
      description: The type of authentication that your function URL uses.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowCredentials
      description: Whether to allow cookies or other credentials in requests to your function URL.
      type: Boolean
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowHeaders
      description: The HTTP headers that origins can include in requests to your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowMethods
      description: The HTTP methods that are allowed when calling your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.AllowOrigins
      description: The origins that can access your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.ExposeHeaders
      description: The HTTP headers in your function response that you want to expose to origins that call your function URL.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.Cors.MaxAge
      description: The maximum amount of time, in seconds, that web browsers can cache results of a preflight request.
      type: Number
    - contextPath: AWS.Lambda.FunctionURLConfig.CreationTime
      description: When the function URL was created.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.LastModifiedTime
      description: When the function URL configuration was last updated.
      type: String
    - contextPath: AWS.Lambda.FunctionURLConfig.InvokeMode
      description: BUFFERED or RESPONSE_STREAM.
      type: String

  - arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: Entry ID of the file to upload.
      name: entryID
      required: true
    - description: Name of the S3 bucket containing the file. Must follow S3 naming conventions.
      name: bucket
      required: true
    - description: Key (path) where the file will be stored in the S3 bucket.
      name: key
      required: true
    - description: AWS region where the S3 bucket is located.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    description: Upload file to S3 bucket.
    name: aws-s3-file-upload
    outputs: []
  - arguments:
    - description: The AWS account ID.
      name: account_id
      required: true
    - description: Name of the target S3 bucket. Must follow S3 naming conventions.
      name: bucket
      required: true
    - description: Key (path) of the file to download from the S3 bucket.
      name: key
      required: true
    - description: AWS region where the S3 bucket is located.
      name: region
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    description: Download a file from S3 bucket to the War Room.
    name: aws-s3-file-download
    outputs:
    - contextPath: File.Size
      description: The size of the file.
      type: Number
    - contextPath: File.SHA1
      description: The SHA1 hash of the file.
      type: String
    - contextPath: File.SHA256
      description: The SHA256 hash of the file.
      type: String
    - contextPath: File.Name
      description: The name of the file.
      type: String
    - contextPath: File.SSDeep
      description: The SSDeep hash of the file.
      type: String
    - contextPath: File.EntryID
      description: The entry ID of the file.
      type: String
    - contextPath: File.Info
      description: File information.
      type: String
    - contextPath: File.Type
      description: The file type.
      type: String
    - contextPath: File.MD5
      description: The MD5 hash of the file.
      type: String
    - contextPath: File.Extension
      description: The file extension.
      type: String
  - name: aws-billing-cost-usage-list
    description: Retrieves actual cost and usage data for a given time range and optional service filter.
    arguments:
    - name: account_id
      description: The AWS account on which to run the command.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: metrics
      description: Metrics to retrieve. Default - UsageQuantity. Valid values [AmortizedCost, BlendedCost, NetAmortizedCost, NetUnblendedCost, NormalizedUsageAmount, UnblendedCost, UsageQuantity].
      isArray: true
      required: false
    - name: start_date
      description: Start date for the report (YYYY-MM-DD). Default - 7 days ago.
      required: false
    - name: end_date
      description: End date for the report (YYYY-MM-DD). Default - current day.
      required: false
    - name: granularity
      description: Granularity of the data. Default - Daily. Valid values [Daily, Monthly, Hourly].
      required: false
      auto: PREDEFINED
      predefined:
      - Daily
      - Monthly
      - Hourly
    - name: aws_services
      description: Optional filter for retrieving data for specific AWS services. e.g. "AWSLambda".
      isArray: true
      required: false
    - name: next_page_token
      description: Next page token for pagination. Use value from AWS.Billing.UsageNextToken.
      required: false
    outputs:
    - contextPath: AWS.Billing.Usage
      description: Complete usage data from AWS Cost Explorer API.
    - contextPath: AWS.Billing.Usage.TimePeriod
      description: Time period for the usage data.
    - contextPath: AWS.Billing.Usage.TimePeriod.Start
      description: Start date of the time period.
      type: date
    - contextPath: AWS.Billing.Usage.TimePeriod.End
      description: End date of the time period.
      type: date
    - contextPath: AWS.Billing.Usage.Total
      description: Total cost and usage metrics for the time period.
    - contextPath: AWS.Billing.Usage.Total.AmortizedCost
      description: Amortized cost information.
    - contextPath: AWS.Billing.Usage.Total.AmortizedCost.Amount
      description: Amortized cost amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.AmortizedCost.Unit
      description: Amortized cost unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Usage.Total.BlendedCost
      description: Blended cost information.
    - contextPath: AWS.Billing.Usage.Total.BlendedCost.Amount
      description: Blended cost amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.BlendedCost.Unit
      description: Blended cost unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Usage.Total.NetAmortizedCost
      description: Net amortized cost information.
    - contextPath: AWS.Billing.Usage.Total.NetAmortizedCost.Amount
      description: Net amortized cost amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.NetAmortizedCost.Unit
      description: Net amortized cost unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Usage.Total.NetUnblendedCost
      description: Net unblended cost information.
    - contextPath: AWS.Billing.Usage.Total.NetUnblendedCost.Amount
      description: Net unblended cost amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.NetUnblendedCost.Unit
      description: Net unblended cost unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Usage.Total.NormalizedUsageAmount
      description: Normalized usage amount information.
    - contextPath: AWS.Billing.Usage.Total.NormalizedUsageAmount.Amount
      description: Normalized usage amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.NormalizedUsageAmount.Unit
      description: Normalized usage amount unit.
      type: string
    - contextPath: AWS.Billing.Usage.Total.UnblendedCost
      description: Unblended cost information.
    - contextPath: AWS.Billing.Usage.Total.UnblendedCost.Amount
      description: Unblended cost amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.UnblendedCost.Unit
      description: Unblended cost unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Usage.Total.UsageQuantity
      description: Usage quantity information.
    - contextPath: AWS.Billing.Usage.Total.UsageQuantity.Amount
      description: Usage quantity amount.
      type: string
    - contextPath: AWS.Billing.Usage.Total.UsageQuantity.Unit
      description: Usage quantity unit (e.g., Hrs, GB).
      type: string
    - contextPath: AWS.Billing.Usage.Groups
      description: Usage data grouped by dimensions (when grouping is applied).
    - contextPath: AWS.Billing.Usage.Groups.Keys
      description: Group keys (dimension values).
    - contextPath: AWS.Billing.Usage.Groups.Metrics
      description: Metrics for the group.
    - contextPath: AWS.Billing.Usage.Estimated
      description: Whether the data is estimated.
      type: boolean
    - contextPath: AWS.Billing.UsageNextToken
      description: Next page token for pagination.
      type: string

  - name: aws-billing-forecast-list
    description: Forecasts AWS spending over a given future time period using historical trends.
    arguments:
    - name: account_id
      description: AWS account to run the command on.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: metric
      description: Metric to forecast. Valid values [AMORTIZED_COST, BLENDED_COST, NET_AMORTIZED_COST, NET_UNBLENDED_COST, UNBLENDED_COST].
      required: false
      defaultValue: AMORTIZED_COST
      auto: PREDEFINED
      predefined:
      - AMORTIZED_COST
      - BLENDED_COST
      - NET_AMORTIZED_COST
      - NET_UNBLENDED_COST
      - UNBLENDED_COST
    - name: start_date
      description: Start date for the forecast (YYYY-MM-DD). Default - current day.
      required: false
    - name: end_date
      description: End date for the forecast (YYYY-MM-DD). Default - in 7 days.
      required: false
    - name: granularity
      description: Granularity of the forecast. Default - Daily. Valid values [Daily, Monthly, Hourly].
      required: false
      auto: PREDEFINED
      predefined:
      - Daily
      - Monthly
      - Hourly
    - name: aws_services
      description: Optional filter for retrieving data for specific AWS services.
      isArray: true
      required: false
    - name: next_page_token
      description: Next page token for pagination. Use value from AWS.Billing.ForecastNextToken.
      required: false
    outputs:
    - contextPath: AWS.Billing.Forecast
      description: Complete forecast data from AWS Cost Explorer API.
    - contextPath: AWS.Billing.Forecast.Service
      description: AWS Service (if exists).
      type: string
    - contextPath: AWS.Billing.Forecast.StartDate
      description: Start date of the forecast.
      type: date
    - contextPath: AWS.Billing.Forecast.EndDate
      description: End date of the forecast.
      type: date
    - contextPath: AWS.Billing.Forecast.TotalAmount
      description: Total forecasted amount.
      type: string
    - contextPath: AWS.Billing.Forecast.TotalUnit
      description: Unit for the forecasted amount.
      type: string
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime
      description: Forecast results grouped by time period.
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.TimePeriod
      description: Time period for the forecast.
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.TimePeriod.Start
      description: Start date of the forecast period.
      type: date
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.TimePeriod.End
      description: End date of the forecast period.
      type: date
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.MeanValue
      description: Mean forecasted value for the time period.
      type: string
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.PredictionIntervalLowerBound
      description: Lower bound of the prediction interval.
      type: string
    - contextPath: AWS.Billing.Forecast.ForecastResultsByTime.PredictionIntervalUpperBound
      description: Upper bound of the prediction interval.
      type: string
    - contextPath: AWS.Billing.Forecast.Total
      description: Total forecast information.
    - contextPath: AWS.Billing.Forecast.Total.Amount
      description: Total forecasted amount.
      type: string
    - contextPath: AWS.Billing.Forecast.Total.Unit
      description: Unit for the total forecasted amount.
      type: string
    - contextPath: AWS.Billing.ForecastNextToken
      description: Next page token for pagination.
      type: string

  - name: aws-billing-budgets-list
    description: Lists configured budgets for a given AWS account.
    arguments:
    - name: account_id
      description: AWS account to run the command on.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: max_result
      description: Maximum results to return. Default - 50, Max - 1000.
      required: false
      defaultValue: 50
    - name: show_filter_expression
      defaultValue: 'false'
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
      description: Whether to show filter expression. Default - False.
      required: false
    - name: next_page_token
      description: Next page token for pagination. Use value from AWS.Billing.BudgetNextToken.
      required: false
    outputs:
    - contextPath: AWS.Billing.Budget
      description: Complete budget data from AWS Budgets API.
    - contextPath: AWS.Billing.Budget.BudgetName
      description: Budget name.
      type: string
    - contextPath: AWS.Billing.Budget.BudgetType
      description: Budget type (COST, USAGE, RI_UTILIZATION, RI_COVERAGE, SAVINGS_PLANS_UTILIZATION, SAVINGS_PLANS_COVERAGE).
      type: string
    - contextPath: AWS.Billing.Budget.TimeUnit
      description: Time unit for the budget (DAILY, MONTHLY, QUARTERLY, ANNUALLY).
      type: string
    - contextPath: AWS.Billing.Budget.TimePeriod
      description: Time period for the budget.
    - contextPath: AWS.Billing.Budget.TimePeriod.Start
      description: Start date of the budget time period.
      type: date
    - contextPath: AWS.Billing.Budget.TimePeriod.End
      description: End date of the budget time period.
      type: date
    - contextPath: AWS.Billing.Budget.BudgetLimit
      description: Budget limit configuration.
    - contextPath: AWS.Billing.Budget.BudgetLimit.Amount
      description: Budget limit amount.
      type: string
    - contextPath: AWS.Billing.Budget.BudgetLimit.Unit
      description: Budget limit unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Budget.CostFilters
      description: Cost filters applied to the budget.
    - contextPath: AWS.Billing.Budget.TimeUnit
      description: Time unit for the budget period.
      type: string
    - contextPath: AWS.Billing.Budget.CalculatedSpend
      description: Calculated spend information.
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ActualSpend
      description: Actual spend information.
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ActualSpend.Amount
      description: Actual spend amount.
      type: string
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ActualSpend.Unit
      description: Actual spend unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ForecastedSpend
      description: Forecasted spend information.
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ForecastedSpend.Amount
      description: Forecasted spend amount.
      type: string
    - contextPath: AWS.Billing.Budget.CalculatedSpend.ForecastedSpend.Unit
      description: Forecasted spend unit (e.g., USD).
      type: string
    - contextPath: AWS.Billing.Budget.BudgetType
      description: Type of budget (COST, USAGE, etc.).
      type: string
    - contextPath: AWS.Billing.Budget.LastUpdatedTime
      description: Last time the budget was updated.
      type: date
    - contextPath: AWS.Billing.Budget.AutoAdjustData
      description: Auto-adjust data for the budget.
    - contextPath: AWS.Billing.Budget.PlannedBudgetLimits
      description: Planned budget limits for future periods.
    - contextPath: AWS.Billing.BudgetNextToken
      description: Next page token for pagination.
      type: string

  - name: aws-billing-budget-notification-list
    description: Lists the notifications that are associated with a budget.
    arguments:
    - name: account_id
      description: AWS account to run the command on.
      required: true
    - name: region
      description: The AWS region.
      required: true
      auto: PREDEFINED
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-7
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - mx-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    - name: budget_name
      description: Name of the budget.
      required: true
    - name: max_result
      description: Maximum results to return. Default - 50, Max - 100.
      required: false
      defaultValue: 50
    - name: next_page_token
      description: Next page token for pagination. Use value from AWS.Billing.NotificationNextToken.
      required: false
    outputs:
    - contextPath: AWS.Billing.Budget.Notification
      description: Complete budget notification data from AWS Budgets API.
    - contextPath: AWS.Billing.Budget.Notification.Notification
      description: Notification configuration.
    - contextPath: AWS.Billing.Budget.Notification.Notification.NotificationType
      description: Type of notification (ACTUAL or FORECASTED).
      type: string
    - contextPath: AWS.Billing.Budget.Notification.Notification.ComparisonOperator
      description: Comparison operator for the notification (GREATER_THAN, LESS_THAN, EQUAL_TO).
      type: string
    - contextPath: AWS.Billing.Budget.Notification.Notification.Threshold
      description: Threshold value that triggers the notification.
      type: number
    - contextPath: AWS.Billing.Budget.Notification.Notification.ThresholdType
      description: Type of threshold (PERCENTAGE or ABSOLUTE_VALUE).
      type: string
    - contextPath: AWS.Billing.Budget.Notification.Notification.NotificationState
      description: Current state of the notification (OK or ALARM).
      type: string
    - contextPath: AWS.Billing.Budget.Notification.Subscribers
      description: List of subscribers for the notification.
    - contextPath: AWS.Billing.Budget.Notification.Subscribers.SubscriptionType
      description: Subscription type (EMAIL or SNS).
      type: string
    - contextPath: AWS.Billing.Budget.Notification.Subscribers.Address
      description: Email address or SNS topic ARN for the subscriber.
      type: string
    - contextPath: AWS.Billing.NotificationNextToken
      description: Next page token for pagination.
      type: string
  isfetch: false
  runonce: false
  script: '-'
  type: python
  subtype: python3
  dockerimage: demisto/boto3py3:1.0.0.5295752
supportsquickactions: true
fromversion: 5.5.0
tests:
- No test - No playbook part of this release.
sectionorder:
- Connect
- Collect
isCloudProviderIntegration: true
