commonfields:
  id: Atlassian Cloud IT Admin
  version: -1
name: Atlassian Cloud IT Admin
display: Atlassian Cloud IT Admin
category: IT Services
description: "Atlassian Integration consists of set of endpoints that allows the customers\
  \ to do the following-\n1.\tGet / Retrieve user information from Atlassian Cloud\n\
  2.\tCreate a user in Atlassian Cloud\n3.\tUpdate a user in Atlassian Cloud \n4.\t\
  Disable a user in Atlassian Cloud\n5.\tEnable a user in Atlassian Cloud\n"
configuration:
- display: Atlassian URL (e.g. https://example.net)
  name: url
  defaultvalue: ""
  type: 0
  required: true
  additionalinfo: URL to connect to the Atlassian Service
- display: token
  name: token
  defaultvalue: ""
  type: 4
  required: true
  additionalinfo: Authorization token to connect to the Atlassian API
- display: Directory Id
  name: directoryId
  defaultvalue: ""
  type: 0
  required: true
  additionalinfo: Directory id mapped to directory
- display: Custom Mapping For Create User
  name: customMappingCreateUser
  defaultvalue: ""
  type: 12
  required: false
  additionalinfo: An optional custom mapping that takes custom values in the SCIM
    data into the integration.
- display: Custom Mapping For Update User
  name: customMappingUpdateUser
  defaultvalue: ""
  type: 12
  required: false
  additionalinfo: An optional custom mapping that takes custom values in the SCIM
    data into the integration.
- display: Use system proxy settings
  name: proxy
  defaultvalue: ""
  type: 8
  required: false
  additionalinfo: Whether to use the system proxy
- display: Trust any certificate (not secure)
  name: insecure
  defaultvalue: ""
  type: 8
  required: false
  additionalinfo: Whether to accept insecure certificates
script:
  script: ''
  type: python
  commands:
  - name: get-user
    arguments:
    - name: scim
      required: true
      description: SCIM User JSON with id or email populated. User?s id or userName
        will be used for lookup.
    outputs:
    - contextPath: GetUser
      description: Command context path
      type: unknown
    - contextPath: GetUser.status
      description: 'User status, set to one of the following values:  trueor false'
      type: boolean
    - contextPath: GetUser.brand
      description: User's brand name.
      type: string
    - contextPath: GetUser.details
      description: Gives the user information if the API is success else error information
      type: string
    - contextPath: 'GetUser.email '
      description: 'User''3s email address. '
      type: string
    - contextPath: 'GetUser.errorCode '
      description: 'Error code in the case of exception.  Example: 404'
      type: number
    - contextPath: 'GetUser.errorMessage '
      description: 'Error message in the case of exception. Example: ?User not Found?'
      type: string
    - contextPath: 'GetUser.id '
      description: 'User''s id '
      type: string
    - contextPath: GetUser.instanceName
      description: Instance name for the Integration.
      type: string
    - contextPath: GetUser.success
      description: Success status. Can be True or False
      type: boolean
    description: Retrieve the user details based on id or username.
  - name: create-user
    arguments:
    - name: scim
      required: true
      description: SCIM content in JSON format
    - name: customMapping
      description: An optional custom mapping that takes custom values in the SCIM
        data into the integration.
    outputs:
    - contextPath: CreateUser
      description: Command context path
      type: Unknown
    - contextPath: CreateUser.brand
      description: Name of the Integration
      type: string
    - contextPath: CreateUser.instanceName
      description: Name of the instance used for testing
      type: string
    - contextPath: CreateUser.success
      description: Status of the result. Can be true or false.
      type: boolean
    - contextPath: CreateUser.active
      description: 'Gives the active status of user. Can be true of false. '
      type: boolean
    - contextPath: CreateUser.id
      description: Value of id passed as argument
      type: number
    - contextPath: CreateUser.email
      description: Value of email ID passed as argument
      type: string
    - contextPath: CreateUser.errorCode
      description: 'HTTP error response code '
      type: number
    - contextPath: CreateUser.errorMessage
      description: Reason why the API is failed
      type: string
    - contextPath: CreateUser.details
      description: Gives the user information if the API is success else error information
      type: string
    description: This command creates the user based on the scim and custom map passed
      in argument.
  - name: update-user
    arguments:
    - name: oldScim
      required: true
      description: Old SCIM content in JSON format
    - name: newScim
      required: true
      description: New SCIM content in JSON format
    - name: customMapping
      description: An optional custom mapping that takes custom values in the SCIM
        data into the integration.
    outputs:
    - contextPath: UpdateUser
      description: Command context path
      type: Unknown
    - contextPath: UpdateUser.brand
      description: Name of the Integration
      type: string
    - contextPath: UpdateUser.instanceName
      description: Name of the instance used for testing
      type: string
    - contextPath: UpdateUser.success
      description: Status of the result. Can be true or false.
      type: boolean
    - contextPath: UpdateUser.active
      description: 'Gives the active status of user. Can be true of false. '
      type: boolean
    - contextPath: UpdateUser.id
      description: Value of id passed as argument
      type: string
    - contextPath: UpdateUser.email
      description: Value of email ID passed as argument
      type: string
    - contextPath: UpdateUser.errorCode
      description: HTTP error response code
      type: number
    - contextPath: UpdateUser.errorMessage
      description: ' Reason why the API is failed'
      type: string
    - contextPath: UpdateUser.details
      description: Gives the user information if the API is success else error information
      type: string
    description: Update a user
  - name: disable-user
    arguments:
    - name: scim
      required: true
      description: SCIM User JSON with user_id whose user details needs to be removed.
    outputs:
    - contextPath: DisableUser
      description: Command context path
      type: Unknown
    - contextPath: DisableUser.status
      description: 'User status, set to one of the following values: '
      type: boolean
    - contextPath: DisableUser.brand
      description: User's brand name.
      type: string
    - contextPath: DisableUser.details
      description: User?s details including id, email, firtsName, lastName, groupAdmin
        etc.
      type: string
    - contextPath: 'DisableUser.email '
      description: 'User''s email address. '
      type: string
    - contextPath: 'DisableUser.errorCode '
      description: 'Error code in the case of exception.  Example: 404'
      type: number
    - contextPath: 'DisableUser.errorMessage '
      description: 'Error message in the case of exception. Example: ?User not Found?'
      type: string
    - contextPath: 'DisableUser.Users.id '
      description: 'User''s id '
      type: string
    - contextPath: DisableUser.instanceName
      description: Instance name for the Integration.
      type: string
    - contextPath: DisableUser.success
      description: Success status. Can be True or False
      type: boolean
    description: This command disables the user.
    execution: true
  - name: enable-user
    arguments:
    - name: scim
      required: true
      description: SCIM content in JSON format
    - name: customMapping
      description: An optional custom mapping that takes custom values in the SCIM
        data into the integration.
    outputs:
    - contextPath: EnableUser
      description: Command context path
      type: Unknown
    - contextPath: EnableUser.brand
      description: Name of the Integration
      type: string
    - contextPath: EnableUser.instanceName
      description: Name of the instance used for testing
      type: string
    - contextPath: EnableUser.success
      description: Status of the result. Can be true or false.
      type: boolean
    - contextPath: EnableUser.active
      description: 'Gives the active status of user. Can be true of false. '
      type: boolean
    - contextPath: EnableUser.id
      description: Value of id passed as argument
      type: string
    - contextPath: EnableUser.email
      description: Value of email ID passed as argument
      type: string
    - contextPath: EnableUser.errorCode
      description: 'HTTP error response code '
      type: number
    - contextPath: EnableUser.errorMessage
      description: Reason why the API is failed
      type: string
    - contextPath: EnableUser.details
      description: Gives the user information if the API is success else error information
      type: string
    description: This command enables the user.
  dockerimage: demisto/python3:3.8.5.10845
  runonce: false
  subtype: python3
fromversion: 6.0.0
tests:
- No tests (auto formatted)
