category: Utilities
sectionOrder:
- Connect
- Collect
commonfields:
  id: GitHub
  version: -1
configuration:
- display: Fetch incidents
  name: isFetch
  type: 8
  section: Collect
  required: false
- defaultvalue: Issue
  display: Select an Issue or Pull requests to Fetch
  name: fetch_object
  options:
  - Issue
  - Pull_requests
  type: 15
  section: Collect
  advanced: true
  required: false
- defaultvalue: https://api.github.com
  display: Server URL
  name: url
  type: 0
  additionalinfo: The REST API URL
  section: Connect
  required: false
- displaypassword: API Token
  name: api_token
  type: 9
  hiddenusername: true
  section: Connect
  required: false
- display: Credentials
  name: credentials
  type: 9
  section: Connect
  required: false
- display: 'Username of the repository owner, for example: github.com/repos/{_owner_}/{repo}/issues'
  name: user
  type: 0
  section: Connect
  required: false
- display: The name of the requested repository
  name: repository
  type: 0
  section: Connect
  advanced: true
  required: false
- defaultvalue: '3'
  display: First fetch interval (in days)
  name: fetch_time
  type: 0
  section: Collect
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
- defaultvalue: 'false'
  display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Incident type
  name: incidentType
  type: 13
  section: Connect
  required: false
- display: GitHub app integration ID
  name: integration_id
  type: 0
  section: Connect
  advanced: true
  required: false
- display: GitHub app installation ID
  name: installation_id
  type: 0
  section: Connect
  advanced: true
  required: false
- display: API Token
  name: token
  type: 4
  hidden: true
  section: Connect
  advanced: true
  required: false
description: Integration to GitHub API
display: GitHub
name: GitHub
script:
  commands:
  - arguments:
    - description: The title of the issue.
      name: title
      required: true
    - description: The contents of the issue.
      name: body
    - description: Labels to associate with this issue.
      isArray: true
      name: labels
    - description: Logins for Users to assign to this issue.
      isArray: true
      name: assignees
    description: Creates an issue in GitHub.
    name: GitHub-create-issue
    outputs:
    - contextPath: GitHub.Issue.ID
      description: The ID of the created issue.
      type: Number
    - contextPath: GitHub.Issue.Repository
      description: The repository of the created issue.
      type: String
    - contextPath: GitHub.Issue.Title
      description: The title of the created issue.
      type: String
    - contextPath: GitHub.Issue.Body
      description: The body of the created issue.
      type: Unknown
    - contextPath: GitHub.Issue.State
      description: The state of the created issue.
      type: String
    - contextPath: GitHub.Issue.Labels
      description: The labels applied to the issue.
      type: String
    - contextPath: GitHub.Issue.Assignees
      description: The users assigned to this issue.
      type: String
    - contextPath: GitHub.Issue.Created_at
      description: The date the issue was created.
      type: Date
    - contextPath: GitHub.Issue.Updated_at
      description: The date the issue was last updated.
      type: Date
    - contextPath: GitHub.Issue.Closed_at
      description: The date the issue was closed.
      type: Date
    - contextPath: GitHub.Issue.Closed_by
      description: The user who closed the issue.
      type: String
    - contextPath: GitHub.Issue.Organization
      description: The repository organization.
      type: String
  - arguments:
    - description: The number of the issue to close.
      name: ID
      required: true
    description: Closes an existing issue.
    name: GitHub-close-issue
    outputs:
    - contextPath: GitHub.Issue.ID
      description: The ID of the closed issue.
      type: Number
    - contextPath: GitHub.Issue.Repository
      description: The repository of the closed issue.
      type: String
    - contextPath: GitHub.Issue.Title
      description: The title of the closed issue
      type: String
    - contextPath: GitHub.Issue.Body
      description: The body of the closed issue.
      type: Unknown
    - contextPath: GitHub.Issue.State
      description: The state of the closed issue.
      type: String
    - contextPath: GitHub.Issue.Labels
      description: The labels applied to the issue.
      type: String
    - contextPath: GitHub.Issue.Assignees
      description: Users assigned to the issue.
      type: String
    - contextPath: GitHub.Issue.Created_at
      description: The date the issue was created.
      type: Date
    - contextPath: GitHub.Issue.Updated_at
      description: The date the issue was last updated.
      type: Date
    - contextPath: GitHub.Issue.Closed_at
      description: The date the issue was closed.
      type: Date
    - contextPath: GitHub.Issue.Closed_by
      description: The user who closed the issue.
      type: String
    - contextPath: GitHub.Issue.Organization
      description: The repository organization.
      type: String
  - arguments:
    - description: The number of the issue to update.
      name: ID
      required: true
    - description: The title of the issue.
      name: title
    - description: The contents of the issue.
      name: body
    - description: State of the issue. Either open or closed.
      name: state
    - description: 'Labels to apply to this issue. Pass one or more Labels to replace the set of Labels on this Issue. Send an empty array ([]) to clear all Labels from the Issue. '
      isArray: true
      name: labels
    - description: Logins for Users to assign to this issue. Pass one or more user logins to replace the set of assignees on this Issue. Send an empty array ([]) to clear all assignees from the Issue.
      isArray: true
      name: assignees
    description: Updates the parameters of a specified issue.
    name: GitHub-update-issue
    outputs:
    - contextPath: GitHub.Issue.ID
      description: The ID of the updated issue.
      type: Number
    - contextPath: GitHub.Issue.Repository
      description: The repository of the updated issue.
      type: String
    - contextPath: GitHub.Issue.Title
      description: The title of the updated issue.
      type: String
    - contextPath: GitHub.Issue.Body
      description: The body of the updated issue.
      type: Unknown
    - contextPath: GitHub.Issue.State
      description: The state of the updated issue.
      type: String
    - contextPath: GitHub.Issue.Labels
      description: The labels applied to the issue.
      type: String
    - contextPath: GitHub.Issue.Assignees
      description: Users assigned to the issue.
      type: String
    - contextPath: GitHub.Issue.Created_at
      description: The date the issue was created.
      type: Date
    - contextPath: GitHub.Issue.Updated_at
      description: The date the issue was last updated.
      type: Date
    - contextPath: GitHub.Issue.Closed_at
      description: The date the issue was closed.
      type: Date
    - contextPath: GitHub.Issue.Closed_by
      description: The user who closed the issue.
      type: String
    - contextPath: GitHub.Issue.Organization
      description: The repository organization.
      type: String
  - arguments:
    - auto: PREDEFINED
      defaultValue: open
      description: The state of the issues to return. Can be 'open', 'closed' or 'all'. Default is 'open'
      name: state
      predefined:
      - open
      - closed
      - all
      required: true
    - defaultValue: '50'
      description: The number of issues to return. Default is 50. Maximum is 100.
      name: limit
    description: Lists all issues that the user has access to view.
    name: GitHub-list-all-issues
    outputs:
    - contextPath: GitHub.Issue.ID
      description: The ID of the issue.
      type: Number
    - contextPath: GitHub.Issue.Repository
      description: The repository of the issue.
      type: String
    - contextPath: GitHub.Issue.Title
      description: The title of the issue.
      type: String
    - contextPath: GitHub.Issue.Body
      description: The body of the issue.
      type: Unknown
    - contextPath: GitHub.Issue.State
      description: The state of the issue.
      type: String
    - contextPath: GitHub.Issue.Labels
      description: The labels applied to the issue.
      type: String
    - contextPath: GitHub.Issue.Assignees
      description: Users assigned to the issue.
      type: String
    - contextPath: GitHub.Issue.Created_at
      description: The date the issue was created.
      type: Date
    - contextPath: GitHub.Issue.Updated_at
      description: The date the issue was last updated.
      type: Date
    - contextPath: GitHub.Issue.Closed_at
      description: The date the issue was closed.
      type: Date
    - contextPath: GitHub.Issue.Closed_by
      description: The user who closed the issue.
      type: String
    - contextPath: GitHub.Issue.Organization
      description: The repository organization.
      type: String
  - arguments:
    - description: The query line for the search. For more information see the GitHub documentation at https://docs.github.com/en/github/searching-for-information-on-github/searching-code
      name: query
      required: true
    - description: The page number.
      name: page_number
    - description: The size of the requested page. Maximum is 100.
      name: page_size
    - description: The number of results to return. Default is 50.
      name: limit
    description: Searches for code in repositories that match a given query.
    name: GitHub-search-code
    outputs:
    - contextPath: GitHub.CodeSearchResults.name
      description: The file name where the code is found.
      type: String
    - contextPath: GitHub.CodeSearchResults.path
      description: The full file path where the code is found.
      type: String
    - contextPath: GitHub.CodeSearchResults.html_url
      description: The URL to the file.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.full_name
      description: The repository name.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.html_url
      description: The URL to the repository.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.description
      description: The repository description.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.private
      description: True if the repository is private, false if public.
      type: Boolean
    - contextPath: GitHub.CodeSearchResults.repository.id
      description: The ID of the repository.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.releases_url
      description: The URL to the releases of the repository.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.branches_url
      description: The URL to the branches of the repository.
      type: String
    - contextPath: GitHub.CodeSearchResults.repository.commits_url
      description: The URL to the commits of the repository.
      type: String
  - arguments:
    - description: The query line for the search. For more information see the GitHub documentation at https://help.github.com/en/articles/searching-issues-and-pull-requests.
      name: query
      required: true
    - defaultValue: '50'
      description: The number of issues to return. Default is 50. Maximum is 100.
      name: limit
    description: Searches for and returns issues that match a given query.
    name: GitHub-search-issues
    outputs:
    - contextPath: GitHub.Issue.ID
      description: The ID of the issue.
      type: Number
    - contextPath: GitHub.Issue.Repository
      description: The repository of the issue.
      type: String
    - contextPath: GitHub.Issue.Title
      description: The title of the issue.
      type: String
    - contextPath: GitHub.Issue.Body
      description: The body of the issue.
      type: Unknown
    - contextPath: GitHub.Issue.State
      description: The state of the issue.
      type: String
    - contextPath: GitHub.Issue.Labels
      description: The labels applied to the issue.
      type: String
    - contextPath: GitHub.Issue.Assignees
      description: Users assigned to the issue.
      type: String
    - contextPath: GitHub.Issue.Created_at
      description: The date the issue was created.
      type: Date
    - contextPath: GitHub.Issue.Updated_at
      description: The date the issue was last updated.
      type: Date
    - contextPath: GitHub.Issue.Closed_at
      description: The date the issue was closed.
      type: Date
    - contextPath: GitHub.Issue.Closed_by
      description: The user who closed the issue.
      type: String
    - contextPath: GitHub.Issue.Organization
      description: The repository organization.
      type: String
  - description: Returns the total number of downloads for all releases for the specified repository.
    name: GitHub-get-download-count
    outputs:
    - contextPath: GitHub.Release.ID
      description: ID of the release.
      type: Number
    - contextPath: GitHub.Release.Download_count
      description: The download count for the release.
      type: Number
    - contextPath: GitHub.Release.Name
      description: The name of the release.
      type: String
    - contextPath: GitHub.Release.Body
      description: The body of the release.
      type: String
    - contextPath: GitHub.Release.Created_at
      description: The date when the release was created.
      type: Date
    - contextPath: GitHub.Release.Published_at
      description: The date when the release was published.
      type: Date
  - arguments:
    - default: true
      defaultValue: 3 days
      description: Time of inactivity after which a PR is considered stale
      name: stale_time
      required: true
    - description: The label used to identify PRs of interest
      name: label
    description: Gets inactive pull requests
    name: GitHub-get-stale-prs
    outputs:
    - contextPath: GitHub.PR.URL
      description: The html URL of the PR
      type: String
    - contextPath: GitHub.PR.Number
      description: The GitHub pull request number
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer
      description: A list of the PR's requested reviewers
      type: Unknown
  - arguments:
    - description: The name of the branch to retrieve
      name: branch_name
      required: true
    description: Gets a branch
    name: GitHub-get-branch
    outputs:
    - contextPath: GitHub.Branch.Name
      description: The name of the branch.
      type: String
    - contextPath: GitHub.Branch.CommitSHA
      description: The SHA of the commit the branch references.
      type: String
    - contextPath: GitHub.Branch.CommitNodeID
      description: The Node ID of the commit the branch references.
      type: String
    - contextPath: GitHub.Branch.CommitAuthorID
      description: The GitHub ID number of the author of the commit the branch references.
      type: Number
    - contextPath: GitHub.Branch.CommitAuthorLogin
      description: The GitHub login of the author of the commit the branch references.
      type: String
    - contextPath: GitHub.Branch.CommitParentSHA
      description: The SHAs of parent commits.
      type: String
    - contextPath: GitHub.Branch.Protected
      description: Whether the branch is protected.
      type: Boolean
  - arguments:
    - description: The name for the new branch
      name: branch_name
      required: true
    - description: The SHA hash of the commit to reference. Try executing the 'GitHub-get-branch' command to find a commit SHA hash to reference.
      name: commit_sha
      required: true
    description: Create a new branch.
    name: GitHub-create-branch
  - arguments:
    - description: The ID number by which the team is identified. Try executing the 'GitHub-list-teams' command to find team IDs to reference.
      name: team_id
      required: true
    - description: The login of the user whose membership you wish to check
      name: user_name
      required: true
    description: Retrieves a user membership status with a team.
    name: GitHub-get-team-membership
    outputs:
    - contextPath: GitHub.Team.Member.Role
      description: The user's role on a team.
      type: String
    - contextPath: GitHub.Team.Member.State
      description: The user's state for a team.
      type: String
    - contextPath: GitHub.Team.ID
      description: The ID number of the team.
      type: Number
    - contextPath: GitHub.Team.Member.Login
      description: The login of the team member.
      type: String
  - arguments:
    - description: The number of the pull request you want to request review for.
      name: pull_number
      required: true
    - description: A CSV list of GitHub users to request review from for a pull request.
      isArray: true
      name: reviewers
      required: true
    description: Requests reviews from GitHub users for a given pull request.
    name: GitHub-request-review
    outputs:
    - contextPath: GitHub.PR.Number
      description: The number of the pull request.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.Login
      description: The login of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.ID
      description: The ID of the user requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.NodeID
      description: The node ID of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.Type
      description: The type of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.SiteAdmin
      description: Whether the user requested for review is a site admin.
      type: Boolean
  - arguments:
    - description: The number of the issue to comment on.
      name: issue_number
      required: true
    - description: The contents of the comment.
      name: body
      required: true
    description: Creates a comment for a given issue.
    name: GitHub-create-comment
    outputs:
    - contextPath: GitHub.Comment.IssueNumber
      description: The number of the issue to which the comment belongs.
      type: Number
    - contextPath: GitHub.Comment.ID
      description: The ID of the comment.
      type: Number
    - contextPath: GitHub.Comment.NodeID
      description: The node ID of the comment.
      type: String
    - contextPath: GitHub.Comment.Body
      description: The body content of the comment.
      type: String
    - contextPath: GitHub.Comment.User.Login
      description: The login of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.ID
      description: The ID of the user who commented.
      type: Number
    - contextPath: GitHub.Comment.User.NodeID
      description: The node ID of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.Type
      description: The type of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.SiteAdmin
      description: Whether the user who commented is a site admin.
      type: Boolean
  - arguments:
    - description: The number of the issue to list comments for.
      name: issue_number
      required: true
    - description: 'Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.'
      name: since
    description: Lists comments on an issue.
    name: GitHub-list-issue-comments
    outputs:
    - contextPath: GitHub.Comment.IssueNumber
      description: The number of the issue to which the comment belongs.
      type: Number
    - contextPath: GitHub.Comment.ID
      description: The ID of the comment.
      type: Number
    - contextPath: GitHub.Comment.NodeID
      description: The node ID of the comment.
      type: String
    - contextPath: GitHub.Comment.Body
      description: The body content of the comment.
      type: String
    - contextPath: GitHub.Comment.User.Login
      description: The login of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.ID
      description: The ID of the user who commented.
      type: Number
    - contextPath: GitHub.Comment.User.NodeID
      description: The node ID of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.Type
      description: The type of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.SiteAdmin
      description: Whether the user who commented is a site admin.
      type: Boolean
  - arguments:
    - description: The number of the pull request.
      name: pull_number
      required: true
    - description: The name of the organization.
      name: organization
    - description: The repository of the pull request.
      name: repository
    description: Lists the pull request files.
    name: GitHub-list-pr-files
    outputs:
    - contextPath: GitHub.PR.Number
      description: The number of the pull request.
      type: Number
    - contextPath: GitHub.PR.File.SHA
      description: The SHA hash of the last commit involving the file.
      type: String
    - contextPath: GitHub.PR.File.Name
      description: The name of the file.
      type: String
    - contextPath: GitHub.PR.File.Status
      description: The status of the file.
      type: String
    - contextPath: GitHub.PR.File.Additions
      description: The number of additions to the file.
      type: Number
    - contextPath: GitHub.PR.File.Deletions
      description: The number of deletions in the file.
      type: Number
    - contextPath: GitHub.PR.File.Changes
      description: The number of changes made in the file.
      type: Number
  - arguments:
    - description: The number of the pull request.
      name: pull_number
      required: true
    description: Lists reviews on a pull request.
    name: GitHub-list-pr-reviews
    outputs:
    - contextPath: GitHub.PR.Number
      description: The number of the pull request.
      type: Number
    - contextPath: GitHub.PR.Review.ID
      description: The ID of the review.
      type: Number
    - contextPath: GitHub.PR.Review.NodeID
      description: The node ID of the review.
      type: String
    - contextPath: GitHub.PR.Review.Body
      description: The content of the review.
      type: String
    - contextPath: GitHub.PR.Review.CommitID
      description: The ID of the commit the review is for.
      type: String
    - contextPath: GitHub.PR.Review.State
      description: The state of the review.
      type: String
    - contextPath: GitHub.PR.Review.User.Login
      description: The reviewer's user login.
      type: String
    - contextPath: GitHub.PR.Review.User.ID
      description: The reviewer's user ID.
      type: Number
    - contextPath: GitHub.PR.Review.User.NodeID
      description: The reviewer's user node ID.
      type: String
    - contextPath: GitHub.PR.Review.User.Type
      description: The reviewer user type.
      type: String
    - contextPath: GitHub.PR.Review.User.SiteAdmin
      description: Whether the reviewer is a site admin.
      type: Boolean
  - arguments:
    - description: The SHA hash of the commit. Try executing the 'GitHub-get-branch' command to find a commit SHA hash to reference.
      name: commit_sha
      required: true
    description: Gets a commit.
    name: GitHub-get-commit
    outputs:
    - contextPath: GitHub.Commit.SHA
      description: The SHA hash of the commit.
      type: String
    - contextPath: GitHub.Commit.Author.Date
      description: The commit author date.
      type: String
    - contextPath: GitHub.Commit.Author.Name
      description: The name of the author.
      type: String
    - contextPath: GitHub.Commit.Author.Email
      description: The email of the author.
      type: String
    - contextPath: GitHub.Commit.Committer.Date
      description: The date the committer committed.
      type: String
    - contextPath: GitHub.Commit.Committer.Name
      description: The name of the committer.
      type: String
    - contextPath: GitHub.Commit.Committer.Email
      description: The email of the committer.
      type: String
    - contextPath: GitHub.Commit.Message
      description: The message associated with the commit.
      type: String
    - contextPath: GitHub.Commit.Parent
      description: Lists of parent SHA hashes.
      type: Unknown
    - contextPath: GitHub.Commit.TreeSHA
      description: The SHA hash of the commit's tree.
      type: String
    - contextPath: GitHub.Commit.Verification.Verified
      description: Whether the commit was verified.
      type: Boolean
    - contextPath: GitHub.Commit.Verification.Reason
      description: The reason why the commit was or was not verified.
      type: String
    - contextPath: GitHub.Commit.Verification.Signature
      description: The commit verification signature.
      type: Unknown
    - contextPath: GitHub.Commit.Verification.Payload
      description: The commit verification payload.
      type: Unknown
  - arguments:
    - description: The number of the issue to add labels to.
      name: issue_number
      required: true
    - description: A CSV list of labels to add to an issue.
      isArray: true
      name: labels
      required: true
    description: Adds labels to an issue.
    name: GitHub-add-label
  - arguments:
    - description: The number of the pull request to retrieve.
      name: pull_number
      required: true
    - description: The name of the organization.
      name: organization
    - description: The repository of the pull request.
      name: repository
    description: Gets a pull request.
    name: GitHub-get-pull-request
    outputs:
    - contextPath: GitHub.PR.ID
      description: The ID number of the pull request.
      type: Number
    - contextPath: GitHub.PR.NodeID
      description: The node ID of the pull request.
      type: String
    - contextPath: GitHub.PR.Number
      description: The issue number of the pull request.
      type: Number
    - contextPath: GitHub.PR.State
      description: The state of the pull request.
      type: String
    - contextPath: GitHub.PR.Locked
      description: Whether the pull request is locked.
      type: Boolean
    - contextPath: GitHub.PR.Title
      description: The title of the pull request.
      type: String
    - contextPath: GitHub.PR.User.Login
      description: The login of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.ID
      description: The ID of the user who opened the pull request.
      type: Number
    - contextPath: GitHub.PR.User.NodeID
      description: The node ID of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.Type
      description: The type of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.SiteAdmin
      description: Whether the user who opened the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.Body
      description: The body content of the pull request.
      type: String
    - contextPath: GitHub.PR.Label.ID
      description: The ID of the label.
      type: Number
    - contextPath: GitHub.PR.Label.NodeID
      description: The node ID of the label.
      type: String
    - contextPath: GitHub.PR.Label.Name
      description: The name of the label.
      type: String
    - contextPath: GitHub.PR.Label.Description
      description: The description of the label.
      type: String
    - contextPath: GitHub.PR.Label.Color
      description: The hex color value of the label.
      type: String
    - contextPath: GitHub.PR.Label.Default
      description: Whether the label is a default.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.ID
      description: The ID of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.NodeID
      description: The node ID of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Number
      description: The number of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.State
      description: The state of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Title
      description: The title of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Description
      description: The description of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Login
      description: The login of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.ID
      description: The ID the milestone creator.
      type: Number
    - contextPath: GitHub.PR.Milestone.Creator.NodeID
      description: The node ID of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Type
      description: The type of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.SiteAdmin
      description: Whether the milestone creator is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.OpenIssues
      description: The number of open issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.ClosedIssues
      description: The number of closed issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.CreatedAt
      description: The date the milestone was created.
      type: String
    - contextPath: GitHub.PR.Milestone.UpdatedAt
      description: The date the milestone was updated.
      type: String
    - contextPath: GitHub.PR.Milestone.ClosedAt
      description: The date the milestone was closed.
      type: String
    - contextPath: GitHub.PR.Milestone.DueOn
      description: The due date for the milestone.
      type: String
    - contextPath: GitHub.PR.ActiveLockReason
      description: The reason the pull request is locked.
      type: String
    - contextPath: GitHub.PR.CreatedAt
      description: The date the pull request was created.
      type: String
    - contextPath: GitHub.PR.UpdatedAt
      description: The date the pull request was updated.
      type: String
    - contextPath: GitHub.PR.ClosedAt
      description: The date the pull request was closed.
      type: String
    - contextPath: GitHub.PR.MergedAt
      description: The date the pull request was merged.
      type: String
    - contextPath: GitHub.PR.MergeCommitSHA
      description: The SHA hash of the pull request's merge commit.
      type: String
    - contextPath: GitHub.PR.Assignee.Login
      description: The login of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.ID
      description: The ID of the user assigned to the pull request.
      type: Number
    - contextPath: GitHub.PR.Assignee.NodeID
      description: The node ID of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.Type
      description: The type of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.SiteAdmin
      description: Whether the user assigned to the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.RequestedReviewer.Login
      description: The login of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.ID
      description: The ID of the user requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.NodeID
      description: The node ID of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.Type
      description: The type of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.SiteAdmin
      description: Whether the user requested for review is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.RequestedTeam.ID
      description: The ID of the team requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedTeam.NodeID
      description: The node ID of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Name
      description: The name of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Slug
      description: The slug of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Description
      description: The description of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Privacy
      description: The privacy setting of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Permission
      description: The permissions of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Parent
      description: The parent of the team requested for review.
      type: Unknown
    - contextPath: GitHub.PR.Head.Label
      description: The label of the branch that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.Ref
      description: The reference of the branch that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.SHA
      description: The SHA hash of the commit that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.User.Login
      description: The login of the committer of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.ID
      description: The ID of the committer of the HEAD commit of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.User.NodeID
      description: The node ID of the committer of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.Type
      description: The type of the committer of the HEAD commit of the checked out. branch.
      type: String
    - contextPath: GitHub.PR.Head.User.SiteAdmin
      description: Whether the committer of the HEAD commit of the checked out branch is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.ID
      description: The ID of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.NodeID
      description: The node ID of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Name
      description: The name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.FullName
      description: The full name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Login
      description: The user login of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.ID
      description: The user ID of the owner of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Type
      description: The user type of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository of the checked out branch is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Private
      description: Whether the repository of the checked out branch is private or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Description
      description: The description of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Fork
      description: Whether the repository of the checked out branch is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Language
      description: The language of the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.ForksCount
      description: The number of forks of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.StargazersCount
      description: The number of stars of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.WatchersCount
      description: The number of entities watching the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Size
      description: The size of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.DefaultBranch
      description: The default branch of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.OpenIssuesCount
      description: The open issues of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Topics
      description: The topics listed for the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.HasIssues
      description: Whether the repository of the checked out branch has issues or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasProjects
      description: Whether the repository of the checked out branch has projects or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasWiki
      description: Whether the repository of the checked out branch has a wiki or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasPages
      description: Whether the repository of the checked out branch has pages.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasDownloads
      description: Whether the repository of the checked out branch has downloads .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Archived
      description: Whether the repository of the checked out branch has been arvhived .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Disabled
      description: Whether the repository of the checked out branch has been disabled .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.PushedAt
      description: The date of the latest push to the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.CreatedAt
      description: The date of creation of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.UpdatedAt
      description: The date the repository of the checked out branch was last updated.
      type: String
    - contextPath: GitHub.PR.Head.Repo.AllowRebaseMerge
      description: Whether the repository of the checked out branch permits rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowSquashMerge
      description: Whether the repository of the checked out branch permits squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowMergeCommit
      description: Whether the repository of the checked out branch permits merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.SubscribersCount
      description: The number of entities subscribing to the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Base.Label
      description: The label of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.Ref
      description: The reference of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.SHA
      description: The SHA hash of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.User.Login
      description: The login of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.ID
      description: The ID of the committer of the commit that the base branch points to.
      type: Number
    - contextPath: GitHub.PR.Base.User.NodeID
      description: The node ID of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.Type
      description: The user type of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.SiteAdmin
      description: Whether the committer of the commit that the base branch points to is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.ID
      description: The ID of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.NodeID
      description: The node ID of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Name
      description: The name of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.FullName
      description: The full name of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Login
      description: The user login of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.ID
      description: The user ID of the owner of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Type
      description: The user type of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository that the base branch belongs to is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Private
      description: Whether the repository that the base branch belongs to is private .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Description
      description: The description of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Fork
      description: Whether the repository that the base branch belongs to is a fork .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Language
      description: The language of the repository that the base branch belongs to.
      type: Unknown
    - contextPath: GitHub.PR.Base.Repo.ForksCount
      description: The number of times that the repository that the base branch belongs to has been forked.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.StargazersCount
      description: The number of times that the repository that the base branch belongs to has been starred.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.WatchersCount
      description: The number of entities watching the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Size
      description: The size of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.DefaultBranch
      description: The default branch of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.OpenIssuesCount
      description: The number of open issues in the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Topics
      description: The topics listed for the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.HasIssues
      description: Whether the repository that the base branch belongs to has issues .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasProjects
      description: Whether the repository that the base branch belongs to has projects .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasWiki
      description: Whether the repository that the base branch belongs to has a wiki .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasPages
      description: Whether the repository that the base branch belongs to has pages .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasDownloads
      description: Whether the repository that the base branch belongs to has downloads .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Archived
      description: Whether the repository that the base branch belongs to is archived .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Disabled
      description: Whether the repository that the base branch belongs to is disabled .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.PushedAt
      description: The date that the repository that the base branch belongs to was last pushed to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.CreatedAt
      description: The date of creation of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.UpdatedAt
      description: The date that the repository that the base branch belongs to was last updated.
      type: String
    - contextPath: GitHub.PR.Base.Repo.AllowRebaseMerge
      description: Whether the repository that the base branch belongs to allows rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowSquashMerge
      description: Whether the repository that the base branch belongs to allows squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowMergeCommit
      description: Whether the repository that the base branch belongs to allows merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.SubscribersCount
      description: The number of entities that subscribe to the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.AuthorAssociation
      description: The pull request author association.
      type: String
    - contextPath: GitHub.PR.Draft
      description: Whether the pull request is a draft.
      type: Boolean
    - contextPath: GitHub.PR.Merged
      description: Whether the pull request is merged.
      type: Boolean
    - contextPath: GitHub.PR.Mergeable
      description: Whether the pull request is mergeable.
      type: Boolean
    - contextPath: GitHub.PR.Rebaseable
      description: Whether the pull request is rebaseable.
      type: Boolean
    - contextPath: GitHub.PR.MergeableState
      description: The mergeable state of the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Login
      description: The login of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.ID
      description: The ID of the user who merged the pull request.
      type: Number
    - contextPath: GitHub.PR.MergedBy.NodeID
      description: The node ID of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Type
      description: The type of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.SiteAdmin
      description: Whether the user who merged the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.Comments
      description: The number of comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.ReviewComments
      description: The number of review comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.MaintainerCanModify
      description: Whether the maintainer can modify the pull request.
      type: Boolean
    - contextPath: GitHub.PR.Commits
      description: The number of commits in the pull request.
      type: Number
    - contextPath: GitHub.PR.Additions
      description: The number of additions in the pull request.
      type: Number
    - contextPath: GitHub.PR.Deletions
      description: The number of deletions in the pull request.
      type: Number
    - contextPath: GitHub.PR.ChangedFiles
      description: The number of changed files in the pull request.
      type: Number
  - arguments:
    - description: The name of the organization.
      name: organization
      required: true
    description: Lists the teams for an organization. Note that this API call is only available to authenticated members of the organization.
    name: GitHub-list-teams
    outputs:
    - contextPath: GitHub.Team.ID
      description: The ID of the team.
      type: Number
    - contextPath: GitHub.Team.NodeID
      description: The node ID of the team.
      type: String
    - contextPath: GitHub.Team.Name
      description: The name of the team.
      type: String
    - contextPath: GitHub.Team.Slug
      description: The slug of the team.
      type: String
    - contextPath: GitHub.Team.Description
      description: The description of the team.
      type: String
    - contextPath: GitHub.Team.Privacy
      description: The privacy setting of the team.
      type: String
    - contextPath: GitHub.Team.Permission
      description: The permissions of the team.
      type: String
    - contextPath: GitHub.Team.Parent
      description: The parent of the team.
      type: Unknown
  - arguments:
    - description: The name of the branch to delete.
      name: branch_name
      required: true
    description: Deletes a branch.
    name: GitHub-delete-branch
  - arguments:
    - description: The issue number of the pull request.
      name: pull_number
      required: true
    description: Lists all the review comments for a pull request.
    name: GitHub-list-pr-review-comments
    outputs:
    - contextPath: GitHub.PR.Number
      description: The issue number of the pull request.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.ID
      description: The ID number of the pull request review comment.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.NodeID
      description: The Node ID of the pull request review comment.
      type: String
    - contextPath: GitHub.PR.ReviewComment.PullRequestReviewID
      description: The ID of the pull request review.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.DiffHunk
      description: The diff hunk the review comment applies to.
      type: String
    - contextPath: GitHub.PR.ReviewComment.Path
      description: The file path of the proposed file changes the review comment applies to.
      type: String
    - contextPath: GitHub.PR.ReviewComment.Position
      description: The position of the change the review comment applies to.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.OriginalPosition
      description: The original position of the change the review comment applies to.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.CommitID
      description: The commit ID of the proposed change.
      type: String
    - contextPath: GitHub.PR.ReviewComment.OriginalCommitID
      description: The commit ID of the commit before the proposed change.
      type: String
    - contextPath: GitHub.PR.ReviewComment.InReplyToID
      description: The reply ID of the comment the review comment applies to.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.User.Login
      description: The login of the user who created the review comment.
      type: String
    - contextPath: GitHub.PR.ReviewComment.User.ID
      description: The ID of the user who created the review comment.
      type: Number
    - contextPath: GitHub.PR.ReviewComment.User.NodeID
      description: The Node ID of the user who created the review comment.
      type: String
    - contextPath: GitHub.PR.ReviewComment.User.Type
      description: The type of the user who created the review comment.
      type: String
    - contextPath: GitHub.PR.ReviewComment.User.SiteAdmin
      description: Whether the user who created the review comment is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.ReviewComment.Body
      description: The body content of the review comment.
      type: String
    - contextPath: GitHub.PR.ReviewComment.CreatedAt
      description: The time the review comment was created.
      type: String
    - contextPath: GitHub.PR.ReviewComment.UpdatedAt
      description: The time the review comment was updated.
      type: String
    - contextPath: GitHub.PR.ReviewComment.AuthorAssociation
      description: The association of the user who created the review comment.
      type: String
  - arguments:
    - description: The new title of the pull request.
      name: title
    - description: The new body content of the pull request.
      name: body
    - auto: PREDEFINED
      description: The new state of the pull request. Can be "open", or "closed".
      name: state
      predefined:
      - open
      - closed
    - description: The name of the branch to pull your changes from. It must be an existing branch in the current repository. You cannot update the base branch in a pull request to point to another repository.
      name: base
    - auto: PREDEFINED
      description: Indicates whether maintainers can modify the pull request.
      name: maintainer_can_modify
      predefined:
      - 'true'
      - 'false'
    - description: The issue number of the pull request to modify.
      name: pull_number
      required: true
    description: Updates a pull request in a repository.
    name: GitHub-update-pull-request
    outputs:
    - contextPath: GitHub.PR.ID
      description: The ID number of the pull request.
      type: Number
    - contextPath: GitHub.PR.NodeID
      description: The Node ID of the pull request.
      type: String
    - contextPath: GitHub.PR.Number
      description: The issue number of the pull request.
      type: Number
    - contextPath: GitHub.PR.State
      description: The state of the pull request.
      type: String
    - contextPath: GitHub.PR.Locked
      description: Whether the pull request is locked.
      type: Boolean
    - contextPath: GitHub.PR.Title
      description: The title of the pull request.
      type: String
    - contextPath: GitHub.PR.User.Login
      description: The login of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.ID
      description: The ID of the user who opened the pull request.
      type: Number
    - contextPath: GitHub.PR.User.NodeID
      description: The Node ID of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.Type
      description: The type of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.SiteAdmin
      description: Whether the user who opened the pull request is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Body
      description: The body content of the pull request.
      type: String
    - contextPath: GitHub.PR.Label.ID
      description: The ID of the label.
      type: Number
    - contextPath: GitHub.PR.Label.NodeID
      description: The Node ID of the label.
      type: String
    - contextPath: GitHub.PR.Label.Name
      description: The name of the label.
      type: String
    - contextPath: GitHub.PR.Label.Description
      description: The description of the label.
      type: String
    - contextPath: GitHub.PR.Label.Color
      description: The hex color value of the label.
      type: String
    - contextPath: GitHub.PR.Label.Default
      description: Whether the label is a default.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.ID
      description: The ID of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.NodeID
      description: The Node ID of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Number
      description: The number of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.State
      description: The state of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Title
      description: The title of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Description
      description: The description of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Login
      description: The login of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.ID
      description: The ID the milestone creator.
      type: Number
    - contextPath: GitHub.PR.Milestone.Creator.NodeID
      description: The Node ID of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Type
      description: The type of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.SiteAdmin
      description: Whether the milestone creator is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.OpenIssues
      description: The number of open issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.ClosedIssues
      description: The number of closed issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.CreatedAt
      description: The date the milestone was created.
      type: String
    - contextPath: GitHub.PR.Milestone.UpdatedAt
      description: The date the milestone was updated.
      type: String
    - contextPath: GitHub.PR.Milestone.ClosedAt
      description: The date the milestone was closed.
      type: String
    - contextPath: GitHub.PR.Milestone.DueOn
      description: The due date for the milestone.
      type: String
    - contextPath: GitHub.PR.ActiveLockReason
      description: The reason the pull request is locked.
      type: String
    - contextPath: GitHub.PR.CreatedAt
      description: The date the pull request was created.
      type: String
    - contextPath: GitHub.PR.UpdatedAt
      description: The date the pull request was updated.
      type: String
    - contextPath: GitHub.PR.ClosedAt
      description: The date the pull request was closed.
      type: String
    - contextPath: GitHub.PR.MergedAt
      description: The date the pull request was merged.
      type: String
    - contextPath: GitHub.PR.MergeCommitSHA
      description: The SHA hash of the pull request's merge commit.
      type: String
    - contextPath: GitHub.PR.Assignee.Login
      description: The login of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.ID
      description: The ID of the user assigned to the pull request.
      type: Number
    - contextPath: GitHub.PR.Assignee.NodeID
      description: The Node ID of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.Type
      description: The type of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.SiteAdmin
      description: Whether the user assigned to the pull request is a site administrator. not
      type: Boolean
    - contextPath: GitHub.PR.RequestedReviewer.Login
      description: The login of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.ID
      description: The ID of the user requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.NodeID
      description: The Node ID of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.Type
      description: The type of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.SiteAdmin
      description: Whether the user requested for review is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.RequestedTeam.ID
      description: The ID of the team requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedTeam.NodeID
      description: The Node ID of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Name
      description: The name of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Slug
      description: The slug of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Description
      description: The description of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Privacy
      description: The privacy setting of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Permission
      description: The permissions of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Parent
      description: The parent of the team requested for review.
      type: Unknown
    - contextPath: GitHub.PR.Head.Label
      description: The label of the branch the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.Ref
      description: The reference of the branch the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.SHA
      description: The SHA hash of the commit the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.User.Login
      description: The committer login of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.ID
      description: The committer ID of the HEAD commit of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.User.NodeID
      description: The Node committer ID of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.Type
      description: The committer type of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.SiteAdmin
      description: Whether the committer of the HEAD commit of the checked out branch is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.ID
      description: The ID of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.NodeID
      description: The Node ID of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Name
      description: The name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.FullName
      description: The full name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Login
      description: The user login of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.ID
      description: The user ID of the owner of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Type
      description: The user type of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository of the checked out branch is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Private
      description: Whether the repository of the checked out branch is private.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Description
      description: The description of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Fork
      description: Whether the repository of the checked out branch is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Language
      description: The language of the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.ForksCount
      description: The number of forks of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.StargazersCount
      description: The number of stars of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.WatchersCount
      description: The number of entities watching the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Size
      description: The size of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.DefaultBranch
      description: The default branch of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.OpenIssuesCount
      description: The open issues of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Topics
      description: The topics listed for the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.HasIssues
      description: Whether the repository of the checked out branch has issues.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasProjects
      description: Whether the repository of the checked out branch has projects.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasWiki
      description: Whether the repository of the checked out branch has a wiki.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasPages
      description: Whether the repository of the checked out branch has pages.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasDownloads
      description: Whether the repository of the checked out branch has downloads.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Archived
      description: Whether the repository of the checked out branch has been archived.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Disabled
      description: Whether the repository of the checked out branch has been disabled.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.PushedAt
      description: The date of the latest push to the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.CreatedAt
      description: The date of creation of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.UpdatedAt
      description: The date the repository of the checked out branch was last updated.
      type: String
    - contextPath: GitHub.PR.Head.Repo.AllowRebaseMerge
      description: Whether the repository of the checked out branch permits rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowSquashMerge
      description: Whether the repository of the checked out branch permits squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowMergeCommit
      description: Whether the repository of the checked out branch permits merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.SubscribersCount
      description: The number of entities subscribing to the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Base.Label
      description: The label of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.Ref
      description: The reference of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.SHA
      description: The SHA hash of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.User.Login
      description: The committer login of the commit the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.ID
      description: The ID of the committer of the commit the base branch points to.
      type: Number
    - contextPath: GitHub.PR.Base.User.NodeID
      description: The committer Node ID of the commit the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.Type
      description: The user committer type of the commit the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.SiteAdmin
      description: Whether the committer of the commit the base branch points to is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.ID
      description: The ID of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.NodeID
      description: The Node ID of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Name
      description: The name of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.FullName
      description: The full name of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Login
      description: The user login of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.ID
      description: The user ID of the owner of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Type
      description: The user type of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository the base branch belongs to is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Private
      description: Whether the repository the base branch belongs to is private.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Description
      description: The description of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Fork
      description: Whether the repository the base branch belongs to is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Language
      description: The language of the repository the base branch belongs to.
      type: Unknown
    - contextPath: GitHub.PR.Base.Repo.ForksCount
      description: The number of times that the repository the base branch belongs to has been forked.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.StargazersCount
      description: The number of times that the repository the base branch belongs to has been starred.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.WatchersCount
      description: The number of entities watching the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Size
      description: The size of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.DefaultBranch
      description: The default branch of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.OpenIssuesCount
      description: The number of open issues in the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Topics
      description: The topics listed for the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.HasIssues
      description: Whether the repository the base branch belongs to has issues.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasProjects
      description: Whether the repository the base branch belongs to has projects.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasWiki
      description: Whether the repository the base branch belongs to has a wiki.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasPages
      description: Whether the repository the base branch belongs to has pages.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasDownloads
      description: Whether the repository the base branch belongs to has downloads.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Archived
      description: Whether the repository the base branch belongs to is archived.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Disabled
      description: Whether the repository the base branch belongs to is disabled.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.PushedAt
      description: The date that the repository the base branch belongs to was last pushed.
      type: String
    - contextPath: GitHub.PR.Base.Repo.CreatedAt
      description: The date of creation of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.UpdatedAt
      description: The date that the repository the base branch belongs to was last updated.
      type: String
    - contextPath: GitHub.PR.Base.Repo.AllowRebaseMerge
      description: Whether the repository the base branch belongs to allows rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowSquashMerge
      description: Whether the repository the base branch belongs to allows squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowMergeCommit
      description: Whether the repository the base branch belongs to allows merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.SubscribersCount
      description: The number of entities subscribe to the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.AuthorAssociation
      description: The pull request author association.
      type: String
    - contextPath: GitHub.PR.Draft
      description: Whether the pull request is a draft.
      type: Boolean
    - contextPath: GitHub.PR.Merged
      description: Whether the pull request is merged.
      type: Boolean
    - contextPath: GitHub.PR.Mergeable
      description: Whether the pull request is mergeable.
      type: Boolean
    - contextPath: GitHub.PR.Rebaseable
      description: Whether the pull request is rebaseable.
      type: Boolean
    - contextPath: GitHub.PR.MergeableState
      description: The mergeable state of the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Login
      description: The login of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.ID
      description: The ID of the user who merged the pull request.
      type: Number
    - contextPath: GitHub.PR.MergedBy.NodeID
      description: The Node ID of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Type
      description: The type of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.SiteAdmin
      description: Whether the user who merged the pull request is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Comments
      description: The number of comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.ReviewComments
      description: The number of review comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.MaintainerCanModify
      description: Whether the maintainer can modify the pull request.
      type: Boolean
    - contextPath: GitHub.PR.Commits
      description: The number of commits in the pull request.
      type: Number
    - contextPath: GitHub.PR.Additions
      description: The number of additions in the pull request.
      type: Number
    - contextPath: GitHub.PR.Deletions
      description: The number of deletions in the pull request.
      type: Number
    - contextPath: GitHub.PR.ChangedFiles
      description: The number of changed files in the pull request.
      type: Number
  - arguments:
    - description: The issue number of the pull request to check.
      name: pull_number
      required: true
    description: 'Returns a merged pull request. If the pull request has been merged, the API returns ''Status: 204 No Content''. If the pull request has not been merged the API returns ''Status: 404 Not Found'''
    name: GitHub-is-pr-merged
  - arguments:
    - description: The title of the pull request.
      name: title
      required: true
    - description: The name of the branch where the changes are made.
      name: head
      required: true
    - description: The name of the branch you want the changes pulled into, which must be an existing branch on the current repository.
      name: base
      required: true
    - description: The contents of the pull request.
      name: body
    - auto: PREDEFINED
      description: Indicates whether maintainers can modify the pull request.
      name: maintainer_can_modify
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Indicates whether the pull request is a draft. For more information, see https://help.github.com/en/articles/about-pull-requests#draft-pull-requests.
      name: draft
      predefined:
      - 'true'
      - 'false'
    description: Creates a new pull request.
    name: GitHub-create-pull-request
    outputs:
    - contextPath: GitHub.PR.ID
      description: The ID number of the pull request.
      type: Number
    - contextPath: GitHub.PR.NodeID
      description: The Node ID of the pull request.
      type: String
    - contextPath: GitHub.PR.Number
      description: The issue number of the pull request.
      type: Number
    - contextPath: GitHub.PR.State
      description: The state of the pull request.
      type: String
    - contextPath: GitHub.PR.Locked
      description: Whether the pull request is locked.
      type: Boolean
    - contextPath: GitHub.PR.Title
      description: The title of the pull request.
      type: String
    - contextPath: GitHub.PR.User.Login
      description: The login of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.ID
      description: The ID of the user who opened the pull request.
      type: Number
    - contextPath: GitHub.PR.User.NodeID
      description: The Node ID of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.Type
      description: The user type who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.SiteAdmin
      description: Whether the user who opened the pull request is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Body
      description: The body content of the pull request.
      type: String
    - contextPath: GitHub.PR.Label.ID
      description: The ID of the label.
      type: Number
    - contextPath: GitHub.PR.Label.NodeID
      description: The Node ID of the label.
      type: String
    - contextPath: GitHub.PR.Label.Name
      description: The name of the label.
      type: String
    - contextPath: GitHub.PR.Label.Description
      description: The description of the label.
      type: String
    - contextPath: GitHub.PR.Label.Color
      description: The hex color value of the label.
      type: String
    - contextPath: GitHub.PR.Label.Default
      description: Whether the label is a default.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.ID
      description: The ID of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.NodeID
      description: The Node ID of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Number
      description: The number of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.State
      description: The state of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Title
      description: The title of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Description
      description: The description of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Login
      description: The login of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.ID
      description: The ID the milestone creator.
      type: Number
    - contextPath: GitHub.PR.Milestone.Creator.NodeID
      description: The Node ID of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Type
      description: The type of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.SiteAdmin
      description: Whether the milestone creator is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.OpenIssues
      description: The number of open issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.ClosedIssues
      description: The number of closed issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.CreatedAt
      description: The date the milestone was created.
      type: String
    - contextPath: GitHub.PR.Milestone.UpdatedAt
      description: The date the milestone was updated.
      type: String
    - contextPath: GitHub.PR.Milestone.ClosedAt
      description: The date the milestone was closed.
      type: String
    - contextPath: GitHub.PR.Milestone.DueOn
      description: The due date for the milestone.
      type: String
    - contextPath: GitHub.PR.ActiveLockReason
      description: The reason the pull request is locked.
      type: String
    - contextPath: GitHub.PR.CreatedAt
      description: The date the pull request was created.
      type: String
    - contextPath: GitHub.PR.UpdatedAt
      description: The date the pull request was updated.
      type: String
    - contextPath: GitHub.PR.ClosedAt
      description: The date the pull request was closed.
      type: String
    - contextPath: GitHub.PR.MergedAt
      description: The date the pull request was merged.
      type: String
    - contextPath: GitHub.PR.MergeCommitSHA
      description: The SHA hash of the pull request's merge commit.
      type: String
    - contextPath: GitHub.PR.Assignee.Login
      description: The login of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.ID
      description: The ID of the user assigned to the pull request.
      type: Number
    - contextPath: GitHub.PR.Assignee.NodeID
      description: The Node ID of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.Type
      description: The type of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.SiteAdmin
      description: Whether the user assigned to the pull request is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.RequestedReviewer.Login
      description: The login of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.ID
      description: The ID of the user requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.NodeID
      description: The Node ID of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.Type
      description: The type of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.SiteAdmin
      description: Whether the user requested for review is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.RequestedTeam.ID
      description: The ID of the team requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedTeam.NodeID
      description: The Node ID of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Name
      description: The name of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Slug
      description: The slug of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Description
      description: The description of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Privacy
      description: The privacy setting of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Permission
      description: The permissions of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Parent
      description: The parent of the team requested for review.
      type: Unknown
    - contextPath: GitHub.PR.Head.Label
      description: The label of the branch the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.Ref
      description: The reference of the branch the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.SHA
      description: The SHA hash of the commit the HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.User.Login
      description: The committer login of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.ID
      description: The committer ID of the HEAD commit of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.User.NodeID
      description: The Node ID of the committer of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.Type
      description: The committer type of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.SiteAdmin
      description: Whether the committer of the HEAD commit of the checked out branch is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.ID
      description: The ID of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.NodeID
      description: The Node ID of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Name
      description: The name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.FullName
      description: The full name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Login
      description: The user login of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.ID
      description: The user ID of the owner of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Owner.NodeID
      description: The user Node ID of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Type
      description: The user type of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository of the checked out branch is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Private
      description: Whether the repository of the checked out branch is private.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Description
      description: The description of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Fork
      description: Whether the repository of the checked out branch is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Language
      description: The language of the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.ForksCount
      description: The number of forks of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.StargazersCount
      description: The number of stars of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.WatchersCount
      description: The number of entities watching the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Size
      description: The size of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.DefaultBranch
      description: The default branch of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.OpenIssuesCount
      description: The open issues of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Topics
      description: The topics listed for the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.HasIssues
      description: Whether the repository of the checked out branch has issues.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasProjects
      description: Whether the repository of the checked out branch has projects.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasWiki
      description: Whether the repository of the checked out branch has a wiki.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasPages
      description: Whether the repository of the checked out branch has pages.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasDownloads
      description: Whether the repository of the checked out branch has downloads.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Archived
      description: Whether the repository of the checked out branch has been archived.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Disabled
      description: Whether the repository of the checked out branch has been disabled.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.PushedAt
      description: The date of the latest push to the repository of the checked out.
      type: String
    - contextPath: GitHub.PR.Head.Repo.CreatedAt
      description: The date of creation of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.UpdatedAt
      description: The date the repository of the checked out branch was last updated.
      type: String
    - contextPath: GitHub.PR.Head.Repo.AllowRebaseMerge
      description: Whether the repository of the checked out branch permits rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowSquashMerge
      description: Whether the repository of the checked out branch permits squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowMergeCommit
      description: Whether the repository of the checked out branch permits merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.SubscribersCount
      description: The number of entities subscribing to the repository of the checked out.
      type: Number
    - contextPath: GitHub.PR.Base.Label
      description: The label of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.Ref
      description: The reference of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.SHA
      description: The SHA hash of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.User.Login
      description: The committer login of the commit the base branch points.
      type: String
    - contextPath: GitHub.PR.Base.User.ID
      description: The ID of the committer of the commit the base branch points to.
      type: Number
    - contextPath: GitHub.PR.Base.User.NodeID
      description: The committer Node ID of the commit the base branch points.
      type: String
    - contextPath: GitHub.PR.Base.User.Type
      description: The user type of the committer the commit base branch points.
      type: String
    - contextPath: GitHub.PR.Base.User.SiteAdmin
      description: Whether the committer of the commit the base branch points to is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.ID
      description: The ID of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.NodeID
      description: The Node ID of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Name
      description: The name of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.FullName
      description: The full name of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Login
      description: The user login of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.ID
      description: The user ID of the owner of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Type
      description: The user type of the owner of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository that the base branch belongs to is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Private
      description: Whether the repository the base branch belongs to is private.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Description
      description: The description of the repository the base branch belong to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Fork
      description: Whether the repository that the base branch belongs to is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Language
      description: The language of the repository the base branch belongs to.
      type: Unknown
    - contextPath: GitHub.PR.Base.Repo.ForksCount
      description: The number of times that the repository the base branch belongs to has been forked.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.StargazersCount
      description: The number of times that the repository that the base branch belongs to has been starred.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.WatchersCount
      description: The number of entities watching the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Size
      description: The size of the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.DefaultBranch
      description: The default branch of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.OpenIssuesCount
      description: The number of open issues in the repository the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Topics
      description: The topics listed for the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.HasIssues
      description: Whether the repository the base branch belongs to has issues.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasProjects
      description: Whether the repository the base branch belongs to has projects.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasWiki
      description: Whether the repository the base branch belongs to has a wiki.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasPages
      description: Whether the repository the base branch belongs to has pages.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasDownloads
      description: Whether the repository the base branch belongs to has downloads.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Archived
      description: Whether the repository the base branch belongs to is archived.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Disabled
      description: Whether the repository the base branch belongs to is disabled.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.PushedAt
      description: The date that the repository the base branch belongs to was last pushed.
      type: String
    - contextPath: GitHub.PR.Base.Repo.CreatedAt
      description: The date of creation of the repository the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.UpdatedAt
      description: The date that the repository the base branch belongs to was last updated.
      type: String
    - contextPath: GitHub.PR.Base.Repo.AllowRebaseMerge
      description: Whether the repository the base branch belongs to allows rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowSquashMerge
      description: Whether the repository the base branch belongs to allows squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowMergeCommit
      description: Whether the repository the base branch belongs to allows merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.SubscribersCount
      description: The number of entities that subscribe to the repository for which the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.AuthorAssociation
      description: The pull request author association.
      type: String
    - contextPath: GitHub.PR.Draft
      description: Whether the pull request is a draft.
      type: Boolean
    - contextPath: GitHub.PR.Merged
      description: Whether the pull request is merged.
      type: Boolean
    - contextPath: GitHub.PR.Mergeable
      description: Whether the pull request is mergeable.
      type: Boolean
    - contextPath: GitHub.PR.Rebaseable
      description: Whether the pull request is rebaseable.
      type: Boolean
    - contextPath: GitHub.PR.MergeableState
      description: The mergeable state of the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Login
      description: The login of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.ID
      description: The ID of the user who merged the pull request.
      type: Number
    - contextPath: GitHub.PR.MergedBy.NodeID
      description: The Node ID of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Type
      description: The user type who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.SiteAdmin
      description: Whether the user who merged the pull request is a site administrator.
      type: Boolean
    - contextPath: GitHub.PR.Comments
      description: The number of comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.ReviewComments
      description: The number of review comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.MaintainerCanModify
      description: Whether the maintainer can modify the pull request.
      type: Boolean
    - contextPath: GitHub.PR.Commits
      description: The number of commits in the pull request.
      type: Number
    - contextPath: GitHub.PR.Additions
      description: The number of additions in the pull request.
      type: Number
    - contextPath: GitHub.PR.Deletions
      description: The number of deletions in the pull request.
      type: Number
    - contextPath: GitHub.PR.ChangedFiles
      description: The number of changed files in the pull request.
      type: Number
  - arguments:
    - description: The repository owner.
      name: owner
      required: true
    description: Gets the usage details of GitHub action workflows of private repositories by repository owner.
    name: Github-get-github-actions-usage
    outputs:
    - contextPath: GitHub.ActionsUsage.RepositoryName
      description: The name of the private repository.
      type: String
    - contextPath: GitHub.ActionsUsage.WorkflowID
      description: The workflow ID of the GitHub action.
      type: Number
    - contextPath: GitHub.ActionsUsage.WorkflowName
      description: The display name of the GitHub action workflow.
      type: String
    - contextPath: GitHub.ActionsUsage.WorkflowUsage
      description: The GitHub action workflow usage on different OS.
      type: Unknown
  - arguments:
    - description: Organization or Owner
      name: owner
      required: true
    - description: Git Repository Name
      name: repository
      required: true
    - description: Check Run ID
      name: run_id
    - description: Head Commit ID
      name: commit_id
    description: Gets a check run details
    name: Github-get-check-run
    outputs:
    - contextPath: GitHub.CheckRuns.CheckRunConclusion
      description: Check Run Conculsion
      type: String
    - contextPath: GitHub.CheckRuns.CheckRunAppName
      description: Check Run App Name
      type: String
    - contextPath: GitHub.CheckRuns.CheckExternalID
      description: Check Run External ID
      type: String
    - contextPath: GitHub.CheckRuns.CheckRunName
      description: Check Run Name
      type: String
    - contextPath: GitHub.CheckRuns.CheckRunStatus
      description: Check Run Status
      type: String
    - contextPath: GitHub.CheckRuns.CheckRunID
      description: Check Run ID
      type: String
  - arguments:
    - default: true
      description: The path of the file.
      name: file_path
      required: true
    - description: The branch name to get the file from.
      name: branch_name
    - defaultValue: raw
      description: 'The media type in which the file contents will be fetched. Possible values are: "raw" and "html". Default value is "raw".'
      name: media_type
      predefined:
      - raw
      - html
    - defaultValue: 'false'
      description: 'Whether to create a file entry in the War Room with the file contents. Possible values are: "true" and "false". Default value is "false".'
      name: create_file_from_content
      predefined:
      - 'true'
      - 'false'
    - description: The name of the organization.
      name: organization
    - description: The name of the repository.
      name: repository
    description: Gets the content of a file from GitHub.
    name: GitHub-get-file-content
    outputs:
    - contextPath: GitHub.FileContent.Path
      description: The path of the file.
      type: String
    - contextPath: GitHub.FileContent.Content
      description: The content of the file.
      type: Number
    - contextPath: GitHub.FileContent.MediaType
      description: The media type in which the file was fetched.
      type: String
    - contextPath: GitHub.FileContent.Branch
      description: The branch from which the file was fetched.
      type: Unknown
  - arguments:
    - description: The path in the branch to get the files from.
      name: path
    - description: The name of the organization.
      name: organization
    - description: The name of the repository.
      name: repository
    - description: The branch name from which to get the files.
      name: branch
    description: Gets list of files from the given path in the repository.
    name: Github-list-files
    outputs:
    - contextPath: GitHub.File.Name
      description: The name of the file.
      type: String
    - contextPath: GitHub.File.Type
      description: Whether the item is file or directory.
      type: String
    - contextPath: GitHub.File.Size
      description: The size of the file in bytes.
      type: Number
    - contextPath: GitHub.File.Path
      description: The file path inside the repository.
      type: String
    - contextPath: GitHub.File.DownloadUrl
      description: The link to download the file content.
      type: String
    - contextPath: GitHub.File.SHA
      description: The SHA of the file.
      type: String
  - arguments:
    - description: The name of the organization.
      name: organization
      required: true
    - description: Team name.
      name: team_slug
      required: true
    - defaultValue: '30'
      description: Miximum number of users to return.
      name: maximum_users
    description: Lists team members.
    name: GitHub-list-team-members
    outputs:
    - contextPath: GitHub.TeamMember.ID
      description: The ID of the team member.
      type: Number
    - contextPath: GitHub.TeamMember.Login
      description: The login name of the team member.
      type: String
    - contextPath: GitHub.TeamMember.Team
      description: The user's team.
      type: String
  - arguments:
    - description: Commit message.
      name: commit_message
      required: true
    - description: The path to the file in the Github repo (including file name and file ending).
      name: path_to_file
      required: true
    - description: The entry ID for the file to commit. Either "entry_id" or "file_text" must be provided.
      name: entry_id
    - description: The plain text for the file to commit. Either "entry_id" or "file_text" must be provided.
      name: file_text
    - description: The branch name.
      name: branch_name
      required: true
    - description: The blob SHA of the file being replaced. Use the GitHub-list-files command to get the SHA value of the file.  Required if you are updating a file.
      name: file_sha
    description: Commits a given file.
    name: Github-commit-file
  - arguments:
    - description: The name of the release.
      name: name
    - description: The name of the release tag.
      name: tag_name
      required: true
    - description: Text describing the contents of the tag.
      name: body
    - description: The target branch/commit SHA from where to create the release.
      name: ref
    - auto: PREDEFINED
      defaultValue: 'True'
      description: Whether to create a draft (unpublished) release.
      name: draft
      predefined:
      - 'True'
      - 'False'
    description: Create a release.
    name: GitHub-create-release
    outputs:
    - contextPath: GitHub.Release.draft
      description: Whether the release is a draft.
      type: Boolean
    - contextPath: GitHub.Release.html_url
      description: The release URL.
      type: String
    - contextPath: GitHub.Release.id
      description: The ID of the release.
      type: Number
    - contextPath: GitHub.Release.url
      description: GitHub API URL link to the release.
      type: String
  - arguments:
    - description: The branch name from which to retrieve pull requests.
      name: branch_name
      required: true
    - description: The name of the organization.
      name: organization
    - description: The repository for the pull request. Defaults to the repository parameter if not provided.
      name: repository
    description: Gets pull requests corresponding to the given branch name.
    name: GitHub-list-branch-pull-requests
    outputs:
    - contextPath: GitHub.PR.ID
      description: The ID number of the pull request.
      type: Number
    - contextPath: GitHub.PR.NodeID
      description: The node ID of the pull request.
      type: String
    - contextPath: GitHub.PR.Number
      description: The issue number of the pull request.
      type: Number
    - contextPath: GitHub.PR.State
      description: The state of the pull request.
      type: String
    - contextPath: GitHub.PR.Locked
      description: Whether the pull request is locked.
      type: Boolean
    - contextPath: GitHub.PR.User.Login
      description: The login of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.ID
      description: The ID of the user who opened the pull request.
      type: Number
    - contextPath: GitHub.PR.User.NodeID
      description: The node ID of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.Type
      description: The type of the user who opened the pull request.
      type: String
    - contextPath: GitHub.PR.User.SiteAdmin
      description: Whether the user who opened the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.Body
      description: The body content of the pull request.
      type: String
    - contextPath: GitHub.PR.Label.ID
      description: The ID of the label.
      type: Number
    - contextPath: GitHub.PR.Label.NodeID
      description: The node ID of the label.
      type: String
    - contextPath: GitHub.PR.Label.Name
      description: The name of the label.
      type: String
    - contextPath: GitHub.PR.Label.Description
      description: The description of the label.
      type: String
    - contextPath: GitHub.PR.Label.Color
      description: The hex color value of the label.
      type: String
    - contextPath: GitHub.PR.Label.Default
      description: Whether the label is a default.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.ID
      description: The ID of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.NodeID
      description: The node ID of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Number
      description: The number of the milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.State
      description: The state of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Title
      description: The title of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Description
      description: The description of the milestone.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Login
      description: The login of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.ID
      description: The ID the milestone creator.
      type: Number
    - contextPath: GitHub.PR.Milestone.Creator.NodeID
      description: The node ID of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.Type
      description: The type of the milestone creator.
      type: String
    - contextPath: GitHub.PR.Milestone.Creator.SiteAdmin
      description: Whether the milestone creator is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Milestone.OpenIssues
      description: The number of open issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.ClosedIssues
      description: The number of closed issues with this milestone.
      type: Number
    - contextPath: GitHub.PR.Milestone.CreatedAt
      description: The date the milestone was created.
      type: String
    - contextPath: GitHub.PR.Milestone.UpdatedAt
      description: The date the milestone was updated.
      type: String
    - contextPath: GitHub.PR.Milestone.ClosedAt
      description: The date the milestone was closed.
      type: String
    - contextPath: GitHub.PR.Milestone.DueOn
      description: The due date for the milestone.
      type: String
    - contextPath: GitHub.PR.ActiveLockReason
      description: The reason the pull request is locked.
      type: String
    - contextPath: GitHub.PR.CreatedAt
      description: The date the pull request was created.
      type: String
    - contextPath: GitHub.PR.UpdatedAt
      description: The date the pull request was updated.
      type: String
    - contextPath: GitHub.PR.ClosedAt
      description: The date the pull request was closed.
      type: String
    - contextPath: GitHub.PR.MergedAt
      description: The date the pull request was merged.
      type: String
    - contextPath: GitHub.PR.MergeCommitSHA
      description: The SHA hash of the pull request's merge commit.
      type: String
    - contextPath: GitHub.PR.Assignee.Login
      description: The login of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.ID
      description: The ID of the user assigned to the pull request.
      type: Number
    - contextPath: GitHub.PR.Assignee.NodeID
      description: The node ID of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.Type
      description: The type of the user assigned to the pull request.
      type: String
    - contextPath: GitHub.PR.Assignee.SiteAdmin
      description: Whether the user assigned to the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.RequestedReviewer.Login
      description: The login of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.ID
      description: The ID of the user requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedReviewer.NodeID
      description: The node ID of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.Type
      description: The type of the user requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedReviewer.SiteAdmin
      description: Whether the user requested for review is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.RequestedTeam.ID
      description: The ID of the team requested for review.
      type: Number
    - contextPath: GitHub.PR.RequestedTeam.NodeID
      description: The node ID of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Name
      description: The name of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Slug
      description: The slug of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Description
      description: The description of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Privacy
      description: The privacy setting of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Permission
      description: The permissions of the team requested for review.
      type: String
    - contextPath: GitHub.PR.RequestedTeam.Parent
      description: The parent of the team requested for review.
      type: Unknown
    - contextPath: GitHub.PR.Head.Label
      description: The label of the branch that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.Ref
      description: The reference of the branch that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.SHA
      description: The SHA hash of the commit that HEAD points to.
      type: String
    - contextPath: GitHub.PR.Head.User.Login
      description: The login of the committer of the HEAD commit of the checked out. branch
      type: String
    - contextPath: GitHub.PR.Head.User.ID
      description: The ID of the committer of the HEAD commit of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.User.NodeID
      description: The node ID of the committer of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.Type
      description: The type of the committer of the HEAD commit of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.User.SiteAdmin
      description: Whether the committer of the HEAD commit of the checked out branch is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.ID
      description: The ID of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.NodeID
      description: The node ID of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Name
      description: The name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.FullName
      description: The full name of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Login
      description: The user login of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.ID
      description: The user ID of the owner of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.Type
      description: The user type of the owner of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository of the checked out branch is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Private
      description: Whether the repository of the checked out branch is private or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Description
      description: The description of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.Fork
      description: Whether the repository of the checked out branch is a fork.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Language
      description: The language of the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.ForksCount
      description: The number of forks of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.StargazersCount
      description: The number of stars of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.WatchersCount
      description: The number of entities watching the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Size
      description: The size of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.DefaultBranch
      description: The default branch of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.OpenIssuesCount
      description: The open issues of the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Head.Repo.Topics
      description: The topics listed for the repository of the checked out branch.
      type: Unknown
    - contextPath: GitHub.PR.Head.Repo.HasIssues
      description: Whether the repository of the checked out branch has issues or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasProjects
      description: Whether the repository of the checked out branch has projects or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasWiki
      description: Whether the repository of the checked out branch has a wiki or not.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasPages
      description: Whether the repository of the checked out branch has pages.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.HasDownloads
      description: Whether the repository of the checked out branch has downloads .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Archived
      description: Whether the repository of the checked out branch has been arvhived .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.Disabled
      description: Whether the repository of the checked out branch has been disabled .
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.PushedAt
      description: The date of the latest push to the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.CreatedAt
      description: The date of creation of the repository of the checked out branch.
      type: String
    - contextPath: GitHub.PR.Head.Repo.UpdatedAt
      description: The date the repository of the checked out branch was last updated.
      type: String
    - contextPath: GitHub.PR.Head.Repo.AllowRebaseMerge
      description: Whether the repository of the checked out branch permits rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowSquashMerge
      description: Whether the repository of the checked out branch permits squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.AllowMergeCommit
      description: Whether the repository of the checked out branch permits merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Head.Repo.SubscribersCount
      description: The number of entities subscribing to the repository of the checked out branch.
      type: Number
    - contextPath: GitHub.PR.Base.Label
      description: The label of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.Ref
      description: The reference of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.SHA
      description: The SHA hash of the base branch.
      type: String
    - contextPath: GitHub.PR.Base.User.Login
      description: The login of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.ID
      description: The ID of the committer of the commit that the base branch points to.
      type: Number
    - contextPath: GitHub.PR.Base.User.NodeID
      description: The node ID of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.Type
      description: The user type of the committer of the commit that the base branch points to.
      type: String
    - contextPath: GitHub.PR.Base.User.SiteAdmin
      description: Whether the committer of the commit that the base branch points to is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.ID
      description: The ID of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.NodeID
      description: The node ID of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Name
      description: The name of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.FullName
      description: The full name of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Login
      description: The user login of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.ID
      description: The user ID of the owner of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Owner.NodeID
      description: The user node ID of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.Type
      description: The user type of the owner of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Owner.SiteAdmin
      description: Whether the owner of the repository that the base branch belongs to is a site admin.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Private
      description: Whether the repository that the base branch belongs to is private .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Description
      description: The description of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.Fork
      description: Whether the repository that the base branch belongs to is a fork .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Language
      description: The language of the repository that the base branch belongs to.
      type: Unknown
    - contextPath: GitHub.PR.Base.Repo.ForksCount
      description: The number of times that the repository that the base branch belongs to has been forked.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.StargazersCount
      description: The number of times that the repository that the base branch belongs to has been starred.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.WatchersCount
      description: The number of entities watching the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Size
      description: The size of the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.DefaultBranch
      description: The default branch of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.OpenIssuesCount
      description: The number of open issues in the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.Base.Repo.Topics
      description: The topics listed for the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.HasIssues
      description: Whether the repository that the base branch belongs to has issues .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasProjects
      description: Whether the repository that the base branch belongs to has projects .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasWiki
      description: Whether the repository that the base branch belongs to has a wiki .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasPages
      description: Whether the repository that the base branch belongs to has pages .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.HasDownloads
      description: Whether the repository that the base branch belongs to has downloads .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Archived
      description: Whether the repository that the base branch belongs to is archived .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.Disabled
      description: Whether the repository that the base branch belongs to is disabled .
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.PushedAt
      description: The date that the repository that the base branch belongs to was last pushed to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.CreatedAt
      description: The date of creation of the repository that the base branch belongs to.
      type: String
    - contextPath: GitHub.PR.Base.Repo.UpdatedAt
      description: The date that the repository that the base branch belongs to was last updated.
      type: String
    - contextPath: GitHub.PR.Base.Repo.AllowRebaseMerge
      description: Whether the repository that the base branch belongs to allows rebase-style merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowSquashMerge
      description: Whether the repository that the base branch belongs to allows squash merges.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.AllowMergeCommit
      description: Whether the repository that the base branch belongs to allows merge commits.
      type: Boolean
    - contextPath: GitHub.PR.Base.Repo.SubscribersCount
      description: The number of entities that subscribe to the repository that the base branch belongs to.
      type: Number
    - contextPath: GitHub.PR.AuthorAssociation
      description: The pull request author association.
      type: String
    - contextPath: GitHub.PR.Draft
      description: Whether the pull request is a draft.
      type: Boolean
    - contextPath: GitHub.PR.Merged
      description: Whether the pull request is merged.
      type: Boolean
    - contextPath: GitHub.PR.Mergeable
      description: Whether the pull request is mergeable.
      type: Boolean
    - contextPath: GitHub.PR.Rebaseable
      description: Whether the pull request is rebaseable.
      type: Boolean
    - contextPath: GitHub.PR.MergeableState
      description: The mergeable state of the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Login
      description: The login of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.ID
      description: The ID of the user who merged the pull request.
      type: Number
    - contextPath: GitHub.PR.MergedBy.NodeID
      description: The node ID of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.Type
      description: The type of the user who merged the pull request.
      type: String
    - contextPath: GitHub.PR.MergedBy.SiteAdmin
      description: Whether the user who merged the pull request is a site admin or not.
      type: Boolean
    - contextPath: GitHub.PR.Comments
      description: The number of comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.ReviewComments
      description: The number of review comments on the pull request.
      type: Number
    - contextPath: GitHub.PR.MaintainerCanModify
      description: Whether the maintainer can modify the pull request.
      type: Boolean
    - contextPath: GitHub.PR.Commits
      description: The number of commits in the pull request.
      type: Number
    - contextPath: GitHub.PR.Additions
      description: The number of additions in the pull request.
      type: Number
    - contextPath: GitHub.PR.Deletions
      description: The number of deletions in the pull request.
      type: Number
    - contextPath: GitHub.PR.ChangedFiles
      description: The number of changed files in the pull request.
      type: Number
  - arguments:
    - description: The issue number to retrieve events for.
      name: issue_number
      required: true
    description: Returns events corresponding to the given issue.
    name: Github-list-issue-events
    outputs:
    - contextPath: GitHub.IssueEvent.id
      description: Event ID.
      type: Number
    - contextPath: GitHub.IssueEvent.node_id
      description: Event node ID.
      type: String
    - contextPath: GitHub.IssueEvent.url
      description: Event URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.login
      description: Event actor login username.
      type: String
    - contextPath: GitHub.IssueEvent.actor.id
      description: Event actor ID.
      type: Number
    - contextPath: GitHub.IssueEvent.actor.node_id
      description: Event actor node ID.
      type: String
    - contextPath: GitHub.IssueEvent.actor.avatar_url
      description: Event actor avatar URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.gravatar_id
      description: Event actor gravatar ID.
      type: String
    - contextPath: GitHub.IssueEvent.actor.url
      description: Event actor URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.html_url
      description: Event actor HTML URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.followers_url
      description: Event actor followers URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.following_url
      description: Event actor following URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.gists_url
      description: Event actor gists URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.starred_url
      description: Event actor starred URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.subscriptions_url
      description: Event actor subscriptions URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.organizations_url
      description: Event actor organizations URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.repos_url
      description: Event actor repos URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.events_url
      description: Event actor events URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.received_events_url
      description: Event actor received events URL.
      type: String
    - contextPath: GitHub.IssueEvent.actor.type
      description: Event actor type.
      type: String
    - contextPath: GitHub.IssueEvent.actor.site_admin
      description: Indicates whether the event actor is site admin.
      type: Boolean
    - contextPath: GitHub.IssueEvent.event
      description: Issue event type, for example labeled, closed.
      type: String
    - contextPath: GitHub.IssueEvent.commit_id
      description: Event commit ID.
      type: Unknown
    - contextPath: GitHub.IssueEvent.commit_url
      description: Event commit URL.
      type: Unknown
    - contextPath: GitHub.IssueEvent.created_at
      description: Event created time.
      type: Date
    - contextPath: GitHub.IssueEvent.label.name
      description: Event label name.
      type: String
    - contextPath: GitHub.IssueEvent.label.color
      description: Event label color.
      type: String
    - contextPath: GitHub.IssueEvent.performed_via_github_app
      description: Indicates whether event was performed via a GitHub application.
      type: Unknown
    - contextPath: GitHub.IssueEvent.assignee.login
      description: Assignee login username.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.id
      description: Assignee ID.
      type: Number
    - contextPath: GitHub.IssueEvent.assignee.node_id
      description: Assignee node ID.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.avatar_url
      description: Assignee avatar URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.gravatar_id
      description: Assignee gravatar ID.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.url
      description: Assignee URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.html_url
      description: Assignee HTML URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.followers_url
      description: Assignee followers URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.following_url
      description: Assignee following URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.gists_url
      description: Assignee gists URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.starred_url
      description: Assignee starred URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.subscriptions_url
      description: Assignee subscriptions URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.organizations_url
      description: Assignee organizations URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.repos_url
      description: Assignee repos URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.events_url
      description: Assignee events URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.received_events_url
      description: Assignee received events URL.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.type
      description: Assignee type.
      type: String
    - contextPath: GitHub.IssueEvent.assignee.site_admin
      description: Indicates whether the assignee is a site admin.
      type: Boolean
    - contextPath: GitHub.IssueEvent.assigner.login
      description: Assigner login username.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.id
      description: Assigner ID.
      type: Number
    - contextPath: GitHub.IssueEvent.assigner.node_id
      description: Assigner node ID.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.avatar_url
      description: Assigner avatar URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.gravatar_id
      description: Assigner gravatar ID.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.url
      description: Assigner URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.html_url
      description: Assigner HTML URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.followers_url
      description: Assigner followers URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.following_url
      description: Assigner following URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.gists_url
      description: Assigner gists URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.starred_url
      description: Assigner starred URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.subscriptions_url
      description: Assigner subscriptions URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.organizations_url
      description: Assigner organizations URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.repos_url
      description: Assigner repos URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.events_url
      description: Assigner events URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.received_events_url
      description: Assigner received events URL.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.type
      description: Assigner type.
      type: String
    - contextPath: GitHub.IssueEvent.assigner.site_admin
      description: Indicates whether the assignee is a site admin.
      type: Boolean
  - arguments:
    - description: Only list projects with the following numbers.
      isArray: true
      name: project_filter
    - defaultValue: '20'
      description: The number of projects to return. Default is 20. Maximum is 100.
      name: limit
    description: Lists all issues that the user has access to view.
    name: GitHub-list-all-projects
    outputs:
    - contextPath: GitHub.Project.Name
      description: The name of the project board.
      type: String
    - contextPath: GitHub.Project.ID
      description: The ID of the project board.
      type: Number
    - contextPath: GitHub.Project.Number
      description: The project board number.
      type: Number
    - contextPath: GitHub.Project.Columns.Name
      description: The column name.
      type: String
    - contextPath: GitHub.Project.Columns.ColumnID
      description: The ID of the column.
      type: Number
    - contextPath: GitHub.Project.Columns.Cards.CardID
      description: The ID of the card.
      type: Number
    - contextPath: GitHub.Project.Columns.Cards.ContentNumber
      description: The content number of this card, usually this is the issue number.
      type: Number
    - contextPath: GitHub.Project.Issues
      description: Lists of all issue numbers that are in this project board.
      type: Unknown
  - arguments:
    - description: 'Column unique id '
      name: column_id
      required: true
    - description: Issue unique ID.
      name: issue_unique_id
      required: true
    - defaultValue: Issue
      description: Content type of the project card.
      name: content_type
    description: Adds an Issue as a card in column of a spesific project.
    name: GitHub-add-issue-to-project-board
  - arguments:
    - default: true
      description: Relative path to retrieve its data.
      name: relative_path
      required: true
    - description: The branch name from which to get the file data. Default is master.
      name: branch_name
    - description: The name of the organization containing the file.
      name: organization
    - description: The repository of the file.
      name: repository
    description: Gets the data of the a given path.
    name: GitHub-get-path-data
    outputs:
    - contextPath: GitHub.PathData.name
      description: The path name.
      type: String
    - contextPath: GitHub.PathData.path
      description: The Relative path for the given repository.
      type: String
    - contextPath: GitHub.PathData.sha
      description: The path SHA.
      type: String
    - contextPath: GitHub.PathData.size
      description: The path size in bytes. Will be 0 if path to a dir was given.
      type: Number
    - contextPath: GitHub.PathData.url
      description: The path URL.
      type: String
    - contextPath: GitHub.PathData.html_url
      description: The path HTML URL.
      type: String
    - contextPath: GitHub.PathData.git_url
      description: The path Git URL.
      type: String
    - contextPath: GitHub.PathData.download_url
      description: The path download URL. If a directory path was given will be empty.
      type: String
    - contextPath: GitHub.PathData.type
      description: The path data, for example file, dir.
      type: String
    - contextPath: GitHub.PathData.content
      description: The content of the path if a file path was given.
      type: String
    - contextPath: GitHub.PathData.encoding
      description: The encoding method if path to a file was given.
      type: String
    - contextPath: GitHub.PathData.entries.name
      description: If a dir was given in file_path, name of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.path
      description: If a dir was given in file_path, path of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.sha
      description: If a dir was given in file_path, SHA of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.size
      description: If a dir was given in file_path, size of the dir entry. Will be 0 if entry is also a dir.
      type: Number
    - contextPath: GitHub.PathData.entries.url
      description: If a dir was given in file_path, URL of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.html_url
      description: If a dir was given in file_path, HTML URL of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.git_url
      description: If a dir was given in file_path, Git URL of the dir entry.
      type: String
    - contextPath: GitHub.PathData.entries.download_url
      description: If a dir was given in file_path, download URL of the dir entry. Will be empty if entry is also a dir.
      type: String
    - contextPath: GitHub.PathData.entries.type
      description: If a dir was given in file_path, type of the dir entry.
      type: String
  - arguments:
    - description: The page number to retrieve releases from. If limit argument is not given, defaults to 1.
      name: page
    - description: The size of the page. If limit argument is not given, defaults to 50.
      name: page_size
    - description: The maximum number of releases data to retrieve. Will get results of the first pages. Cannot be given with page_size or page arguments.
      name: limit
    - description: The name of the organization containing the repository. Defaults to organization instance parameter if not given.
      name: organization
    - description: The repository containing the releases. Defaults to repository instance parameter if not given.
      name: repository
    description: Gets releases data from a given repository and organization.
    name: GitHub-releases-list
    outputs:
    - contextPath: GitHub.Release.url
      description: The release URL.
      type: String
    - contextPath: GitHub.Release.assets_url
      description: The release assets URL.
      type: String
    - contextPath: GitHub.Release.upload_url
      description: Upload URL.
      type: String
    - contextPath: GitHub.Release.html_url
      description: HTML URL.
      type: String
    - contextPath: GitHub.Release.id
      description: The release ID.
      type: Number
    - contextPath: GitHub.Release.author.login
      description: The release author login username.
      type: String
    - contextPath: GitHub.Release.author.id
      description: The release author user ID.
      type: Number
    - contextPath: GitHub.Release.author.node_id
      description: The release author node ID.
      type: String
    - contextPath: GitHub.Release.author.avatar_url
      description: The release author avatar URL.
      type: String
    - contextPath: GitHub.Release.author.gravatar_id
      description: The release author gravatar ID.
      type: String
    - contextPath: GitHub.Release.author.url
      description: The release author URL.
      type: String
    - contextPath: GitHub.Release.author.html_url
      description: The release author HTML URL.
      type: String
    - contextPath: GitHub.Release.author.followers_url
      description: The release author followers URL.
      type: String
    - contextPath: GitHub.Release.author.following_url
      description: The release author following URL.
      type: String
    - contextPath: GitHub.Release.author.gists_url
      description: The release author gists URL.
      type: String
    - contextPath: GitHub.Release.author.starred_url
      description: The release author starred URL.
      type: String
    - contextPath: GitHub.Release.author.subscriptions_url
      description: The release author subscriptions URL.
      type: String
    - contextPath: GitHub.Release.author.organizations_url
      description: The release author organizations URL.
      type: String
    - contextPath: GitHub.Release.author.repos_url
      description: The release author repos URL.
      type: String
    - contextPath: GitHub.Release.author.events_url
      description: The release author events URL.
      type: String
    - contextPath: GitHub.Release.author.received_events_url
      description: The release author received events URL.
      type: String
    - contextPath: GitHub.Release.author.type
      description: The release author type. (E.g, "User").
      type: String
    - contextPath: GitHub.Release.author.site_admin
      description: Whether the release author is a site admin.
      type: Boolean
    - contextPath: GitHub.Release.node_id
      description: The release Node ID.
      type: String
    - contextPath: GitHub.Release.tag_name
      description: The release tag name.
      type: String
    - contextPath: GitHub.Release.target_commitish
      description: The release target commit.
      type: String
    - contextPath: GitHub.Release.name
      description: The release name.
      type: String
    - contextPath: GitHub.Release.draft
      description: Whether release is draft.
      type: Boolean
    - contextPath: GitHub.Release.prerelease
      description: Whether release is pre release.
      type: Boolean
    - contextPath: GitHub.Release.created_at
      description: Date when release was created.
      type: Date
    - contextPath: GitHub.Release.published_at
      description: Date when release was published.
      type: Date
    - contextPath: GitHub.Release.tarball_url
      description: The release tar URL download.
      type: String
    - contextPath: GitHub.Release.zipball_url
      description: The release zip URL download.
      type: String
    - contextPath: GitHub.Release.body
      description: The release body.
      type: String
  - arguments:
    - description: The number of the issue to comment on.
      name: issue_number
      required: true
    - description: the comment id to update.
      name: comment_id
      required: true
    - description: The contents of the comment.
      name: body
      required: true
    description: Update an already existing comment.
    name: GitHub-update-comment
    outputs:
    - contextPath: GitHub.Comment.IssueNumber
      description: The number of the issue to which the comment belongs.
      type: Number
    - contextPath: GitHub.Comment.ID
      description: The ID of the comment.
      type: Number
    - contextPath: GitHub.Comment.NodeID
      description: The node ID of the comment.
      type: String
    - contextPath: GitHub.Comment.Body
      description: The body content of the comment.
      type: String
    - contextPath: GitHub.Comment.User.Login
      description: The login of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.ID
      description: The ID of the user who commented.
      type: Number
    - contextPath: GitHub.Comment.User.NodeID
      description: The node ID of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.Type
      description: The type of the user who commented.
      type: String
    - contextPath: GitHub.Comment.User.SiteAdmin
      description: Whether the user who commented is a site admin.
      type: Boolean
  - arguments:
    - description: The id of comment to delete.
      name: comment_id
      required: true
    description: Deletes a comment.
    name: GitHub-delete-comment
  - arguments:
    - description: The number of PR/Issue to assign users to
      name: pull_request_number
      required: true
    - description: Users to assign, can be a list of users
      isArray: true
      name: assignee
      required: true
    description: Adds up to 10 assignees to an issue/PR. Users already assigned to an issue are not replaced.
    name: GitHub-add-assignee
    outputs:
    - contextPath: GitHub.Assignees.assignees
      description: Assignees to the issue
      type: String
    - contextPath: GitHub.Assignees.assignees.login
      description: Login of assigned user
      type: String
    - contextPath: GitHub.Assignees.assignees.gists_url
      description: Gists URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.following_url
      description: Following URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.followers_url
      description: Followers URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.subscriptions_url
      description: Subscriptions URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.received_events_url
      description: Received events URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.events_url
      description: Events URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.avatar_url
      description: Avatar URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.url
      description: URL for user for user
      type: String
    - contextPath: GitHub.Assignees.assignees.starred_url
      description: Starred URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.organizations_url
      description: Organizations URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.repos_url
      description: Repos URL for user
      type: String
    - contextPath: GitHub.Assignees.assignees.gravatar_id
      description: Gravatar_id for user
      type: String
    - contextPath: GitHub.Assignees.assignees.site_admin
      description: Is user site admin
      type: String
    - contextPath: GitHub.Assignees.assignees.node_id
      description: Node ID for user
      type: String
    - contextPath: GitHub.Assignees.assignees.type
      description: Type of user
      type: String
    - contextPath: GitHub.Assignees.assignees.id
      description: User ID
      type: String
    - contextPath: GitHub.Assignees.assignees.html_url
      description: HTML URL for user
      type: String
  - arguments:
    - description: The GitHub owner (organization or username) of the repository.
      name: owner
    - description: The GitHub repository name.
      name: repository
    - description: The branch to trigger the workflow on.
      name: branch
    - description: The name of your workflow file.
      name: workflow
      required: true
    - description: The inputs for the workflow.
      name: inputs
    description: Triggers a GitHub workflow on a given repository and workflow.
    name: GitHub-trigger-workflow
  - arguments:
    - description: The GitHub owner (organization or username) of the repository.
      name: owner
    - description: The GitHub repository name.
      isArray: true
      name: repository
    - description: The name of your workflow file.
      isArray: true
      name: workflow
      required: true
    - description: The number of workflows to return. Default is 100.
      isArray: true
      name: limit
    description: Returns a list of GitHub workflows on a given repository.
    name: GitHub-list-workflows
    outputs:
    - contextPath: GitHub.Workflow.id
      description: The GitHub workflow ID (per run).
      type: Number
    - contextPath: GitHub.Workflow.name
      description: The GitHub workflow name.
      type: String
    - contextPath: GitHub.Workflow.head_branch
      description: The branch on which the workflow ran.
      type: String
    - contextPath: GitHub.Workflow.head_sha
      description: The commit SHA on which the workflow ran.
      type: String
    - contextPath: GitHub.Workflow.path
      description: The GitHub workflow name path.
      type: String
    - contextPath: GitHub.Workflow.display_title
      description: The GitHub workflow title.
      type: String
    - contextPath: GitHub.Workflow.run_number
      description: The GitHub workflow run number.
      type: Number
    - contextPath: GitHub.Workflow.event
      description: The GitHub workflow trigger type (scheduled, dispatch).
      type: String
    - contextPath: GitHub.Workflow.status
      description: The GitHub workflow status (in_progress, completed).
      type: String
    - contextPath: GitHub.Workflow.conclusion
      description: The GitHub workflow conclusion (cancelled, success).
      type: String
    - contextPath: GitHub.Workflow.workflow_id
      description: The GitHub workflow ID (per workflow).
      type: String
    - contextPath: GitHub.Workflow.url
      description: The GitHub workflow API URL.
      type: String
    - contextPath: GitHub.Workflow.html_url
      description: The GitHub workflow HTML URL.
      type: String
    - contextPath: GitHub.Workflow.created_at
      description: Datetime the GitHub workflow was created at.
      type: Date
    - contextPath: GitHub.Workflow.updated_at
      description: Datetime the GitHub workflow was updated at.
      type: Date
  dockerimage: demisto/pyjwt3:1.0.0.66845
  isfetch: true
  runonce: false
  script: '-'
  subtype: python3
  type: python
tests:
- No tests (auto formatted)
fromversion: 5.0.0
