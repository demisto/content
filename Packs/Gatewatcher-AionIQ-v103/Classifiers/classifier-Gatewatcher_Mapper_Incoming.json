{
	"brands": null,
	"defaultIncidentType": "",
	"definitionId": "",
	"description": "",
	"feed": false,
	"fromServerVersion": "",
	"id": "17a7dc70-6fbe-4a95-8a0a-8104e2e368bf",
	"incidentSamples": null,
	"indicatorSamples": null,
	"instanceIds": null,
	"itemVersion": "",
	"keyTypeMap": {},
	"locked": false,
	"logicalVersion": 30,
	"mapping": {
		"Gatewatcher Incident": {
			"dontMapEventToLabels": true,
			"internalMapping": {
				"Gatewatcher Destination IP": {
					"simple": "destination.ip"
				},
				"Gatewatcher Destination Port": {
					"simple": "destination.port"
				},
				"Gatewatcher Flow ID": {
					"simple": "network.flow_id"
				},
				"Gatewatcher GCap": {
					"simple": "observer.gcap.hostname"
				},
				"Gatewatcher GCap interface": {
					"simple": "observer.gcap.ingress.interface"
				},
				"Gatewatcher GCenter": {
					"simple": "observer.hostname"
				},
				"Gatewatcher Raw Event": {
					"simple": "."
				},
				"Gatewatcher Source IP": {
					"simple": "source.ip"
				},
				"Gatewatcher Source Port": {
					"simple": "source.port"
				},
				"Gatewatcher beacon.active": {
					"simple": "beacon.active"
				},
				"Gatewatcher beacon.hostname_resolution": {
					"simple": "beacon.hostname_resolution"
				},
				"Gatewatcher beacon.id": {
					"simple": "beacon.id"
				},
				"Gatewatcher beacon.mean_time_interval": {
					"simple": "beacon.mean_time_interval"
				},
				"Gatewatcher beacon.possible_cnc": {
					"simple": "beacon.possible_cnc"
				},
				"Gatewatcher beacon.session_count": {
					"simple": "beacon.session_count"
				},
				"Gatewatcher beacon.type": {
					"simple": "beacon.type"
				},
				"Gatewatcher dga.dga_count": {
					"simple": "dga.dga_count"
				},
				"Gatewatcher dga.dga_ratio": {
					"simple": "dga.dga_ratio"
				},
				"Gatewatcher dga.malware_behavior_confidence": {
					"simple": "dga.malware_behavior_confidence"
				},
				"Gatewatcher dga.nx_domain_count": {
					"simple": "dga.nx_domain_count"
				},
				"Gatewatcher dga.top_DGA": {
					"simple": "dga.top_DGA"
				},
				"Gatewatcher dhcp.assigned_ip": {
					"simple": "dhcp.assigned_ip"
				},
				"Gatewatcher dhcp.client_ip": {
					"simple": "dhcp.client_ip"
				},
				"Gatewatcher dhcp.client_mac": {
					"simple": "dhcp.client_mac"
				},
				"Gatewatcher dhcp.dhcp_type": {
					"simple": "dhcp.dhcp_type"
				},
				"Gatewatcher dhcp.dns_servers": {
					"simple": "dhcp.dns_servers"
				},
				"Gatewatcher dhcp.hostname": {
					"simple": "dhcp.hostname"
				},
				"Gatewatcher dhcp.id": {
					"simple": "dhcp.id"
				},
				"Gatewatcher dhcp.lease_time": {
					"simple": "dhcp.lease_time"
				},
				"Gatewatcher dhcp.next_server_ip": {
					"simple": "dhcp.next_server_ip"
				},
				"Gatewatcher dhcp.relay_ip": {
					"simple": "dhcp.relay_ip"
				},
				"Gatewatcher dhcp.routers": {
					"simple": "dhcp.routers"
				},
				"Gatewatcher dhcp.subnet_mask": {
					"simple": "dhcp.subnet_mask"
				},
				"Gatewatcher dhcp.type": {
					"simple": "dhcp.type"
				},
				"Gatewatcher dns": {
					"simple": "dns"
				},
				"Gatewatcher dns.answers": {
					"simple": "dns.answers"
				},
				"Gatewatcher dns.authorities": {
					"simple": "dns.authorities"
				},
				"Gatewatcher dns.response_code": {
					"simple": "dns.response_code"
				},
				"Gatewatcher dns.type": {
					"simple": "dns.type"
				},
				"Gatewatcher ecs.version": {
					"simple": "ecs.version"
				},
				"Gatewatcher event.module": {
					"simple": "event.module"
				},
				"Gatewatcher file.hash": {
					"simple": "file.hash"
				},
				"Gatewatcher file.magic": {
					"simple": "file.magic"
				},
				"Gatewatcher file.name": {
					"simple": "file.name"
				},
				"Gatewatcher ftp.command": {
					"simple": "ftp.command"
				},
				"Gatewatcher ftp.completion_code": {
					"simple": "ftp.completion_code"
				},
				"Gatewatcher ftp.dynamic_port": {
					"simple": "ftp.dynamic_port"
				},
				"Gatewatcher ftp.reply": {
					"simple": "ftp.reply"
				},
				"Gatewatcher ftp.reply_received": {
					"simple": "ftp.reply_received"
				},
				"Gatewatcher ftp.reply_truncated": {
					"simple": "ftp.reply_truncated"
				},
				"Gatewatcher http.accept": {
					"simple": "http.accept"
				},
				"Gatewatcher http.date": {
					"simple": "http.date"
				},
				"Gatewatcher http.hostname": {
					"simple": "http.hostname"
				},
				"Gatewatcher http.http2": {
					"simple": "http.http2"
				},
				"Gatewatcher http.http_refer": {
					"simple": "http.http_refer"
				},
				"Gatewatcher http.last_modified": {
					"simple": "http.last_modified"
				},
				"Gatewatcher http.request.method": {
					"simple": "http.request.method"
				},
				"Gatewatcher http.request.mime_type": {
					"simple": "http.request.mime_type"
				},
				"Gatewatcher http.response.mime_type": {
					"simple": "http.response.mime_type"
				},
				"Gatewatcher http.response.status": {
					"simple": "http.response.status"
				},
				"Gatewatcher http.version": {
					"simple": "http.version"
				},
				"Gatewatcher http2.http2": {
					"simple": "http2.http2"
				},
				"Gatewatcher http2.http_method": {
					"simple": "http2.http_method"
				},
				"Gatewatcher http2.http_user_agent": {
					"simple": "http2.http_user_agent"
				},
				"Gatewatcher http2.length": {
					"simple": "http2.length"
				},
				"Gatewatcher http2.request_headers": {
					"simple": "http2.request_headers"
				},
				"Gatewatcher http2.response_headers": {
					"simple": "http2.response_headers"
				},
				"Gatewatcher http2.status": {
					"simple": "http2.status"
				},
				"Gatewatcher http2.url": {
					"simple": "http2.url"
				},
				"Gatewatcher http2.version": {
					"simple": "http2.version"
				},
				"Gatewatcher krb.cname": {
					"simple": "krb.cname"
				},
				"Gatewatcher krb.encryption": {
					"simple": "krb.encryption"
				},
				"Gatewatcher krb.msg_type": {
					"simple": "krb.msg_type"
				},
				"Gatewatcher krb.realm": {
					"simple": "krb.realm"
				},
				"Gatewatcher krb.sname": {
					"simple": "krb.sname"
				},
				"Gatewatcher krb.weak_encryption": {
					"simple": "krb.weak_encryption"
				},
				"Gatewatcher malcore.detail_threat_found": {
					"simple": "malcore.detail_threat_found"
				},
				"Gatewatcher malcore.engines_last_update_date": {
					"simple": "malcore.engines_last_update_date"
				},
				"Gatewatcher malcore.magic_details": {
					"simple": "malcore.magic_details"
				},
				"Gatewatcher malcore.state": {
					"simple": "malcore.state"
				},
				"Gatewatcher malcore.total_found": {
					"simple": "malcore.total_found"
				},
				"Gatewatcher malicious_powershell.proba_obfuscated": {
					"simple": "malicious_powershell.proba_obfuscated"
				},
				"Gatewatcher malicious_powershell.score": {
					"simple": "malicious_powershell.score"
				},
				"Gatewatcher network.protocol": {
					"simple": "network.protocol"
				},
				"Gatewatcher network.transport": {
					"simple": "network.transport"
				},
				"Gatewatcher nfs.file_tx": {
					"simple": "nfs.file_tx"
				},
				"Gatewatcher nfs.filename": {
					"simple": "nfs.filename"
				},
				"Gatewatcher nfs.hhash": {
					"simple": "nfs.hhash"
				},
				"Gatewatcher nfs.id": {
					"simple": "nfs.id"
				},
				"Gatewatcher nfs.procedure": {
					"simple": "nfs.procedure"
				},
				"Gatewatcher nfs.status": {
					"simple": "nfs.status"
				},
				"Gatewatcher nfs.type": {
					"simple": "nfs.type"
				},
				"Gatewatcher nfs.version": {
					"simple": "nfs.version"
				},
				"Gatewatcher ransomware.alert_threshold": {
					"simple": "ransomware.alert_threshold"
				},
				"Gatewatcher ransomware.malicious_behavior_confidence": {
					"simple": "ransomware.malicious_behavior_confidence"
				},
				"Gatewatcher ransomware.session_score": {
					"simple": "ransomware.session_score"
				},
				"Gatewatcher shellcode.encodings": {
					"simple": "shellcode.encodings"
				},
				"Gatewatcher shellcode.sub_type": {
					"simple": "shellcode.sub_type"
				},
				"Gatewatcher sigflow.action": {
					"simple": "sigflow.action"
				},
				"Gatewatcher sigflow.category": {
					"simple": "sigflow.category"
				},
				"Gatewatcher sigflow.payload": {
					"simple": "sigflow.payload"
				},
				"Gatewatcher sigflow.payload_printable": {
					"simple": "sigflow.payload_printable"
				},
				"Gatewatcher smb": {
					"simple": "smb"
				},
				"Gatewatcher smb.command": {
					"simple": "smb.command"
				},
				"Gatewatcher smb.dialect": {
					"simple": "smb.dialect"
				},
				"Gatewatcher smb.filename": {
					"simple": "smb.filename"
				},
				"Gatewatcher smb.fuid": {
					"simple": "smb.fuid"
				},
				"Gatewatcher smb.id": {
					"simple": "smb.id"
				},
				"Gatewatcher smb.session_id": {
					"simple": "smb.session_id"
				},
				"Gatewatcher smb.share": {
					"simple": "smb.share"
				},
				"Gatewatcher smb.status": {
					"simple": "smb.status"
				},
				"Gatewatcher smb.status_code": {
					"simple": "smb.status_code"
				},
				"Gatewatcher smb.tree_id": {
					"simple": "smb.tree_id"
				},
				"Gatewatcher smtp.helo": {
					"simple": "smtp.helo"
				},
				"Gatewatcher smtp.mail_from": {
					"simple": "smtp.mail_from"
				},
				"Gatewatcher smtp.rcpt_to": {
					"simple": "smtp.rcpt_to"
				},
				"Gatewatcher ssh.client": {
					"simple": "ssh.client"
				},
				"Gatewatcher ssh.server": {
					"simple": "ssh.server"
				},
				"Gatewatcher tftp.file": {
					"simple": "tftp.file"
				},
				"Gatewatcher tftp.mode": {
					"simple": "tftp.mode"
				},
				"Gatewatcher tftp.packet": {
					"simple": "tftp.packet"
				},
				"Gatewatcher tls.client": {
					"simple": "tls.client"
				},
				"Gatewatcher tls.ja3": {
					"simple": "tls.ja3"
				},
				"Gatewatcher tls.ja3s": {
					"simple": "tls.ja3s"
				},
				"Gatewatcher tls.serial": {
					"simple": "tls.serial"
				},
				"Gatewatcher tls.server": {
					"simple": "tls.server"
				},
				"Gatewatcher tls.sni": {
					"simple": "tls.sni"
				},
				"Gatewatcher tls.version": {
					"simple": "tls.version"
				}
			}
		},
		"dbot_classification_incident_type_all": {
			"dontMapEventToLabels": false,
			"internalMapping": {}
		}
	},
	"name": "Gatewatcher Mapper Incoming",
	"nameRaw": "Gatewatcher Mapper Incoming",
	"packID": "",
	"propagationLabels": [
		"all"
	],
	"sourceClassifierId": "",
	"system": false,
	"toServerVersion": "",
	"transformer": {},
	"type": "mapping-incoming",
	"unclassifiedCases": null,
	"version": -1
}