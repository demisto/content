id: Cortex ASM - Detect Service
version: -1
name: Cortex ASM - Detect Service
description: Playbook that looks at what ASM sub-type the alert is and directs it to different pre/post mitigation scans (such as NMAP).
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 0572001c-322b-438d-8bec-667b631d18a8
    type: start
    task:
      id: 0572001c-322b-438d-8bec-667b631d18a8
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 3aab2a25-bca5-4d74-87fa-2784a6fe0543
    type: condition
    task:
      id: 3aab2a25-bca5-4d74-87fa-2784a6fe0543
      version: -1
      name: What is the sub-alert type?
      description: Determines ASM sub-alert type for different scans.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      Insecure OpenSSH:
      - "8"
      RDP Server:
      - "9"
    separatecontext: false
    conditions:
    - label: RDP Server
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: inputs.ASMRuleID
            iscontext: true
          right:
            value:
              simple: RdpServer
          ignorecase: true
    - label: Insecure OpenSSH
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: inputs.ASMRuleID
            iscontext: true
          right:
            value:
              simple: InsecureOpenSSH
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: e227705c-072b-4c39-8f0a-fabcd441c509
    type: title
    task:
      id: e227705c-072b-4c39-8f0a-fabcd441c509
      version: -1
      name: Complete
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 880
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 377b405b-0dcd-4070-80a9-20696388c942
    type: condition
    task:
      id: 377b405b-0dcd-4070-80a9-20696388c942
      version: -1
      name: Is RemoteIP and RemotePort defined?
      description: Determines if RemoteIp and RemotePort inputs are defined for error checking.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.RemoteIP
            iscontext: true
          right:
            value: {}
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.RemotePort
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -20
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 3a718f43-9294-415f-8b9b-ab9066a45ebe
    type: playbook
    task:
      id: 3a718f43-9294-415f-8b9b-ab9066a45ebe
      version: -1
      name: NMAP - Banner Check
      description: Sub-playbook that performs an Nmap scan and compares the results against a regular expression to determine a match. This could be used to look for OpenSSH versions or other OS information found in the banner.
      playbookName: NMAP - Banner Check
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      NMAPOptions:
        simple: -sV --version-intensity 0 --unprivileged -Pn
      Regex:
        simple: '(?<=OpenSSH version: )(?:(?:(?:[0-7]|8\.[0-7])(?:\..*)?))'
      RemoteIP:
        complex:
          root: inputs.RemoteIP
      RemotePort:
        complex:
          root: inputs.RemotePort
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 450,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 0176cbed-c89b-4cc1-85ff-87a8378acf15
    type: playbook
    task:
      id: 0176cbed-c89b-4cc1-85ff-87a8378acf15
      version: -1
      name: NMAP - Single Port Scan
      description: Sub-playbook that conducts a single port Nmap scan and returns the results to the parent playbook.
      playbookName: NMAP - Single Port Scan
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      NMAPOptions:
        simple: -Pn --unprivileged
      RemoteIP:
        complex:
          root: inputs.RemoteIP
      RemotePort:
        complex:
          root: inputs.RemotePort
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 900,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 57c4893e-b658-4487-8d84-b50c78beb114
    type: title
    task:
      id: 57c4893e-b658-4487-8d84-b50c78beb114
      version: -1
      name: continue
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "11"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -150,
          "y": 445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: 59fb6ec6-05d7-4a73-8e8a-cfccdf8bbd8a
    type: title
    task:
      id: 59fb6ec6-05d7-4a73-8e8a-cfccdf8bbd8a
      version: -1
      name: Set Field
      description: commands.local.cmd.set.incident
      type: title
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 605
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: b035273e-8a9f-4e29-81b2-2c6d144293af
    type: regular
    task:
      id: b035273e-8a9f-4e29-81b2-2c6d144293af
      version: -1
      name: Set service detection grid field
      description: |-
        Automation used to more easily populate a grid field. This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  For example:
        `!GridFieldSetup keys=ip,src val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" gridfiled="gridfield"`
      scriptName: GridFieldSetup
      type: regular
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      gridfield:
        simple: asmservicedetection
      keys:
        simple: ScanNum,ScanDone,ScanResult,Timestamp,ScanState
      val1:
        complex:
          root: inputs.ScanNumber
      val2:
        complex:
          root: ScanDone
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val3:
        complex:
          root: ScanResult
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val4:
        complex:
          root: NMAP.Scan
          accessor: Started
          transformers:
          - operator: TimeStampToDate
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val5:
        complex:
          root: NMAP.Scan.Hosts.Services
          accessor: State
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 725
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "7_1_yes": 0.7
    },
    "paper": {
      "dimensions": {
        "height": 1105,
        "width": 1430,
        "x": -150,
        "y": -160
      }
    }
  }
inputs:
- key: RemoteIP
  value:
    complex:
      root: alert
      accessor: remoteip
  required: false
  description: Remote IP address in the alert.
  playbookInputQuery:
- key: RemotePort
  value:
    complex:
      root: alert
      accessor: remoteport
  required: false
  description: Remote port number in the alert.
  playbookInputQuery:
- key: ASMRuleID
  value:
    complex:
      root: alert
      accessor: asmattacksurfaceruleid
  required: true
  description: Attack Surface Management Rule ID.
  playbookInputQuery:
- key: ScanNumber
  value: {}
  required: true
  description: Scan number in case there are multiple IDs in the parent playbook.
  playbookInputQuery:
outputs: []
fromversion: 6.5.0
tests:
- No tests (auto formatted)
