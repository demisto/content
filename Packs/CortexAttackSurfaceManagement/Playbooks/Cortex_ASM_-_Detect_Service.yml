id: Cortex ASM - Detect Service
version: -1
name: Cortex ASM - Detect Service
description: Playbook that looks at what ASM sub-type the alert is and direct to different pre/post mitigation scans (such as NMAP).
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 2152de4c-a87b-42a0-8e09-806bad3a33a5
    type: start
    task:
      id: 2152de4c-a87b-42a0-8e09-806bad3a33a5
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 0e76bba2-d333-4943-81b3-5d1f2994a04c
    type: condition
    task:
      id: 0e76bba2-d333-4943-81b3-5d1f2994a04c
      version: -1
      name: What is the sub-alert type?
      description: Determines if ASM sub-alert type for different scans.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      Insecure OpenSSH:
      - "8"
      RDP Server:
      - "9"
    separatecontext: false
    conditions:
    - label: RDP Server
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: inputs.ASMRuleID
            iscontext: true
          right:
            value:
              simple: RdpServer
          ignorecase: true
    - label: Insecure OpenSSH
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: inputs.ASMRuleID
            iscontext: true
          right:
            value:
              simple: InsecureOpenSSH
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: ef33a923-7356-4464-87b9-7db50dc0c694
    type: title
    task:
      id: ef33a923-7356-4464-87b9-7db50dc0c694
      version: -1
      name: Complete
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 880
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: e1e5a32b-c495-4aa2-8d35-5a0a6471e5c9
    type: condition
    task:
      id: e1e5a32b-c495-4aa2-8d35-5a0a6471e5c9
      version: -1
      name: Is RemoteIP or RemotePort defined?
      description: Determines if RemoteIp or RemotePort inputs are defined for error checking.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.RemoteIP
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.RemotePort
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -20
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 40a30750-60ad-4261-8c7c-36382b37e1a4
    type: playbook
    task:
      id: 40a30750-60ad-4261-8c7c-36382b37e1a4
      version: -1
      name: NMAP - Banner Check
      description: Sub-playbook that performs an Nmap scan and compares the results against a regular expression to determine a match. This could be used to look for OpenSSH versions or other OS information found in the banner.
      playbookName: NMAP - Banner Check
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      NMAPOptions:
        simple: -sV --version-intensity 0 --unprivileged -Pn
      Regex:
        simple: '(?<=OpenSSH version: )(?:(?:(?:[0-7]|8\.[0-7])(?:\..*)?))'
      RemoteIP:
        complex:
          root: inputs.RemoteIP
      RemotePort:
        complex:
          root: inputs.RemotePort
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 450,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 87b1df9b-cc78-4134-8f5c-c8408e664c63
    type: playbook
    task:
      id: 87b1df9b-cc78-4134-8f5c-c8408e664c63
      version: -1
      name: NMAP - Single Port Scan
      description: Sub-playbook that conducts a single port Nmap scan and returns the results to the parent playbook.
      playbookName: NMAP - Single Port Scan
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      NMAPOptions:
        simple: -Pn --unprivileged
      RemoteIP:
        complex:
          root: inputs.RemoteIP
      RemotePort:
        complex:
          root: inputs.RemotePort
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 900,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 5b019184-5ee6-453f-8bc7-4e2fe46fb4eb
    type: title
    task:
      id: 5b019184-5ee6-453f-8bc7-4e2fe46fb4eb
      version: -1
      name: continue
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "11"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -150,
          "y": 445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: ecef2591-55ae-46ff-8e9e-6e413074045d
    type: title
    task:
      id: ecef2591-55ae-46ff-8e9e-6e413074045d
      version: -1
      name: Set Field
      description: commands.local.cmd.set.incident
      type: title
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 605
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: 9c6f8cc5-e1b2-48bb-88d6-ae8248e037a2
    type: regular
    task:
      id: 9c6f8cc5-e1b2-48bb-88d6-ae8248e037a2
      version: -1
      name: Set service detection grid field
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Example of command:
        `!GridFieldSetup keys=ip,src val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" gridfiled="gridfield"`
      scriptName: GridFieldSetup
      type: regular
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      gridfield:
        simple: asmservicedetection
      keys:
        simple: ScanNum,ScanDone,ScanResult,Timestamp,ScanState
      val1:
        complex:
          root: inputs.ScanNumber
      val2:
        complex:
          root: ScanDone
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val3:
        complex:
          root: ScanResult
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val4:
        complex:
          root: NMAP.Scan
          accessor: Started
          transformers:
          - operator: TimeStampToDate
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
      val5:
        complex:
          root: NMAP.Scan.Hosts.Services
          accessor: State
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: "null"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 725
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "7_1_yes": 0.7
    },
    "paper": {
      "dimensions": {
        "height": 1105,
        "width": 1430,
        "x": -150,
        "y": -160
      }
    }
  }
inputs:
- key: RemoteIP
  value:
    complex:
      root: alert
      accessor: remoteip
      transformers:
      - operator: SetIfEmpty
        args:
          applyIfEmpty: {}
          defaultValue:
            value:
              simple: None
  required: true
  description: Remote IP address in alert
  playbookInputQuery:
- key: RemotePort
  value:
    complex:
      root: alert
      accessor: remoteport
      transformers:
      - operator: SetIfEmpty
        args:
          applyIfEmpty: {}
          defaultValue:
            value:
              simple: None
  required: true
  description: Remote port number in alert
  playbookInputQuery:
- key: ASMRuleID
  value:
    complex:
      root: alert
      accessor: asmattacksurfaceruleid
  required: true
  description: Attack Surface Management Rule ID
  playbookInputQuery:
- key: ScanNumber
  value: {}
  required: true
  description: scan number in case there are multiple in the parent playbook
  playbookInputQuery:
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.5.0
