id: Cortex ASM - Jira Notification
version: -1
contentitemexportablefields:
  contentitemfields: {}
name: Cortex ASM - Jira Notification
description: This playbook is used to create Jira tickets directed toward service owners to notify them of their internet exposures.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: af645ade-de93-4220-8b4d-2fd0f93b0fe3
    type: start
    task:
      id: af645ade-de93-4220-8b4d-2fd0f93b0fe3
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -260
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 439be49e-ef74-43c7-85f5-116775b1f5d4
    type: regular
    task:
      id: 439be49e-ef74-43c7-85f5-116775b1f5d4
      version: -1
      name: Set notification grid field
      description: |-
        Automation used to more easily populate a grid field. This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well. For example:
        `!GridFieldSetup keys=ip,src val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" gridfiled="gridfield"`
      scriptName: GridFieldSetup
      type: regular
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      gridfield:
        simple: asmnotification
      keys:
        simple: type,value,url,timestamp
      val1:
        simple: Jira
      val2:
        complex:
          root: Ticket
          accessor: Key
      val3:
        complex:
          root: Ticket
          accessor: Key
          transformers:
          - operator: FirstArrayElement
          - operator: concat
            args:
              prefix:
                value:
                  simple: browse/
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: JiraDomain.url
                iscontext: true
              suffix:
                iscontext: true
      val4:
        simple: TIMESTAMP
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: a05fbee9-f55d-4f40-8de4-7e703f0607d9
    type: title
    task:
      id: a05fbee9-f55d-4f40-8de4-7e703f0607d9
      version: -1
      name: Complete
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: b199902c-b7a6-442f-8d29-68e778079712
    type: regular
    task:
      id: b199902c-b7a6-442f-8d29-68e778079712
      version: -1
      name: Create Jira ticket
      description: Creates a new issue in Jira.
      script: '|||jira-create-issue'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      description:
        complex:
          root: inputs.OwnerNotificationBody
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.RemediationGuidance
                iscontext: true
          - operator: replace
            args:
              limit: {}
              replaceWith: {}
              toReplace:
                value:
                  simple: <br>
      extend-context:
        simple: 'JiraDomain=.={"url": val.self.split(''rest/api'')[0]}'
      issueTypeName:
        simple: Task
      priority:
        complex:
          root: alert
          accessor: severity
          transformers:
          - operator: MapValuesTransformer
            args:
              input_values:
                value:
                  simple: 1,2,3,4
              mapped_values:
                value:
                  simple: Low,Medium,High,Critical
      projectKey:
        simple: ${inputs.JiraProjectKey}${Please insert Jira Project Key.Answers.0}
      project_key:
        simple: ${inputs.JiraProjectKey}${Please insert Jira Project Key.Answers.0}
      summary:
        complex:
          root: alert
          accessor: name
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'Cortex ASM Alert: '
              suffix: {}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 7a4f2026-ef32-4866-844b-65c8e7a64c07
    type: condition
    task:
      id: 7a4f2026-ef32-4866-844b-65c8e7a64c07
      version: -1
      name: Is Jira project key set?
      description: Determines if a Jira project key has been provided or not.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.JiraProjectKey
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 8310b832-eff8-4d36-8256-fd00a8aad548
    type: collection
    task:
      id: 8310b832-eff8-4d36-8256-fd00a8aad548
      version: -1
      name: Provide Jira project key
      description: Determines who to send notification emails to based on analyst input.
      type: collection
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 60
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
      subject:
      body:
        simple: Select owners to notify
      methods: []
      format: ""
      bcc:
      cc:
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
        completeafterv2: true
        completeaftersla: false
    form:
      questions:
      - id: "0"
        label: ""
        labelarg:
          simple: 'Please type in Jira project key:'
        required: true
        gridcolumns: []
        defaultrows: []
        type: shortText
        options: []
        optionsarg: []
        fieldassociated: ""
        placeholder: ""
        tooltip: Add a single Jira project key that the Jira ticket will be created in.
        readonly: false
      title: Please insert Jira Project Key
      description: ""
      sender: Your SOC team
      expired: false
      totalanswers: 0
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 905,
        "width": 630,
        "x": 450,
        "y": -260
      }
    }
  }
inputs:
- key: OwnerNotificationBody
  value: {}
  required: true
  description: Body of the notification (email or ticket) sent to the potential service owner.
  playbookInputQuery:
- key: JiraProjectKey
  value: {}
  required: false
  description: The Jira project key to associate with the issue.
  playbookInputQuery:
- key: RemediationGuidance
  value: {}
  required: true
  description: Remediation Guidance of the Attack Surface Rule.
  playbookInputQuery:
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.9.0
