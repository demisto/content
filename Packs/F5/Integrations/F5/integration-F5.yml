commonfields:
  id: F5 firewall
  version: -1
name: F5 firewall
display: F5 firewall
category: Network Security
description: Manages F5 firewall rules
configuration:
- display: URL
  name: url
  defaultvalue: ""
  type: 0
  required: true
- display: Port
  name: port
  defaultvalue: "34993"
  type: 0
  required: false
- display: Credentials
  name: credentials
  defaultvalue: ""
  type: 9
  required: true
- display: Advanced login - set to true to authenticate via LDAP, AD etc
  name: advancedLogin
  defaultvalue: "false"
  type: 8
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  defaultvalue: ""
  type: 8
  required: false
- display: Use system proxy settings
  name: proxy
  defaultvalue: ""
  type: 8
  required: false
script:
  script: >
    // The command input arg holds the command sent from the user.

    var testUrl = 'mgmt/shared/echo';

    var loginReferenceUrl = 'mgmt/shared/authn/login';


    if (params.port) {
        var serverUrl = params.url.replace(/[\/]+$/, '') + ':' + params.port + '/';
    }

    else {
        var serverUrl = params.url.replace(/[\/]+$/, '') + '/';
    }


    var proxy = params.proxy;

    var insecure = params.insecure;


    var getF5SecurityToken = function() {
        var url = serverUrl + loginReferenceUrl;
        var httpParams = {
                Method: 'POST',
                Body: JSON.stringify({
                    'username': params.credentials.identifier,
                    'password': params.credentials.password,
                    'loginProviderName': 'tmos'
                })
            };
        var res = http(url, httpParams, insecure, proxy);
        if (res.StatusCode !== 200) {
            throw 'Failed getting token from F5';
        }
        return JSON.parse(res.Body).token.token;
    };


    var sendRequest = function(method, uri, body) {
        var url = serverUrl + uri;
        var httpParams = {
                Method: method,
                Body: body
            };
        if (params.advancedLogin) {
            httpParams.Headers = {
                'X-F5-Auth-Token': [getF5SecurityToken()]
            };
        } else {
            httpParams.Username = params.credentials.identifier;
            httpParams.Password = params.credentials.password;
        }
        res = http(url, httpParams, insecure, proxy);
        if (res.StatusCode < 200 || res.StatusCode >= 300) {
            throw 'Failed getting ' + url + ' from F5, status code ' + res.StatusCode + ' and body ' + res.Body;
        }

        if (res.Body === "") {
            msg = "Action " + method + " successfully executed on " + uri;
            return {"msg": msg};
        }

        return JSON.parse(res.Body);
    }


    var methodDictionary = {
        show: 'GET',
        list: 'GET',
        del: 'DELETE',
        modify: 'PATCH',
        create: 'POST'
    };


    var uriDictionary = {
        'f5-create-policy': 'security/firewall/policy',
        'f5-create-rule': 'security/firewall/policy/~Common~%policy-name%/rules',
        'f5-list-rules': 'security/firewall/policy/~Common~%policy-name%/rules',
        'f5-modify-rule': 'security/firewall/policy/~Common~%policy-name%/rules/%rule-name%',
        'f5-del-rule': 'security/firewall/policy/~Common~%policy-name%/rules/%rule-name%',
        'f5-modify-global-policy': 'security/firewall/globalRules/',
        'f5-show-global-policy': 'security/firewall/globalRules',
        'f5-del-policy': 'security/firewall/policy/~Common~%policy-name%',
        'f5-list-all-user-sessions': 'apm/access-info/stats?ver=13.0.0&options=logon-user,%resource-ip%'
    };


    var getMethod = function(command) {
        return methodDictionary[command.split('-')[1]];
    }


    var getUrl = function(command, args) {
        return 'mgmt/tm/' + replaceInTemplatesAndRemove(uriDictionary[command], args);
    }


    var formatIPList = function(ipList) {
        ips = argToList(ipList);
        tmp = {};
        tmp['addresses'] = [];
        for (var i=0; i < ips.length; i++) {
            tmp['addresses'].push({"name": ips[i]});
        }
        return tmp;

    }


    var buildBody = function(command, args) {
        switch (getMethod(command)) {
            case 'PATCH':
            case 'POST':
                break;
            default:
                return undefined;
        }
        if ('source' in args) {
             args['source'] = formatIPList(args["source"]);
        }
        if ('destination' in args) {
             args['destination'] = formatIPList(args["destination"]);
        }
        return JSON.stringify(args);
    }

    switch (command) {
        case 'test-module':
            if (sendRequest('GET', testUrl)) {
                return 'ok';
            }
            return 'Gevald!!';
        default:
            body = sendRequest(getMethod(command), getUrl(command, args), buildBody(command, args));
            md = tableToMarkdown("F5 Results", body);
            cmd_arr = command.split('-');
            key = "F5." + cmd_arr[cmd_arr.length - 1];
            entry = {
                'Type' : entryTypes.note,
                'Contents': body,
                'ContentsFormat' : formats.json,
                'HumanReadable': md,
                'ReadableContentsFormat' : formats.markdown
            };
            entry['EntryContext'] = {}
            entry['EntryContext'][key] = body

            return entry;
    }
  type: javascript
  commands:
  - name: f5-create-policy
    arguments:
    - name: name
      required: true
      description: The name of the policy to create
    - name: description
      description: The description of the policy
    - name: copyFrom
      description: The policy to copy rules from to use as template for new policy
    - name: partition
      description: 'The partition (Default: Common)'
    description: Creates an F5 firewall policy.
  - name: f5-create-rule
    arguments:
    - name: policy-name
      required: true
      default: true
      description: The policy name the rule will be associated with.
    - name: ruleList
      description: Specifies a list of rules to evaluate. See f5-list-rules command. If a ruleList is specified then only the schedule and status properties effect the rule.
    - name: name
      required: true
      description: The rule name
    - name: status
      description: enabled, disabled or scheduled
      auto: PREDEFINED
      predefined:
      - enabled
      - disabled
      - scheduled
    - name: ipProtocol
      description: lowercase version of protocol listed in the UI
    - name: action
      required: true
      description: accept, drop, reject
      auto: PREDEFINED
      predefined:
      - accept
      - drop
      - reject
    - name: placeBefore
      required: true
      description: The firewall entry to place the rule before (ie first)
    - name: source
      isArray: true
      description: the ip sources in csv format
    - name: destination
      isArray: true
      description: the ip destinations in csv format
    description: Creates a rule in a specific policy
  - name: f5-list-rules
    arguments:
    - name: policy-name
      required: true
      default: true
      description: The policy name that the rules displayed are associated with
    description: Lists all the rules of a specific policy.
  - name: f5-modify-rule
    arguments:
    - name: policy-name
      required: true
      default: true
      description: The policy name the rule is associated with.
    - name: rule-name
      required: true
      description: The rule name to modify.
    - name: action
      description: accept, drop, reject
    - name: ipProtocol
      description: one of any described in the UI, but in all lowercase
    - name: placeBefore
      description: The firewall entry to place the rule before (ie first)
    - name: source
      description: csv list of sources
      isArray: true
    - name: destination
      description: csv list of destinations
      isArray: true
    description: Modifies an F5 rule in a specific policy
  - name: f5-del-rule
    arguments:
    - name: policy-name
      required: true
      default: true
      description: The policy name the rule is associated with.
    - name: rule-name
      required: true
      description: The name of the rule to delete.
    description: Delete an F5 firewall rule.
  - name: f5-modify-global-policy
    arguments:
    - name: enforcedPolicy
      required: true
      default: true
      description: The new enforced policy to add to the global policy.
    description: Adds the specific policy to a global policy.
  - name: f5-show-global-policy
    arguments: []
    description: Display global policy.
  - name: f5-del-policy
    arguments:
    - name: policy-name
      required: true
      default: true
      description: The name of the policy to delete.
    description: Delete a policy.
  - name: f5-list-all-user-sessions
    arguments:
    - name: resource-ip
      required: true
      description: Client IP address.
    description: Lists all the sessions with client IP for the given username.
  runonce: false
tests:
- No tests
fromversion: 5.0.0
