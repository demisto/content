category: Network Security
commonfields:
  id: Nozomi Networks
  version: -1
configuration:
- additionalinfo: Here you have to insert the endpoint url of your Nozomi Networks
    appliance
  defaultvalue: https://nozomi_instance.com
  display: Endpoint url
  name: endpoint
  required: true
  type: 0
- additionalinfo: A user having APIs access privileges.
  display: Username
  name: username
  required: true
  type: 0
- additionalinfo: Userâ€™s password.
  display: Password
  hidden: false
  name: password
  required: true
  type: 4
- display: Trust any certificate (not secure)
  name: insecure
  required: false
  type: 8
- display: Use system proxy settings
  hidden: false
  name: proxy
  required: false
  type: 8
- display: Fetch incidents
  name: isFetch
  required: false
  type: 8
- display: Incident type
  name: incidentType
  required: false
  type: 13
- additionalinfo: 'Here you can decide from how many time from the past to get incidents.
    Default is 7 days. some examples of valid input are: 30 seconds, 1 minute, 4 hours,
    2 days...'
  defaultvalue: 7 days
  display: Get incidents from last
  hidden: false
  name: fetchTime
  required: false
  type: 0
- additionalinfo: Get alert having risk higher or equal the one selected.
  defaultvalue: '1'
  display: Get alerts from risk
  hidden: false
  name: riskFrom
  options:
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
  - '6'
  - '7'
  - '8'
  - '9'
  - '10'
  required: false
  type: 15
- additionalinfo: In Nozomi platform there are alerts as a single events and there
    is also the concept of incident, that is an aggegation of alert, by default we
    just send alerts to demisto, if you flag this checkbox we also send incidents.
    When a fetch integration was configured without incidents, if enabled means that
    the new n2os incidents will be sent to XSOAR, but not the old one.
  display: Fetch also Nozomi incidents
  hidden: false
  name: fecthAlsoIncidents
  required: false
  type: 8
description: |-
  The Nozomi Networks Guardian platform is a hardware or virtual appliance that is used to monitor OT/IoT/IT networks. It combines asset discovery, network visualization, vulnerability assessment, risk monitoring and threat detection in a single solution.
    This integration is used to gather alert and asset information from Nozomi.
display: Nozomi Networks
name: Nozomi Networks
script:
  commands:
  - arguments:
    - default: false
      description: You can add a filter to get exactly the assets you want. For example
        'where ip match 10.0.1.10', 'where vendor ==  Selta Telematica S.p.a'
      isArray: false
      name: filter
      required: false
      secret: false
    - default: false
      defaultValue: '500'
      description: Maximun number of assets get from Nozomi, can't be bigger than
        1000
      isArray: false
      name: limit
      required: false
      secret: false
    deprecated: false
    description: This command permits you to get some assets from Nozomi, you can
      use the query filter to to refine your search. With the limits you can decide
      the max number of assets you can retrieve from Nozomi, the limit can't be bigger
      than 1000.
    execution: false
    name: nozomi-find-assets
    outputs:
    - contextPath: Nozomi.Asset.id
      description: uniq id of an asset
      type: String
    - contextPath: Nozomi.Asset.level
      description: network layer
      type: Number
    - contextPath: Nozomi.Asset.capture_device
      description: source from which the asset was captured
      type: String
    - contextPath: Nozomi.Asset.ip
      description: array of asset ip
      type: Unknown
    - contextPath: Nozomi.Asset.mac_address
      description: array of asset mac address
      type: Unknown
    - contextPath: Nozomi.asset.mac_vendor
      description: array of mac vendor
      type: Unknown
    - contextPath: os
      description: operating system
      type: String
    - contextPath: vendor
      description: asset vendor
      type: String
    - contextPath: Nozomi.Asset.firmware_version
      description: firmaware version
      type: String
    - contextPath: serial_number
      description: serial number
      type: String
    - contextPath: product_name
      description: product name
      type: String
    - contextPath: type
      description: asset type as 'OT_device'
      type: String
    - contextPath: protocols
      description: array of asset protocols
      type: Unknown
  - arguments:
    - default: false
      defaultValue: '[]'
      description: List of arrays to close as security
      isArray: false
      name: ids
      required: false
      secret: false
    deprecated: false
    description: Close incidents as security
    execution: false
    name: nozomi-close-incidents-as-security
    outputs:
    - contextPath: Nozomi.CloseStatus
      description: Status of the request
      type: String
    - contextPath: Ids
      description: Ids closed
      type: Unknown
    - contextPath: CloseAction
      description: As the incidents are closed
      type: String
  - arguments:
    - default: false
      defaultValue: '[]'
      description: List of arrays to close as change.
      isArray: false
      name: ids
      required: false
      secret: false
    deprecated: false
    description: Close incidents as change
    execution: false
    name: nozomi-close-incidents-as-change
    outputs:
    - contextPath: Nozomi.CloseStatus
      description: Status of the request
      type: String
    - contextPath: Ids
      description: Ids closed
      type: Unknown
    - contextPath: CloseAction
      description: As the incidents are closed
      type: String
  - arguments:
    - default: false
      defaultValue: alerts | count
      description: 'A valid query '
      isArray: false
      name: query
      required: true
      secret: false
    deprecated: false
    description: |-
      Can execute a nozomi query to get all the information you want.
      A query can be something like that: "alerts | select id name status ack | where status == open"
      Take a look to n2os manual to know how to do a query.
    execution: false
    name: nozomi-query
    outputs:
    - contextPath: Nozomi.Result
      description: An array of items
      type: Unknown
    - contextPath: Nozomi.Error
      description: In case the query is not correct the errors shows you the reason.
      type: String
  - arguments:
    - default: false
      defaultValue: ''''''
      description: a mac address
      isArray: false
      name: mac
      required: true
      secret: false
    - auto: PREDEFINED
      default: true
      defaultValue: 'True'
      description: 'This argument permet you to return only the nodes ips from a mac
        address of nodes having the status to ''confirmed''. Default value is false. '
      isArray: false
      name: only_nodes_confirmed
      predefined:
      - 'True'
      - 'False'
      required: true
      secret: false
    deprecated: false
    description: Find a node ip from a mac address
    execution: false
    name: nozomi-find-ip-by-mac
    outputs:
    - contextPath: Nozomi.Ips
      description: Array of ips found for the mac address passed, empty if not found.
      type: Unknown
    - contextPath: Nozomi.Error
      description: Usually an ip not found error
      type: String
  dockerimage: demisto/python3:3.8.3.9324
  feed: false
  isfetch: true
  longRunning: false
  longRunningPort: false
  runonce: false
  script: '-'
  subtype: python3
  type: python
