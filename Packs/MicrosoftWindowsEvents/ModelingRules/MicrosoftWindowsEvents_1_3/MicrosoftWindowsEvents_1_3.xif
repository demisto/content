[MODEL: dataset = microsoft_windows_raw]
filter provider_name contains "Microsoft-Windows-Security-" or channel = "System" or channel = "Application" or provider_name = "Microsoft-Windows-PowerShell"
| alter
        IpPort = json_extract_scalar(event_data ,"$.IpPort"),
        LogLevel = lowercase(log_level),
        EventType = coalesce(event_action,task,""),
        Command_Path = arrayindex(regextract(message, "Command Path = (.*?)\s{2,}"), 0),
        Command_Name = arrayindex(regextract(message, "Command Name = (.*?)\s{2,}"),0),
        Script_Name = arrayindex(regextract(arrayindex(regextract(message, "Script Name = (.*?)\s{2,}"),0), "\\([^\\]+)$"), 0),
        Script_Path = arrayindex(regextract(message, "Script Name = (.*?)\s{2,}"),0)
| alter
        xdm.source.ipv4 = coalesce(if(json_extract_scalar(event_data ,"$.IpAddress") contains "." and json_extract_scalar(event_data ,"$.IpAddress") not contains ":",json_extract_scalar(event_data ,"$.IpAddress"),json_extract_scalar(event_data ,"$.IpAddress") contains ":" and json_extract_scalar(event_data ,"$.IpAddress") contains ".", arrayindex(regextract(json_extract_scalar(event_data ,"$.IpAddress"),"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0),null),if(channel="System",json_extract_scalar(event_data ,"$.Ipaddress"))),
        xdm.source.ipv6 = if(json_extract_scalar(event_data ,"$.IpAddress") contains ":" and json_extract_scalar(event_data ,"$.IpAddress") not contains ".",json_extract_scalar(event_data ,"$.IpAddress"),json_extract_scalar(event_data ,"$.IpAddress") contains ":" and json_extract_scalar(event_data ,"$.IpAddress") contains ".", arrayindex(regextract(json_extract_scalar(event_data ,"$.IpAddress"),"(.*?)\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"),0),null),
        xdm.source.port = if(IpPort~="\d+",to_integer(IpPort),null),
        xdm.source.user.username = coalesce(if(json_extract_scalar(event_data ,"$.SubjectUserName") not contains "*$",json_extract_scalar(event_data ,"$.SubjectUserName")),if(json_extract_scalar(user, "$.name") not contains "*$",json_extract_scalar(user, "$.name")),if(channel="Application" and json_extract_scalar(event_data ,"$.param3") contains "*\\*",json_extract_scalar(event_data ,"$.param3")),if(channel="Application",json_extract_scalar(event_data ,"$.User"))),
        xdm.source.process.executable.path = coalesce(json_extract_scalar(event_data ,"$.ProcessName"), if(channel="Application",json_extract_scalar(event_data ,"$.Module")), if(Script_Path != null and Script_Path != "", Script_Path), if(Command_Path != null and Command_Path != "", Command_Path), process_path),
        xdm.source.process.name = coalesce(arrayindex(regextract(json_extract_scalar(event_data ,"$.ProcessName"),"\\([^\\]+)$"),0), if(channel="System",json_extract_scalar(event_data ,"$.ProcessName")), process_name),
        xdm.source.application.name = coalesce(if(channel="System", json_extract_scalar(event_data ,"$.param1")), arrayindex(regextract(message, "HostApplication=([\S]+)"), 0)),
        xdm.source.user.identifier = coalesce(json_extract_scalar(event_data ,"$.SubjectUserSid"),json_extract_scalar(user ,"$.identifier"),json_extract_scalar(user,"$.SubjectUserSid"),if(channel="System",json_extract_scalar(event_data ,"$.UserSid"))),
        xdm.target.user.identifier = json_extract_scalar(event_data ,"$.TargetUserSid"),
        xdm.source.user.domain = coalesce(json_extract_scalar(event_data ,"$.SubjectDomainName"),json_extract_scalar(user_data,"$.SubjectDomainName"),json_extract_scalar(user,"$.domain")),
        xdm.target.user.domain = coalesce(json_extract_scalar(event_data ,"$.TargetDomainName"),if(channel="System",json_extract_scalar(event_data ,"$.DCName"))),
        xdm.target.user.username = if(json_extract_scalar(event_data ,"$.TargetUserName") not contains "*$" AND EventType!="Security Group Management",json_extract_scalar(event_data ,"$.TargetUserName")),
        xdm.target.user.groups = if(json_extract_scalar(event_data ,"$.TargetUserName") not contains "*$" AND EventType="Security Group Management",arraycreate(json_extract_scalar(event_data ,"$.TargetUserName"))),
        xdm.source.host.hostname = coalesce(host_name,computer_name,if(json_extract_scalar(event_data ,"$.SubjectUserName") contains "*$",json_extract_scalar(event_data ,"$.SubjectUserName") ),if(json_extract_scalar(user, "$.name") contains "*$",json_extract_scalar(user, "$.name")),if(json_extract_scalar(user_data,"$.SubjectUserName") contains "*$",json_extract_scalar(user_data,"$.SubjectUserName")),if(channel="System",json_extract_scalar(event_data ,"$.HostName")),if(channel="Application" and task="Devices",json_extract_scalar(event_data ,"$.param1"))),
        xdm.source.host.fqdn = json_extract_scalar(event_data ,"$.WorkstationName"),
        xdm.event.type = channel,
        xdm.event.id = to_string(event_id),
        xdm.observer.type = provider_name,
        xdm.event.log_level = if(LogLevel="information", XDM_CONST.LOG_LEVEL_INFORMATIONAL,LogLevel="error",XDM_CONST.LOG_LEVEL_ERROR, LogLevel="warning",XDM_CONST.LOG_LEVEL_WARNING, LogLevel="critical",XDM_CONST.LOG_LEVEL_CRITICAL,to_string(coalesce(opcode,log_level))),
        xdm.event.description = coalesce(message,if(channel="System",json_extract_scalar(event_data ,"$.updateTitle")),if(channel="Application",json_extract_scalar(event_data ,"$.param3"))),
        xdm.alert.description = if(channel="System",coalesce(json_extract_scalar(event_data ,"$.error"),json_extract_scalar(event_data ,"$.ErrorMessage"))),
        xdm.alert.original_alert_id = activity_id,
        xdm.source.process.pid = coalesce(to_integer(process_pid),if(channel="System",to_integer(json_extract_scalar(event_data ,"$.ProcessID")))),
        xdm.source.process.thread_id = to_integer(process_thread_id),
        xdm.session_context_id = to_string(record_id),
        xdm.target.ipv4 = "",
        xdm.target.port = to_integer(0),
        logonType = json_extract_scalar(event_data ,"$.LogonType"),
        userType = json_extract_scalar(user,"$.type"),
        xdm.source.host.os_family = XDM_CONST.OS_FAMILY_WINDOWS,
        xdm.event.operation_sub_type = coalesce(arrayindex(regextract(message,"(^.*?)\."),0),if(channel="System",json_extract_scalar(event_data ,"$.param2"))),
        xdm.source.host.os = os_subtype,
        xdm.event.original_event_type = EventType,
        xdm.source.process.command_line = coalesce(if(Command_Name != null and Command_Name != "", Command_Name), process_cmd),
        xdm.source.process.executable.md5 = process_md5,
        xdm.source.process.executable.sha256 = process_sha256,
        xdm.event.outcome=if(event_result = "success",XDM_CONST.OUTCOME_SUCCESS, event_result="failure",XDM_CONST.OUTCOME_FAILED, event_result),
        xdm.event.outcome_reason = if(channel="Application" and task="TM",json_extract_scalar(event_data ,"$.param2")),
        xdm.observer.unique_identifier = provider_guid,
        xdm.source.process.executable.filename = if(Script_Name != null and Script_Name != "", Script_Name, null)
| alter
        xdm.logon.type = if(logonType="2", XDM_CONST.LOGON_TYPE_INTERACTIVE,logonType="3",XDM_CONST.LOGON_TYPE_NETWORK, logonType="4", XDM_CONST.LOGON_TYPE_BATCH ,logonType="5",XDM_CONST.LOGON_TYPE_SERVICE , logonType ="6", XDM_CONST.LOGON_TYPE_PROXY , logonType="7", XDM_CONST.LOGON_TYPE_NEW_CREDENTIALS , logonType="8", XDM_CONST.LOGON_TYPE_NETWORK_CLEARTEXT, logonType="9",XDM_CONST.LOGON_TYPE_NEW_CREDENTIALS ,logonType="10",XDM_CONST.LOGON_TYPE_REMOTE_INTERACTIVE  ,logonType="11", XDM_CONST.LOGON_TYPE_CACHED_INTERACTIVE, logonType="12", XDM_CONST.LOGON_TYPE_CACHED_REMOTE_INTERACTIVE , logonType="13", XDM_CONST.LOGON_TYPE_CACHED_UNLOCK,logonType),
        xdm.source.user.user_type = if(userType contains "User",XDM_CONST.USER_TYPE_REGULAR, userType contains "Service", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT , userType contains "Computer",XDM_CONST.USER_TYPE_MACHINE_ACCOUNT ,userType);