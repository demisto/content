display: Slack IAM
name: Slack IAM
category: Identity and Access Management
commonfields:
  id: Slack IAM
  version: -1
configuration:
- name: credentials
  displaypassword: Access Token
  hiddenusername: true
  required: false
  type: 9
- display: Access Token
  name: access_token
  hidden: true
  required: false
  section: Connect
  type: 4
- display: Trust any certificate (not secure)
  name: insecure
  advanced: true
  required: false
  section: Connect
  type: 8
- display: Use system proxy settings
  name: proxy
  advanced: true
  required: false
  section: Connect
  type: 8
- display: Allow creating users
  name: create_user_enabled
  additionalinfo: If set to false, iam-create-user command will be skipped, and user will not be created.
  advanced: true
  defaultvalue: 'true'
  required: false
  section: Collect
  type: 8
- display: Allow updating users
  name: update_user_enabled
  advanced: true
  defaultvalue: 'true'
  required: false
  section: Collect
  type: 8
- display: Allow enabling users
  name: enable_user_enabled
  advanced: true
  defaultvalue: 'true'
  required: false
  section: Collect
  type: 8
- display: Allow disabling users
  name: disable_user_enabled
  advanced: true
  defaultvalue: 'true'
  required: false
  section: Collect
  type: 8
- display: Automatically create user if not found in update command
  name: create_if_not_exists
  advanced: true
  defaultvalue: 'true'
  required: false
  section: Collect
  type: 8
- display: Incoming Mapper
  name: mapper_in
  defaultvalue: User Profile - SCIM (Incoming)
  required: true
  section: Connect
  type: 0
- display: Outgoing Mapper
  name: mapper_out
  defaultvalue: User Profile - SCIM (Outgoing)
  required: true
  section: Connect
  type: 0
description: Integrate with Slack's services to execute CRUD operations for employee lifecycle processes.
fromversion: 6.0.0
script:
  commands:
  - name: iam-create-user
    arguments:
    - name: user-profile
      description: User Profile indicator details.
      required: true
    - name: allow-enable
      auto: PREDEFINED
      defaultValue: 'true'
      description: When set to true, after the command execution the status of the user in the 3rd-party integration will be active.
      predefined:
      - 'true'
      - 'false'
    description: Creates a user.
    execution: true
    outputs:
    - contextPath: IAM.Vendor.active
      description: When true, indicates that the employee's status is active in the 3rd-party integration.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Provides the raw data from the 3rd-party integration.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: When true, indicates that the command was executed successfully.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - name: iam-update-user
    arguments:
    - name: user-profile
      description: A User Profile indicator.
      required: true
    - name: allow-enable
      auto: PREDEFINED
      defaultValue: 'true'
      description: When set to true, after the command execution the status of the user in the 3rd-party integration will be active.
      predefined:
      - 'true'
      - 'false'
    description: Updates an existing user with the data passed in the user-profile argument.
    execution: true
    outputs:
    - contextPath: IAM.Vendor.active
      description: When true, indicates that the employee's status is active in the 3rd-party integration.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Provides the raw data from the 3rd-party integration.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: When true, indicates that the command was executed successfully.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - name: iam-get-user
    arguments:
    - name: user-profile
      description: A User Profile indicator.
      required: true
    description: Retrieves a single user resource.
    outputs:
    - contextPath: IAM.Vendor.active
      description: When true, indicates that the employee's status is active in the 3rd-party integration.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Provides the raw data from the 3rd-party integration.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: When true, indicates that the command was executed successfully.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - name: iam-disable-user
    arguments:
    - name: user-profile
      description: A User Profile indicator.
      required: true
    description: Disable an active user.
    execution: true
    outputs:
    - contextPath: IAM.Vendor.active
      description: When true, indicates that the employee's status is active in the 3rd-party integration.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Provides the raw data from the 3rd-party integration.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: When true, indicates that the command was executed successfully.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - name: get-mapping-fields
    description: Retrieves a User Profile schema, which holds all of the user fields within the application. Used for outgoing-mapping through the Get Schema option.
  - name: iam-create-group
    arguments:
    - name: scim
      description: Group SCIM data with displayName.
      required: true
    description: Creates an empty group.
    outputs:
    - contextPath: CreateGroup.id
      description: ID of the group.
      type: String
    - contextPath: CreateGroup.displayName
      description: The display name of the group.
      type: String
    - contextPath: CreateGroup.success
      description: Indicates whether the command succeeded.
      type: Boolean
    - contextPath: CreateGroup.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: CreateGroup.errorMessage
      description: Reason why the API failed.
      type: String
  - name: iam-get-group
    arguments:
    - name: scim
      description: Group SCIM Data.
      required: true
    - name: includeMembers
      auto: PREDEFINED
      defaultValue: 'false'
      description: Wheather to include group's members.
      predefined:
      - 'true'
      - 'false'
    description: Retrieves the group information including members.
    outputs:
    - contextPath: GetGroup.id
      description: ID of the group.
      type: String
    - contextPath: GetGroup.displayName
      description: The display name of the group.
      type: String
    - contextPath: GetGroup.members.display
      description: The display name of the group member.
      type: String
    - contextPath: GetGroup.members.value
      description: ID of the group member.
      type: String
    - contextPath: GetGroup.success
      description: Indicates whether the command succeeded.
      type: Boolean
    - contextPath: GetGroup.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: GetGroup.errorMessage
      description: Reason why the API failed.
      type: String
  - name: iam-delete-group
    arguments:
    - name: scim
      description: Group SCIM with id in it.
      required: true
    description: Permanently removes a group.
    outputs:
    - contextPath: DeleteGroup.id
      description: ID of the group.
      type: String
    - contextPath: DeleteGroup.displayName
      description: The display name of the group.
      type: String
    - contextPath: DeleteGroup.success
      description: Indicates whether the command succeeded.
      type: Boolean
    - contextPath: DeleteGroup.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: DeleteGroup.errorMessage
      description: Reason why the API failed.
      type: String
  - name: iam-update-group
    arguments:
    - name: scim
      description: Group SCIM data.
      required: true
    - name: memberIdsToAdd
      description: List of members ids to add. A maximum of 15,000 users per call can be modified using this command.
      isArray: true
    - name: memberIdsToDelete
      description: List of members ids to be deleted from the group. A maximum of 15,000 users per call can be modified using this command.
      isArray: true
    description: Updates an existing group resource. This command allows individual (or groups of) users to be added or removed from the group with a single operation. A max of 15,000 users can be modified in 1 call.
    outputs:
    - contextPath: UpdateGroup.id
      description: ID of the group.
      type: String
    - contextPath: UpdateGroup.displayName
      description: The display name of the group.
      type: String
    - contextPath: UpdateGroup.success
      description: Indicates whether the command succeeded.
      type: Boolean
    - contextPath: UpdateGroup.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: UpdateGroup.errorMessage
      description: Reason why the API failed.
      type: String
  dockerimage: demisto/python3:3.11.10.113941
  ismappable: true
  isremotesyncout: true
  runonce: false
  script: '-'
  subtype: python3
  type: python
sectionOrder:
- Connect
- Collect
tests:
- No tests
