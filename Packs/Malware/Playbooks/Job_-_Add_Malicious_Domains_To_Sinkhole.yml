id: 5e0b6907-eae7-4c10-802a-8a63d160e214
version: 125
vcShouldKeepItemLegacyProdMachine: false
name: Job - Add Malicious Domains To Sinkhole
description: |-
  This playbook should be run as a job. The playbook runs on domain indicators and performs various checks to decide if they should be sinkholed.
  If a domain is suspicious or malicious and communicates with a file or an IP address, or has C2 related tags, it will be tagged for sinkholing. The playbook assumes that the user is exporting indicators with the sinkhole tag to an EDL (External Dynamic List) using the Export Generic Indicators Service integration in XSOAR. That EDL should be connected to PAN-OS.

  The playbook then ensures a DNS sinkhole is configured in PAN-OS so that communication with those domains will get blocked, and Traffic logs for the systems creating the malicious traffic will be generated, allowing the user to then query the logs in other playbooks using the PAN-OS - Find Sources of Sinkholed Traffic playbook.

  Note: this playbook has inputs for both the "From context data" tab and for the "From indicators" tab.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 9d9d8637-a6b6-4b84-8419-a17c24bb6cbb
    type: start
    task:
      id: 9d9d8637-a6b6-4b84-8419-a17c24bb6cbb
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 35
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: 4f5db42a-566e-4942-80e1-e22b509c1cca
    type: condition
    task:
      id: 4f5db42a-566e-4942-80e1-e22b509c1cca
      version: -1
      name: Enrich domains with inconclusive verdict?
      description: Checks whether to enrich unknown or suspicious domains.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "23"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.EnrichUnknownDomains
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
        - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.EnrichSuspiciousDomains
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 425
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: c28fefe5-54d5-4992-8187-e8f6c47f8c1d
    type: title
    task:
      id: c28fefe5-54d5-4992-8187-e8f6c47f8c1d
      version: -1
      name: Review Evidence
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 331e344b-410c-440f-804a-5869b1738bdc
    type: regular
    task:
      id: 331e344b-410c-440f-804a-5869b1738bdc
      version: -1
      name: Add sinkhole tag (exports to EDL)
      description: Tags the domains deemed as C2 domains with a tag to export them
        to an EDL using the Generic Export Indicators Service.
      script: Builtin|||appendIndicatorField
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      field:
        simple: tags
      fieldValue:
        complex:
          root: inputs.SinkholeTagForEDL
      indicatorsValues:
        complex:
          root: DomainsRelatedToMaliciousIPs
          transformers:
          - operator: AppendIfNotEmpty
            args:
              item:
                value:
                  simple: DomainsRelatedToCampaigns
                iscontext: true
              raw: {}
          - operator: AppendIfNotEmpty
            args:
              item:
                value:
                  simple: DomainsRelatedToThreatActors
                iscontext: true
              raw: {}
          - operator: AppendIfNotEmpty
            args:
              item:
                value:
                  simple: DomainsWithMaliciousTags
                iscontext: true
              raw: {}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 3200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 4a600ff4-a8c9-4641-8b1a-2bc7a7a2bb65
    type: regular
    task:
      id: 4a600ff4-a8c9-4641-8b1a-2bc7a7a2bb65
      version: -1
      name: Save domains with tags
      description: Saves domains that have a "c2", "c&c" or "command and control"
        tag, in a separate context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      key:
        simple: DomainsWithMaliciousTags
      value:
        complex:
          root: playbookQuery
          filters:
          - - operator: containsGeneral
              left:
                value:
                  simple: playbookQuery.CustomFields.tags
                iscontext: true
              right:
                value:
                  simple: c2
              ignorecase: true
            - operator: containsGeneral
              left:
                value:
                  simple: playbookQuery.CustomFields.tags
                iscontext: true
              right:
                value:
                  simple: c&c
              ignorecase: true
            - operator: containsGeneral
              left:
                value:
                  simple: playbookQuery.CustomFields.tags
                iscontext: true
              right:
                value:
                  simple: command and control
              ignorecase: true
            - operator: containsGeneral
              left:
                value:
                  simple: playbookQuery.CustomFields.tags
                iscontext: true
              right:
                value:
                  simple: malicious-activity
              ignorecase: true
            - operator: containsGeneral
              left:
                value:
                  simple: playbookQuery.CustomFields.tags
                iscontext: true
              right:
                value:
                  simple: malware
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.score
                iscontext: true
              right:
                value:
                  simple: "2"
            - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: value
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1770,
          "y": 1775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: 3f101777-77a2-41a3-8313-55e3dc2b9c1e
    type: playbook
    task:
      id: 3f101777-77a2-41a3-8313-55e3dc2b9c1e
      version: -1
      name: PAN-OS - Configure DNS Sinkhole
      description: |-
        This playbook creates a DNS sinkhole in a PAN-OS firewall. It does the following:
        1. Finds a security rule that allows DNS traffic from the internal network to the internet using the "Security Policy Match" feature against traffic from the internal DNS server/s to the public DNS server.
        2. Creates or adds an existing anti-spyware security profile to the security rule/s that were found.
        3. Sets the External Dynamic List under the DNS Policies configuration of the security profile with the "sinkhole" action.
        4. Creates an address object for the sinkhole address so that it can be referenced later in a deny rule (the sinkhole IP constantly rotates).
        5. Creates a new security rule to deny traffic to the sinkhole address object, in order to generate traffic logs for the compromised hosts.

        It should be used with the "PAN-OS - Find Sources of Sinkholed Traffic" playbook to retrieve the source IPs that were detected using the sinkhole method.


        How it works:
        A DNS sinkhole can be used to identify infected hosts on a network where there is an internal DNS Server in-route to the firewall that causes the reference of the original source IP address of the host that first originated the query to be lost (the query is received by the internal DNS server, and the internal DNS server sources a new query if the name-to-IP resolution is not locally cached).

        This causes the firewall to report observations of malicious DNS queries in the Threat logs where the source IP of the malicious DNS query is the Internal DNS server, which would force the administrator to look into the DNS Server logs to try to trace down what was the infected host that originally sourced the malicious DNS query.

        After a security profile with a "sinkhole" action for domains listed in our EDL is attached to a rule that allows DNS traffic, the threat logs will show that requests from our DNS server were sinkholed. However, the compromised systems will not appear in those logs.
        In order to find the IPs of the systems that tried to resolve the malicious domain, a new rule denying all requests to our Sinkhole Address needs to be created. Since the infected hosts received a forged DNS response due to the security profile involved in our previous step, they will now try to connect to the Sinkhole Address, assuming it is their C&C server. The new rule will deny the subsequent attempts of those infected hosts when they try to access the Sinkhole Address, and log them.


        Assumptions:
        - The domains that should be sinkholed are already in a DNS signature source. It can be one of the following sources available in PAN-OS:
        1. An existing External Dynamic List (EDL) of type Domain
        2. Palo Alto Networks Content-delivered malicious domains
        3. DNS Security Categories available with a DNS Security subscription.
        - There is an internal DNS server that is sending the DNS requests out through the firewall to a specific public DNS server.
      playbookName: PAN-OS - Configure DNS Sinkhole
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      AutoCreateRuleToAllowDNS:
        simple: "False"
      DNSSignatureSource:
        complex:
          root: inputs.DNSSignatureSource
      OverwriteExistingProfile:
        complex:
          root: inputs.OverwriteExistingProfile
      PrimaryInternalDNSServerIP:
        complex:
          root: inputs.PrimaryInternalDNSServerIP
      PublicDNSServerIP:
        complex:
          root: inputs.PublicDNSServerIP
      RuleNameToDenyToSinkhole:
        complex:
          root: inputs.RuleNameToDenyToSinkhole
      SecondaryInternalDNSServerIP:
        complex:
          root: inputs.SecondaryInternalDNSServerIP
      SecurityProfileName:
        simple: Sinkhole Anti Spyware Profile
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 3370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: f44e61a7-9bb5-416e-858a-31eb8ba2a445
    type: title
    task:
      id: f44e61a7-9bb5-416e-858a-31eb8ba2a445
      version: -1
      name: Check Domains
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
      - "45"
      - "44"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: 24318345-a6a8-471a-809e-381c6f5e0df3
    type: condition
    task:
      id: 24318345-a6a8-471a-809e-381c6f5e0df3
      version: -1
      name: Are there suspicious domains?
      description: Checks whether there are domains with a score of 2 (suspicious).
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "24"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: playbookQuery
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: playbookQuery.score
                      iscontext: true
                    right:
                      value:
                        simple: "2"
                accessor: value
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: 1aa825ef-89e2-4462-898a-4fae4ea7dada
    type: condition
    task:
      id: 1aa825ef-89e2-4462-898a-4fae4ea7dada
      version: -1
      name: Are there unknown domains?
      description: Checks whether there are domains with a score of 0 (unknown).
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "18"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: playbookQuery
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: playbookQuery.score
                      iscontext: true
                    right:
                      value:
                        simple: "0"
                accessor: value
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 760,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 0916bfab-a760-49c1-80d0-60d083652675
    type: condition
    task:
      id: 0916bfab-a760-49c1-80d0-60d083652675
      version: -1
      name: Enrich unknown domains?
      description: Checks whether domains with a score of 0 (unknown) should be enriched,
        according to the playbook inputs.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "19"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.EnrichUnknownDomains
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 760,
          "y": 980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: 8f7c32a7-aa3f-463d-81ea-37cdf67bc84d
    type: regular
    task:
      id: 8f7c32a7-aa3f-463d-81ea-37cdf67bc84d
      version: -1
      name: Enrich unknown domains
      description: Enriches domains with a score of 0.
      script: Builtin|||enrichIndicators
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      indicatorsValues:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.score
                iscontext: true
              right:
                value:
                  simple: "0"
          accessor: value
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 760,
          "y": 1180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: 8b2768fa-0314-49dc-8519-1929a7a6cf5f
    type: regular
    task:
      id: 8b2768fa-0314-49dc-8519-1929a7a6cf5f
      version: -1
      name: Enrich suspicious domains
      description: Enriches domains with a score of 2.
      script: Builtin|||enrichIndicators
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      indicatorsValues:
        complex:
          root: playbookQuery
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: playbookQuery.score
                iscontext: true
              right:
                value:
                  simple: "2"
          accessor: value
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 1180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "23":
    id: "23"
    taskid: 1fe0d61d-484d-4240-83db-e351d48cc50c
    type: title
    task:
      id: 1fe0d61d-484d-4240-83db-e351d48cc50c
      version: -1
      name: Domain Enrichment
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
      - "15"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 980,
          "y": 625
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "24":
    id: "24"
    taskid: a4654cde-af5b-49ae-84e8-89392e42ea29
    type: condition
    task:
      id: a4654cde-af5b-49ae-84e8-89392e42ea29
      version: -1
      name: Enrich suspicious domains?
      description: Checks whether domains with a score of 2 (suspicious) should be
        enriched, according to the playbook inputs.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "20"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.EnrichSuspiciousDomains
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: 6385c828-154d-4721-88da-8b17d0f9757d
    type: condition
    task:
      id: 6385c828-154d-4721-88da-8b17d0f9757d
      version: -1
      name: Any domains to sinkhole?
      description: Checks whether domains with C2 tags or relationships were found.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "29"
      "yes":
      - "9"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: DomainsRelatedToMaliciousIPs
            iscontext: true
          right:
            value: {}
        - operator: isNotEmpty
          left:
            value:
              simple: DomainsRelatedToCampaigns
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: DomainsRelatedToThreatActors
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: DomainsWithMaliciousTags
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 780,
          "y": 3000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: eb2a3ed3-53d9-4380-8ac0-a125c7e507df
    type: title
    task:
      id: eb2a3ed3-53d9-4380-8ac0-a125c7e507df
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 650,
          "y": 3950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "30":
    id: "30"
    taskid: c3d17149-69cf-4860-897b-420823294552
    type: condition
    task:
      id: c3d17149-69cf-4860-897b-420823294552
      version: -1
      name: Are there domains to check?
      description: Checks whether there are new domains to check for whether they
        should be sinkholed.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "31"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: playbookQuery
                accessor: value
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "31":
    id: "31"
    taskid: 9d7ecc51-3594-48f6-87db-49fc0297ecf5
    type: title
    task:
      id: 9d7ecc51-3594-48f6-87db-49fc0297ecf5
      version: -1
      name: No Domains
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -990,
          "y": 2135
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "34":
    id: "34"
    taskid: b2e78e28-890c-425c-82b5-01d05656c871
    type: regular
    task:
      id: b2e78e28-890c-425c-82b5-01d05656c871
      version: -1
      name: Check for resolved IPs
      description: This automation outputs the indicator relationships to context
        according to the provided query, using the entities, entityTypes, and relationships
        arguments. All arguments will use the AND operator. For example, using the
        following arguments entities=8.8.8.8 entities_types=Domain will provide only
        relationships that the 8.8.8.8 indicator has with indicators of type domain.
      scriptName: SearchIndicatorRelationships
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "35"
    scriptarguments:
      entities:
        complex:
          root: playbookQuery
          accessor: value
      extend-context:
        simple: RelationshipsWithIPs=
      ignore-outputs:
        simple: "true"
      relationships:
        simple: resolves-to
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1750
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "35":
    id: "35"
    taskid: d197ea57-fbc6-45e7-800d-fbca8e0622b3
    type: condition
    task:
      id: d197ea57-fbc6-45e7-800d-fbca8e0622b3
      version: -1
      name: Any IPs found?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "36"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: RelationshipsWithIPs.EntityB
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "36":
    id: "36"
    taskid: e454f7f5-310b-49fc-8a88-9f74e2009c69
    type: regular
    task:
      id: e454f7f5-310b-49fc-8a88-9f74e2009c69
      version: -1
      name: Get IP scores
      description: Get the overall score for the indicator as calculated by DBot.
      scriptName: GetIndicatorDBotScoreFromCache
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      value:
        complex:
          root: RelationshipsWithIPs
          accessor: EntityB
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -520,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "37":
    id: "37"
    taskid: e7a8b59c-e6a6-4886-883b-793c35a985e2
    type: condition
    task:
      id: e7a8b59c-e6a6-4886-883b-793c35a985e2
      version: -1
      name: Any malicious IPs?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "41"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: DBotScoreCache
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: DBotScoreCache.Score
                      iscontext: true
                    right:
                      value:
                        simple: "3"
                accessor: Indicator
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "40":
    id: "40"
    taskid: cb7f64b3-9240-4d07-8b86-8efd5bc03b0a
    type: regular
    task:
      id: cb7f64b3-9240-4d07-8b86-8efd5bc03b0a
      version: -1
      name: Save their corresponding domains in a new key
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      key:
        simple: DomainsRelatedToMaliciousIPs
      value:
        complex:
          root: RelationshipsWithIPs
          filters:
          - - operator: in
              left:
                value:
                  simple: RelationshipsWithIPs.EntityB
                iscontext: true
              right:
                value:
                  simple: MaliciousIPs
                iscontext: true
          accessor: EntityA
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "41":
    id: "41"
    taskid: 4f6a4394-fa23-44ef-86a2-49f51dae15b2
    type: regular
    task:
      id: 4f6a4394-fa23-44ef-86a2-49f51dae15b2
      version: -1
      name: Save malicious IPs in a new key
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      key:
        simple: MaliciousIPs
      value:
        complex:
          root: DBotScoreCache
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScoreCache.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: Indicator
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -520,
          "y": 2500
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "42":
    id: "42"
    taskid: de617776-2de6-43b8-841b-c91b9010ffc9
    type: title
    task:
      id: de617776-2de6-43b8-841b-c91b9010ffc9
      version: -1
      name: Check Resolution to Malicious IPs
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "43":
    id: "43"
    taskid: 2731dde2-e590-42fd-891e-964ac61e1f92
    type: regular
    task:
      id: 2731dde2-e590-42fd-891e-964ac61e1f92
      version: -1
      name: 'Check for related threat actors / campaigns '
      description: |-
        Searches for relationships of the domains that are being checked.
        Note: it is currently impossible to search for relationships to a specific type (campaign), since the "entities_types" argument applies to the EntityAType, which are our domains in this case. Due to this problem, we will get the relevant relationship types instead, and then filter them in the playbook by EntityBType of campaign.
      scriptName: SearchIndicatorRelationships
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "46"
      - "49"
    scriptarguments:
      entities:
        complex:
          root: playbookQuery
          accessor: value
      extend-context:
        simple: RelationshipsWithCampaigns=
      ignore-outputs:
        simple: "true"
      relationships:
        simple: indicated-by,part-of,related-to,attributed-to
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 770,
          "y": 1775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "44":
    id: "44"
    taskid: 38c32ca9-470f-47be-8973-c21e004ae23e
    type: title
    task:
      id: 38c32ca9-470f-47be-8973-c21e004ae23e
      version: -1
      name: Check Domain Tags
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1770,
          "y": 1615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "45":
    id: "45"
    taskid: 30a42f79-4e4f-4ac5-8966-af9095bcd943
    type: title
    task:
      id: 30a42f79-4e4f-4ac5-8966-af9095bcd943
      version: -1
      name: Check Relation To Threat Actors / Campaigns
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 770,
          "y": 1615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "46":
    id: "46"
    taskid: a0136562-84cf-4aa2-872b-ee1672ab94ac
    type: condition
    task:
      id: a0136562-84cf-4aa2-872b-ee1672ab94ac
      version: -1
      name: Any campaigns found?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "48"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: RelationshipsWithCampaigns
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: RelationshipsWithCampaigns.EntityBType
                      iscontext: true
                    right:
                      value:
                        simple: Campaign
                    ignorecase: true
                accessor: EntityB
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 500,
          "y": 1960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "48":
    id: "48"
    taskid: 9d6772da-fd2e-47cc-8e7b-2afaa7f43582
    type: regular
    task:
      id: 9d6772da-fd2e-47cc-8e7b-2afaa7f43582
      version: -1
      name: Save their corresponding domains in a new key
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      key:
        simple: DomainsRelatedToCampaigns
      value:
        complex:
          root: RelationshipsWithCampaigns
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: RelationshipsWithCampaigns.EntityBType
                iscontext: true
              right:
                value:
                  simple: Campaign
              ignorecase: true
          accessor: EntityA
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 330,
          "y": 2150
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "49":
    id: "49"
    taskid: 405abc31-0573-43fd-8bc9-2747adb398ae
    type: condition
    task:
      id: 405abc31-0573-43fd-8bc9-2747adb398ae
      version: -1
      name: Any threat actors found?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "50"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: RelationshipsWithCampaigns
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: RelationshipsWithCampaigns.EntityBType
                      iscontext: true
                    right:
                      value:
                        simple: Threat Actor
                    ignorecase: true
                accessor: EntityB
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 1960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "50":
    id: "50"
    taskid: 70876d4f-29ed-4b4a-8802-546b5b783ac6
    type: regular
    task:
      id: 70876d4f-29ed-4b4a-8802-546b5b783ac6
      version: -1
      name: Save their corresponding domains in a new key
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      key:
        simple: DomainsRelatedToThreatActors
      value:
        complex:
          root: RelationshipsWithCampaigns
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: RelationshipsWithCampaigns.EntityBType
                iscontext: true
              right:
                value:
                  simple: Threat Actor
              ignorecase: true
          accessor: EntityA
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1170,
          "y": 2150
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "15_14_#default#": 0.2,
      "15_24_yes": 0.35,
      "17_14_#default#": 0.33,
      "17_18_yes": 0.54,
      "18_14_#default#": 0.44,
      "24_14_#default#": 0.24,
      "24_20_yes": 0.47,
      "26_29_#default#": 0.16,
      "30_31_#default#": 0.24,
      "30_4_yes": 0.4,
      "35_36_yes": 0.5,
      "35_8_#default#": 0.16,
      "37_41_yes": 0.47,
      "37_8_#default#": 0.2,
      "46_48_yes": 0.4,
      "46_8_#default#": 0.1,
      "49_50_yes": 0.35,
      "49_8_#default#": 0.1,
      "4_14_#default#": 0.1
    },
    "paper": {
      "dimensions": {
        "height": 3980,
        "width": 3140,
        "x": -990,
        "y": 35
      }
    }
  }
inputs:
- key: ""
  value: {}
  required: false
  description: All domain indicators. In the playbook, the domains will be filtered
    by those used for malicious communication, and tagged to be sinkholed.
  playbookInputQuery:
    query: type:Domain
    queryEntity: indicators
    results: null
    daterange:
      fromdate: 0001-01-01T00:00:00Z
      todate: 0001-01-01T00:00:00Z
      period:
        by: ""
        byto: ""
        byfrom: ""
        tovalue: null
        fromvalue: null
        field: ""
      fromdatelicenseval: 0001-01-01T00:00:00Z
    runFromLastJobTime: true
- key: SinkholeTagForEDL
  value:
    simple: to_sinkhole
  required: false
  description: The tag that should be applied to the domain so that it will be exported
    to the EDL using the Generic Export Indicators Service integration in XSOAR.
  playbookInputQuery: null
- key: EnrichUnknownDomains
  value:
    simple: "False"
  required: false
  description: |-
    Whether to enrich unknown domains. Enriching domains can be useful to gain additional information regarding reputation for domains from your feed which will help identify domains used in C2 communication, but may consume more API quota from your threat intelligence integrations.
    Can be True or False.
  playbookInputQuery: null
- key: EnrichSuspiciousDomains
  value:
    simple: "False"
  required: false
  description: |-
    Whether to enrich suspicious domains. Enriching domains can be useful to gain additional information regarding reputation for domains from your feed which will help identify domains used in C2 communication, but may consume more API quota from your threat intelligence integrations.
    Can be True or False.
  playbookInputQuery: null
- key: DNSSignatureSource
  value:
    simple: Domain EDL To Sinkhole
  required: false
  description: |-
    The name of the signature source that contains the domains to sinkhole. It is used by the security profile to check if traffic for any of these domains is being sent through the firewall. Supported signature sources are: Custom EDLs of type Domain, Palo Alto Networks Content-delivered malicious domains, and DNS Security Categories.

    To find your available DNS signature sources in PAN-OS, navigate to Objects > Security Profiles > Anti-Spyware.
    Click on the name of an existing profile or click Add, then open the DNS Policies tab.

    Note: using External Dynamic Lists (EDLs) or DNS Security as signature sources requires a "DNS Security" subscription. If you don't have one, you can keep the default value of "default-paloalto-dns", which is part of the Palo Alto Networks Content.
  playbookInputQuery: null
- key: SecurityProfileName
  value:
    simple: Sinkhole Anti Spyware Profile
  required: false
  description: |-
    The name of the Anti-Spyware Security Profile that will be applied to the DNS related rule, in order to filter the malicious domains and facilitate the sinkhole action. The profile has to be an anti-spyware profile that the user wants the playbook to modify. The playbook will apply this profile to a security rule currently allowing DNS traffic.
    If a security profile with the specified name does not exist, it will be created automatically.
    Afterwards, the playbook will modify the profile to sinkhole any traffic to the domains found in the DNS signature source defined in the playbook input.

    If you're not sure, leave the default value of this input.
  playbookInputQuery: null
- key: PrimaryInternalDNSServerIP
  value: {}
  required: true
  description: The IP of the primary internal DNS server. Used to find a policy that
    matches the malicious DNS queries that go out from the internal DNS server to
    the firewall. The idea is to find a policy that allows DNS traffic in order to
    sinkhole that traffic when used for resolving malicious domains found in our signature
    source.
  playbookInputQuery: null
- key: SecondaryInternalDNSServerIP
  value: {}
  required: false
  description: Optional - the IP of the secondary internal DNS server. Used to find
    a policy that matches the malicious DNS queries that go out from the internal
    DNS server to the firewall. The idea is to find a policy that allows DNS traffic
    in order to sinkhole that traffic when used for resolving malicious domains found
    in our signature source.
  playbookInputQuery: null
- key: PublicDNSServerIP
  value:
    simple: 8.8.8.8
  required: true
  description: |-
    The IP of the public DNS server that the organization is using to resolve external domains. This is needed to find the rule that allows DNS requests so that malicious ones can be sinkholed by attaching a security profile to that rule.

    If there is currently no rule to allow DNS traffic from the internal DNS server to the internet, the user will be prompted to approve the creation of a new rule that allows DNS traffic from the internal DNS server/s to the IP specified in this input's value.
  playbookInputQuery: null
- key: RuleNameToDenyToSinkhole
  value:
    simple: Deny To Sinkhole
  required: false
  description: |-
    The name of the rule that will be created  to deny traffic to the sinkhole address. This is required so that traffic logs will reveal the endpoints attempting to connect to their C&C (which by the end of this playbook will be sinkholed).
    If a rule with the specified name does not exist, one will be created. The new rule will be placed before rules that allow DNS traffic, as recommended by the PAN-OS best practices.
  playbookInputQuery: null
outputs:
- description: query test
- description: The tag that should be applied to the domain so that it will be exported
    to the EDL using the Generic Export Indicators Service integration in XSOAR.
quiet: true
