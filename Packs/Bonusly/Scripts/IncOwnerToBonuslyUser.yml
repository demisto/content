commonfields:
  id: d340ca1a-8573-4f9d-86cb-fafb7f5d7ea2
  version: 7
name: IncOwnerToBonuslyUser
script: |-
  """
  Pass in JSON key value lookup then fetches the incident owner and finds the bonusly user

  """
  import json

  json_lookup = demisto.args().get('json')


  def inc_owner_bonusly_user():
      owner_username = demisto.incidents()[0].get("owner")
      if owner_username:
          try:
              owner_info = demisto.executeCommand('getUserByUsername', {"username":owner_username})[0]
              owner_email = owner_info.get("EntryContext").get("UserByUsername").get("email")
              bonusly_user = json_lookup[owner_email]
              readable_output = "# Incident Owners Email \n" + owner_email + '\n # Bonusly User ' + bonusly_user
              outputs = {'IncOwnerEmail': owner_email, 'BonuslyUser': bonusly_user}
              return return_outputs(readable_output, outputs, owner_email)
          except Exception as ex:
              return_error("Error: {}".format(ex))
      else:
              return_error("Error: Email for owner of incident was not found")

  inc_owner_bonusly_user()
type: python
tags:
- Bonusly
- Utilities
comment: 'This script will get the owner of the incidents email address and then return
  the Bonusly username '
enabled: true
args:
- name: json
  required: true
  description: Enter JSON STRING like {'email@company':'@bonuslyuser'}
outputs:
- contextPath: IncOwnerEmail
  description: Incident Owners Email Address
- contextPath: BonuslyUser
  description: Incident Owner Email Converted To Bonusly Username
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.8.2.8159
runas: DBotWeakRole
