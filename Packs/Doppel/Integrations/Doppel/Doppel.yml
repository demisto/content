category: Data Enrichment & Threat Intelligence
commonfields:
  id: Doppel
  version: -1
configuration:
- additionalinfo: The Doppel server URL that will be used for calling the APIs
  defaultvalue: https://api.doppel.com/
  display: Doppel Tenant URL
  name: url
  required: true
  type: 0
- additionalinfo: The API Key to use for connection with Doppel
  display: ""
  displaypassword: API Key
  hiddenusername: true
  name: credentials
  required: true
  type: 9
- display: Fetch incidents
  name: isFetch
  required: false
  type: 8
- additionalinfo: The interval specifies the cadence with which the Doppel alerts
    be fetched
  defaultvalue: "1"
  display: Incidents Fetch Interval
  name: incidentFetchInterval
  required: true
  type: 19
- display: Incident type
  name: incidentType
  required: false
  type: 13
- additionalinfo: 'Choose the direction to mirror the incident: None (No mirroring),
    Incoming (from Doppel to XSOAR), Outgoing (from XSOAR to Doppel), Incoming and
    Outgoing (from/to Cortex and Doppel)'
  defaultvalue: Incoming And Outgoing
  display: Mirror Direction
  name: mirror_direction
  options:
  - Incoming
  - Outgoing
  - Incoming And Outgoing
  required: false
  type: 15
- additionalinfo: For the first time fetch (or on reset of "Last Run" timestamp),
    fetch alerts created in the mentioned historical days
  defaultvalue: "1"
  display: Historical Days
  name: historical_days
  required: false
  type: 0
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: 82a5f67a-7fbd-4e4b-8c20-1677bbb400ac
    packName: Doppel
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
description: |-
  Doppel is a Modern Digital Risk Protection Solution, that detects the phishing and brand cyber attacks on the emerging channels. Doppel scans millions of channels online which includes, social media, domains, paid ads, dark web, emerging channels, etc. Doppel can identify the malicious content and cyber threats, and enables their customers to take down the digital risks proactively.
  The XSOAR pack for Doppel mirrors the alerts created by Doppel as XSOAR incidents. The pack also contains the commands to perform different operations on Doppel alerts.
detaileddescription: |-
  ### Get Started

  To use the app you need the following:

  1. Doppel Tenant URL that you can use for calling the [Doppel APIs](https://doppel.readme.io/reference/create_alert). eg. *https://api.doppel.com/*
  2. API Key for calling Doppel

  Please reach out to Doppel to get access to above.

  Once you have the URL and API Key, use the same for configuring the Doppel-XSOAR integration instance.
display: Doppel
name: Doppel
script:
  commands:
  - arguments:
    - description: The ID of the alert to retrieve details for
      name: id
    - description: The alerted entity to retrieve details for
      name: entity
    description: Retrieves the alert details by ID or entity. Must include exactly
      one of either id or entity.
    name: doppel-get-alert
    outputs:
    - contextPath: Doppel.doppel_link
      description: Link to the alert in the Doppel portal
      type: String
  - arguments:
    - description: The entity for which the alert should be created.
      name: entity
      required: true
    description: Creates an alert for a specified entity. This command requires the
      entity to be provided in the arguments.
    name: doppel-create-alert
    outputs:
    - contextPath: Doppel.CreatedAlert
      description: The details of the created alert, including its unique ID and other
        relevant metadata.
      type: string
  - arguments:
    - description: The id of the alert to update
      name: alert_id
    - description: The entity of the alert to update
      name: entity
      type: unknown
    - auto: PREDEFINED
      description: Status of which queue the alert is in.
      name: queue_state
      predefined:
      - doppel_review
      - actioned
      - needs_confirmation
      - monitoring
      - taken_down
      - archived
      type: textArea
    - auto: PREDEFINED
      description: State of the alert.
      name: entity_state
      predefined:
      - active
      - down
      - parked
      type: textArea
    - name: comment
      type: textArea
    description: Updates an alert in the Doppel platform.
    name: doppel-update-alert
    outputs:
    - contextPath: Doppel.UpdatedAlert
      description: Provides details of the updated alert after modifying its queue_state
        and entity_state. The result confirms the success and updates made.
      type: unknown
  - arguments:
    - description: The entity for which the abuse alert should be created.
      name: entity
      required: true
    description: Create an alert for the provided value to abuse box. Will fail if
      the alert value is invalid or is protected.
    name: doppel-create-abuse-alert
    outputs:
    - contextPath: Doppel.AbuseAlert
      description: The details of the created abuse alert, including its unique ID
        and other relevant metadata.
      type: string
  - arguments:
    - description: Currently only supports search by url
      name: search_key
      type: textArea
    - auto: PREDEFINED
      description: New queue status to update alert with (id required)
      name: queue_state
      predefined:
      - actioned
      - needs_confirmation
      - doppel_review
      - monitoring
      - taken_down
      - archived
    - auto: PREDEFINED
      description: Product category the report belongs to.
      name: product
      predefined:
      - domains
      - social_media
      - mobile_apps
      - ecommerce
      - crypto
      - emails
      - paid_adds
    - description: Filter alerts created before this date. '2024-01-05T13:45:30' --
        Represents the 5th of January 2024, at 1:45:30 PM
      name: created_before
      type: textArea
    - description: Filter alerts created after this date. '2024-01-05T13:45:30' --
        Represents the 5th of January 2024, at 1:45:30 PM
      name: created_after
      type: textArea
    - auto: PREDEFINED
      description: The field to sort the reports by. Defaults to date_sourced.
      name: sort_type
      predefined:
      - date_sourced
      - date_last_actioned
      type: textArea
    - auto: PREDEFINED
      description: The order to sort the reports by. Defaults to desc.
      name: sort_order
      predefined:
      - asc
      - desc
      type: textArea
    - description: Page number for pagination; defaults to 0
      name: page
      type: textArea
    - description: List of tags to filter alerts
      isArray: true
      name: tags
      type: textArea
    description: Retrieves a list of alerts. The result can be filtered by provided
      parameters.
    name: doppel-get-alerts
    outputs:
    - contextPath: Doppel.GetAlerts
      description: Retrieves multiple alerts based on the query parameters provided.
        It includes metadata and details about each alert.
      type: unknown
  dockerimage: demisto/python3:3.10.14.100715
  isFetchSamples: true
  isfetch: true
  isremotesyncin: true
  isremotesyncout: true
  runonce: false