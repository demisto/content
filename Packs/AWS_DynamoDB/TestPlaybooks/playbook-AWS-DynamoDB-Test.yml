id: AWS_DynamoDB-Test
version: -1
name: AWS_DynamoDB-Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 93cfff9d-8ca2-45e9-86af-11a867f5c58d
    type: start
    task:
      id: 93cfff9d-8ca2-45e9-86af-11a867f5c58d
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "15"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: af1b693a-5298-41d2-83e7-e1816b5a623f
    type: regular
    task:
      id: af1b693a-5298-41d2-83e7-e1816b5a623f
      version: -1
      name: aws-dynamodb-list-tables
      description: Returns an array of table names associated with the current account and endpoint. The output from ListTables is paginated, with each page returning a maximum of 100 table names.
      script: '|||aws-dynamodb-list-tables'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: e97c0483-08c0-40d1-850d-d8f05845c076
    type: regular
    task:
      id: e97c0483-08c0-40d1-850d-d8f05845c076
      version: -1
      name: aws-dynamodb-list-backups
      description: List backups associated with an AWS account. To list backups for a given table, specify TableName. ListBackups returns a paginated list of results with at most 1 MB worth of items in a page. You can also specify a limit for the maximum number of entries to be returned in a page.  In the request, start time is inclusive, but end time is exclusive. Note that these limits are for the time at which the original backup was requested. You can call ListBackups a maximum of five times per second.
      script: '|||aws-dynamodb-list-backups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 1b80486d-182a-4c7f-86ba-5697aec8e44b
    type: regular
    task:
      id: 1b80486d-182a-4c7f-86ba-5697aec8e44b
      version: -1
      name: aws-dynamodb-describe-table
      description: 'Returns information about the table, including the current status of the table, when it was created, the primary key schema, and any indexes on the table.  If you issue a DescribeTable request immediately after a CreateTable request, DynamoDB might return a ResourceNotFoundException. This is because DescribeTable uses an eventually consistent query, and the metadata for your table might not be available at that moment. Wait for a few seconds, and then try the DescribeTable request again. '
      script: '|||aws-dynamodb-describe-table'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      table_name:
        simple: Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: cc350c39-acb1-4903-8496-e89f096d5e05
    type: regular
    task:
      id: cc350c39-acb1-4903-8496-e89f096d5e05
      version: -1
      name: aws-dynamodb-describe-backup
      description: Describes an existing backup of a table. You can call DescribeBackup at a maximum rate of 10 times per second.
      script: '|||aws-dynamodb-describe-backup'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      backup_arn:
        simple: ${AWS-DynamoDB.BackupSummaries.[0].BackupArn}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 4d87042f-cbb9-4a00-8a83-fc308cafd173
    type: regular
    task:
      id: 4d87042f-cbb9-4a00-8a83-fc308cafd173
      version: -1
      name: aws-dynamodb-get-item
      description: The GetItem operation returns a set of attributes for the item with the given primary key. If there is no matching item, GetItem does not return any data and there will be no Item element in the response.  GetItem provides an eventually consistent read by default. If your application requires a strongly consistent read, set ConsistentRead to true. Although a strongly consistent read might take more time than an eventually consistent read, it always returns the last updated value.
      script: '|||aws-dynamodb-get-item'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      key:
        simple: '{"Artist": {"S":"No One You Know"},"SongTitle": {"S":"Call Me Today"}}'
      table_name:
        simple: Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 89e35cb0-b579-48ce-8c08-e1ffe7a5acb5
    type: regular
    task:
      id: 89e35cb0-b579-48ce-8c08-e1ffe7a5acb5
      version: -1
      name: aws-dynamodb-scan
      description: The Scan operation returns one or more items and item attributes by accessing every item in a table or a secondary index. To have DynamoDB return fewer items, you can provide a FilterExpression operation. If the total number of scanned items exceeds the maximum dataset size limit of 1 MB, the scan stops and results are returned to the user as a LastEvaluatedKey value to continue the scan in a subsequent operation. The results also include the number of items exceeding the limit. A scan can result in no table data meeting the filter criteria.  A single Scan operation reads up to the maximum number of items set (if using the Limit parameter) or a maximum of 1 MB of data and then apply any filtering to the results using FilterExpression. If LastEvaluatedKey is present in the response, you need to paginate the result set. For more information, see Paginating the Results in the *Amazon DynamoDB Developer Guide*.   Scan operations proceed sequentially; however, for faster performance on a large table or secondary index, applications can request a parallel Scan operation by providing the Segment and TotalSegments parameters. For more information, see Parallel Scan in the *Amazon DynamoDB Developer Guide*.  Scan uses eventually consistent reads when accessing the data in a table; therefore, the result set might not include the changes to data in the table immediately before the operation began. If you need a consistent copy of the data, as of the time that the Scan begins, you can set the ConsistentRead parameter to true.
      script: '|||aws-dynamodb-scan'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      table_name:
        simple: Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 1b176231-8e9e-41aa-8c70-f51da712e000
    type: regular
    task:
      id: 1b176231-8e9e-41aa-8c70-f51da712e000
      version: -1
      name: aws-dynamodb-query
      description: The Query operation finds items based on primary key values. You can query any table or secondary index that has a composite primary key (a partition key and a sort key).  Use the KeyConditionExpression parameter to provide a specific value for the partition key. The Query operation will return all of the items from the table or index with that partition key value. You can optionally narrow the scope of the Query operation by specifying a sort key value and a comparison operator in KeyConditionExpression. To further refine the Query results, you can optionally provide a FilterExpression. A FilterExpression determines which items within the results should be returned to you. All of the other results are discarded.   A Query operation always returns a result set. If no matching items are found, the result set will be empty. Queries that do not return results consume the minimum number of read capacity units for that type of read operation.    DynamoDB calculates the number of read capacity units consumed based on item size, not on the amount of data that is returned to an application. The number of capacity units consumed will be the same whether you request all of the attributes (the default behavior) or just some of them (using a projection expression). The number will also be the same whether or not you use a FilterExpression.    Query results are always sorted by the sort key value. If the data type of the sort key is Number, the results are returned in numeric order; otherwise, the results are returned in order of UTF-8 bytes. By default, the sort order is ascending. To reverse the order, set the ScanIndexForward parameter to false.   A single Query operation will read up to the maximum number of items set (if using the Limit parameter) or a maximum of 1 MB of data and then apply any filtering to the results using FilterExpression. If LastEvaluatedKey is present in the response, you will need to paginate the result set. For more information, see Paginating the Results in the *Amazon DynamoDB Developer Guide*.   FilterExpression is applied after a Query finishes, but before the results are returned. A FilterExpression cannot contain partition key or sort key attributes. You need to specify those attributes in the KeyConditionExpression.    A Query operation can return an empty result set and a LastEvaluatedKey if all the items read for the page of results are filtered out.   You can query a table, a local secondary index, or a global secondary index. For a query on a table or on a local secondary index, you can set the ConsistentRead parameter to true and obtain a strongly consistent result. Global secondary indexes support eventually consistent reads only, so do not specify ConsistentRead when querying a global secondary index.
      script: '|||aws-dynamodb-query'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      key_conditions:
        simple: |-
          {
                  "Artist":{
                      "ComparisonOperator":"EQ",
                      "AttributeValueList": [ {"S": "No One You Know"} ]
                  },
                  "SongTitle":{
                      "ComparisonOperator":"BETWEEN",
                      "AttributeValueList": [ {"S": "A"}, {"S": "M"} ]
                  }}
      table_name:
        simple: Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: fba64a7a-8533-4681-830c-382e4da8fa7d
    type: regular
    task:
      id: fba64a7a-8533-4681-830c-382e4da8fa7d
      version: -1
      name: aws-dynamodb-tag-resource
      description: Associate a set of tags with an Amazon DynamoDB resource. You can then activate these user-defined tags so that they appear on the Billing and Cost Management console for cost allocation tracking. You can call TagResource up to five times per second, per account.  For an overview on tagging DynamoDB resources, see Tagging for DynamoDB in the *Amazon DynamoDB Developer Guide*.
      script: '|||aws-dynamodb-tag-resource'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      resource_arn:
        simple: arn:aws:dynamodb:eu-central-1:120785635586:table/Music
      tag_key:
        simple: test
      tag_value:
        simple: test
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1565
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: a1b72211-a4c6-4b1a-8316-b2829da9d63a
    type: regular
    task:
      id: a1b72211-a4c6-4b1a-8316-b2829da9d63a
      version: -1
      name: aws-dynamodb-untag-resource
      description: Removes the association of tags from an Amazon DynamoDB resource. You can call UntagResource up to five times per second, per account.  For an overview on tagging DynamoDB resources, see Tagging for DynamoDB in the *Amazon DynamoDB Developer Guide*.
      script: '|||aws-dynamodb-untag-resource'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      resource_arn:
        simple: arn:aws:dynamodb:eu-central-1:120785635586:table/Music
      tag_keys:
        simple: test
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: 0d688d69-aa64-415c-80be-d256a1502a24
    type: regular
    task:
      id: 0d688d69-aa64-415c-80be-d256a1502a24
      version: -1
      name: aws-dynamodb-list-tags-of-resource
      description: List all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource up to 10 times per second, per account. For an overview on tagging DynamoDB resources, see Tagging for DynamoDB in the *Amazon DynamoDB Developer Guide*.
      script: '|||aws-dynamodb-list-tags-of-resource'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      resource_arn:
        simple: arn:aws:dynamodb:eu-central-1:120785635586:table/Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: fd6476fc-8337-437a-88f9-50e174cfd258
    type: condition
    task:
      id: fd6476fc-8337-437a-88f9-50e174cfd258
      version: -1
      name: 'Check if the tag was added to resource '
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "20"
      "yes":
      - "17"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: AWS-DynamoDB.Tags
                accessor: Key
            iscontext: true
          right:
            value:
              simple: test
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: 507eafce-7147-475a-8e45-966f7467cb57
    type: condition
    task:
      id: 507eafce-7147-475a-8e45-966f7467cb57
      version: -1
      name: 'Check if the tag was removed from the resource '
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "19"
      "yes":
      - "18"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEmpty
          left:
            value:
              complex:
                root: AWS-DynamoDB
                accessor: Tags
            iscontext: true
          right:
            value: {}
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: 33e4d067-4b99-49be-8257-8abd2fa7ba00
    type: regular
    task:
      id: 33e4d067-4b99-49be-8257-8abd2fa7ba00
      version: -1
      name: Delete Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "16":
    id: "16"
    taskid: b72c6a8e-ae01-4129-8bca-a5e34c445ee0
    type: regular
    task:
      id: b72c6a8e-ae01-4129-8bca-a5e34c445ee0
      version: -1
      name: aws-dynamodb-list-tags-of-resource
      description: List all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource up to 10 times per second, per account. For an overview on tagging DynamoDB resources, see Tagging for DynamoDB in the *Amazon DynamoDB Developer Guide*.
      script: '|||aws-dynamodb-list-tags-of-resource'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      resource_arn:
        simple: arn:aws:dynamodb:eu-central-1:120785635586:table/Music
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: d04dc7d2-c717-4cbf-8f0d-ca7cd83b6a5a
    type: regular
    task:
      id: d04dc7d2-c717-4cbf-8f0d-ca7cd83b6a5a
      version: -1
      name: Delete Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      all:
        simple: "yes"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 8d9ee994-6a0a-4d66-8552-c9d07afb0b06
    type: title
    task:
      id: 8d9ee994-6a0a-4d66-8552-c9d07afb0b06
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2835
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: c1380452-7837-4047-889f-b30381503975
    type: regular
    task:
      id: c1380452-7837-4047-889f-b30381503975
      version: -1
      name: Print Error
      description: Prints an error entry with a given message
      scriptName: PrintErrorEntry
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      message:
        simple: The tag was not removed from the resource
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: a33af294-ebf8-4376-8d4e-eb5a5a559e64
    type: regular
    task:
      id: a33af294-ebf8-4376-8d4e-eb5a5a559e64
      version: -1
      name: Print Error
      description: Prints an error entry with a given message
      scriptName: PrintErrorEntry
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      message:
        simple: The tag was not added to the resource
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    continueonerrortype: ""
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2865,
        "width": 1025,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
description: ''
