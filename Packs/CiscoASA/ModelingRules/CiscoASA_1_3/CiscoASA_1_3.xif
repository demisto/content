[MODEL: dataset=cisco_asa_raw]
alter
    event_id = to_integer(arrayindex(regextract(_raw_log, "ASA\-\d\-(\d+)\:"),0)),
    priority = arrayindex(regextract(_raw_log, "\<(\d+)\>"),0),
    severity = arrayindex(regextract(_raw_log, "\%ASA\-(\d)\-\d+\:\s"),0),
    message = arrayindex(regextract(_raw_log, "\%ASA\-\d\-\d+\:\s(.*)"),0),
    host_ip = arrayindex(regextract(_raw_log,"host\s*[a-zA-Z0-9-_]*\:*(\d+\.\d+\.\d+\.\d+)"),0),
    protocol1 = arrayindex(regextract(_raw_log,"([A-Z]+)\s*[A-Z]*\s+\w+\s+[from|for]{3,4}"),0),
    protocol2 = arrayindex(regextract(_raw_log,"Built\s+[A-Za-z]+\s+([A-Z]+)\s+connection"),0),
//direction = arrayindex(regextract(_raw_log,"Built\s+([A-Za-z]+)\s+[A-Z]+\s+connection"),0),// the field not exits on data model network
    user_name = arrayindex(regextract(_raw_log,"[U|u]ser\s+[\"\']([^\"^\']+)[\"\']"),0),
    duration = arrayindex(regextract(_raw_log,"duration\s*(\d+\:\d+\:\d+)\s*"),0), // not have function in xql to change it to milliseconds
    bytes = arrayindex(regextract(_raw_log,"bytes\s*(\d+)\s+"),0),
    category = arrayindex(regextract(_raw_log,"category\:\s*([A-Za-z]+)"),0),
    threat_level = arrayindex(regextract(_raw_log,"threat-level\:\s*([^\,]+)\,"),0)
| alter
    protocol = coalesce(protocol1, protocol2)
// ------------------------------ create source/dest ip/port/interface part ---------------------------------
//option 1
// source_ip/source_port to dest_ip/dest_port
| alter
    source_ip1 = arrayindex(regextract(_raw_log,"(\d+\.\d+\.\d+\.\d+)\/\d+\s*to\s*\d+\.\d+\.\d+\.\d+"),0),
    source_port1 = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/(\d+)\s*to\s*\d+\.\d+\.\d+\.\d+"),0),
    dest_ip1 = arrayindex(regextract(_raw_log,"to\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    dest_port1 = arrayindex(regextract(_raw_log,"to\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0)
//option 2
// from|for source_interface:source_ip/source_port to dest_interface:dest_ip:dest_port
| alter
    source_ip2 = arrayindex(regextract(_raw_log,"\w+\s*[a-zA-Z0-9-_]+\:\s*(\d+\.\d+\.\d+\.\d+)\/\d+\s*to\s*"),0),
    source_port2 = arrayindex(regextract(_raw_log,"\w+\s*[a-zA-Z0-9-_]+\:\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*to\s*"),0),
    dest_ip2 = arrayindex(regextract(_raw_log,"\s*to\s*[a-zA-Z0-9-_]+\:(\d+\.\d+\.\d+\.\d+)\/*[a-zA-Z0-9]+"),0), // same on option 2,3,4
    dest_port2 = arrayindex(regextract(_raw_log,"\s*to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/+([a-zA-Z0-9]+)"),0),// same on option 2,3,4
    source_interface2 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\:\s*\d+\.\d+\.\d+\.\d+\/\d+\s*to"),0),
    dest_interface2 = arrayindex(regextract(_raw_log,"\s*to\s*([a-zA-Z0-9-_]+)\:\d+\.\d+\.\d+\.\d+\/+[a-zA-Z0-9]+"),0)// same on option 2,3,4
//option 3
// for interface:source_ip/source_port (mapped_ip/mappedport) to dest_ip/dest_port
// dest_ip, dest_port, dest_interface on option 3 is the same as option 2,4,5
| alter
    source_ip3 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\:\s*(\d+\.\d+\.\d+\.\d+)\/\d+\s*\([^\)]+\)\s*to"),0),
    source_port3 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\:\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*\([^\)]+\)\s*to"),0),
    source_interface3 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\:\s*\d+\.\d+\.\d+\.\d+\/\d+\s*\([^\)]+\)\s*to"),0),
    source_mapped_ip = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/\d+\s*\((\d+\.\d+\.\d+\.\d+)\/\d+\)\s*to"),0),
    source_mapped_port = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/\d+\s*\(\d+\.\d+\.\d+\.\d+\/(\d+)\)\s*to"),0),
    dest_ip3 = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:(\d+\.\d+\.\d+\.\d+)\/\d+\s*\(\d+\."),0),
    dest_port3 = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/(\d+)\s*\(\d+\."),0),
    dest_interface3 = arrayindex(regextract(_raw_log,"to\s*([a-zA-Z0-9-_]+)\:\d+\.\d+\.\d+\.\d+\/\d+\s*\(\d+\."),0),
    dest_mapped_ip = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/\d+\s*\((\d+\.\d+\.\d+\.\d+)\/"),0),
    dest_mapped_port = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/\d+\s*\([^\/]+\/(\d+)\)"),0)
//option 4
//from 172.16.0.120/21751 to management:172.16.1.5/https
//from 172.16.1.20/53 to management:172.16.1.5/63275
| alter
    source_ip4 = arrayindex(regextract(_raw_log,"from\s*(\d+\.\d+\.\d+\.\d+)\/\d+\s*to"),0),
    source_port4 = arrayindex(regextract(_raw_log,"from\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*to"),0)
// option 5
// TAP-Interface/172.16.18.40(41926) -> TAP-Interface2/13.226.4.210(443)
| alter
    source_ip5 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\/(\d+\.\d+\.\d+\.\d+)\(\d+\)\s*\-\>"),0),
    source_port5 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\/\d+\.\d+\.\d+\.\d+\((\d+)\)\s*\-\>"),0),
    dest_interface5 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\/\d+\.\d+\.\d+\.\d+\(\d+\)\s*\-\>"),0),
    dest_ip5 = arrayindex(regextract(_raw_log,"\s*\-\>\s[a-zA-Z0-9-_]+\/(\d+\.\d+\.\d+\.\d+)\(\d+\)"),0),
    dest_port5 = arrayindex(regextract(_raw_log,"\s*\-\>\s[a-zA-Z0-9-_]+\/\d+\.\d+\.\d+\.\d+\((\d+)\)"),0)
// option 6
// src = 172.16.3.139, dest = 172.16.3.56
| alter
    source_ip6 = arrayindex(regextract(_raw_log,"src\s*\=\s*(\d+\.\d+\.\d+\.\d+)"),0),
    dest_ip6 = arrayindex(regextract(_raw_log,"dest\s*\=\s*(\d+\.\d+\.\d+\.\d+)"),0)
// option 7
// src 172.16.16.21/53 dst 172.16.16.43/39523
| alter
    source_ip7 = arrayindex(regextract(_raw_log,"src\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    source_port7 = arrayindex(regextract(_raw_log,"src\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0),
    dest_ip7 = arrayindex(regextract(_raw_log,"dst\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    dest_port7 = arrayindex(regextract(_raw_log,"dst\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0)
// merge the fields
| alter
    source_ip = coalesce(source_ip1, source_ip2, source_ip3, source_ip4, source_ip5, source_ip6, source_ip7),
    source_port = coalesce(source_port1, source_port2, source_port3, source_port4, source_port5, source_port7),
    source_interface = coalesce(source_interface2, source_interface3),
    dest_ip = coalesce(dest_ip1, dest_ip2, dest_ip3, dest_ip5, dest_ip6, dest_ip7),
    dest_port = coalesce(dest_port1, dest_port2, dest_port3, dest_port5, dest_port7),
    dest_interface = coalesce(dest_interface2, dest_interface3, dest_interface5)
// ------------------------------ end source/dest ip/port/interface part ---------------------------------
| alter
    xdm.event.id = to_string(event_id),
    xdm.event.description = message,
    xdm.alert.severity = severity,
    xdm.network.application_protocol = protocol,
    xdm.alert.category = category,
    xdm.source.host.hostname = host_ip,
    xdm.source.ipv4 = source_ip,
    xdm.source.port = to_number(source_port),
    xdm.source.interface = source_interface,
    xdm.source.sent_bytes = to_number(bytes),
    xdm.target.ipv4 = dest_ip,
    xdm.target.port = to_number(dest_port),
    xdm.target.interface = dest_interface,
    xdm.source.user.username = user_name;