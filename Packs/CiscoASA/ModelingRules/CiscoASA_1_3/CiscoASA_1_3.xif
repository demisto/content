[MODEL: dataset=cisco_asa_raw]
alter
    event_id = to_integer(arrayindex(regextract(_raw_log, "ASA\-\d\-(\d+)\:"),0)),
    priority = arrayindex(regextract(_raw_log, "\<(\d+)\>"),0),
    severity = arrayindex(regextract(_raw_log, "\%ASA\-(\d)\-\d+\:\s"),0),
    message = arrayindex(regextract(_raw_log, "\%ASA\-\d\-\d+\:\s(.*)"),0),
//direction = arrayindex(regextract(_raw_log,"Built\s+([A-Za-z]+)\s+[A-Z]+\s+connection"),0),// the field not exits on data model network
    duration = arrayindex(regextract(_raw_log,"duration\s*(\d+\:\d+\:\d+)\s*"),0), // not have function in xql to change it to milliseconds
    bytes = arrayindex(regextract(_raw_log,"bytes\s*(\d+)\s+"),0),
    threat_level = arrayindex(regextract(_raw_log,"threat-level\:\s*([^\,]+)\,"),0)
// Action
| alter action1 = arrayindex(regextract(_raw_log ,"\d+\-\d+\:\s([a-zA-Z]+[\s|\-][a-zA-Z]{2,}\s+[a-zA-Z\s]{3,})"),0),
    action2 = arrayindex(regextract(_raw_log ,"([a-zA-Z]{3,}\s[a-zA-Z]{3,}\s[a-zA-Z\s]{3,})\.*$"),0),
    action3 = arrayindex(regextract(_raw_log ,"\d+\-\d+\:\s\[([A-Za-z\s]+)\]"),0)
| alter action = coalesce(action1 ,action2, action3)
// host ip
| alter host_ip1 = arrayindex(regextract(_raw_log ,"\s*IP\s\<(\d+\.\d+\.\d+\.\d+)\>[\s|\,]"),0),
    host_ip2 = arrayindex(regextract(_raw_log ,"\s*[IP|server]\s*\=\s*(\d+\.\d+\.\d+\.\d+)\s*"),0),
    host_ip3 = arrayindex(regextract(_raw_log ,"\sIP\:\s*(\d+\.\d+\.\d+\.\d+)\,"),0),
    host_ip4 = arrayindex(regextract(_raw_log ,"\sIP\saddress\:\s*(\d+\.\d+\.\d+\.\d+)\,"),0),
    host_ip5 = arrayindex(regextract(_raw_log ,"\sserver\s*(\d+\.\d+\.\d+\.\d+)\s*"),0),
    host_ip6 = arrayindex(regextract(_raw_log ,"\sfrom\s*(\d+\.\d+\.\d+\.\d+)\s*"),0),
    host_ip7 = arrayindex(regextract(_raw_log ,"\sconfiguration\:\s*(\d+\.\d+\.\d+\.\d+)\s*"),0),
    host_ip8 = arrayindex(regextract(_raw_log ,"\saddress\s*(\d+\.\d+\.\d+\.\d+)\s*"),0)
| alter host_ip = coalesce(host_ip1 , host_ip2 , host_ip3 , host_ip4 , host_ip5 ,host_ip6 , host_ip7 , host_ip8 )
// user_name
| alter user_name1 = arrayindex(regextract(_raw_log ,"[U|u]ser\s+[\"\']([^\"^\']+)[\"\']"),0),
    user_name2 = arrayindex(regextract(_raw_log ,"\sUser\s\<([^\>]+)\>[\s|,]"),0),
    user_name3 = arrayindex(regextract(_raw_log ,"\s[U|u]ser[name]*\s*\=\s*([a-zA-Z0-9\-\_\.\@]+)"),0),
    user_name4 = arrayindex(regextract(_raw_log ,"\sUname:\s*(\S+)\s*"),0),
    user_name5 = arrayindex(regextract(_raw_log ,"\sfor\suser\s([a-zA-Z0-9\_\-\.\@]+)\s*"),0),
    user_name6 = arrayindex(regextract(_raw_log ,"\sUser\s([a-zA-Z0-9\-\_\.\@]+)\,"),0)
| alter user_name = coalesce(user_name1 , user_name2, user_name3 , user_name4 , user_name5 , user_name6)
// protocol
| alter protocol1 = arrayindex(regextract(_raw_log,"prot\=([A-Z]{2,})"),0),
    protocol2 = arrayindex(regextract(_raw_log,"\:\s*[A-Za-z]*\s+[A-Z]*[a-z]+\s+([A-Z]+)\s+connection"),0),
    protocol3 = uppercase(arrayindex(regextract(_raw_log ,"\sprotocol\=([a-zA-Z]+)"),0))
| alter protocol = coalesce(protocol1, protocol2, protocol3 )
// ------------------------------ create source/dest ip/port/interface part ---------------------------------
//option 1
// <source_ip>/<source_port> to <dest_ip>/<dest_port>
| alter
    source_ip1 = arrayindex(regextract(_raw_log,"(\d+\.\d+\.\d+\.\d+)\/\d+\s*to\s*\d+\.\d+\.\d+\.\d+"),0),
    source_port1 = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/(\d+)\s*to\s*\d+\.\d+\.\d+\.\d+"),0),
    dest_ip1 = arrayindex(regextract(_raw_log,"to\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    dest_port1 = arrayindex(regextract(_raw_log,"to\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0)
//option 2
// from|for <source_interface>:<source_ip>/<source_port> to <dest_interface>:<dest_ip>:<dest_port>
| alter
    source_ip2 = arrayindex(regextract(_raw_log,"\w+\s*[a-zA-Z0-9-_]+\:\s*(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\/*\d*\s*to\s*"),0),
    source_port2 = arrayindex(regextract(_raw_log,"\w+\s*[a-zA-Z0-9-_]+\:\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*to\s*"),0),
    dest_ip2 = arrayindex(regextract(_raw_log,"\s*to\s*[a-zA-Z0-9-_]+\:(\d+\.\d+\.\d+\.\d+)\/*[a-zA-Z0-9]+"),0), // same on option 2,3,4
    dest_port2 = arrayindex(regextract(_raw_log,"\s*to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/+([a-zA-Z0-9]+)"),0),// same on option 2,3,4
    source_interface2 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\:\s*\d+\.\d+\.\d+\.\d+\/\d+\s*to"),0),
    dest_interface2 = arrayindex(regextract(_raw_log,"\s*to\s*([a-zA-Z0-9-_]+)\:\d+\.\d+\.\d+\.\d+\/+[a-zA-Z0-9]+"),0)// same on option 2,3,4
//option 3
// for <interface>:<source_ip>/<source_port> (<mapped_ip>/<mapped_port>) to <dest_ip>/<dest_port>
// dest_ip, dest_port, dest_interface on option 3 is the same as option 2,4,5
| alter
    source_ip3 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\:\s*(\d+\.\d+\.\d+\.\d+)\/\d+\s*\([^\)]+\)\s*\(*[^\)]*\)*\s*to"),0),
    source_port3 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\:\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*\([^\)]+\)\s*\s*\(*[^\)]*\)*\s*to"),0),
    source_interface3 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\:\s*\d+\.\d+\.\d+\.\d+\/\d+\s*\([^\)]+\)\s*\(*[^\)]*\)*\s*toto"),0),
    source_mapped_ip = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/\d+\s*\((\d+\.\d+\.\d+\.\d+)\/\d+\)\s*to"),0),
    source_mapped_port = arrayindex(regextract(_raw_log,"\d+\.\d+\.\d+\.\d+\/\d+\s*\(\d+\.\d+\.\d+\.\d+\/(\d+)\)\s*to"),0),
    dest_ip3 = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:(\d+\.\d+\.\d+\.\d+)\/\d+\s*"),0),
    dest_port3 = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/(\d+)\s*"),0),
    dest_interface3 = arrayindex(regextract(_raw_log,"to\s*([a-zA-Z0-9-_]+)\:\d+\.\d+\.\d+\.\d+\/\d+\s*"),0),
    dest_mapped_ip = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/\d+\s*\((\d+\.\d+\.\d+\.\d+)\/"),0),
    dest_mapped_port = arrayindex(regextract(_raw_log,"to\s*[a-zA-Z0-9-_]+\:\d+\.\d+\.\d+\.\d+\/\d+\s*\([^\/]+\/(\d+)\)"),0)
//option 4
//from <source_ip>/<source_port> to <interface>:<source_ip>/<source_port>
| alter
    source_ip4 = arrayindex(regextract(_raw_log,"from\s*(\d+\.\d+\.\d+\.\d+)\/\d+\s*to"),0),
    source_port4 = arrayindex(regextract(_raw_log,"from\s*\d+\.\d+\.\d+\.\d+\/(\d+)\s*to"),0)
// option 5
// <interface>/<source_ip>(<source_port>) -> <interface>/<dest_ip>(<dest_port>)
| alter
    source_ip5 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\/(\d+\.\d+\.\d+\.\d+)\(\d+\)\s*\-\>"),0),
    source_port5 = arrayindex(regextract(_raw_log,"[a-zA-Z0-9-_]+\/\d+\.\d+\.\d+\.\d+\((\d+)\)\s*\-\>"),0),
    dest_interface5 = arrayindex(regextract(_raw_log,"([a-zA-Z0-9-_]+)\/\d+\.\d+\.\d+\.\d+\(\d+\)\s*\-\>"),0),
    dest_ip5 = arrayindex(regextract(_raw_log,"\s*\-\>\s[a-zA-Z0-9-_]+\/(\d+\.\d+\.\d+\.\d+)\(\d+\)"),0),
    dest_port5 = arrayindex(regextract(_raw_log,"\s*\-\>\s[a-zA-Z0-9-_]+\/\d+\.\d+\.\d+\.\d+\((\d+)\)"),0)
// option 6
// src = <source_ip>, dest = <dest_ip>
| alter
    source_ip6 = arrayindex(regextract(_raw_log,"src\s*\=\s*(\d+\.\d+\.\d+\.\d+)"),0),
    dest_ip6 = arrayindex(regextract(_raw_log,"dest\s*\=\s*(\d+\.\d+\.\d+\.\d+)"),0)
// option 7
// src <source_ip>/<source_port> dst <dest_ip>/<dest_port>
| alter
    source_ip7 = arrayindex(regextract(_raw_log,"src\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    source_port7 = arrayindex(regextract(_raw_log,"src\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0),
    dest_ip7 = arrayindex(regextract(_raw_log,"dst\s*(\d+\.\d+\.\d+\.\d+)\/\d+"),0),
    dest_port7 = arrayindex(regextract(_raw_log,"dst\s*\d+\.\d+\.\d+\.\d+\/(\d+)"),0)
// option 8
// from <source_ip> to <dest_ip>
| alter source_ip8 = arrayindex(regextract(_raw_log ,"\sfrom\s(\d+\.\d+\.\d+\.\d+)\sto\s\d+\.\d+\.\d+\.\d+\s"),0)
    ,dest_ip8 = arrayindex(regextract(_raw_log ,"\sfrom\s\d+\.\d+\.\d+\.\d+\sto\s(\d+\.\d+\.\d+\.\d+)\s"),0)
// option 9
//, dest_addr=<dest_ip>, src_addr=<source_ip>
| alter source_ip9 = arrayindex(regextract(_raw_log ,"\,\ssrc_addr\=(\d+\.\d+\.\d+\.\d+)\,"),0)
    ,dest_ip9 = arrayindex(regextract(_raw_log ,"\,\sdest_addr\=(\d+\.\d+\.\d+\.\d+)\,"),0)
// option 10
//src <direction>:<source_ip> dst <direction>:<dest_ip>
| alter source_ip10 = arrayindex(regextract(_raw_log ,"\ssrc\s[a-zA-Z]+\:(\d+\.\d+\.\d+\.\d+)\sdst\s"),0)
    ,dest_ip10 = arrayindex(regextract(_raw_log ,"\ssrc\s[a-zA-Z]+\:\d+\.\d+\.\d+\.\d+\sdst\s[a-zA-Z]+\:(\d+\.\d+\.\d+\.\d+)"),0)
// option 11
// from <source_ip> to <dest_ip>
| alter source_ip11 = arrayindex(regextract(_raw_log ,"\sfrom\s(\d+\.\d+\.\d+\.\d+) to \d+\.\d+\.\d+\.\d+"),0)
    ,dest_ip11 = arrayindex(regextract(_raw_log ,"\sfrom\s\d+\.\d+\.\d+\.\d+ to (\d+\.\d+\.\d+\.\d+)"),0)
// option 12
// faddr <source_ip>/<source_port> to laddr <dest_ip>
| alter source_ip12 = arrayindex(regextract(_raw_log ,"for\s+faddr\s+(\d+\.\d+\.\d+\.\d+)\/\d+\s+to\s+"),0),
    dest_ip12 = arrayindex(regextract(_raw_log ,"\s+to\s+laddr\s(\d+\.\d+\.\d+\.\d+)"),0)
// option 13
// from laddr <source_ip> on interface <interface>> to <dest_ip>
| alter source_ip13 = arrayindex(regextract(_raw_log ,"\s+from\s+laddr\s+(\d+\.\d+\.\d+\.\d+)\s+on"),0),
    dest_ip13 = arrayindex(regextract(_raw_log ,"\s+from\s+laddr\s+\d+\.\d+\.\d+\.\d+\s+on\s+\w+\s\w+\sto\s+(\d+\.\d+\.\d+\.\d+)"),0)
// merge the fields
| alter
    source_ip = coalesce(source_ip1, source_ip2, source_ip3, source_ip4, source_ip5, source_ip6, source_ip7, source_ip8, source_ip9, source_ip10, source_ip11, source_ip12, source_ip13),
    source_port = coalesce(source_port1, source_port2, source_port3, source_port4, source_port5, source_port7),
    source_interface = coalesce(source_interface2, source_interface3),
    dest_ip = coalesce(dest_ip1, dest_ip2, dest_ip3, dest_ip5, dest_ip6, dest_ip7, dest_ip8, dest_ip9, dest_ip10, dest_ip11, dest_ip12, dest_ip13),
    dest_port = coalesce(dest_port1, dest_port2, dest_port3, dest_port5, dest_port7),
    dest_interface = coalesce(dest_interface2, dest_interface3, dest_interface5)
// ------------------------------ end source/dest ip/port/interface part ---------------------------------
| alter
    xdm.event.id = to_string(event_id),
    xdm.event.description = message,
    xdm.alert.severity = severity,
    xdm.network.application_protocol = protocol,
    xdm.source.ipv4 = coalesce(source_ip,host_ip),
    xdm.source.port = to_number(source_port),
    xdm.source.interface = source_interface,
    xdm.source.sent_bytes = to_number(bytes),
    xdm.target.ipv4 = dest_ip,
    xdm.target.port = to_number(dest_port),
    xdm.target.interface = dest_interface,
    xdm.source.user.username = user_name,
    xdm.event.operation = action;