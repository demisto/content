id: McAfee ePO Endpoint Compliance Playbook v2
version: -1
name: McAfee ePO Endpoint Compliance Playbook v2
description: Discover endpoints that are not using the latest McAfee AV Signatures
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: a3d08d64-ed0b-41ff-886d-00daa3ed7c90
    type: start
    task:
      id: a3d08d64-ed0b-41ff-886d-00daa3ed7c90
      version: -1
      name: start_task
      type: start
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "10"
      - "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -140,
          "y": -97
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: cdd9fe08-f2d7-4b2f-8e62-ec21ed9e3715
    type: regular
    task:
      id: cdd9fe08-f2d7-4b2f-8e62-ec21ed9e3715
      version: -1
      name: Retrieve ePO's current DAT version
      script: epo|||epo-get-current-dat
      type: regular
      iscommand: true
      brand: epo
      description: Retrieve ePO's current DAT version from the local repository.
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      repos:
        simple: ${repo}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 123,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: b8d7abd0-0a4f-4e52-8aac-5fd4e6949fd6
    type: condition
    task:
      id: b8d7abd0-0a4f-4e52-8aac-5fd4e6949fd6
      version: -1
      name: Are any endpoints outdated and using an older DAT version?
      description: A list of comma-separated systems on which an out-of-date DAT file is in use.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "No":
      - "9"
      "Yes":
      - "11"
    scriptarguments:
      faultydelta: {}
      repoversions:
        simple: ${repoversions}
      requireddatversion:
        simple: "-1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -140,
          "y": 229
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: aa4a2429-7901-440e-8d5a-e46557154f5b
    type: condition
    task:
      id: aa4a2429-7901-440e-8d5a-e46557154f5b
      version: -1
      name: Are any endpoints faulty and dangerously outdated?
      description: A list of comma-separated systems on which an out-of-date DAT file is in use.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "No":
      - "7"
      "Yes":
      - "12"
    scriptarguments:
      data:
        simple: ${faultyendpoints}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 313,
          "y": 553
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 64ae7dd1-592c-4f0a-8b57-3107a6e4040a
    type: regular
    task:
      id: 64ae7dd1-592c-4f0a-8b57-3107a6e4040a
      version: -1
      name: Isolate dangerous systems from network
      type: regular
      iscommand: false
      brand: ""
      description: Isolate dangerous systems from the network.
    nexttasks:
      '#none#':
      - "6"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 598,
          "y": 890
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: 000bce2f-7e47-492e-86ab-d022dd9837cd
    type: regular
    task:
      id: 000bce2f-7e47-492e-86ab-d022dd9837cd
      version: -1
      name: Open ServiceNow ticket for outdated Endpoints
      description: |-
        This script is used to wrap the generic create-record command in ServiceNow.
        You can add fields that you want to create the record with as script arguments or in the
        code and work with the records easily.
      scriptName: ServiceNowCreateIncident
      type: regular
      iscommand: false
      brand: ServiceNow
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      assigned_group: {}
      assignee: {}
      description:
        simple: Out of date ePO endpoints to handle
      severity:
        simple: "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 598,
          "y": 1063
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: 6d0b0842-0873-4629-8e39-9b4b873f46cb
    type: regular
    task:
      id: 6d0b0842-0873-4629-8e39-9b4b873f46cb
      version: -1
      name: Trigger signature update on outdated endpoints
      script: epo|||epo-update-client-dat
      type: regular
      iscommand: true
      brand: epo
      description: Trigger signature update on outdated endpoints
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      abortAfterMinutes: {}
      endpoints:
        simple: ${outdatedendpoints}
      eposerver:
        simple: ${repo}
      randomizationInterval: {}
      retryAttempts: {}
      retryIntervalInSeconds: {}
      stopAfterMinutes: {}
      systems:
        simple: ${outdatedEndpoints}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 62,
          "y": 723
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 291e3146-5e99-4b7c-80d5-f0b13e9da469
    type: regular
    task:
      id: 291e3146-5e99-4b7c-80d5-f0b13e9da469
      version: -1
      name: Close the investigation
      description: Close the incident.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -14,
          "y": 1258
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "10":
    id: "10"
    taskid: a8019bd1-dd82-4437-8b23-a38d82a0fe5e
    type: regular
    task:
      id: a8019bd1-dd82-4437-8b23-a38d82a0fe5e
      version: -1
      name: Get McAfee latest DAT Version
      description: Check the latest DAT file in the McAfee repository.
      script: epo|||epo-get-latest-dat
      type: regular
      iscommand: true
      brand: epo
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -394,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: 370580ad-016e-4515-8a0e-e76cd0e55373
    type: regular
    task:
      id: 370580ad-016e-4515-8a0e-e76cd0e55373
      version: -1
      name: Store system names to context key outdatedEndpoints
      description: Takes the comments of a given entry ID and stores them in the incident
        context, under a provided context key. For accessing the last executed task's
        comments, provide ${lastCompletedTaskEntries.[0]} as the value for the entryId
        input parameter.
      scriptName: commentsToContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      contextKey:
        simple: outdatedEndpoints
      entryId:
        simple: ${lastCompletedTaskEntries.[0]}
      listSeperator:
        simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 313,
          "y": 401
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "12":
    id: "12"
    taskid: da03510a-e5ee-4690-8b8c-1590095304bf
    type: regular
    task:
      id: da03510a-e5ee-4690-8b8c-1590095304bf
      version: -1
      name: Store system names to context key endpointsToIsolate
      description: Takes the comments of a given entry ID and stores them in the incident
        context, under a provided context key. For accessing the last executed task's
        comments, provide ${lastCompletedTaskEntries.[0]} as the value for the entryId
        input parameter.
      scriptName: commentsToContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      contextKey:
        simple: endpointsToIsolate
      entryId:
        simple: ${lastCompletedTaskEntries.[0]}
      listSeperator: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 598,
          "y": 723
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "13":
    id: "13"
    taskid: e495eb2a-9ac5-4515-8a89-32a1200d14a3
    type: regular
    task:
      id: e495eb2a-9ac5-4515-8a89-32a1200d14a3
      version: -1
      name: Set incident severity to High
      description: commands.local.cmd.set.incident
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountinformationbreached: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bpareport: {}
      breachconfirmation: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactemailaddress: {}
      contactname: {}
      contacttelephonenumber: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationports: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      digitalguardianactivity: {}
      digitalguardianalarmname: {}
      digitalguardianarcuid: {}
      digitalguardianattachmentfilename: {}
      digitalguardianclassification: {}
      digitalguardiancommandline: {}
      digitalguardiancomputername: {}
      digitalguardiandestinationaddress: {}
      digitalguardiandestinationdnsdomain: {}
      digitalguardianemailrecipient: {}
      digitalguardianemailsender: {}
      digitalguardianemailsubject: {}
      digitalguardianfilename: {}
      digitalguardianparentprocessname: {}
      digitalguardianpolicy: {}
      digitalguardianprocessname: {}
      digitalguardianremoteport: {}
      digitalguardiansensitivity: {}
      digitalguardiansourceaddress: {}
      digitalguardiansourceip: {}
      digitalguardianthreattype: {}
      digitalguardianusername: {}
      dpoemailaddress: {}
      dponotification: {}
      duoaccountstatus: {}
      duration: {}
      email: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailheaders2: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exactlywhathappenedandatwhattimes: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      financialinformationbreached: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      grid: {}
      healthinsurancebreached: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      howcouldinformationsharingwithotherorganizationshavebeenimproved: {}
      howwastheincidentcontainedanderadicated: {}
      howwelldidstaffandmanagementperformindealingwiththeincidentwerethedocumentedproceduresfollowedweretheyadequate: {}
      id: {}
      illusionblackattackerid: {}
      illusionblackattacktype: {}
      illusionblackdecoyid: {}
      illusionblackevents: {}
      illusionblackthreatparse: {}
      illusivenetworkshasforensics: {}
      illusivenetworkshostname: {}
      illusivenetworksid: {}
      illusivenetworkslastseenuser: {}
      illusivenetworkssourceoperatingsystem: {}
      illusivenetworksstepstocrownjewel: {}
      illusivenetworksstepstodomainadmin: {}
      indenideviceid: {}
      indeniissueid: {}
      individualsnotification: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      logzioalerteventid: {}
      logzioalertid: {}
      logzioalertsummary: {}
      logziotags: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      managementnotification: {}
      manageremail: {}
      markdowntest: {}
      measurestomitigate: {}
      medianotification: {}
      medicalinformationbreached: {}
      name: {}
      niststage: {}
      numberofports: {}
      numberofuniqueports: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      otherpiidatabreached: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      penteraoperationdetails: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      piidatatype: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portsblocked: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      quarantined: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      residentnotificationoption: {}
      residentsemailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scansourcetype: {}
      secretarynotification: {}
      sectorofaffectedparty: {}
      severity:
        simple: High
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      statewherethebreachtookplace: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      suggestionsanddiscussionofhowtoimprovetheteam: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      test2: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      uniquebiometricdatabreached: {}
      uniqueidentificationnumberbreached: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      wereanystepsoractionstakenthatmighthaveinhibitedtherecovery: {}
      whatadditionaltoolsorresourcesareneededtodetectanalyzeandmitigatefutureincidents: {}
      whataretheareasthatneedimprovement: {}
      whatcorrectiveactionscanpreventsimilarincidentsinthefuture: {}
      whatinformationwasneededsooner: {}
      whatprecursorsorindicatorsshouldbewatchedforinthefuturetodetectsimilarincidents: {}
      whatwasthescopeoftheincident: {}
      whatwastheworkperformedduringrecovery: {}
      whatweretheareaswherethecirtteamswereeffective: {}
      whatwouldthestaffandmanagementdodifferentlythenexttimeasimilarincidentoccurs: {}
      whenwastheproblemfirstdetectedandbywhom: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 598,
          "y": 1258
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "3_11_Yes": 0.4,
      "3_9_No": 0.12
    },
    "paper": {
      "dimensions": {
        "height": 1450,
        "width": 1372,
        "x": -394,
        "y": -97
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
tests:
- No tests
