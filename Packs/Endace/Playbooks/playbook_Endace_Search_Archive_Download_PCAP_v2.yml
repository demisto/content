id: Endace Search Archive Download PCAP v2
version: -1
name: Endace Search Archive Download PCAP v2
description: "This playbook uses Endace APIs to search, archive and download PCAP\
  \ file from either a single EndaceProbe or many via the InvestigationManager.  \
  \    The workflow accepts inputs like “the date and time of the incident or a timeframe”,\
  \ “source or destination IP address of the incident”,  “source or destination IP\
  \ port of the incident”,  “protocol of the incident” and name of archive file. \n\
  Required Inputs -\nEither timeframe  or start and timeframe or end and timeframe\
  \ or start and end fields. \nEither src_host_list or dest_host_list or ip fields.\
  \ \nEither src_port_list or dest_port_list or port fields. \narchive_filename field\
  \ is required\ndelete_archive field  is required\ndownload_threshold field is required\n\
  \nThe Workflow in this playbook : \n1. Finds the packet history related to the search\
  \ items. Multiple Search Items in an argument field are OR'd. Search Items between\
  \ multiple arguments are AND'd. \n2.  A successful Search is followed by an auto\
  \ archival process of matching packets on EndaceProbe which can be accessed from\
  \ an investigation link on the Evidence Board and/or War Room board that can be\
  \ used to start forensic analysis of the packets history on EndaceProbe.\n3. Finally\
  \ Download the archived PCAP file to XSOAR system provided the file size is less\
  \ than a user defined threshold say 10MB. Files greater than this threshold can\
  \ be accessed or analyzed on EndaceProbe via \"Download PCAP link\" or \"Endace\
  \ PivotToVision link\" displayed on Evidence Board.\n"
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 7d51f851-1442-42dd-8bec-541c94a1bb98
    type: start
    task:
      id: 7d51f851-1442-42dd-8bec-541c94a1bb98
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 247ea8ec-c655-4282-8e91-56b62d715272
    type: regular
    task:
      id: 247ea8ec-c655-4282-8e91-56b62d715272
      version: -1
      name: endace-create-search
      description: Create a search task on EndaceProbe. Search is issued against all
        Rotation Files on EndaceProbe.
      script: Endace|||endace-create-search
      type: regular
      iscommand: true
      brand: Endace
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      dest_host_list:
        simple: ${inputs.dest_host_list}
      dest_port_list:
        simple: ${inputs.dest_port_list}
      end:
        simple: ${inputs.end}
      ip:
        simple: ${inputs.ip}
      port:
        simple: ${inputs.port}
      protocol:
        simple: ${inputs.protocol}
      src_host_list:
        simple: ${inputs.src_host_list}
      src_port_list:
        simple: ${inputs.src_port_list}
      start:
        simple: ${inputs.start}
      timeframe:
        simple: ${inputs.timeframe}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "7":
    id: "7"
    taskid: 451a8bd3-22cc-4777-8bbe-290eb8212896
    type: playbook
    task:
      id: 451a8bd3-22cc-4777-8bbe-290eb8212896
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${Endace.Search.Task.JobID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: jobid
      PollingCommandName:
        simple: endace-get-search-status
      Timeout:
        simple: "10"
      dt:
        simple: Endace.Search.Response(val.Status != 'complete').JobID
    separatecontext: false
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: 5d344cf7-6846-42ce-8e20-594f366cb134
    type: condition
    task:
      id: 5d344cf7-6846-42ce-8e20-594f366cb134
      version: -1
      name: is Search Progess  = 100%?
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "21"
      "yes":
      - "27"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: ${Endace.Search.Response.JobProgress}
            iscontext: true
          right:
            value:
              simple: "100"
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "10":
    id: "10"
    taskid: 84efbeb5-8d4a-4481-835e-0a1e05e8654b
    type: condition
    task:
      id: 84efbeb5-8d4a-4481-835e-0a1e05e8654b
      version: -1
      name: Matched bytes > 0?
      description: |-
        Checks if one number(float) as bigger than the other(float)
        Returns yes: if first > second
        Returns no: if first <= second
        Returns exception if one of the inputs is not a number
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "21"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEqualString
          left:
            value:
              simple: ${Endace.Search.Response.TotalBytes}
            iscontext: true
          right:
            value:
              simple: "0"
      - - operator: isNotEmpty
          left:
            value:
              simple: ${Endace.Search.Response.TotalBytes}
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "11":
    id: "11"
    taskid: 7d16de5e-2376-439b-802c-c21676308f1d
    type: regular
    task:
      id: 7d16de5e-2376-439b-802c-c21676308f1d
      version: -1
      name: endace-create-archive
      description: Create an archive task to archive packets of interest on EndaceProbe.
        Archived packets can later be downloaded from EndaceProbe as a PCAP file.
        Archived Files never expire. Allowed chars are text, numbers, dash and underscore.
      script: Endace|||endace-create-archive
      type: regular
      iscommand: true
      brand: Endace
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      archive_filename:
        simple: ${inputs.archive_filename}
      dest_host_list:
        simple: ${inputs.dest_host_list}
      dest_port_list:
        simple: ${inputs.dest_port_list}
      end:
        simple: ${inputs.end}
      ip:
        simple: ${inputs.ip}
      port:
        simple: ${inputs.port}
      protocol:
        simple: ${inputs.protocol}
      src_host_list:
        simple: ${inputs.src_host_list}
      src_port_list:
        simple: ${inputs.src_port_list}
      start:
        simple: ${inputs.start}
      timeframe:
        simple: ${inputs.timeframe}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "12":
    id: "12"
    taskid: 4c34de6c-d657-4f5f-86ac-467167c95aba
    type: playbook
    task:
      id: 4c34de6c-d657-4f5f-86ac-467167c95aba
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${Endace.Archive.Task.FileName}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: archive_filename
      PollingCommandName:
        simple: endace-get-archive-status
      Timeout:
        simple: "10"
      dt:
        simple: Endace.Archive.Response(val.Status != 'Finished').FileName
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: 3e098c0d-8321-45ab-827c-da25c8d3bfd6
    type: regular
    task:
      id: 3e098c0d-8321-45ab-827c-da25c8d3bfd6
      version: -1
      name: endace-get-archive-status
      description: get status of archived task
      script: Endace|||endace-get-archive-status
      type: regular
      iscommand: true
      brand: Endace
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      archive_filename:
        simple: ${Endace.Archive.Task.FileName}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "14":
    id: "14"
    taskid: 2337ceb2-3174-4052-82df-b0a93725a242
    type: condition
    task:
      id: 2337ceb2-3174-4052-82df-b0a93725a242
      version: -1
      name: Is Archived Finished ?
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "21"
      "yes":
      - "15"
    scriptarguments:
      left:
        simple: ${Endace.Archive.Response.Status}
      right:
        simple: Finished
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: 9f6f660e-d570-46c1-897c-5710b15b5d4a
    type: condition
    task:
      id: 9f6f660e-d570-46c1-897c-5710b15b5d4a
      version: -1
      name: is PCAP file size under set download threshold?
      description: |-
        Checks if one number(float) as bigger than the other(float)
        Returns yes: if first > second
        Returns no: if first <= second
        Returns exception if one of the inputs is not a number
      scriptName: IsGreaterThan
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "21"
      "yes":
      - "16"
    scriptarguments:
      first:
        complex:
          root: inputs.download_threshold
          transformers:
          - operator: multiply
            args:
              by:
                value:
                  simple: "1000000"
      second:
        simple: ${Endace.Search.Response.TotalBytes}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 387.5,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: 88d43aac-b375-40ed-81d0-eea47615d8d6
    type: regular
    task:
      id: 88d43aac-b375-40ed-81d0-eea47615d8d6
      version: -1
      name: endace-download-pcap
      description: Download a copy of the PCAP file from EndaceProbe if PCAP file
        size is within the threshold value defined by filesizelimit.
      script: Endace|||endace-download-pcap
      type: regular
      iscommand: true
      brand: Endace
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      filename:
        simple: ${Endace.Archive.Response.FileName}
      filesizelimit:
        complex:
          root: inputs.download_threshold
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 500,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: f1b8f55d-9186-49b1-87cb-6c3b42d4ef33
    type: title
    task:
      id: f1b8f55d-9186-49b1-87cb-6c3b42d4ef33
      version: -1
      name: end
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 250,
          "y": 3360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "22":
    id: "22"
    taskid: d6fe75bf-ebb0-4a20-83ec-5d51ab692d88
    type: condition
    task:
      id: d6fe75bf-ebb0-4a20-83ec-5d51ab692d88
      version: -1
      name: 'Delete Archived File on EndaceProbe ? '
      description: Check if a given value is true. Will return 'no' otherwise
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "21"
      "yes":
      - "23"
    scriptarguments:
      value:
        simple: ${inputs.delete_archive}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 500,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "23":
    id: "23"
    taskid: f969920e-7542-4887-8457-89466614dd9b
    type: regular
    task:
      id: f969920e-7542-4887-8457-89466614dd9b
      version: -1
      name: endace-delete-archived-file
      description: Delete an archived file from EndaceProbe.
      script: Endace|||endace-delete-archived-file
      type: regular
      iscommand: true
      brand: Endace
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      archived_filename:
        simple: ${Endace.Archive.Task.FileName}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 612.5,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: d8897d46-203a-45ca-8150-3065bb49091c
    type: regular
    task:
      id: d8897d46-203a-45ca-8150-3065bb49091c
      version: -1
      name: AddEvidence
      description: |
        Adds provided entries to the incident Evidence Board. In playbook, can be positioned after a task to add the previous task's entries to Evidence Board automatically (with no need to provide arguments)
      scriptName: AddEvidence
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      desc:
        simple: Endace Pivot to Vision link
      description: {}
      entryIDs: {}
      occurred: {}
      tags: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "25":
    id: "25"
    taskid: aaa5aed1-4f53-4ade-8fe9-c7517ea31b21
    type: regular
    task:
      id: aaa5aed1-4f53-4ade-8fe9-c7517ea31b21
      version: -1
      name: AddEvidence
      description: |
        Adds provided entries to the incident Evidence Board. In playbook, can be positioned after a task to add the previous task's entries to Evidence Board automatically (with no need to provide arguments)
      scriptName: AddEvidence
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      desc:
        simple: PCAP Download Status
      description: {}
      entryIDs: {}
      occurred: {}
      tags: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 500,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "27":
    id: "27"
    taskid: d18cb759-8cdd-4f20-8109-acd9217e2099
    type: regular
    task:
      id: d18cb759-8cdd-4f20-8109-acd9217e2099
      version: -1
      name: AddEvidence
      description: |
        Adds provided entries to the incident Evidence Board. In playbook, can be positioned after a task to add the previous task's entries to Evidence Board automatically (with no need to provide arguments)
      scriptName: AddEvidence
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      desc:
        simple: 'Endace Search task found ${Endace.Search.Response.TotalBytes} Bytes '
      description: {}
      entryIDs: {}
      occurred: {}
      tags: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "28":
    id: "28"
    taskid: 623a3290-6a0b-49e2-8346-9fa70fb8490a
    type: regular
    task:
      id: 623a3290-6a0b-49e2-8346-9fa70fb8490a
      version: -1
      name: Adding Endace Pivot to Vision Link to all datasources
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      append: {}
      key:
        simple: Endace.Archive.Task.P2VurlAll
      stringify: {}
      value:
        complex:
          root: Endace
          accessor: Archive.Task.P2Vurl
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: datasources=[\S]+&title
              replaceWith:
                value:
                  simple: datasources=tag%3Arotation-file&title
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 612.5,
          "y": 2815
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "30":
    id: "30"
    taskid: 1d1c419d-bcf7-41d2-8a1d-f4f7973ad65f
    type: regular
    task:
      id: 1d1c419d-bcf7-41d2-8a1d-f4f7973ad65f
      version: -1
      name: Print to War Room
      description: Prints text to war room (Markdown supported)
      scriptName: Print
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      value:
        simple: ${Endace.Archive.Task.P2VurlAll}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 612.5,
          "y": 2980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "31":
    id: "31"
    taskid: 08ba4842-df74-4474-892d-438718a96e21
    type: regular
    task:
      id: 08ba4842-df74-4474-892d-438718a96e21
      version: -1
      name: AddEvidence
      description: |
        Adds provided entries to the incident Evidence Board. In playbook, can be positioned after a task to add the previous task's entries to Evidence Board automatically (with no need to provide arguments)
      scriptName: AddEvidence
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      desc: {}
      description:
        simple: Adding Endace Pivot to Vision link to all datasources on EndaceProbe
      entryIDs: {}
      occurred: {}
      tags: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 612.5,
          "y": 3160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {
      "10_11_yes": 0.89,
      "10_21_#default#": 0.2,
      "14_21_no": 0.31,
      "15_21_no": 0.17,
      "22_21_no": 0.16,
      "9_21_#default#": 0.11
    },
    "paper": {
      "dimensions": {
        "height": 3375,
        "width": 942.5,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: start
  value: {}
  required: false
  description: UTC StartTime in ISO 8601 format as in 2020-04-08T15:46:30
  playbookInputQuery:
- key: end
  value: {}
  required: false
  description: UTC EndTime in ISO 8601 format  as in 2020-04-08T15:46:30
  playbookInputQuery:
- key: timeframe
  value: {}
  required: false
  description: Event timeframe to search. Select one of the values from  30seconds,
    1minute, 5minutes, 10minutes, 30minutes, 1hour, 2hours, 5hours, 10hours, 12hours,
    1day, 3days, 5days, 1week. Timeframe works as search for last n seconds if start
    and end time is not provided. For example, by specifying 1h as the timeframe,
    analyst can schedule a search for last 3600s. If both start and end time is provided,
    timeframe value is ignored. If either start or end time is provided along with
    timeframe, the respective start or end time is calculated accordingly. Initial
    value of timeframe is 1hour.
  playbookInputQuery:
- key: ip
  value: {}
  required: false
  description: directionless ip address. For valid search either a IP or Src Host
    or a Dest Host value is required
  playbookInputQuery:
- key: port
  value: {}
  required: false
  description: 'directionless port. '
  playbookInputQuery:
- key: src_host_list
  value: {}
  required: false
  description: List of comma delimited Source IP addresses to search with a maximum
    of 10 IP addresses per search. For valid search either a Src Host or a Dest Host
    value is required.
  playbookInputQuery:
- key: dest_host_list
  value: {}
  required: false
  description: List of comma delimited Destination IP addresses to search with a maximum
    of 10 IP addresses per search. For valid search either a Src Host or a Dest Host
    value is required.
  playbookInputQuery:
- key: src_port_list
  value: {}
  required: false
  description: List of comma delimited Source Port addresses to search with a maximum
    of 10 Port addresses per search.
  playbookInputQuery:
- key: dest_port_list
  value: {}
  required: false
  description: List of comma delimited Destination Port addresses to search with a
    maximum of 10 Port addresses per search.
  playbookInputQuery:
- key: protocol
  value: {}
  required: false
  description: IANA defined IP Protocol Name or Number. For example - either use TCP
    or tcp or 6 for tcp protocol
  playbookInputQuery:
- key: archive_filename
  value: {}
  required: true
  description: Name of the archive file. For example, archive_filename could be an
    event ID. To keep archive filename unique, value of epoch seconds at the time
    of execution of the command is appended to this filename argument. For example
    - if the event id is someid, then archive_filename is someid-epochtime.
  playbookInputQuery:
- key: delete_archive
  value: {}
  required: true
  description: 'false/true. if set to false archived file created by this playbook
    is retained on EndaceProbe. Value of true deletes the archived file. Once deleted
    this archived file is not available for future investigation. '
  playbookInputQuery:
- key: download_threshold
  value: {}
  required: true
  description: PCAP file download size limit in MegaBytes. For example for 10MB, value
    is 10. Minimum value is 1(MB).
  playbookInputQuery:
outputs:
- contextPath: Endace.Download.PCAP.FileName
  description: Name of the File to download from EndaceProbe
  type: string
- contextPath: Endace.Download.PCAP.FileSize
  description: File size in MegaBytes
  type: string
- contextPath: Endace.Download.PCAP.FileUser
  description: Username of the person who has permission to download this PCAP from
    EndaceProbe.
  type: string
fromversion: 5.0.0
tests:
- No tests (auto formatted)
