commonfields:
  id: e956980e-8759-4493-846d-e753629b12b9
  version: 6
vcShouldKeepItemLegacyProdMachine: false
name: OverwriteListAndNotify
script: |+
  from typing import Dict, Any
  import traceback


  ''' OVERWRITE LIST AND NOTIFY '''
  '''
  Script Name: OverwriteListAndNotify

  Description:
  This automation script overwrites the value of a specified list and sends a Slack notification to inform the user that they failed to respond to an incident notification in a timely manner. The notification includes a message indicating the end of the incident playbook and an invitation to reopen the incident if necessary.
  '''

  def overwrite_list_value(list_name, new_value):
      try:
          # Fetch the existing list
          existing_list = demisto.executeCommand('getList', {'listName': list_name})

          # Overwrite the list with the new value
          demisto.executeCommand('createList', {'listName': list_name, 'listData': new_value})

          demisto.results(f"Successfully overwritten the list: {list_name}")
      except Exception as excep:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to overwrite list {list_name}. Error: {str(excep)}')

  def create_slack_notification_block(incident_id):
      # Message to be sent
      message = (f"You have not responded to the {incident_id} incident notification in a timely manner. "
                 f"We are coming to an end of the {incident_id} incident playbook from XSOAR. "
                 "You are welcome to reopen it. Regards.")

      # Slack block structure
      block = {
          "blocks": [
              {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": message
                  }
              }
          ]
      }

      return block

  def main():  # pragma: no cover
      try:
          list_name = demisto.args().get("list_name")
          incident_id = demisto.args().get("incident_id")

          # Create a Slack notification block
          block = create_slack_notification_block(incident_id)

          # Overwrite the list value
          overwrite_list_value(list_name, block)

          # Send the Slack block as a result
          demisto.results(block)

      except Exception as excep:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute script. Error: {str(excep)}')


  ''' ENTRY POINT '''

  if __name__ in ('__main__', '__builtin__', 'builtins'):  # pragma: no cover
      main()

type: python
tags: []
comment: This automation script overwrites the value of a specified list and sends
  a Slack notification to inform the user that they failed to respond to an incident
  notification in a timely manner. The notification includes a message indicating
  the end of the incident playbook and an invitation to reopen the incident if necessary.
enabled: true
args:
- name: list_name
  required: true
- name: incident_id
  required: true
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.11.9.105369
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}
