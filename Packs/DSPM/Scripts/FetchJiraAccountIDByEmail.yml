commonfields:
  id: c02bb7d7-278e-40db-83fc-9a2f5750602f
  version: 5
vcShouldKeepItemLegacyProdMachine: false
name: FetchJiraAccountIDByEmail
script: |
  import requests
  from requests.auth import HTTPBasicAuth

  def get_account_id_by_email(email: str) -> str:
      try:
          result = demisto.executeCommand("dspm-get-integration-cofig", {})
          integration_conf = result[0].get("Contents",{}).get("integration_config",{})

          # Extract Jira credentials and URL
          jira_url = integration_conf.get('jiraServerUrl')
          api_key = integration_conf.get('jiraApiToken')
          jiraEmail = integration_conf.get('jiraEmail')

          url = f"https://{jira_url}/rest/api/3/user/search"

          query = {
            'query': email
          }

          auth = HTTPBasicAuth(jiraEmail, api_key)
          headers = {
              "Accept": "application/json",
          }


          response = requests.request("GET", url, headers=headers, params=query, auth=auth)

          if response.status_code != 200:
              print(f"Error in API call [{response.status_code}]: {response.text}")
              return email

          users = response.json()

          if not users:
              raise Exception('No users found for the provided email.')

          # Assuming the first user in the response is the correct one
          return users[0].get('accountId')
      except Exception as e:
          return_error(f"Error while fetching account ID: {str(e)}")

  def main():
      try:
          email = demisto.args().get('email')

          account_id = get_account_id_by_email(email)

          # Formatting readable output
          readable_output = f"### Account ID for {email}:\n- **Account ID**: {account_id}"

          return_results(CommandResults(
              readable_output=readable_output,
              outputs_prefix="AccountInfo",
              outputs_key_field="AccountID",
              outputs={"AccountID": account_id}
          ))
      except Exception as e:
          return_error(f"Failed to execute FetchJiraAccountIDByEmail. Error: {str(e)}")


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
type: python
tags: []
comment: This automation script retrieves the Jira account ID associated with a provided
  email address. It queries the Jira API using the email and returns the corresponding
  account ID. The script is particularly useful for integrating Jira account information
  into XSOAR workflows, enabling seamless identification and tracking of users within
  incident management processes.
enabled: true
args:
- name: email
  required: true
outputs:
- contextPath: AccountInfo
scripttarget: 0
subtype: python3
timeout: 360ns
pswd: ""
runonce: false
dockerimage: demisto/python3:3.10.14.99865
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}