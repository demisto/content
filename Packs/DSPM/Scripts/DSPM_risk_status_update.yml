commonfields:
  id: 208c262f-29a6-4a47-86b7-5f3cc14fe644
  version: 25
vcShouldKeepItemLegacyProdMachine: false
name: DSPM_risk_status_update
script: |
  from typing import Dict, Any
  import json
  import requests


  def update_risk_status(risk_finding_id: str, status: str) -> str:
      url = f'https://api.dig.security/v1/risk-findings/id/{risk_finding_id}/status/{status}'
      result = demisto.executeCommand("dspm-get-integration-cofig", {})
      integration_conf = result[0].get("Contents",{}).get('integration_config',{})
      headers = {
          'dig-api-key': integration_conf.get('dspmApiKey'),
          'Accept': 'application/json'
      }

      response = requests.patch(url, headers=headers)

      if response.status_code == 200:
          print("Risk status updated successfully")
          return response
      else:
          return f"Failed to update risk status. Status code: {response.status_code}, Response: {response.text}"


  ''' MAIN FUNCTION '''

  def main():
      try:
          risk_finding_id = demisto.args().get('riskFindingId')
          status = demisto.args().get('status')

          if not risk_finding_id:
              raise ValueError("riskFindingID is required")

          if not status:
              raise ValueError("status is required")

          result = update_risk_status(risk_finding_id, status).json()

          return_results(
                CommandResults(
                    readable_output=tableToMarkdown("Response : ", result, removeNull=True),
                    outputs_prefix="Response",
                    outputs=result
                )
              )
      except Exception as e:
          demisto.error(f"Error in updating risk status: {str(e)}")
          return_error(f"Error in updating risk status: {str(e)}")


  ''' ENTRY POINT '''

  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
type: python
tags: []
enabled: true
args:
- name: riskFindingId
  required: true
- name: status
  required: true
  defaultValue: INVESTIGATING
outputs:
- contextPath: Response
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.11.9.103066
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}
