id: DSPM Invalid User Response
version: -1
name: DSPM Invalid User Response
description: ""
fromversion: "6.10.0"
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: bae26dee-160f-4990-8119-81ebc034603c
    type: start
    task:
      id: bae26dee-160f-4990-8119-81ebc034603c
      description: "Start task for DSPM Invalid User Response playbook."
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": -120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 85873777-0d6f-4932-82ff-c7907ca71872
    type: regular
    task:
      id: 85873777-0d6f-4932-82ff-c7907ca71872
      version: -1
      name: DSPMOverwriteListAndNotify
      description: This automation script overwrites the value of a specified list and sends a Slack notification to inform the user that they failed to respond to an incident notification in a timely manner. The notification includes a message indicating the end of the incident playbook and an invitation to reopen the incident if necessary.
      scriptName: DSPMOverwriteListAndNotify
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      list_name:
        simple: ${block_list_name}
      message:
        simple: "You have provided invalid response to ${incident_object.incidentId} \n Incident notification. Resending the notification for Incident ${incident_object.incidentId} respond with valid details.\nRegards."
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 30
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: a9a4b3f1-2d8f-4df7-8c22-4aa95e923e3d
    type: regular
    task:
      id: a9a4b3f1-2d8f-4df7-8c22-4aa95e923e3d
      version: -1
      name: DSPMCreateRiskSlackBlocks
      description: This XSOAR automation script generates a Slack message block to notify users of risks detected by a Data Security Posture Management (DSPM) tool. The Slack block is dynamically constructed based on the details of the security incident and includes options for users to take specific actions, such as creating a Jira ticket or remediating the risk.
      scriptName: DSPMCreateRiskSlackBlocks
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      dspm_incident:
        simple: ${incident_object}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: 8570949e-d1b9-4d84-81fd-06730555bd3a
    type: playbook
    task:
      id: 8570949e-d1b9-4d84-81fd-06730555bd3a
      version: -1
      name: DSPM Send Slack Notification to User
      description: '"Send Slack Notification to User" playbook is designed to notify a user via Slack and handle their response. It begins by sending a Slack notification to a specified email using the SlackBlockBuilder script. Afterward, it waits for the user''s response until a predefined time, as configured in Prisma Cloud DSPM. Once the response is received, it is inserted into the incident''s context. If there is an error in generating the Slack block, the incident is added for a re-run. Finally, the playbook extracts the user''s response from the Slack block state for further processing.'
      playbookName: DSPM Send Slack Notification to User
      type: playbook
      iscommand: false
      brand: ""
    separatecontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 60,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: fd8857de-9723-409a-88e1-7690c3d591a7
    type: condition
    task:
      id: fd8857de-9723-409a-88e1-7690c3d591a7
      version: -1
      name: DSPMCheckAndSetErrorEntries
      description: This script checks for error entries based on provided entry IDs and returns "yes" if any errors are found or "no" if no errors are present. If errors are detected, it sets the error messages in the XSOAR context.
      scriptName: DSPMCheckAndSetErrorEntries
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "4"
      "yes":
      - "6"
    scriptarguments:
      entry_id:
        simple: ${lastCompletedTaskEntries}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 1cc0ff96-e0e4-4630-8532-7a202bc58fc6
    type: playbook
    task:
      id: 1cc0ff96-e0e4-4630-8532-7a202bc58fc6
      description: "The DSPM Notify User in Case of Error playbook is designed to handle errors in DSPM incidents by notifying users and managing Slack notifications."
      version: -1
      name: DSPM notify user in case of error
      playbookName: DSPM notify user in case of error
      type: playbook
      iscommand: false
      brand: ""
    separatecontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 830,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 48d4ef71-5c50-4601-814e-ca2a5ce041dd
    type: regular
    task:
      id: 48d4ef71-5c50-4601-814e-ca2a5ce041dd
      version: -1
      name: SlackBlockBuilder
      description: SlackBlockBuilder will format a given Slack block into a format readable by the SlackV3 integration. The script will also send the block to the given destination. Make sure to mark **Trust any certificate** and fill the **XSOAR API Key integration** parameters if you want to get a response to the incident context.
      scriptName: SlackBlockBuilder
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      list_name:
        simple: ${block_list_name}
      user:
        simple: ${userSlackEmail}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1005,
        "width": 1150,
        "x": 60,
        "y": -120
      }
    }
  }
inputs: []
outputs: []
quiet: true
tests:
- No tests (auto formatted)
