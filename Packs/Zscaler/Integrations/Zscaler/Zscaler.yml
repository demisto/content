category: Network Security
commonfields:
  id: Zscaler
  version: -1
configuration:
- display: Cloud Name (i.e., https://admin.zscalertwo.net)
  name: cloud
  required: true
  type: 0
- display: Username
  name: credentials
  required: true
  type: 9
- display: API Key
  name: key
  required: true
  type: 4
- additionalinfo: If enabled, the integration will log out after executing each command.
  defaultvalue: 'true'
  display: Auto Logout
  name: auto_logout
  required: false
  type: 8
- additionalinfo: If enabled, the integration will activate the command changes after
    each execution. If disabled, use the 'zscaler-activate-changes' command to activate
    Zscaler command changes.
  defaultvalue: 'true'
  display: Auto Activate Changes
  name: auto_activate
  required: false
  type: 8
- display: Trust any certificate (not secure)
  name: insecure
  required: false
  type: 8
- display: Use system proxy settings
  name: proxy
  required: false
  type: 8
description: Zscaler is a cloud security solution built for performance and flexible
  scalability. This integration enables you to manage URL and IP address allow lists
  and block lists, manage and update categories, get Sandbox reports, and manually
  log in, log out, and activate changes in a Zscaler session.
display: Zscaler Internet Access
name: Zscaler
script:
  commands:
  - arguments:
    - default: true
      description: A comma-separated list of URLs to add to block list. For example,
        snapchat.com,facebook.com.
      isArray: true
      name: url
      required: true
    description: Adds the specified URLs to the block list.
    execution: true
    name: zscaler-blacklist-url
  - arguments:
    - default: true
      description: A comma-separated list of URLs for which to look up the classification.  For
        example, abc.com,xyz.com. The maximum number of URLs per call is 100. A URL
        cannot exceed 1024 characters. If there are multiple URLs, set the 'multiple'
        argument to 'true'.
      isArray: true
      name: url
      required: true
    - auto: PREDEFINED
      defaultValue: 'true'
      description: Whether there are multiple URLs in the 'url' argument. If a URL
        contains commas, set this argument to 'false' and enter the single URL as
        the 'url' argument.
      name: multiple
      predefined:
      - 'true'
      - 'false'
    description: Looks up the classification for the each of the specified URLs.
    name: url
    outputs:
    - contextPath: URL.Data
      description: The URL that was searched.
      type: string
    - contextPath: URL.Address
      description: The URL that was searched.
      type: string
    - contextPath: URL.urlClassifications
      description: The classification of the URL. For example, MUSIC or WEB_SEARCH.
      type: string
    - contextPath: URL.urlClassificationsWithSecurityAlert
      description: The classifications of the URLs that have security alerts.
      type: string
    - contextPath: URL.Malicious.Vendor
      description: For malicious URLs, the vendor that tagged the URL as malicious.
      type: string
    - contextPath: URL.Malicious.Description
      description: For malicious URLs, the reason the vendor tagged the URL as malicious.
      type: string
    - contextPath: DBotScore.Indicator
      description: The indicator that was tested.
      type: string
    - contextPath: DBotScore.Type
      description: The indicator type.
      type: string
    - contextPath: DBotScore.Vendor
      description: The vendor used to calculate the score.
      type: string
    - contextPath: DBotScore.Score
      description: The actual score.
      type: number
  - arguments:
    - default: true
      description: A comma-separated list of IP address for which to look up the classification.
        For example, 8.8.8.8,1.2.3.4. The maximum number of URLs per call is 100.
        An IP address cannot exceed 1024 characters.
      isArray: true
      name: ip
      required: true
    description: Looks up the classification for each of the specified IP addresses.
    name: ip
    outputs:
    - contextPath: IP.Address
      description: The IP address that was searched.
      type: string
    - contextPath: IP.ipClassifications
      description: The classification of the IP address. For example, MUSIC or WEB_SEARCH.
      type: string
    - contextPath: IP.iplClassificationsWithSecurityAlert
      description: Classifications that have a security alert for the IP address.
      type: string
    - contextPath: IP.Malicious.Vendor
      description: For malicious IP addresses, the vendor that tagged the IP address
        as malicious.
      type: string
    - contextPath: IP.Malicious.Description
      description: For malicious IP addresses, the reason the vendor tagged the IP
        address as malicious.
      type: string
    - contextPath: DBotScore.Indicator
      description: The indicator that was tested.
      type: string
    - contextPath: DBotScore.Type
      description: The indicator type.
      type: string
    - contextPath: DBotScore.Vendor
      description: The vendor used to calculate the score.
      type: string
    - contextPath: DBotScore.Score
      description: The actual score.
      type: number
  - arguments:
    - default: true
      description: A comma-separated list of URLs to remove from the block list. For
        example, snapchat.com,facebook.com.
      isArray: true
      name: url
      required: true
    description: Removes the specified URLs from the block list.
    execution: true
    name: zscaler-undo-blacklist-url
  - arguments:
    - default: true
      description: A comma-separated list of URLs to add to the allow list. For example,
        snapchat.com,facebook.com.
      isArray: true
      name: url
      required: true
    description: Adds the specified URLs to the allow list.
    execution: true
    name: zscaler-whitelist-url
  - arguments:
    - default: true
      description: A comma-separated list of URLs to remove from the allow list. For
        example, snapchat.com,facebook.com.
      isArray: true
      name: url
      required: true
    description: Removes the specified URLs from the allow list.
    execution: true
    name: zscaler-undo-whitelist-url
  - arguments:
    - default: true
      description: A comma-separated list of IP addresses to remove from the allow
        list. For example, 8.8.8.8,1.2.3.4.
      isArray: true
      name: ip
      required: true
    description: Removes the specified IP addresses from the allow list.
    execution: true
    name: zscaler-undo-whitelist-ip
  - arguments:
    - default: true
      description: A comma-separated list of IP addresses to add to the allow list.
        For example, 8.8.8.8,1.2.3.4.
      isArray: true
      name: ip
      required: true
    description: Adds the specified IP address to the allow list.
    execution: true
    name: zscaler-whitelist-ip
  - arguments:
    - default: true
      description: A comma-separated list of IP addresses to remove from the allow
        list. For example, 8.8.8.8,1.2.3.4.
      isArray: true
      name: ip
      required: true
    description: Removes the specified IP addresses from the allow list.
    name: zscaler-undo-blacklist-ip
  - arguments:
    - default: true
      description: A comma-separated list of IP addresses to add to the allow list.
        For example, 8.8.8.8,1.2.3.4.
      isArray: true
      name: ip
      required: true
    description: Adds the specified IP addresses to the allow list.
    execution: true
    name: zscaler-blacklist-ip
  - arguments:
    - description: The ID of the category to add the specified URLs to. For example,
        RADIO_STATIONS. You can retrieve the category IDs by running the 'zscaler-get-categories'
        command.
      name: category-id
      required: true
    - description: A comma-separated list of URLs to add to the specified category.
        For example, pandora.com,spotify.com.
      isArray: true
      name: url
      required: true
    description: Adds URLs to the specified category.
    name: zscaler-category-add-url
    outputs:
    - contextPath: Zscaler.Category.CustomCategory
      description: True, if the category is a custom category. Otherwise, false.
      type: boolean
    - contextPath: Zscaler.Category.Description
      description: The description of the category.
      type: string
    - contextPath: Zscaler.Category.ID
      description: The ID of the category.
      type: string
    - contextPath: Zscaler.Category.URL
      description: The URL of the category.
      type: string
  - arguments:
    - description: The ID of the category to add the specified IP addresses to. For
        example, RADIO_STATIONS. You can retrieve the category IDs by running the
        'zscaler-get-categories' command.
      name: category-id
      required: true
    - description: A comma-separated list of IP address to add to the specified category.
        For example, 1.2.3.4,8.8.8.8.
      isArray: true
      name: ip
      required: true
    description: Adds IP address to the specified category.
    name: zscaler-category-add-ip
    outputs:
    - contextPath: Zscaler.Category.CustomCategory
      description: True, if the category is a custom category. Otherwise, false.
      type: boolean
    - contextPath: Zscaler.Category.Description
      description: The description of the category.
      type: string
    - contextPath: Zscaler.Category.ID
      description: The ID of the category.
      type: string
    - contextPath: Zscaler.Category.URL
      description: The URL of the category
      type: string
  - arguments:
    - description: The ID of the category to remove the specified URLs from. For example,
        RADIO_STATIONS. You can retrieve the category IDs by running the 'zscaler-get-categories'
        command.
      name: category-id
      required: true
    - description: A comma-separated list of URLs to remove from the specified category.
        For example, pandora.com,spotify.com.
      isArray: true
      name: url
      required: true
    description: Removes URLs from the specified category.
    name: zscaler-category-remove-url
    outputs:
    - contextPath: Zscaler.Category.CustomCategory
      description: True, if the category is a custom category. Otherwise, false.
      type: boolean
    - contextPath: Zscaler.Category.Description
      description: The description of the category.
      type: string
    - contextPath: Zscaler.Category.ID
      description: The ID of the category.
      type: string
    - contextPath: Zscaler.Category.URL
      description: The URL of the category.
      type: string
  - arguments:
    - description: The ID of the category to remove the specified IP addresses from.
        For example, RADIO_STATIONS. You can retrieve the category IDs by running
        the 'zscaler-get-categories' command.
      name: category-id
      required: true
    - description: A comma-separated list of IP addresses to remove from the specified
        category. For example, 1.2.3.4,8.8.8.8.
      isArray: true
      name: ip
      required: true
    description: Removes IP address from the specified category.
    name: zscaler-category-remove-ip
    outputs:
    - contextPath: Zscaler.Category.CustomCategory
      description: True, if the category is a custom category. Otherwise, false.
      type: boolean
    - contextPath: Zscaler.Category.Description
      description: The description of the category.
      type: string
    - contextPath: Zscaler.Category.ID
      description: The ID of the category.
      type: string
    - contextPath: Zscaler.Category.URL
      description: The URL of the category.
      type: string
  - arguments:
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Whether to display the URLs of each category in the War Room. URLs
        will always be returned to the Context Data.
      name: displayURL
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Whether to retrieve only custom categories to the War Room.
      name: custom_categories_only
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Whether to retrieve only a list containing URL category IDs and
        names. Even if *displayURL* is set to true, URLs will not be returned. Please
        note - the API does not support the combination of custom_only and get_ids_and_names_only.
      name: get_ids_and_names_only
      predefined:
      - 'true'
      - 'false'
    description: Retrieves a list of all categories.
    name: zscaler-get-categories
    outputs:
    - contextPath: Zscaler.Category.ID
      description: The ID of the category.
      type: string
    - contextPath: Zscaler.Category.CustomCategory
      description: True, if the category is a custom category. Otherwise, false.
      type: boolean
    - contextPath: Zscaler.Category.URL
      description: The URL of the category.
      type: string
    - contextPath: Zscaler.Category.Description
      description: The description of the category.
      type: string
    - contextPath: Zscaler.Category.Name
      description: The name of the category.
      type: string
  - arguments:
    - auto: PREDEFINED
      description: Filter results by URL or IP objects.
      name: filter
      predefined:
      - url
      - ip
    - description: Query (Python regular expression) to match against. For example,
        8.*.*.8
      name: query
    description: Retrieves the Zscaler default block list.
    name: zscaler-get-blacklist
    outputs:
    - contextPath: Zscaler.Blacklist
      description: The Zscaler block list.
      type: string
  - arguments: []
    description: Retrieves the Zscaler default allow list.
    name: zscaler-get-whitelist
    outputs:
    - contextPath: Zscaler.Whitelist
      description: The Zscaler allow list.
      type: string
  - arguments:
    - description: The MD5 hash of a file.
      name: md5
      required: true
    - auto: PREDEFINED
      defaultValue: full
      description: The type of report. Possible values are 'full' or 'summary'. Default
        is 'full'.
      name: details
      predefined:
      - full
      - summary
    description: Retrieves a full or summary report of the file that was analyzed
      by Sandbox. The file is represented by the specified MD5 hash.
    name: zscaler-sandbox-report
    outputs:
    - contextPath: File.MD5
      description: The MD5 hash of the file.
      type: string
    - contextPath: File.Malicious.Vendor
      description: For malicious files, the vendor that tagged the file as malicious.
      type: string
    - contextPath: File.Malicious.Description
      description: For malicious files, the reason the vendor tagged the file as malicious.
      type: string
    - contextPath: File.DetectedMalware
      description: The malware detected in the file.
      type: string
    - contextPath: File.FileType
      description: The file type.
      type: string
    - contextPath: DBotScore.Indicator
      description: The MD5 hash file that was tested.
      type: string
    - contextPath: DBotScore.Type
      description: The MD5 hash file type.
      type: string
    - contextPath: DBotScore.Vendor
      description: The vendor that calculated the DBot score.
      type: string
    - contextPath: DBotScore.Score
      description: The actual DBot score.
      type: number
  - arguments: []
    description: Manually create a Zscaler login session. This command will also try
      to log out of the previous session.
    name: zscaler-login
  - arguments: []
    description: Logs out of the current Zscaler session.
    name: zscaler-logout
  - arguments: []
    description: Activates the changes executed by other Zscaler commands in this
      session.
    name: zscaler-activate-changes
  - arguments: []
    description: Gets information on the number of unique URLs that are currently
      provisioned for your organization as well as how many URLs you can add before
      reaching that number.
    name: zscaler-url-quota
    outputs:
    - contextPath: Zscaler.remainingUrlsQuota
      description: The number of URLs you can add before reaching the quota.
      type: Number
    - contextPath: Zscaler.uniqueUrlsProvisioned
      description: The number of unique URLs that are currently provisioned for your
        organization.
      type: Number
  - arguments:
    - description: Filer by user name
      name: name
    - description: Specifies the page offset.
      name: page
    - default: true
      defaultValue: '100'
      description: Specifies the page size.
      name: pageSize
    description: Get Zscaler users
    name: zscaler-get-users
  - arguments:
    - description: The unique identifer for the user.
      name: id
      required: true
    - description: 'New user information. Docs: https://help.zscaler.com/zia/api#/User%20Management/updateUser'
      name: user
      required: true
    description: Updates the user information for the specified ID.
    name: zscaler-update-user
  - arguments:
    - description: Filter by department name
      name: name
    - description: Specifies the page offset.
      name: page
    - default: true
      defaultValue: '100'
      description: Specifies the page size.
      name: pageSize
    description: Get a list of departments. It can be searched by name.
    name: zscaler-get-departments
  - arguments:
    - description: Filter by group name or comment
      name: name
    - description: Specifies the page offset.
      name: page
    - default: true
      defaultValue: '100'
      description: Specifies the page size.
      name: pageSize
    description: Gets a list of groups
    name: zscaler-get-usergroups
  runonce: false
  script: ''
  subtype: python2
  dockerimage: demisto/python:2.7.18.27799
  type: python
fromversion: 5.0.0
tests:
- Zscaler Test
