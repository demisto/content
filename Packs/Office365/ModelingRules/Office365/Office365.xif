[RULE: o365_common_fields]
alter
	RecordType = to_integer(RecordType)
| alter
	xdm.event.id = Id,
	xdm.event.type = if(RecordType = 1, "ExchangeAdmin", RecordType = 2, "ExchangeItem", RecordType = 3, "ExchangeItemGroup", RecordType = 4, "SharePoint", RecordType = 6, "SharePointFileOperation", RecordType = 7, "OneDrive", RecordType = 8, "AzureActiveDirectory", RecordType = 9, "AzureActiveDirectoryAccountLogon", RecordType = 10, "DataCenterSecurityCmdlet", RecordType = 11, "ComplianceDLPSharePoint", RecordType = 13, "ComplianceDLPExchange", RecordType = 14, "SharePointSharingOperation", RecordType = 15, "AzureActiveDirectoryStsLogon", RecordType = 16, "SkypeForBusinessPSTNUsage", RecordType = 17, "SkypeForBusinessUsersBlocked", RecordType = 18, "SecurityComplianceCenterEOPCmdlet", RecordType = 19, "ExchangeAggregatedOperation", RecordType = 20, "PowerBIAudit", RecordType = 21, "CRM", RecordType = 22, "Yammer", RecordType = 23, "SkypeForBusinessCmdlets", RecordType = 24, "Discovery", RecordType = 25, "MicrosoftTeams", RecordType = 28, "ThreatIntelligence", RecordType = 29, "MailSubmission", RecordType = 30, "MicrosoftFlow", RecordType = 31, "AeD", RecordType = 32, "MicrosoftStream", RecordType = 33, "ComplianceDLPSharePointClassification", RecordType = 34, "ThreatFinder", RecordType = 35, "Project", RecordType = 36, "SharePointListOperation", RecordType = 37, "SharePointCommentOperation", RecordType = 38, "DataGovernance", RecordType = 39, "Kaizala", RecordType = 40, "SecurityComplianceAlerts", RecordType = 41, "ThreatIntelligenceUrl", RecordType = 42, "SecurityComplianceInsights", RecordType = 43, "MIPLabel", RecordType = 44, "WorkplaceAnalytics", RecordType = 45, "PowerAppsApp", RecordType = 46, "PowerAppsPlan", RecordType = 47, "ThreatIntelligenceAtpContent", RecordType = 48, "LabelContentExplorer", RecordType = 49, "TeamsHealthcare", RecordType = 50, "ExchangeItemAggregated", RecordType = 51, "HygieneEvent", RecordType = 52, "DataInsightsRestApiAudit", RecordType = 53, "InformationBarrierPolicyApplication", RecordType = 54, "SharePointListItemOperation", RecordType = 55, "SharePointContentTypeOperation", RecordType = 56, "SharePointFieldOperation", RecordType = 57, "MicrosoftTeamsAdmin", RecordType = 58, "HRSignal", RecordType = 59, "MicrosoftTeamsDevice", RecordType = 60, "MicrosoftTeamsAnalytics", RecordType = 61, "InformationWorkerProtection", RecordType = 62, "Campaign", RecordType = 63, "DLPEndpoint", RecordType = 64, "AirInvestigation", RecordType = 65, "Quarantine", RecordType = 66, "MicrosoftForms", RecordType = 67, "ApplicationAudit", RecordType = 68, "ComplianceSupervisionExchange", RecordType = 69, "CustomerKeyServiceEncryption", RecordType = 70, "OfficeNative", RecordType = 71, "MipAutoLabelSharePointItem", RecordType = 72, "MipAutoLabelSharePointPolicyLocation", RecordType = 73, "MicrosoftTeamsShifts", RecordType = 75, "MipAutoLabelExchangeItem", RecordType = 76, "CortanaBriefing", RecordType = 78, "WDATPAlerts", RecordType = 82, "SensitivityLabelPolicyMatch", RecordType = 83, "SensitivityLabelAction", RecordType = 84, "SensitivityLabeledFileAction", RecordType = 85, "AttackSim", RecordType = 86, "AirManualInvestigation", RecordType = 87, "SecurityComplianceRBAC", RecordType = 88, "UserTraining", RecordType = 89, "AirAdminActionInvestigation", RecordType = 90, "MSTIC", RecordType = 91, "PhysicalBadgingSignal", RecordType = 93, "AipDiscover", RecordType = 94, "AipSensitivityLabelAction", RecordType = 95, "AipProtectionAction", RecordType = 96, "AipFileDeleted", RecordType = 97, "AipHeartBeat", RecordType = 98, "MCASAlerts", RecordType = 99, "OnPremisesFileShareScannerDlp", RecordType = 100, "OnPremisesSharePointScannerDlp", RecordType = 101, "ExchangeSearch", RecordType = 102, "SharePointSearch", RecordType = 103, "PrivacyInsights", RecordType = 105, "MyAnalyticsSettings", RecordType = 106, "SecurityComplianceUserChange", RecordType = 107, "ComplianceDLPExchangeClassification", RecordType = 109, "MipExactDataMatch", RecordType = 113, "MS365DCustomDetection", RecordType = 147, "CoreReportingSettings", RecordType = 148, "ComplianceConnector", RecordType = 154, "OMEPortal", RecordType = 174, "DataShareOperation", RecordType = 181, "EduDataLakeDownloadOperation", RecordType = 183, "MicrosoftGraphDataConnectOperation", RecordType = 186, "PowerPagesSite", RecordType = 188, "PlannerPlan", RecordType = 189, "PlannerCopyPlan", RecordType = 190, "PlannerTask", RecordType = 191, "PlannerRoster", RecordType = 192, "PlannerPlanList", RecordType = 193, "PlannerTaskList", RecordType = 194, "PlannerTenantSettings", RecordType = 195, "ProjectForThewebProject", RecordType = 196, "ProjectForThewebTask", RecordType = 197, "ProjectForThewebRoadmap", RecordType = 198, "ProjectForThewebRoadmapItem", RecordType = 199, "ProjectForThewebProjectSettings", RecordType = 200, "ProjectForThewebRoadmapSettings", RecordType = 216, "Viva", RecordType = 217, "MicrosoftGraphDataConnectConsent", RecordType = 218, "AttackSimAdmin", RecordType = 230, "TeamsUpdates", RecordType = 231, "PlannerRosterSensitivityLabel", RecordType = 237, "DefenderExpertsforXDRAdmin", RecordType = 251, "VfamCreatePolicy", RecordType = 252, "VfamUpdatePolicy", RecordType = 253, "VfamDeletePolicy", RecordType = 261, "CopilotInteraction", RecordType = 287, "ProjectForThewebAssignedToMeSettings"),
	xdm.source.cloud.project_id = OrganizationId,
	xdm.observer.unique_identifier = AppAccessContext -> CorrelationId; // An identifier that can be used to correlate a specific user's actions across Microsoft 365 services.



[MODEL: dataset="msft_o365_general_raw"]
call o365_common_fields
| alter
	EnforcementMode = to_integer(EnforcementMode), 
	sourceworkload = to_integer(sourceworkload), 
	Scope = to_integer(Scope), 
	FileSize = to_integer(FileSize)	
| alter
	platform_lowercase = lowercase(to_string(Platform)),
	user_type_string = to_string(UserType),
	translate_EnforcementMode = if(EnforcementMode = 1, "Audit", EnforcementMode = 2, "Warn (Block with override)", EnforcementMode = 3, "Warn and bypass", EnforcementMode = 4, "Block", EnforcementMode = 5, "Allow (Audit without alerts)"),
	src_ip = coalesce(userip, senderip, ClientIP),
	filename_name = if(filename ~= "\.", arraystring(regextract(filename, "^(\S+)\.\S+"), ""), filename),
	filename_extension = if(filename ~= "\.", arraystring(regextract(filename, "^\S+\.(\S+)"), ""), null),
	members_upn = arraystring(arraymap(members -> [], "@element" -> UPN), "|"),
	members_displayname = arraystring(arraymap(members -> [], "@element" -> DisplayName), "|"),
	members_role = arraystring(arraymap(members -> [], "@element" -> Role), "|"),
	sourceworkload_name = if(sourceworkload = 0, "SharePoint Online", sourceworkload = 1, "	OneDrive for Business", sourceworkload = 2, "Microsoft Teams"),
	Scope_name = if(Scope = 0, "Online", Scope = 1, "Onprem"),
	check_objectid_filepath = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), ""))
| alter
	src_ip_v4 = if(src_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src_ip, null),
	src_ip_v6 = if(src_ip ~= "[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}", src_ip, null),
	objectid_filename = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "(\S+)\.\S+$"), ""), null),
	objectid_filextension = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "\S+\.(\S+)$"), ""), null),
	objectid_clean = if(ObjectId = null, null, ObjectId ~= "^\s*$", null, ObjectId)
| alter
	xdm.target.file.path = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", ObjectId, null),
	xdm.event.operation_sub_type = coalesce(policyaction, message, Operation),
	xdm.event.operation = if(Operation = "AttachmentAccess", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation ~= "FileCreated", XDM_CONST.OPERATION_TYPE_FILE_CREATE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileAccessed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileAccessedExtended", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FilePreviewed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRenamed", XDM_CONST.OPERATION_TYPE_FILE_RENAME, Operation = "FileCheckOutDiscarded", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRestored", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FolderCreated", XDM_CONST.OPERATION_TYPE_DIR_CREATE, Operation = "FolderDeleted", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderModified", XDM_CONST.OPERATION_TYPE_DIR_WRITE, Operation = "FolderRecycled", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRenamed", XDM_CONST.OPERATION_TYPE_DIR_RENAME, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE),
	xdm.alert.original_alert_id = coalesce(InvestigationId, actionid, AlertEntityId, AlertId),
	xdm.event.original_event_type = coalesce(detectiontype, EntityType, to_string(RecordType)),
	xdm.target.file.filename = coalesce(filename_name, objectid_filename),
	xdm.target.file.extension = coalesce(FileExtension, filename_extension, objectid_filextension),
	xdm.source.host.os_family = if(platform_lowercase ~= "win|microsoft", XDM_CONST.OS_FAMILY_WINDOWS, platform_lowercase ~= "mac|osx", XDM_CONST.OS_FAMILY_MACOS, platform_lowercase ~= "linux", XDM_CONST.OS_FAMILY_LINUX, platform_lowercase ~= "android", XDM_CONST.OS_FAMILY_ANDROID, platform_lowercase ~= "ios", XDM_CONST.OS_FAMILY_IOS, platform_lowercase ~= "ubuntu", XDM_CONST.OS_FAMILY_UBUNTU, platform_lowercase ~= "debian", XDM_CONST.OS_FAMILY_DEBIAN, platform_lowercase ~= "fedora", XDM_CONST.OS_FAMILY_FEDORA, platform_lowercase ~= "centos", XDM_CONST.OS_FAMILY_CENTOS, platform_lowercase ~= "chrome", XDM_CONST.OS_FAMILY_CHROMEOS, platform_lowercase ~= "solaris", XDM_CONST.OS_FAMILY_SOLARIS, platform_lowercase ~= "scada", XDM_CONST.OS_FAMILY_SCADA),
	xdm.target.resource.name = coalesce(formname, objectid_clean),
	xdm.source.host.device_id = EntityId,
	xdm.email.sender = p2sender,
	xdm.email.recipients = coalesce(arraycreate(targetuserid), arraycreate(ReleaseTo), arraycreate(recipients)),
	xdm.source.user.username = coalesce(username, members_displayname),
	xdm.source.user.upn = coalesce(members_upn, actoruserid, UserId),
	xdm.source.user.user_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.USER_TYPE_REGULAR, user_type_string ~= "4|5|6|7|8", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT),
	xdm.source.user.identity_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.IDENTITY_TYPE_USER, user_type_string ~= "4|5|6|7|8", XDM_CONST.IDENTITY_TYPE_MACHINE),
	xdm.auth.privilege_level = if(userrole = "owner", XDM_CONST.PRIVILEGE_LEVEL_USER, userrole = "admin", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, members_role = "2", XDM_CONST.PRIVILEGE_LEVEL_GUEST, members_role = "1", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, members_role = "0", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "0|1", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "2|3", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, user_type_string ~= "4|5|6|7|8", XDM_CONST.PRIVILEGE_LEVEL_SYSTEM),
	xdm.source.user.identifier = coalesce(to_string(ActorYammerUserId), UserKey),
	xdm.alert.subcategory = coalesce(verdict, investigationtype, Category, Scope_name),
	xdm.event.description = coalesce(to_string(ModifiedProperties), to_string(messages), to_string(FileData), `fields`, ExtraProperties, details, detail, PolicyMatchInfo, to_string(Data), to_string(dataexporttype)),
	xdm.alert.description = to_string(AppAccessContext),
	xdm.target.resource.id = itemid,
	xdm.source.user_agent = useragent,
	xdm.target.resource.type = ItemType,
	xdm.source.ipv4 = src_ip_v4,
	xdm.source.ipv6 = src_ip_v6,
	xdm.target.file.size = FileSize,
	xdm.email.return_path = p1sender,
	xdm.email.message_id = coalesce(NetworkMessageId, messageid, internetmessageid),
	xdm.target.file.file_type = FileType,
	xdm.target.file.sha256 = `sha256`,
	xdm.event.outcome = if(EnforcementMode = 1, XDM_CONST.OUTCOME_UNKNOWN, to_string(EnforcementMode) ~= "2|3", XDM_CONST.OUTCOME_PARTIAL, EnforcementMode = 4, XDM_CONST.OUTCOME_FAILED, EnforcementMode = 5, XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "Succeeded", XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "PartiallySucceeded", XDM_CONST.OUTCOME_PARTIAL, ResultStatus = "Failed", XDM_CONST.OUTCOME_FAILED, ResultStatus ~= "[Tt]rue", XDM_CONST.OUTCOME_SUCCESS, ResultStatus ~= "[Ff]alse", XDM_CONST.OUTCOME_FAILED),
	xdm.event.outcome_reason = coalesce(Reason, translate_EnforcementMode, ResultStatus),
	xdm.observer.action = coalesce(actions, Status, translate_EnforcementMode, ResultStatus),
	xdm.network.rule = Name,
	xdm.source.host.hostname = coalesce(entityname, DeviceName),
	xdm.alert.severity = Severity,
	xdm.alert.name = investigationname,
	xdm.source.application.name = SourceApp,
	xdm.email.subject = coalesce(itemname, subject),
	xdm.target.user.identifier = targetyammeruserid,
	xdm.alert.original_threat_name = replex(ThreatsAndDetectionTech, "[\"\[\]]", ""),
	xdm.target.url = url, 
	xdm.network.http.url = coalesce(requestsource, eventdeeplink, deeplinkurl),
	xdm.source.process.name = if(Application ~= "\.[Ee][Xx][Ee]", Application),
	xdm.observer.type = coalesce(sourceworkload_name, Source, Workload);



[MODEL: dataset="msft_o365_exchange_online_raw"]
call o365_common_fields
| alter
	LogonType = to_integer(LogonType),
	InternalLogonType = to_integer(InternalLogonType),
	Scope = to_integer(Scope),
	AttachmentSizeInBytes = to_integer(AttachmentSizeInBytes)
| alter
	user_logon_type = to_string(coalesce(LogonType, InternalLogonType)),
	user_type_string = to_string(UserType),
	get_src_ip = coalesce(ClientIPAddress, ClientIP),
	check_objectid_filepath = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), ""))
| alter
	objectid_clean = if(ObjectId = null, null, ObjectId ~= "^\s*$", null, ObjectId),
	check_src_ipv4 = if(get_src_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", get_src_ip, null),
	check_src_ipv6 = if(get_src_ip ~= "[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}", get_src_ip, null)
| alter
	xdm.target.resource.name = coalesce(ModifiedObjectResolvedName, objectid_clean),
	xdm.target.file.path = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", ObjectId, null),
	xdm.event.operation_sub_type = Operation,
	xdm.event.operation = if(Operation = "AttachmentAccess", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation ~= "FileCreated", XDM_CONST.OPERATION_TYPE_FILE_CREATE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileAccessed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileAccessedExtended", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FilePreviewed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRenamed", XDM_CONST.OPERATION_TYPE_FILE_RENAME, Operation = "FileCheckOutDiscarded", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRestored", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FolderCreated", XDM_CONST.OPERATION_TYPE_DIR_CREATE, Operation = "FolderDeleted", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderModified", XDM_CONST.OPERATION_TYPE_DIR_WRITE, Operation = "FolderRecycled", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRenamed", XDM_CONST.OPERATION_TYPE_DIR_RENAME, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE),
	xdm.target.file.filename = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "(\S+)\.\S+$"), ""), null),
	xdm.target.file.extension = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "\S+\.(\S+)$"), ""), null),
	xdm.event.original_event_type = to_string(RecordType),
	xdm.event.description = coalesce(to_string(AffectedItems), to_string(ModifiedProperties)),
	xdm.alert.subcategory = if(Scope = 0, "Online", Scope = 1, "Onprem"),
	xdm.source.host.hostname = ClientMachineName,
	xdm.source.cloud.project = OrganizationName,
	xdm.source.user.user_type = if(user_logon_type ~= "3|4", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT, user_logon_type ~= "0|1|2|5|6", XDM_CONST.USER_TYPE_REGULAR, user_type_string ~= "0|1|2|3", XDM_CONST.USER_TYPE_REGULAR, user_type_string ~= "4|5|6|7|8", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT),
	xdm.source.user.identity_type = if(user_logon_type ~= "3|4", XDM_CONST.IDENTITY_TYPE_MACHINE, user_logon_type ~= "0|1|2|5|6", XDM_CONST.IDENTITY_TYPE_USER, user_type_string ~= "0|1|2|3", XDM_CONST.IDENTITY_TYPE_USER, user_type_string ~= "4|5|6|7|8", XDM_CONST.IDENTITY_TYPE_MACHINE),
	xdm.auth.privilege_level = if(user_logon_type ~= "3|4", XDM_CONST.PRIVILEGE_LEVEL_SYSTEM, user_logon_type ~= "1|6", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, user_logon_type ~= "0|2|5", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "0|1", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "2|3", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, user_type_string ~= "4|5|6|7|8", XDM_CONST.PRIVILEGE_LEVEL_SYSTEM),
	xdm.event.outcome = if(ResultStatus = "Succeeded", XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "PartiallySucceeded", XDM_CONST.OUTCOME_PARTIAL, ResultStatus = "Failed", XDM_CONST.OUTCOME_FAILED, ResultStatus ~= "[Tt]rue", XDM_CONST.OUTCOME_SUCCESS, ResultStatus ~= "[Ff]alse", XDM_CONST.OUTCOME_FAILED),
	xdm.source.user.upn = coalesce(MailboxOwnerUPN, UserId),
	xdm.email.message_id = coalesce(Item -> InternetMessageId, ExchangeMetaData -> MessageID, MailboxGuid),
	xdm.intermediate.user.identifier = MailboxOwnerSid,
	xdm.source.user.identifier = coalesce(LogonUserSid, UserKey),
	xdm.source.user.username = LogonUserDisplayName,
	xdm.intermediate.host.hostname = OriginatingServer,
	xdm.target.resource.id = formid,
	xdm.observer.type = Workload,  
	xdm.source.ipv4 = check_src_ipv4,
	xdm.source.ipv6 = check_src_ipv6,
	xdm.source.application.name = ClientApplication,
	xdm.email.attachment.size = AttachmentSizeInBytes,
	xdm.alert.description = to_string(AppAccessContext),
	xdm.network.rule = to_string(PolicyDetails),
	xdm.email.subject = coalesce(replex(Item -> Subject, "\"", ""), replex(ExchangeMetaData -> Subject, "\"", "")),
	xdm.source.process.name = arraystring(regextract(ClientProcessName, "^(\S+)\.\S+"), ""),
	xdm.email.sender = coalesce(ExchangeMetaData -> From, sender),
	xdm.email.recipients = coalesce(arraymap(ExchangeMetaData -> To[], replex("@element", "\"", "")), arraycreate(receivers)),
	xdm.email.cc = arraymap(ExchangeMetaData -> CC[], replex("@element", "\"", "")),
	xdm.email.bcc = arraymap(ExchangeMetaData -> BCC[], replex("@element", "\"", "")),
	xdm.email.origination_timestamp = parse_timestamp( "%Y-%m-%dT%H:%M:%S", ExchangeMetaData -> Sent),
	xdm.email.data = to_string(OperationProperties),
	xdm.source.process.executable.extension = arraystring(regextract(ClientProcessName, "^\S+\.(\S+)"), "");

	
[MODEL: dataset="msft_o365_sharepoint_online_raw"]
call o365_common_fields
| alter
	Scope = to_integer(Scope)
| alter
	check_objectid_filepath = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), ""), null),
	sourcefilename_filename = arraystring(regextract(SourceFileName, "^(\S+)\.\S+"), ""),
	sourcefilename_filextension = arraystring(regextract(SourceFileName, "^\S+\.(\S+)"), "")
| alter
	platform_lowercase = lowercase(to_string(Platform)),
	user_type_string = to_string(UserType),
	SharePointMetaData_FileName_name = arraystring(regextract(SharePointMetaData -> FileName, "^(\S+)\.\S+"), ""),
	SharePointMetaData_FileName_extension = arraystring(regextract(SharePointMetaData -> FileName, "^\S+\.(\S+)"), ""),
	objectid_filepath = if(ObjectId ~= "\\|\/", ObjectId, null),
	objectid_filename = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "(\S+)\.\S+$"), ""), null),
	objectid_filextension = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "\S+\.(\S+)$"), ""), null),
	check_sourcefilename_filename = if(sourcefilename_filename ~= "^\s*$", null, sourcefilename_filename),
	check_sourcefilename_filextension = if(sourcefilename_filextension ~= "^\s*$", null, sourcefilename_filextension),
	destinationfilename_filename = arraystring(regextract(DestinationFileName, "^(\S+)\.\S+"), ""),
	destinationfilename_filextension = arraystring(regextract(DestinationFileName, "^\S+\.(\S+)"), ""),	
	src_ip_v4 = if(ClientIP ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", ClientIP, null),
	src_ip_v6 = if(ClientIP ~= "[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}", ClientIP, null)
| alter
	xdm.target.resource.id = Site,
	xdm.target.url = SiteUrl,
	xdm.event.operation_sub_type = Operation,
	xdm.event.operation = if(Operation = "AttachmentAccess", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation ~= "FileCreated", XDM_CONST.OPERATION_TYPE_FILE_CREATE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileAccessed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileAccessedExtended", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FilePreviewed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRenamed", XDM_CONST.OPERATION_TYPE_FILE_RENAME, Operation = "FileCheckOutDiscarded", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRestored", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FolderCreated", XDM_CONST.OPERATION_TYPE_DIR_CREATE, Operation = "FolderDeleted", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderModified", XDM_CONST.OPERATION_TYPE_DIR_WRITE, Operation = "FolderRecycled", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRenamed", XDM_CONST.OPERATION_TYPE_DIR_RENAME, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE),
	xdm.target.resource.type = ItemType,
	xdm.alert.subcategory = if(Scope = 0, "Online", Scope = 1, "Onprem"),
	xdm.network.http.browser = if(BrowserName = null, null, BrowserName ~= "^\s*$", null, BrowserName),
	xdm.observer.name = EventSource,
	xdm.source.user.upn = coalesce(SharePointMetaData -> From, UserId),
	xdm.alert.severity = Severity,
	xdm.source.user_agent = if(UserAgent = null, null, UserAgent ~= "^\s*$", null, UserAgent),
	xdm.source.user.identifier = UserKey,
	xdm.observer.type = coalesce(Source, Workload),
	xdm.auth.auth_method = AuthenticationType,
	xdm.source.ipv4 = src_ip_v4,
	xdm.source.ipv6 = src_ip_v6,
	xdm.target.user.upn = if(targetuserorgroupname ~= "@", targetuserorgroupname),
	xdm.target.user.groups = if(targetuserorgroupname !~= "@", arraycreate(targetuserorgroupname)),
	xdm.source.host.os_family = if(platform_lowercase ~= "win|microsoft", XDM_CONST.OS_FAMILY_WINDOWS, platform_lowercase ~= "mac|osx", XDM_CONST.OS_FAMILY_MACOS, platform_lowercase ~= "linux|wac", XDM_CONST.OS_FAMILY_LINUX, platform_lowercase ~= "android", XDM_CONST.OS_FAMILY_ANDROID, platform_lowercase ~= "ios", XDM_CONST.OS_FAMILY_IOS, platform_lowercase ~= "ubuntu", XDM_CONST.OS_FAMILY_UBUNTU, platform_lowercase ~= "debian", XDM_CONST.OS_FAMILY_DEBIAN, platform_lowercase ~= "fedora", XDM_CONST.OS_FAMILY_FEDORA, platform_lowercase ~= "centos", XDM_CONST.OS_FAMILY_CENTOS, platform_lowercase ~= "chrome", XDM_CONST.OS_FAMILY_CHROMEOS, platform_lowercase ~= "solaris", XDM_CONST.OS_FAMILY_SOLARIS, platform_lowercase ~= "scada", XDM_CONST.OS_FAMILY_SCADA),
	xdm.source.application.name = ApplicationDisplayName,
	xdm.event.original_event_type = to_string(RecordType),
	xdm.event.description = to_string(ModifiedProperties),
	xdm.alert.description = to_string(AppAccessContext),
	xdm.target.file.size = to_integer(SharePointMetaData -> FileSize),
	xdm.target.file.path = coalesce(SharePointMetaData -> FilePathUrl, objectid_filepath),
	xdm.target.file.filename = coalesce(SharePointMetaData_FileName_name, destinationfilename_filename, check_sourcefilename_filename, objectid_filename),
	xdm.target.file.extension = coalesce(SharePointMetaData_FileName_extension, destinationfilename_filextension, check_sourcefilename_filextension, objectid_filextension),
	xdm.target.resource.name = if(ObjectId = null, null, ObjectId ~= "^\s*$", null, ObjectId),
	xdm.source.user.user_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.USER_TYPE_REGULAR, user_type_string ~= "4|5|6|7|8", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT),
	xdm.source.user.identity_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.IDENTITY_TYPE_USER, user_type_string ~= "4|5|6|7|8", XDM_CONST.IDENTITY_TYPE_MACHINE),
	xdm.auth.privilege_level = if(user_type_string ~= "0|1", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "2|3", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, user_type_string ~= "4|5|6|7|8", XDM_CONST.PRIVILEGE_LEVEL_SYSTEM),
	xdm.observer.action = to_string(ExceptionInfo),
	xdm.network.rule = to_string(PolicyDetails),
	xdm.event.outcome = if(ResultStatus = "Succeeded", XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "PartiallySucceeded", XDM_CONST.OUTCOME_PARTIAL, ResultStatus = "Failed", XDM_CONST.OUTCOME_FAILED, ResultStatus ~= "[Tt]rue", XDM_CONST.OUTCOME_SUCCESS, ResultStatus ~= "[Ff]alse", XDM_CONST.OUTCOME_FAILED);



[MODEL: dataset="msft_o365_dlp_raw"]
call o365_common_fields
| alter
	Scope = to_integer(Scope)
| alter
	SharePointMetaData_FileName = SharePointMetaData -> FileName,
	SharePointMetaData_FilePathUrl = SharePointMetaData -> FilePathUrl,
	EndpointMetaData_EnforcementMode = EndpointMetaData -> EnforcementMode,
	EndpointMetaData_FileExtension = EndpointMetaData -> FileExtension,
	user_type_string = to_string(UserType),
	check_objectid_filepath = if(arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), "") ~= "\.", arraystring(regextract(ObjectId, "^.+[\/\\]([^\/\\]+)$"), ""))
| alter
	translate_EnforcementMode = if(EndpointMetaData_EnforcementMode = "1", "Audit", EndpointMetaData_EnforcementMode = "2", "Warn (Block with override)", EndpointMetaData_EnforcementMode = "3", "Warn and bypass", EndpointMetaData_EnforcementMode = "4", "Block", EndpointMetaData_EnforcementMode = "5", "Allow (Audit without alerts)"),
	SharePointMetaData_FileName_name = arrayindex(split(SharePointMetaData_FileName, """\\"""), -1),
	SharePointMetaData_FileName_extension = arraystring(regextract(SharePointMetaData_FileName, "\S+\.(\S+)$"), ""),
	ObjectId_path = if(ObjectId ~= "\\|\/", ObjectId, null),
	ObjectId_name = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "(\S+)\.\S+$"), ""), null),
	ObjectId_extension = if(check_objectid_filepath != null, arraystring(regextract(check_objectid_filepath, "\S+\.(\S+)$"), ""), null)
| alter
	xdm.source.user.username = SharePointMetaData -> From,
	xdm.network.http.url = SharePointMetaData -> SiteCollectionUrl,
	xdm.target.file.path = coalesce(SharePointMetaData_FilePathUrl, ObjectId_path),
	xdm.target.file.filename = coalesce(SharePointMetaData_FileName_name, ObjectId_name),
	xdm.target.file.extension = coalesce(SharePointMetaData_FileName_extension, EndpointMetaData_FileExtension, ObjectId_extension),
	xdm.event.original_event_type = to_string(RecordType),
	xdm.event.operation_sub_type = Operation,
	xdm.event.operation = if(Operation = "AttachmentAccess", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation ~= "FileCreated", XDM_CONST.OPERATION_TYPE_FILE_CREATE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileAccessed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileAccessedExtended", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FilePreviewed", XDM_CONST.OPERATION_TYPE_FILE_OPEN, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRenamed", XDM_CONST.OPERATION_TYPE_FILE_RENAME, Operation = "FileCheckOutDiscarded", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FileDeleted", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_FILE_REMOVE, Operation = "FileModified", XDM_CONST.OPERATION_TYPE_FILE_WRITE, Operation = "FileRestored", XDM_CONST.OPERATION_TYPE_FILE_CHANGE_MODE, Operation = "FolderCreated", XDM_CONST.OPERATION_TYPE_DIR_CREATE, Operation = "FolderDeleted", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedFirstStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderDeletedSecondStageRecycleBin", XDM_CONST.OPERATION_TYPE_DIR_REMOVE, Operation = "FolderModified", XDM_CONST.OPERATION_TYPE_DIR_WRITE, Operation = "FolderRecycled", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRenamed", XDM_CONST.OPERATION_TYPE_DIR_RENAME, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE, Operation = "FolderRestored", XDM_CONST.OPERATION_TYPE_DIR_CHANGE_MODE),
	xdm.alert.subcategory = if(Scope = 0, "Online", Scope = 1, "Onprem"),
	xdm.target.url = SharePointMetaData -> FilePathUrl,
	xdm.source.user.user_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.USER_TYPE_REGULAR, user_type_string ~= "4|5|6|7|8", XDM_CONST.USER_TYPE_SERVICE_ACCOUNT),
	xdm.source.user.identity_type = if(user_type_string ~= "0|1|2|3", XDM_CONST.IDENTITY_TYPE_USER, user_type_string ~= "4|5|6|7|8", XDM_CONST.IDENTITY_TYPE_MACHINE),
	xdm.auth.privilege_level = if(user_type_string ~= "0|1", XDM_CONST.PRIVILEGE_LEVEL_USER, user_type_string ~= "2|3", XDM_CONST.PRIVILEGE_LEVEL_ADMIN, user_type_string ~= "4|5|6|7|8", XDM_CONST.PRIVILEGE_LEVEL_SYSTEM),
	xdm.event.outcome = if(EndpointMetaData_EnforcementMode = "1", XDM_CONST.OUTCOME_UNKNOWN, EndpointMetaData_EnforcementMode ~= "2|3", XDM_CONST.OUTCOME_PARTIAL, EndpointMetaData_EnforcementMode = "4", XDM_CONST.OUTCOME_FAILED, EndpointMetaData_EnforcementMode = "5", XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "Succeeded", XDM_CONST.OUTCOME_SUCCESS, ResultStatus = "PartiallySucceeded", XDM_CONST.OUTCOME_PARTIAL, ResultStatus = "Failed", XDM_CONST.OUTCOME_FAILED, ResultStatus ~= "[Tt]rue", XDM_CONST.OUTCOME_SUCCESS, ResultStatus ~= "[Ff]alse", XDM_CONST.OUTCOME_FAILED),
	xdm.event.outcome_reason = coalesce(translate_EnforcementMode, ResultStatus),
	xdm.observer.action = coalesce(translate_EnforcementMode, to_string(ExceptionInfo), ResultStatus),
	xdm.email.attachment.size = coalesce(to_integer(ExchangeMetaData -> FileSize), to_integer(SharePointMetaData -> FileSize)),
	xdm.email.message_id = ExchangeMetaData -> MessageID,
	xdm.email.sender = ExchangeMetaData -> From,
	xdm.email.recipients = arraymap(ExchangeMetaData -> To[], replex("@element", "\"", "")),
	xdm.email.cc = arraymap(ExchangeMetaData -> CC[], replex("@element", "\"", "")),
	xdm.email.bcc = arraymap(ExchangeMetaData -> BCC[], replex("@element", "\"", "")),
	xdm.email.subject = ExchangeMetaData -> Subject,
	xdm.email.origination_timestamp = parse_timestamp( "%Y-%m-%dT%H:%M:%S", ExchangeMetaData -> Sent),
	xdm.target.file.file_type = EndpointMetaData -> FileType,
	xdm.target.host.hostname = EndpointMetaData -> DeviceName,
	xdm.observer.type = coalesce(evaluationsource, Workload),
	xdm.source.user.upn = UserId,
	xdm.source.user.identifier = UserKey,
	xdm.target.resource.name = if(ObjectId = null, null, ObjectId ~= "^\s*$", null, ObjectId),
	xdm.alert.description = to_string(AppAccessContext),	
	xdm.network.rule = to_string(PolicyDetails);