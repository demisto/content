id: GenericPolling-FortiSIEM
description: ""
inputs:
- description: The query for filtering the relevant events. For example, "eventId=9071234812319593968
    AND eventType='type'". You can retrieve the attributes names  by the naming one
    of the filtering arguments of the command, or by naming the attributes of the
    event that returned in the context output.
  key: query
  playbookInputQuery:
  required: false
  value: {}
- description: ""
  key: limit
  playbookInputQuery:
  required: false
  value: {}
- description: ""
  key: page
  playbookInputQuery:
  required: false
  value: {}
- description: From which event receive time filter the events. For example, "3 days
    ago", "1 month", "2019-10-10T12:22:00", "2019-10-10".
  key: Start time
  playbookInputQuery:
  required: false
  value: {}
- description: Until which event receive time  filter the events. For example, "3
    days ago", "1 month", "2019-10-10T12:22:00", "2019-10-10".
  key: To Time
  playbookInputQuery:
  required: false
  value: {}
name: GenericPolling-FortiSIEM
outputs:
- contextPath: FortiSIEM.Event
  description: The events that retrieved from the search query.
  type: unknown
starttaskid: "0"
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2dc5932f-5ccb-4f37-8e92-4fe5023bd3fa
      iscommand: false
      name: ""
      version: -1
      description: ""
    taskid: 2dc5932f-5ccb-4f37-8e92-4fe5023bd3fa
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": -330
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "6"
    note: false
    quietmode: 0
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${FortiSIEM.EventsSearchInit.search_id}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: search_id
      PollingCommandName:
        simple: fortisiem-event-search-status
      Timeout:
        simple: "10"
      dt:
        simple: FortiSIEM.EventsSearchStatus(val.percentage_status!==100).search_id
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
        Please note that from XSOAR version 6.2 or later, this is not needed and should just use polling argument in the command:fortisiem-event-search.
      id: 22df050e-c6c7-4e0a-8ada-5e2c7af7bd91
      iscommand: false
      name: GenericPolling
      playbookId: GenericPolling
      type: playbook
      version: -1
    taskid: 22df050e-c6c7-4e0a-8ada-5e2c7af7bd91
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 110,
          "y": 440
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 288368cb-2aa5-48e9-85b9-46052d108a62
      iscommand: false
      name: Done
      type: title
      version: -1
      description: ""
    taskid: 288368cb-2aa5-48e9-85b9-46052d108a62
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 510,
          "y": 850
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    scriptarguments:
      destAction: {}
      destDomain: {}
      destIpAddr: {}
      destMACAddr: {}
      destUser: {}
      eventId: {}
      eventType: {}
      extended_data: {}
      from_time:
        simple: ${inputs.Start time}
      interval_in_seconds: {}
      limit:
        simple: ${inputs.limit}
      page:
        simple: ${inputs.page}
      polling: {}
      query:
        simple: ${inputs.query}
      reptDevIpAddr: {}
      search_id: {}
      srcDomain: {}
      srcGeoCountry: {}
      srcIpAddr: {}
      srcMACAddr: {}
      timeout_in_seconds: {}
      to_time:
        simple: ${inputs.To Time}
      user: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Initiate search process on events. The events will be retrieve
        according to a constraint which will be determined either by the query argument
        or by the filtering arguments. When using filtering arguments, an 'AND' operator
        will be used between them. If the query argument is filled, it will override
        the values in the filtering arguments.
      id: 33dbb793-c920-4ae4-8d65-bc905e2eb834
      iscommand: true
      name: Initialize Search
      script: '|||fortisiem-event-search'
      type: regular
      version: -1
    taskid: 33dbb793-c920-4ae4-8d65-bc905e2eb834
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": -190
        }
      }
  "4":
    id: "4"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      search_id:
        simple: ${FortiSIEM.EventsSearchInit.search_id}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Status of search process on events.
      id: 81eab0eb-a9f0-44ea-8695-0570dc708e24
      iscommand: true
      name: fortisiem-event-search-status
      script: '|||fortisiem-event-search-status'
      type: regular
      version: -1
    taskid: 81eab0eb-a9f0-44ea-8695-0570dc708e24
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 0
        }
      }
  "5":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: percentage_status
          operator: isEqualString
          right:
            value:
              simple: "100"
      label: "yes"
    id: "5"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "1"
      "yes":
      - "6"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: ff7267ab-5584-4c71-89d9-2e775e1ca4ee
      iscommand: false
      name: Fetch Completed?
      type: condition
      version: -1
      description: ""
    taskid: ff7267ab-5584-4c71-89d9-2e775e1ca4ee
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 200
        }
      }
  "6":
    id: "6"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      limit:
        simple: ${inputs.limit}
      page:
        simple: ${inputs.page}
      search_id:
        simple: ${FortiSIEM.EventsSearchInit.search_id}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: The results of the specified search query.
      id: fda907fb-643d-43bc-8e1b-30576dc0f37d
      iscommand: true
      name: Fetch Events
      script: '|||fortisiem-event-search-results'
      type: regular
      version: -1
    taskid: fda907fb-643d-43bc-8e1b-30576dc0f37d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 520,
          "y": 650
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1245,
        "width": 790,
        "x": 110,
        "y": -330
      }
    }
  }
fromversion: 6.0.0
tests:
- No tests

