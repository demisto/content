[MODEL: dataset = "vmware_vcenter_raw" ]
filter _raw_log contains "| vlsi |" or _raw_log contains "| vim" or _raw_log contains "jointool" or _raw_log contains "heard-" or _raw_log contains "Stats" or _raw_log contains "localhost" or _raw_log contains "Thread" or _raw_log contains "thread" or _raw_log contains "certificates" or _raw_log contains "DEBUG" or _raw_log contains "INFO" or _raw_log contains "appmgmt" or _raw_log contains "cloudvm" or _raw_log contains "pool" or _raw_log contains "vmon"
| alter 
    log_level1 = arrayindex(regextract(_raw_log ,"-\s\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s([A-Za-z]+)"),0),
    log_level2 = arrayindex(regextract(_raw_log ,"-\s\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s\|\s+([A-Za-z]+)\s"),0),
    log_level3 = arrayindex(regextract(_raw_log ,"-\s\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s\[[a-zA-Z0-9\-\]]+\s+([a-zA-Z]+)\s"),0),
    log_level4 = arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2} \d{2}\:\d{2}\:\d{2}\.\d{3}Z\s[a-zA-Z]+\s([a-zA-Z]+)\s"),0)
| alter 
    LogLevel = coalesce(log_level1 , log_level2 , log_level3 , log_level4 )
| alter 
    event_type = arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s\[([a-z0-9\-]+)"),0),    
	opID = arrayindex(regextract(_raw_log,"opID\=([a-zA-Z0-9Ö¿\-]+)"),0),
    message = arrayindex(regextract(_raw_log ,"[A-Z]{2,}\s*\|(.*)$"),0)
| alter
    xdm.event.type = event_type,
    xdm.target.resource.id = opID,
    xdm.event.description = message,
    xdm.alert.severity = LogLevel;

filter _raw_log contains "[vmafdd]" or _raw_log contains " vmdird "
| alter 
    message = arrayindex(regextract(_raw_log ,"\]([^\]]+)$"),0),
    event_type1= arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s\[([a-z0-9\-]+)"),0),
    event_type2 = arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s([a-zA-Z]+-[a-zA-Z0-9-]+)"),0)
| alter 
    event_type = coalesce(event_type1, event_type2)
| alter 
    user_name1 = arrayindex(regextract(_raw_log, "User\s\'*([^\@]+)\@"),0),
    user_name2 = arrayindex(regextract(_raw_log, "Username=\'([^\']+)\'"),0)
| alter 
    user_name = coalesce(user_name1, user_name2)
| alter
    xdm.event.type = event_type,
    xdm.event.description = message,
    xdm.source.user.username = user_name;

filter _raw_log contains "vpxd"
| alter 
    message = arrayindex(regextract(_raw_log ,"\]([^\]]+)$"),0),
    event_type1= arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s\[([a-z0-9\-]+)"),0),
    event_type2 = arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z\s([a-zA-Z]+-[a-zA-Z0-9-]+)"),0),
    event_type3 = arraystring(regextract(_raw_log ,"<\d+>\d+\s\d+\-\d+\-\d+T\d+:\d+:\d+\.\d+[+|-]\d+:\d+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]([^\s\]]+)"), ""),
    extract_event_description = arraystring(regextract(_raw_log ,"<\d+>\d+\s\d+\-\d+\-\d+T\d+:\d+:\d+\.\d+[+|-]\d+:\d+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s][^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s\[([^\]]+)\]"), "")
| alter 
    check_event_type3 = if(event_type3 = "x", null, event_type3)
| alter 
    user_name1 = arrayindex(regextract(_raw_log, "User\s\'*([^\@]+)\@"),0),
    user_name2 = arrayindex(regextract(_raw_log, "Username=\'([^\']+)\'"),0),
    user_name3 = arraystring(regextract(_raw_log, "<\d+>\d+\s\d+\-\d+\-\d+T\d+:\d+:\d+\.\d+[+|-]\d+:\d+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s[^\s]+\s\[([^\s]+)\]\s[^\s]+\s[^\s]+\s\[[^\]]+\]"), ""),
    event_type = coalesce(event_type1, event_type2, check_event_type3)
| alter 
    user_name = coalesce(user_name1, user_name2, user_name3)
| alter
    xdm.event.type = event_type,
    xdm.event.description = coalesce(message, extract_event_description),
    xdm.source.user.username = user_name;

filter _raw_log contains "tomcat" or _raw_log contains "HTTP"
| alter 
    http_method1 = arrayindex(regextract(_raw_log,"\]\s\"(\w+)"),0),
    http_method2 = arrayindex(regextract(_raw_log,"HTTP\/\w+\.\d+\s([a-zA-Z]+)"),0)
| alter 
    http_method = coalesce(http_method1,http_method2)
| alter 
    http_respone_code1 = arrayindex(regextract(_raw_log,"\[Response\]\s(\d+)"),0),
    http_respone_code2 = arrayindex(regextract(_raw_log,"[A-Z][^\"]+\"\s(\d+)\s"),0)
| alter 
    http_respone_code = coalesce(http_respone_code1,http_respone_code2)
| alter 
    Bytes_size1 = arrayindex(regextract(_raw_log,"[A-Z][^\"]+\"\s\d+\s(\d+)"),0),
    Bytes_size2 = arrayindex(regextract(_raw_log,"(\d+)\sbytes"),0)
| alter 
    bytes_size = coalesce(Bytes_size2,Bytes_size1),
    request = arrayindex(regextract(_raw_log,"\s([A-Z]+\s\/\S+)\s"),0),
    event_type = arrayindex(regextract(_raw_log ,"\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{6}[\+|\-]\d{2}\:\d{2}\s\w+\s([a-zA-Z0-9-_]+)"),0)
| alter
    xdm.event.type = event_type,
    xdm.network.http.method = http_method,
    xdm.network.http.response_code = http_respone_code,
    xdm.source.sent_bytes = to_number(bytes_size),
    xdm.network.http.url = request;

// sps (Storage management service) events
alter event_type = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+(\S+)"), 0)
| filter event_type = "sps"
| alter 
    hostname = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+(\S+)"), 0),
    syslog_msg = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+\S+\s+(.+)"), 0)
| alter
    process_identifier = arrayindex(regextract(syslog_msg, "\[([\w-]+)\]\s+\w+\s+opId="), 0),
    pool_id = arrayindex(regextract(syslog_msg, "pool\-(\d+)\-thread\-\d+"), 0),
    thread_id = arrayindex(regextract(syslog_msg, "thread\-(\d+)\]"), 0),
    msg_severity = arrayindex(regextract(syslog_msg, "\[[\w-]+\]\s+(\w+)"), 0),
    operation_id = arrayindex(regextract(syslog_msg, "opId=(\S+)"), 0),
    app_component = arrayindex(regextract(syslog_msg, "opId=\S*\s+(\S+)"), 0),
    event_details = arrayindex(regextract(syslog_msg, "opId=\S*\s+\S+\s+\-\s+(.+)"), 0)
| alter 
    datastore = arrayindex(regextract(event_details, "datastore=(\S+)"), 0),
    ms1 = arrayindex(regextract(event_details, "took\s+(\S+)\s+millis"), 0),
    ms2 = arrayindex(regextract(event_details, "Time taken:\s+(\S+)\s+ms"), 0),
    url = arrayindex(regextract(event_details, "(https:\S+)"), 0)
| alter 
    port = arrayindex(regextract(url, ":(\d+)"), 0)
| alter
    xdm.alert.severity = msg_severity,
    xdm.event.type = event_type,
    xdm.event.id = operation_id,
    xdm.event.description = event_details,
    xdm.event.duration = to_number(coalesce(ms1, ms2)),
    xdm.observer.name = hostname, 
    xdm.session_context_id = pool_id,
    xdm.source.process.thread_id = to_integer(thread_id),
    xdm.source.process.name = event_type,
    xdm.source.process.identifier = process_identifier, 
    xdm.source.application.name = app_component, 
    xdm.source.host.hostname = hostname, 
    xdm.target.port = to_integer(port),
    xdm.target.url = url,
    xdm.target.resource.type = if(datastore != null, "datastore"),
    xdm.target.resource.value = datastore;

// vpxd-svcs-perf (VMware vCenter-Services) events 
alter event_type = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+(\S+)"), 0)
| filter event_type = "vpxd-svcs-perf"
| alter 
    hostname = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+(\S+)"), 0),
    syslog_msg = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+\S+\s+(.+)"), 0)
| alter 
    process_identifier = arrayindex(regextract(syslog_msg, "\w+\s+\[(\S+)"), 0),
    pool_id = arrayindex(regextract(syslog_msg, "pool\-(\d+)\-thread\-\d+"), 0),
    thread_id = arrayindex(regextract(syslog_msg, "pool\-\d+\-thread\-(\d+)"), 0),
    msg_severity = arrayindex(regextract(syslog_msg, "(\w+)\s+\S+\s+opId="), 0),
    app_component = arrayindex(regextract(syslog_msg, "\w+\s+(\S+)\s+opId="), 0),
    operation_id = arrayindex(regextract(syslog_msg, "opId=([^\]]+)"), 0),
    event_details = arrayindex(regextract(syslog_msg, "opId=\S*\]\s+(.+)"), 0), 
    operation = arrayindex(regextract(syslog_msg, "Operation (\S+) took"), 0), 
    ms = arrayindex(regextract(syslog_msg, "took\s+(\S+)\s+ms"), 0) 
| alter
    xdm.alert.severity = msg_severity,
    xdm.event.type = event_type,
    xdm.event.id = operation_id,
    xdm.event.description = event_details,
    xdm.event.operation_sub_type = operation, 
    xdm.event.duration = to_number(ms),
    xdm.network.application_protocol = if(event_details ~= "LDAP", "LDAP"),
    xdm.network.ldap.operation = if(event_details ~= "Requesting LDAP connection", XDM_CONST.LDAP_OPERATION_BIND_REQUEST), 
    xdm.observer.name = hostname, 
    xdm.observer.action = operation, 
    xdm.session_context_id = pool_id,
    xdm.source.process.thread_id = to_integer(thread_id),
    xdm.source.process.name = event_type,
    xdm.source.process.identifier = process_identifier, 
    xdm.source.application.name = app_component, 
    xdm.source.host.hostname = hostname;

// vpxd-main (VMware vCenter-Services) events 
alter event_type = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+(\S+)"), 0)
| filter event_type = "vpxd-main"
| alter 
    hostname = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+(\S+)"), 0),
    syslog_msg = arrayindex(regextract(_raw_log, "^\<\d{1,3}\>\d+\s+\S+\s+\S+\s+\S+\s+(.+)"), 0)
| alter
    msg_severity = uppercase(arrayindex(regextract(syslog_msg, "(\w+)\s+vpxd\["), 0)),
    pid = to_integer(arrayindex(regextract(syslog_msg, "vpxd\[(\d+)\]"), 0)),
    operation_id = arrayindex(regextract(syslog_msg, "opId=([\w-]+)"), 0),
    sub_module = arrayindex(regextract(syslog_msg, "sub=(\S+[^\]])"), 0),
    event_details = coalesce(arrayindex(regextract(syslog_msg, "opId=\S+\]\s+(.+)"), 0), trim(arrayindex(regextract(syslog_msg, "vpxd\[\d+\]\s+\[.+?\]\s+(.+)"), 0), "--"))
| alter
    session_id = coalesce(arrayindex(regextract(event_details, "session[\:\s\[\<]*([a-fA-F\d-]+)"), 0), arrayindex(regextract(event_details, "--\s+([a-fA-F\d-]+)"), 0));
