category: IT Services
commonfields:
  id: AWS - EC2
  version: -1
configuration:
- display: AWS Default Region
  name: defaultRegion
  options:
  - us-east-1
  - us-east-2
  - us-west-1
  - us-west-2
  - ca-central-1
  - eu-west-1
  - eu-central-1
  - eu-west-2
  - ap-northeast-1
  - ap-northeast-2
  - ap-southeast-1
  - ap-southeast-2
  - ap-south-1
  - sa-east-1
  - eu-north-1
  - eu-west-3
  - us-gov-east-1
  - us-gov-west-1
  type: 15
  section: Connect
  advanced: true
  required: false
- display: Role Arn
  name: roleArn
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Role Session Name
  name: roleSessionName
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Role Session Duration
  name: sessionDuration
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Access Key
  name: credentials
  type: 9
  displaypassword: Secret Key
  section: Connect
  required: false
- display: Access Key
  name: access_key
  type: 0
  hidden: true
  section: Connect
  required: false
- display: Secret Key
  name: secret_key
  type: 4
  hidden: true
  section: Connect
  required: false
- display: Timeout
  name: timeout
  additionalinfo: The time in seconds till a timeout exception is reached. You can specify just the read timeout (for example 60) or also the connect timeout followed after a comma (for example 60,10). If a connect timeout is not specified, a default of 10 second will be used.
  defaultvalue: 60,10
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Retries
  name: retries
  defaultvalue: 5
  additionalinfo: "The maximum number of retry attempts when connection or throttling errors are encountered. Set to 0 to disable retries. The default value is 5 and the limit is 10. Note: Increasing the number of retries will increase the execution time."
  type: 0
  section: Connect
  advanced: true
  required: false
- display: PrivateLink service URL.
  name: endpoint_url
  type: 0
  section: Connect
  advanced: true
  required: false
- display: STS PrivateLink URL.
  name: sts_endpoint_url
  type: 0
  section: Connect
  advanced: true
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
description: Amazon Web Services Elastic Compute Cloud (EC2)
display: AWS - EC2
name: AWS - EC2
script:
  commands:
  - arguments:
    - description: One or more filters.See documentation for details & filter options.
      name: filters
    - description: One or more instance IDs. Seprated by comma.
      name: instanceIds
    - description: The AWS Region, if not specified the default region will be used
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your instances.
    name: aws-ec2-describe-instances
    outputs:
    - contextPath: AWS.EC2.Instances.AmiLaunchIndex
      description: The AMI launch index, which can be used to find this instance in the launch group.
      type: number
    - contextPath: AWS.EC2.Instances.ImageId
      description: The ID of the AMI used to launch the instance.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Instances.KernelId
      description: The kernel associated with this instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.KeyName
      description: The name of the key pair, if this instance was launched with an associated key pair.
      type: string
    - contextPath: AWS.EC2.Instances.LaunchTime
      description: The time the instance was launched.
      type: date
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZone
      description: The Availability Zone of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.Affinity
      description: The affinity setting for the instance on the Dedicated Host.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.GroupName
      description: The name of the placement group the instance is in (for cluster compute instances).
      type: string
    - contextPath: AWS.EC2.Instances.Placement.HostId
      description: he ID of the Dedicated Host on which the instance resides.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.Tenancy
      description: The tenancy of the instance (if the instance is running in a VPC).
      type: string
    - contextPath: AWS.EC2.Instances.Platform
      description: The value is Windows for Windows instances; otherwise blank.
      type: string
    - contextPath: AWS.EC2.Instances.PrivateDnsName
      description: (IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state.
      type: string
    - contextPath: AWS.EC2.Instances.PrivateIpAddress
      description: The private IPv4 address assigned to the instance.
      type: string
    - contextPath: AWS.EC2.Instances.ProductCodes.ProductCodeId
      description: The product code.
      type: string
    - contextPath: AWS.EC2.Instances.ProductCodes.ProductCodeType
      description: The type of product code.
      type: string
    - contextPath: AWS.EC2.Instances.PublicDnsName
      description: (IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state.
      type: string
    - contextPath: AWS.EC2.Instances.PublicIpAddress
      description: The public IPv4 address assigned to the instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.RamdiskId
      description: The RAM disk associated with this instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.State.Code
      description: The low byte represents the state.
      type: string
    - contextPath: AWS.EC2.Instances.State.Name
      description: The current state of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.StateTransitionReason
      description: The reason for the most recent state transition. This might be an empty string.
      type: string
    - contextPath: AWS.EC2.Instances.SubnetId
      description: The ID of the subnet in which the instance is running.
      type: string
    - contextPath: AWS.EC2.Instances.VpcId
      description: The ID of the VPC in which the instance is running.
      type: string
    - contextPath: AWS.EC2.Instances.Architecture
      description: The architecture of the image.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.DeviceName
      description: The device name (for example, /dev/sdh or xvdh).
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.AttachTime
      description: The time stamp when the attachment initiated.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.DeleteOnTermination
      description: Indicates whether the volume is deleted on instance termination.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.Status
      description: The attachment state.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId
      description: The ID of the EBS volume.
      type: string
    - contextPath: AWS.EC2.Instances.ClientToken
      description: The idempotency token you provided when you launched the instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.EbsOptimized
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      type: boolean
    - contextPath: AWS.EC2.Instances.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: boolean
    - contextPath: AWS.EC2.Instances.Hypervisor
      description: The hypervisor type of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Arn
      description: The Amazon Resource Name (ARN) of the instance profile.
      type: string
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Id
      description: The ID of the instance profile.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceLifecycle
      description: Indicates whether this is a Spot Instance or a Scheduled Instance.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuId
      description: The ID of the Elastic GPU.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationId
      description: The ID of the association.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationState
      description: The state of the association between the instance and the Elastic GPU.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationTime
      description: The time the Elastic GPU was associated with the instance.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.IpOwnerId
      description: The ID of the owner of the Elastic IP address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.PublicDnsName
      description: The public DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.PublicIp
      description: The public IP address or Elastic IP address bound to the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.AttachTime
      description: The time stamp when the attachment initiated.
      type: date
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.AttachmentId
      description: The ID of the network interface attachment.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.DeleteOnTermination
      description: Indicates whether the network interface is deleted when the instance is terminated.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.DeviceIndex
      description: The index of the device on the instance for the network interface attachment.
      type: number
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.Status
      description: The attachment state.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Description
      description: The description.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Addresses.Ipv6Address
      description: The IPv6 addresses associated with the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.MacAddress
      description: The MAC address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId
      description: The ID of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.OwnerId
      description: The ID of the AWS account that created the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateDnsName
      description: The private DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress
      description: The IPv4 address of the network interface within the subnet.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.IpOwnerId
      description: The ID of the owner of the Elastic IP address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.PublicDnsName
      description: The public DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.PublicIp
      description: The public IP address or Elastic IP address bound to the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Primary
      description: Indicates whether this IPv4 address is the primary private IP address of the network interface.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.PrivateDnsName
      description: The private IPv4 DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.PrivateIpAddress
      description: The private IPv4 address of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SourceDestCheck
      description: Indicates whether to validate network traffic to or from this network interface.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Status
      description: The status of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SubnetId
      description: The ID of the subnet.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.EC2.Instances.RootDeviceName
      description: The device name of the root device volume (for example, /dev/sda1).
      type: string
    - contextPath: AWS.EC2.Instances.RootDeviceType
      description: The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
      type: string
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.SourceDestCheck
      description: Specifies whether to enable an instance launched in a VPC to perform NAT.
      type: boolean
    - contextPath: AWS.EC2.Instances.SpotInstanceRequestId
      description: If the request is a Spot Instance request, the ID of the request.
      type: string
    - contextPath: AWS.EC2.Instances.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: string
    - contextPath: AWS.EC2.Instances.StateReason.Code
      description: The reason code for the state change.
      type: string
    - contextPath: AWS.EC2.Instances.StateReason.Message
      description: The message for the state change.
      type: string
    - contextPath: AWS.EC2.Instances.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Instances.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Instances.VirtualizationType
      description: The virtualization type of the instance.
      type: string
  - arguments:
      - description: One or more filters. See AWS documentation for details & filter options.
        name: filters
      - description: The IAM instance profile associations.
        name: associationIds
      - description: The maximum number of results to return in a single call. Specify a value between 5 and 1000.
        name: maxResults
      - description: The token for the next set of results.
        name: nextToken
      - description: The AWS region. If not specified, the default region will be used.
        name: region
      - description: The Amazon Resource Name (ARN) of the role to assume.
        name: roleArn
      - description: An identifier for the assumed role session.
        name: roleSessionName
      - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
        name: roleSessionDuration
    description: Describes your IAM instance profile associations.
    name: aws-ec2-describe-iam-instance-profile-associations
    outputs:
      - contextPath: AWS.EC2.IamInstanceProfileAssociations.IamInstanceProfile.Arn
        description: The Amazon Resource Name (ARN) of the instance profile.
        type: string
      - contextPath: AWS.EC2.IamInstanceProfileAssociations.IamInstanceProfile.Id
        description: The ID of the instance profile.
        type: string
      - contextPath: AWS.EC2.IamInstanceProfileAssociations.State
        description: The state of the association.
        type: string
      - contextPath: AWS.EC2.IamInstanceProfileAssociations.InstanceId
        description: The ID of the instance.
        type: string
      - contextPath: AWS.EC2.IamInstanceProfileAssociations.AssociationId
        description: The ID of the association.
        type: string
  - arguments:
    - description: One or more filters.
      name: filters
    - description: One or more image IDs, Seperated by comma
      name: imageIds
    - description: Filters the images by the owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace | microsoft ). Omitting this option returns all images for which you have launch permissions, regardless of ownership.
      name: owners
    - description: Scopes the images by users with explicit launch permissions. Specify an AWS account ID, self (the sender of the request), or all (public AMIs).
      name: executableUsers
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images available to you include public images, private images that you own, and private images owned by other AWS accounts but for which you have explicit launch permissions.
    name: aws-ec2-describe-images
    outputs:
    - contextPath: AWS.EC2.Images.Architecture
      description: The architecture of the image.
      type: string
    - contextPath: AWS.EC2.Images.CreationDate
      description: The date and time the image was created.
      type: date
    - contextPath: AWS.EC2.Images.ImageId
      description: The ID of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.ImageLocation
      description: The location of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.ImageType
      description: The type of image.
      type: string
    - contextPath: AWS.EC2.Images.Public
      description: Indicates whether the image has public launch permissions. The value is true if this image has public launch permissions or false if it has only implicit and explicit launch permissions.
      type: boolean
    - contextPath: AWS.EC2.Images.KernelId
      description: The kernel associated with the image, if any. Only applicable for machine images.
      type: string
    - contextPath: AWS.EC2.Images.OwnerId
      description: The AWS account ID of the image owner.
      type: string
    - contextPath: AWS.EC2.Images.Platform
      description: The value is Windows for Windows AMIs; otherwise blank.
      type: string
    - contextPath: AWS.EC2.Images.ProductCodes.ProductCodeId
      description: The product code.
      type: string
    - contextPath: AWS.EC2.Images.ProductCodes.ProductCodeType
      description: The type of product code.
      type: string
    - contextPath: AWS.EC2.Images.RamdiskId
      description: The RAM disk associated with the image, if any. Only applicable for machine images.
      type: string
    - contextPath: AWS.EC2.Images.State
      description: The current state of the AMI. If the state is available , the image is successfully registered and can be used to launch an instance.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.DeviceName
      description: The device name (for example, /dev/sdh or xvdh).
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.VirtualName
      description: The virtual device name (ephemeral N).
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.Encrypted
      description: Indicates whether the EBS volume is encrypted.
      type: boolean
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.DeleteOnTermination
      description: Indicates whether the EBS volume is deleted on instance termination.
      type: boolean
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.Iops
      description: The number of I/O operations per second (IOPS) that the volume supports.
      type: number
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.KmsKeyId
      description: Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.SnapshotId
      description: The ID of the snapshot.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.VolumeSize
      description: The size of the volume, in GiB.
      type: number
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.VolumeType
      description: The volume type.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.NoDevice
      description: Suppresses the specified device included in the block device mapping of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.Description
      description: The description of the AMI that was provided during image creation.
      type: string
    - contextPath: AWS.EC2.Images.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: boolean
    - contextPath: AWS.EC2.Images.Hypervisor
      description: The hypervisor type of the image.
      type: string
    - contextPath: AWS.EC2.Images.ImageOwnerAlias
      description: The AWS account alias (for example, amazon , self ) or the AWS account ID of the AMI owner.
      type: string
    - contextPath: AWS.EC2.Images.Name
      description: The name of the AMI that was provided during image creation.
      type: string
    - contextPath: AWS.EC2.Images.RootDeviceName
      description: The device name of the root device volume (for example, /dev/sda1).
      type: string
    - contextPath: AWS.EC2.Images.RootDeviceType
      description: The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.
      type: string
    - contextPath: AWS.EC2.Images.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: string
    - contextPath: AWS.EC2.Images.StateReason.Code
      description: The reason code for the state change.
      type: string
    - contextPath: AWS.EC2.Images.StateReason.Message
      description: The message for the state change.
      type: string
    - contextPath: AWS.EC2.Images.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Images.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Images.VirtualizationType
      description: The type of virtualization of the AMI.
      type: string
  - arguments:
    - description: The name of the region (for example, us-east-1 ).
      name: regionNames
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more regions that are currently available to you.
    name: aws-ec2-describe-regions
    outputs:
    - contextPath: AWS.Regions.Endpoint
      description: The region service endpoint.
      type: string
    - contextPath: AWS.Regions.RegionName
      description: The name of the region.
      type: string
  - arguments:
    - description: One or more filters. See documentation for filters list.
      name: filters
    - description: One or more Elastic IP addresses.
      name: publicIps
    - description: One or more allocation IDs.
      name: allocationIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your Elastic IP addresses.
    name: aws-ec2-describe-addresses
    outputs:
    - contextPath: AWS.EC2.ElasticIPs.InstanceId
      description: The ID of the instance that the address is associated with (if any).
      type: string
    - contextPath: AWS.EC2.ElasticIPs.PublicIp
      description: The Elastic IP address.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.AllocationId
      description: The ID representing the allocation of the address for use with EC2-VPC.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.AssociationId
      description: The ID representing the association of the address with an instance in a VPC.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Domain
      description: dicates whether this Elastic IP address is for use with instances in EC2-Classic (standard) or instances in a VPC.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.NetworkInterfaceId
      description: The ID of the network interface.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.NetworkInterfaceOwnerId
      description: The ID of the AWS account that owns the network interface.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.PrivateIpAddress
      description: The private IP address associated with the Elastic IP address.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Region
      description: The aws region were the elastic ip is located.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: One or more filters. See documentation for filters list.
      name: filters
    - description: Returns the snapshots owned by the specified owner. Multiple owners can be specified.
      name: ownerIds
    - description: One or more snapshot IDs. Seperated by commas
      name: snapshotIds
    - description: One or more AWS accounts IDs that can create volumes from the snapshot.
      name: restorableByUserIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of the EBS snapshots available to you.
    name: aws-ec2-describe-snapshots
    outputs:
    - contextPath: AWS.EC2.Snapshots.DataEncryptionKeyId
      description: The data encryption key identifier for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.Description
      description: The description for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.Encrypted
      description: Indicates whether the snapshot is encrypted.
      type: boolean
    - contextPath: AWS.EC2.Snapshots.KmsKeyId
      description: The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.
      type: string
    - contextPath: AWS.EC2.Snapshots.OwnerId
      description: The AWS account ID of the EBS snapshot owner.
      type: string
    - contextPath: AWS.EC2.Snapshots.Progress
      description: The progress of the snapshot, as a percentage.
      type: string
    - contextPath: AWS.EC2.Snapshots.SnapshotId
      description: The ID of the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.StartTime
      description: The time stamp when the snapshot was initiated.
      type: string
    - contextPath: AWS.EC2.Snapshots.State
      description: The snapshot state.
      type: string
    - contextPath: AWS.EC2.Snapshots.StateMessage
      description: this field displays error state details to help you diagnose why the error occurred.
      type: string
    - contextPath: AWS.EC2.Snapshots.VolumeId
      description: The ID of the volume that was used to create the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.VolumeSize
      description: The size of the volume, in GiB.
      type: number
    - contextPath: AWS.EC2.Snapshots.OwnerAlias
      description: Value from an Amazon-maintained list of snapshot owners.
      type: string
    - contextPath: AWS.EC2.Snapshots.Region
      description: The aws region were the snapshot is located
      type: string
    - contextPath: AWS.EC2.Snapshots.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Snapshots.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: One or more filters.See documentation for filters list.
      name: Filters
    - description: One or more launch template names. Sepereted by comma.
      name: LaunchTemplateNames
    - description: One or more launch template IDs. Sepereted by comma.
      name: LaunchTemplateIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more launch templates.
    name: aws-ec2-describe-launch-templates
    outputs:
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplateId
      description: The ID of the launch template.
      type: string
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplateName
      description: The name of the launch template.
      type: string
    - contextPath: AWS.EC2.LaunchTemplates.CreateTime
      description: The time launch template was created.
      type: date
    - contextPath: AWS.EC2.LaunchTemplates.CreatedBy
      description: The principal that created the launch template.
      type: string
    - contextPath: AWS.EC2.LaunchTemplates.DefaultVersionNumber
      description: The version number of the default version of the launch template.
      type: number
    - contextPath: AWS.EC2.LaunchTemplates.LatestVersionNumber
      description: The version number of the latest version of the launch template.
      type: number
    - contextPath: AWS.EC2.LaunchTemplates.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.LaunchTemplates.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.LaunchTemplates.Region
      description: The aws region where the template is located
      type: string
  - arguments:
    - description: One or more filters. See documentation for filters list.
      name: filters
    - description: One or more key pair names. Sepereted by comma.
      name: keyNames
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your key pairs.
    name: aws-ec2-describe-key-pairs
    outputs:
    - contextPath: AWS.EC2.KeyPairs.KeyFingerprint
      description: If you used CreateKeyPair to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used ImportKeyPair to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.
      type: Unknown
    - contextPath: AWS.EC2.KeyPairs.KeyName
      description: The name of the key pair.
      type: Unknown
    - contextPath: AWS.EC2.KeyPairs.Region
      description: The aws region where the key pair is located
      type: Unknown
  - arguments:
    - description: One or more filters. See documentation for filters list.
      name: filters
    - description: One or more volume IDs. Sepereted by comma.
      name: volumeIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes the specified EBS volumes.
    name: aws-ec2-describe-volumes
    outputs:
    - contextPath: AWS.EC2.Volumes.AvailabilityZone
      description: The Availability Zone for the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.CreateTime
      description: The time stamp when volume creation was initiated.
      type: date
    - contextPath: AWS.EC2.Volumes.Encrypted
      description: Indicates whether the volume will be encrypted.
      type: boolean
    - contextPath: AWS.EC2.Volumes.KmsKeyId
      description: The full ARN of the AWS Key Management Service customer master key that was used to protect the volume encryption key for the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Size
      description: The snapshot from which the volume was created, if applicable.
      type: number
    - contextPath: AWS.EC2.Volumes.State
      description: The volume state.
      type: string
    - contextPath: AWS.EC2.Volumes.VolumeId
      description: The ID of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Iops
      description: The number of I/O operations per second (IOPS) that the volume supports.
      type: number
    - contextPath: AWS.EC2.Volumes.VolumeType
      description: The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.
      type: string
    - contextPath: AWS.EC2.Volumes.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Volumes.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.AttachTime
      description: The time stamp when the attachment initiated.
      type: date
    - contextPath: AWS.EC2.Volumes.Attachments.Device
      description: The device name.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.State
      description: The attachment state of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.VolumeId
      description: The ID of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.DeleteOnTermination
      description: Indicates whether the EBS volume is deleted on instance termination.
      type: boolean
  - arguments:
    - description: One or more filters. See documentation for filters list.
      name: filters
    - description: One or more VPC IDs. Sepereted by comma.
      name: vpcIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your VPCs.
    name: aws-ec2-describe-vpcs
    outputs:
    - contextPath: AWS.EC2.Vpcs.CidrBlock
      description: The primary IPv4 CIDR block for the VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.DhcpOptionsId
      description: The ID of the set of DHCP options you have associated with the VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.State
      description: The current state of the VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.InstanceTenancy
      description: The allowed tenancy of instances launched into the VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.IsDefault
      description: Indicates whether the VPC is the default VPC.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Ipv6CidrBlockAssociationSet.AssociationId
      description: The association ID for the IPv6 CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Ipv6CidrBlockAssociationSet.Ipv6CidrBlock
      description: The IPv6 CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.State
      description: The state of the CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.StatusMessage
      description: A message about the status of the CIDR block, if applicable.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.CidrBlockAssociationSet.AssociationId
      description: The association ID for the IPv4 CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.CidrBlockAssociationSet.CidrBlock
      description: The IPv4 CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.CidrBlockAssociationSet.CidrBlockState.State
      description: The state of the CIDR block.
      type: string
    - contextPath: AWS.EC2.Vpcs.Tags.CidrBlockAssociationSet.CidrBlockState.StatusMessage
      description: A message about the status of the CIDR block, if applicable.
      type: string
  - arguments:
    - description: One or more filters. See documetation for filters list.
      name: filters
    - description: One or more subnet IDs. Sepereted by comma.
      name: subnetIds
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your subnets.
    name: aws-ec2-describe-subnets
    outputs:
    - contextPath: AWS.EC2.Subnets.AvailabilityZone
      description: The Availability Zone of the subnet.
      type: string
    - contextPath: AWS.EC2.Subnets.AvailableIpAddressCount
      description: The number of unused private IPv4 addresses in the subnet. Note that the IPv4 addresses for any stopped instances are considered unavailable.
      type: number
    - contextPath: AWS.EC2.Subnets.CidrBlock
      description: The IPv4 CIDR block assigned to the subnet.
      type: string
    - contextPath: AWS.EC2.Subnets.DefaultForAz
      description: Indicates whether this is the default subnet for the Availability Zone.
      type: boolean
    - contextPath: AWS.EC2.Subnets.MapPublicIpOnLaunch
      description: Indicates whether instances launched in this subnet receive a public IPv4 address.
      type: boolean
    - contextPath: AWS.EC2.Subnets.State
      description: The current state of the subnet.
      type: string
    - contextPath: AWS.EC2.Subnets.SubnetId
      description: The ID of the subnet.
      type: string
    - contextPath: AWS.EC2.Subnets.VpcId
      description: The ID of the VPC the subnet is in.
      type: string
    - contextPath: AWS.EC2.Subnets.AssignIpv6AddressOnCreation
      description: Indicates whether a network interface created in this subnet (including a network interface created by RunInstances) receives an IPv6 address.
      type: boolean
    - contextPath: AWS.EC2.Subnets.Ipv6CidrBlockAssociationSet.AssociationId
      description: The association ID for the CIDR block.
      type: string
    - contextPath: AWS.EC2.Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlock
      description: The IPv6 CIDR block.
      type: string
    - contextPath: AWS.EC2.Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.State
      description: The state of a CIDR block.
      type: string
    - contextPath: AWS.EC2.Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.StatusMessage
      description: A message about the status of the CIDR block, if applicable.
      type: string
    - contextPath: AWS.EC2.Subnets.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Subnets.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: One or more filters. See documetation for filters list.
      name: filters
    - description: One or more security group IDs. Required for security groups in a nondefault VPC. Sepereted by comma.
      name: groupIds
    - description: One or more security group names. Sepereted by comma.
      name: groupNames
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of your security groups.
    name: aws-ec2-describe-security-groups
    outputs:
    - contextPath: AWS.EC2.SecurityGroups.Description
      description: A description of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.FromPort
      description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types.
      type: number
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.IpProtocol
      description: The IP protocol name (tcp , udp , icmp ) or number.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.IpRanges.CidrIp
      description: The IPv4 CIDR range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.IpRanges.Description
      description: A description for the security group rule that references this IPv4 address range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.Ipv6Ranges.CidrIpv6
      description: The IPv6 CIDR range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.Ipv6Ranges.Description
      description: A description for the security group rule that references this IPv6 address range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.PrefixListIds.Description
      description: A description for the security group rule that references this prefix list ID.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.PrefixListIds.PrefixListId
      description: The ID of the prefix.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.ToPort
      description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
      type: number
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.Description
      description: A description for the security group rule that references this user ID group pair.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.PeeringStatus
      description: The status of a VPC peering connection, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.UserId
      description: The ID of an AWS account.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.VpcId
      description: The ID of the VPC for the referenced security group, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.VpcPeeringConnectionId
      description: The ID of the VPC peering connection, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.OwnerId
      description: The AWS account ID of the owner of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.FromPort
      description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number.
      type: number
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.IpProtocol
      description: The IP protocol name (tcp , udp , icmp) or number.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.IpRanges.CidrIp
      description: The IPv4 CIDR range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.IpRanges.Description
      description: A description for the security group rule that references this IPv4 address range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.Ipv6Ranges.CidrIpv6
      description: The IPv6 CIDR range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.Ipv6Ranges.Description
      description: A description for the security group rule that references this IPv6 address range.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.PrefixListIds.Description
      description: A description for the security group rule that references this prefix list ID.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.PrefixListIds.PrefixListId
      description: The ID of the prefix.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.ToPort
      description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.Description
      description: A description for the security group rule that references this user ID group pair.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.PeeringStatus
      description: The status of a VPC peering connection, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.UserId
      description: The ID of an AWS account.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.VpcId
      description: The ID of the VPC for the referenced security group, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.IpPermissionsEgress.UserIdGroupPairs.VpcPeeringConnectionId
      description: The ID of the VPC peering connection, if applicable.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.VpcId
      description: The ID of the VPC for the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Allocates an Elastic IP address.
    execution: true
    name: aws-ec2-allocate-address
    outputs:
    - contextPath: AWS.EC2.ElasticIPs.PublicIp
      description: The Elastic IP address.
      type: Unknown
    - contextPath: AWS.EC2.ElasticIPs.AllocationId
      description: The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Domain
      description: Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard ) or instances in a VPC (vpc).
      type: string
    - contextPath: AWS.EC2.ElasticIPs.Region
      description: The aws region where the elastic IP is located.
      type: Unknown
  - arguments:
    - description: The allocation ID.
      name: allocationId
      required: true
    - description: The ID of the instance. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.
      name: instanceId
    - auto: PREDEFINED
      defaultValue: 'False'
      description: For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.
      name: allowReassociation
      predefined:
      - 'True'
      - 'False'
    - description: The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.
      name: networkInterfaceId
    - description: The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
      name: privateIpAddress
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Associates an Elastic IP address with an instance or a network interface.
    execution: true
    name: aws-ec2-associate-address
    outputs:
    - contextPath: AWS.EC2.ElasticIPs.AssociationId
      description: The ID that represents the association of the Elastic IP address with an instance.
      type: string
  - arguments:
    - description: The ID of the EBS volume.
      name: volumeId
      required: true
    - description: A description for the snapshot.
      name: description
    - description: The tags to apply to the snapshot during creation.
      name: tags
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.
    execution: true
    name: aws-ec2-create-snapshot
    outputs:
    - contextPath: AWS.EC2.Snapshots.DataEncryptionKeyId
      description: The data encryption key identifier for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.Description
      description: The description for the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.Encrypted
      description: Indicates whether the snapshot is encrypted.
      type: number
    - contextPath: AWS.EC2.Snapshots.KmsKeyId
      description: The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.
      type: string
    - contextPath: AWS.EC2.Snapshots.OwnerId
      description: The AWS account ID of the EBS snapshot owner.
      type: string
    - contextPath: AWS.EC2.Snapshots.Progress
      description: The progress of the snapshot, as a percentage.
      type: string
    - contextPath: AWS.EC2.Snapshots.SnapshotId
      description: The ID of the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.StartTime
      description: The time stamp when the snapshot was initiated.
      type: date
    - contextPath: AWS.EC2.Snapshots.State
      description: The snapshot state.
      type: string
    - contextPath: AWS.EC2.Snapshots.StateMessage
      description: this field displays error state details to help you diagnose why the error occurred.
      type: string
    - contextPath: AWS.EC2.Snapshots.VolumeId
      description: The ID of the volume that was used to create the snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.VolumeSize
      description: The size of the volume, in GiB.
      type: number
    - contextPath: AWS.EC2.Snapshots.OwnerAlias
      description: Value from an Amazon-maintained list of snapshot owners.
      type: string
    - contextPath: AWS.EC2.Snapshots.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Snapshots.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: The ID of the EBS snapshot.
      name: snapshotId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Deletes the specified snapshot.
    execution: true
    name: aws-ec2-delete-snapshot
  - arguments:
    - description: A name for the new image.
      name: name
      required: true
    - description: The ID of the instance.
      name: instanceId
      required: true
    - description: A description for the new image.
      name: description
    - auto: PREDEFINED
      description: By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the noReboot option is set, Amazon EC2 wont shut down the instance before creating the image. When this option is used, file system integrity on the created image cant be guaranteed.
      name: noReboot
      predefined:
      - 'True'
      - 'False'
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.
    execution: true
    name: aws-ec2-create-image
    outputs:
    - contextPath: AWS.EC2.Images.ImageId
      description: The ID of the new AMI.
      type: string
    - contextPath: AWS.EC2.Images.Name
      description: The name of the new AMI.
      type: string
    - contextPath: AWS.EC2.Images.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Images.Region
      description: The aws region where the image is located
      type: string
  - arguments:
    - description: The ID of the AMI.
      name: imageId
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Deregisters the specified AMI.
    execution: true
    name: aws-ec2-deregister-image
  - arguments:
    - description: The ID of the volume.
      name: volumeId
      required: true
    - description: Target size in GiB of the volume to be modified.
      name: size
    - description: Target EBS volume type of the volume to be modified  The API does not support modifications for volume type standard . You also cannot change the type of a volume to standard .
      name: volumeType
    - description: Target IOPS rate of the volume to be modified.
      name: iops
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity.
    execution: true
    name: aws-ec2-modify-volume
    outputs:
    - contextPath: AWS.EC2.Volumes.Modification.VolumeId
      description: ID of the volume being modified.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.ModificationState
      description: Current state of modification. Modification state is null for unmodified. volumes.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.StatusMessage
      description: Generic status message on modification progress or failure.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.TargetSize
      description: Target size of the volume being modified.
      type: number
    - contextPath: AWS.EC2.Volumes.Modification.TargetIops
      description: Target IOPS rate of the volume being modified.
      type: number
    - contextPath: AWS.EC2.Volumes.Modification.TargetVolumeType
      description: Target EBS volume type of the volume being modified.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.OriginalSize
      description: Original size of the volume being modified.
      type: number
    - contextPath: AWS.EC2.Volumes.Modification.OriginalIops
      description: Original IOPS rate of the volume being modified.
      type: number
    - contextPath: AWS.EC2.Volumes.Modification.OriginalVolumeType
      description: Original EBS volume type of the volume being modified.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.Progress
      description: Modification progress from 0 to 100%.
      type: string
    - contextPath: AWS.EC2.Volumes.Modification.StartTime
      description: Modification start time.
      type: date
    - contextPath: AWS.EC2.Volumes.Modification.EndTime
      description: Modification completion or failure time.
      type: date
  - arguments:
    - description: The IDs of one or more resources to tag. For example, ami-1a2b3c4d.
      name: resources
    - description: One or more tags.
      name: tags
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources.
    execution: true
    name: aws-ec2-create-tags
  - arguments:
    - description: The association ID.
      name: associationId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Disassociates an Elastic IP address from the instance or network interface its associated with.
    execution: true
    name: aws-ec2-disassociate-address
  - arguments:
    - description: The allocation ID.
      name: allocationId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Releases the specified Elastic IP address.
    execution: true
    name: aws-ec2-release-address
  - arguments:
    - description: One or more instance IDs. Sepereted by comma.
      name: instanceIds
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Starts an Amazon EBS-backed instance that you have previously stopped.
    execution: true
    name: aws-ec2-start-instances
  - arguments:
    - description: One or more instance IDs.
      name: instanceIds
      required: true
    - description: The AWS Region, if not specified the default region will be used
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Stops an Amazon EBS-backed instance.
    execution: true
    name: aws-ec2-stop-instances
  - arguments:
    - description: One or more instance IDs.
      name: instanceIds
      required: true
    - description: The AWS Region, if not specified the default region will be used
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Shuts down one or more instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds.
    execution: true
    name: aws-ec2-terminate-instances
  - arguments:
    - description: The Availability Zone in which to create the volume. Use DescribeAvailabilityZones to list the Availability Zones that are currently available to you.
      name: availabilityZone
      required: true
    - auto: PREDEFINED
      description: Specifies whether the volume should be encrypted.
      name: encrypted
      predefined:
      - 'True'
      - 'False'
    - description: The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 50 IOPS/GiB. Range is 100 to 32000 IOPS for volumes in most regions.
      name: iops
    - description: An identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.
      name: kmsKeyId
    - description: The size of the volume, in GiBs.
      name: size
    - description: The snapshot from which to create the volume.
      name: snapshotId
    - auto: PREDEFINED
      description: The volume type.
      name: volumeType
      predefined:
      - standard
      - io1
      - gp2
      - sc1
      - st1
    - description: One or more tags.Example key=Name,value=test;key=Owner,value=Bob
      name: tags
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates an EBS volume that can be attached to an instance in the same Availability Zone.
    execution: true
    name: aws-ec2-create-volume
    outputs:
    - contextPath: AWS.EC2.Volumes.AvailabilityZone
      description: The Availability Zone for the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.CreateTime
      description: The time stamp when volume creation was initiated.
      type: date
    - contextPath: AWS.EC2.Volumes.Encrypted
      description: Indicates whether the volume will be encrypted.
      type: boolean
    - contextPath: AWS.EC2.Volumes.KmsKeyId
      description: The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Size
      description: The size of the volume, in GiBs.
      type: number
    - contextPath: AWS.EC2.Volumes.SnapshotId
      description: The snapshot from which the volume was created, if applicable.
      type: string
    - contextPath: AWS.EC2.Volumes.State
      description: The volume state.
      type: string
    - contextPath: AWS.EC2.Volumes.VolumeId
      description: The ID of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Iops
      description: The number of I/O operations per second (IOPS) that the volume supports.
      type: number
    - contextPath: AWS.EC2.Volumes.VolumeType
      description: The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.
      type: string
    - contextPath: AWS.EC2.Volumes.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Volumes.Tags.Value
      description: The value of the tag.
      type: string
  - arguments:
    - description: The device name (for example, /dev/sdh or xvdh).
      name: device
      required: true
    - description: The ID of the instance.
      name: instanceId
      required: true
    - description: The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
      name: volumeId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.
    execution: true
    name: aws-ec2-attach-volume
    outputs:
    - contextPath: AWS.EC2.Volumes.Attachments.AttachTime
      description: The time stamp when the attachment initiated.
      type: date
    - contextPath: AWS.EC2.Volumes.Attachments.Device
      description: The device name.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.State
      description: The attachment state of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.VolumeId
      description: The ID of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.DeleteOnTermination
      description: Indicates whether the EBS volume is deleted on instance termination.
      type: boolean
  - arguments:
    - description: The ID of the volume.
      name: volumeId
      required: true
    - description: Forces detachment if the previous detachment attempt did not occur cleanly. This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance.
      name: force
    - description: The device name (for example, /dev/sdh or xvdh).
      name: device
    - description: The ID of the instance.
      name: instanceId
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Detaches an EBS volume from an instance.
    execution: true
    name: aws-ec2-detach-volume
    outputs:
    - contextPath: AWS.EC2.Volumes.Attachments.AttachTime
      description: The time stamp when the attachment initiated.
      type: date
    - contextPath: AWS.EC2.Volumes.Attachments.Device
      description: The device name.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.State
      description: The attachment state of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.VolumeId
      description: The ID of the volume.
      type: string
    - contextPath: AWS.EC2.Volumes.Attachments.DeleteOnTermination
      description: Indicates whether the EBS volume is deleted on instance termination.
      type: boolean
  - arguments:
    - description: The ID of the volume.
      name: volumeId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Deletes the specified EBS volume. The volume must be in the available state (not attached to an instance).
    execution: true
    name: aws-ec2-delete-volume
  - arguments:
    - defaultValue: '1'
      description: The number of instances to launch. must be grater then 0.
      name: count
      required: true
    - description: The ID of the AMI, which you can get by calling DescribeImages . An AMI is required to launch an instance and must be specified here or in a launch template.
      name: imageId
    - description: 'The instance type. for example: t2.large'
      name: instanceType
    - description: One or more security group IDs. Sepereted by comma.
      name: securityGroupIds
    - description: One or more security group names. For a nondefault VPC, you must use security group IDs instead.
      name: securityGroups
    - description: The ID of the subnet to launch the instance into.
      name: subnetId
    - description: The user data to make available to the instance.This value will be base64 encoded automatically. Do not base64 encode this value prior to performing the operation.
      name: userData
    - auto: PREDEFINED
      description: If you set this parameter to true , you cant terminate the instance using the Amazon EC2 console, CLI, or API.
      name: disableApiTermination
      predefined:
      - 'True'
      - 'False'
    - description: The Amazon Resource Name (ARN) of the instance profile. Both iamInstanceProfileArn and iamInstanceProfile are required if you would like to associate an instance profile.
      name: iamInstanceProfileArn
    - description: The name of the instance profile. Both iamInstanceProfileArn and iamInstanceProfile are required if you would like to associate an instance profile.
      name: iamInstanceProfileName
    - description: The name of the key pair. Warning - If you do not specify a key pair, you cant connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
      name: keyName
    - auto: PREDEFINED
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      name: ebsOptimized
      predefined:
      - 'True'
      - 'False'
    - description: The device name (for example, /dev/sdh or xvdh).
      name: deviceName
    - description: The size of the volume, in GiB.
      name: ebsVolumeSize
    - auto: PREDEFINED
      description: The volume type.
      name: ebsVolumeType
      predefined:
      - gp2
      - io1
      - st1
      - sc1
      - standard
    - description: The number of I/O operations per second (IOPS) that the volume supports.
      name: ebsIops
    - auto: PREDEFINED
      description: Indicates whether the EBS volume is deleted on instance termination.
      name: ebsDeleteOnTermination
      predefined:
      - 'True'
      - 'False'
    - description: Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted.
      name: ebsKmsKeyId
    - description: The ID of the snapshot.
      name: ebsSnapshotId
    - description: Indicates whether the EBS volume is encrypted.
      name: ebsEncrypted
    - description: The ID of the launch template. The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.
      name: launchTemplateId
    - description: The name of the launch template. The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.
      name: launchTemplateName
    - description: The version number of the launch template.
      name: launchTemplateVersion
    - description: The tags to apply to the instance.
      name: tags
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The dedicated Host ID.
      name: host_id
    description: Launches the specified number of instances using an AMI for which you have permissions. You can create a launch template , which is a resource that contains the parameters to launch an instance. When you launch an instance using RunInstances , you can specify the launch template instead of specifying the launch parameters. An instance is ready for you to use when its in the running state. You can check the state of your instance using DescribeInstances.
    execution: true
    name: aws-ec2-run-instances
    outputs:
    - contextPath: AWS.EC2.Instances.AmiLaunchIndex
      description: The AMI launch index, which can be used to find this instance in the launch group.
      type: number
    - contextPath: AWS.EC2.Instances.ImageId
      description: The ID of the AMI used to launch the instance.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Instances.KernelId
      description: The kernel associated with this instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.KeyName
      description: The name of the key pair, if this instance was launched with an associated key pair.
      type: string
    - contextPath: AWS.EC2.Instances.LaunchTime
      description: The time the instance was launched.
      type: date
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.AvailabilityZone
      description: The Availability Zone of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.Affinity
      description: The affinity setting for the instance on the Dedicated Host.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.GroupName
      description: The name of the placement group the instance is in (for cluster compute instances).
      type: string
    - contextPath: AWS.EC2.Instances.Placement.HostId
      description: he ID of the Dedicated Host on which the instance resides.
      type: string
    - contextPath: AWS.EC2.Instances.Placement.Tenancy
      description: The tenancy of the instance (if the instance is running in a VPC).
      type: string
    - contextPath: AWS.EC2.Instances.Platform
      description: The value is Windows for Windows instances; otherwise blank.
      type: string
    - contextPath: AWS.EC2.Instances.PrivateDnsName
      description: (IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state.
      type: string
    - contextPath: AWS.EC2.Instances.PrivateIpAddress
      description: The private IPv4 address assigned to the instance.
      type: string
    - contextPath: AWS.EC2.Instances.ProductCodes.ProductCodeId
      description: The product code.
      type: string
    - contextPath: AWS.EC2.Instances.ProductCodes.ProductCodeType
      description: The type of product code.
      type: string
    - contextPath: AWS.EC2.Instances.PublicDnsName
      description: (IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state.
      type: string
    - contextPath: AWS.EC2.Instances.PublicIpAddress
      description: The public IPv4 address assigned to the instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.RamdiskId
      description: The RAM disk associated with this instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.State.Code
      description: The low byte represents the state.
      type: string
    - contextPath: AWS.EC2.Instances.State.Name
      description: The current state of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.StateTransitionReason
      description: The reason for the most recent state transition. This might be an empty string.
      type: string
    - contextPath: AWS.EC2.Instances.SubnetId
      description: The ID of the subnet in which the instance is running.
      type: string
    - contextPath: AWS.EC2.Instances.VpcId
      description: The ID of the VPC in which the instance is running.
      type: string
    - contextPath: AWS.EC2.Instances.Architecture
      description: The architecture of the image.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.DeviceName
      description: The device name (for example, /dev/sdh or xvdh).
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.AttachTime
      description: The time stamp when the attachment initiated.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.DeleteOnTermination
      description: Indicates whether the volume is deleted on instance termination.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.Status
      description: The attachment state.
      type: string
    - contextPath: AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId
      description: The ID of the EBS volume.
      type: string
    - contextPath: AWS.EC2.Instances.ClientToken
      description: The idempotency token you provided when you launched the instance, if applicable.
      type: string
    - contextPath: AWS.EC2.Instances.EbsOptimized
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      type: boolean
    - contextPath: AWS.EC2.Instances.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: boolean
    - contextPath: AWS.EC2.Instances.Hypervisor
      description: The hypervisor type of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Arn
      description: The Amazon Resource Name (ARN) of the instance profile.
      type: string
    - contextPath: AWS.EC2.Instances.IamInstanceProfile.Id
      description: The ID of the instance profile.
      type: string
    - contextPath: AWS.EC2.Instances.InstanceLifecycle
      description: Indicates whether this is a Spot Instance or a Scheduled Instance.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuId
      description: The ID of the Elastic GPU.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationId
      description: The ID of the association.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationState
      description: The state of the association between the instance and the Elastic GPU.
      type: string
    - contextPath: AWS.EC2.Instances.ElasticGpuAssociations.ElasticGpuAssociationTime
      description: The time the Elastic GPU was associated with the instance.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.IpOwnerId
      description: The ID of the owner of the Elastic IP address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.PublicDnsName
      description: The public DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Association.PublicIp
      description: The public IP address or Elastic IP address bound to the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.AttachTime
      description: The time stamp when the attachment initiated.
      type: date
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.AttachmentId
      description: The ID of the network interface attachment.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.DeleteOnTermination
      description: Indicates whether the network interface is deleted when the instance is terminated.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.DeviceIndex
      description: The index of the device on the instance for the network interface attachment.
      type: number
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Attachment.Status
      description: The attachment state.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Description
      description: The description.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Groups.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Ipv6Addresses.Ipv6Address
      description: The IPv6 addresses associated with the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.MacAddress
      description: The MAC address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId
      description: The ID of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.OwnerId
      description: The ID of the AWS account that created the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateDnsName
      description: The private DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress
      description: The IPv4 address of the network interface within the subnet.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.IpOwnerId
      description: The ID of the owner of the Elastic IP address.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.PublicDnsName
      description: The public DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Association.PublicIp
      description: The public IP address or Elastic IP address bound to the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.Primary
      description: Indicates whether this IPv4 address is the primary private IP address of the network interface.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.PrivateDnsName
      description: The private IPv4 DNS name.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddresses.PrivateIpAddress
      description: The private IPv4 address of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SourceDestCheck
      description: Indicates whether to validate network traffic to or from this network interface.
      type: boolean
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.Status
      description: The status of the network interface.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.SubnetId
      description: The ID of the subnet.
      type: string
    - contextPath: AWS.EC2.Instances.NetworkInterfaces.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.EC2.Instances.RootDeviceName
      description: The device name of the root device volume (for example, /dev/sda1).
      type: string
    - contextPath: AWS.EC2.Instances.RootDeviceType
      description: The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
      type: string
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.SecurityGroups.GroupId
      description: The ID of the security group.
      type: string
    - contextPath: AWS.EC2.Instances.SourceDestCheck
      description: Specifies whether to enable an instance launched in a VPC to perform NAT.
      type: boolean
    - contextPath: AWS.EC2.Instances.SpotInstanceRequestId
      description: If the request is a Spot Instance request, the ID of the request.
      type: string
    - contextPath: AWS.EC2.Instances.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: string
    - contextPath: AWS.EC2.Instances.StateReason.Code
      description: The reason code for the state change.
      type: string
    - contextPath: AWS.EC2.Instances.StateReason.Message
      description: The message for the state change.
      type: string
    - contextPath: AWS.EC2.Instances.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Instances.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Instances.VirtualizationType
      description: The virtualization type of the instance.
      type: string
  - arguments:
    - description: One or more filters. See documentation for details & filter options.
      name: filter
    - description: One or more instance IDs. Sepreted by comma.
      name: instanceIds
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that runs every 15  seconds until a successful state is reached.
    name: aws-ec2-waiter-instance-running
  - arguments:
    - description: One or more filters. See documentation for details & filter options.
      name: filter
    - description: One or more instance IDs. Seprated by comma.
      name: instanceIds
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40.
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that runs every 15  seconds until a successful state is reached
    name: aws-ec2-waiter-instance-status-ok
  - arguments:
    - description: One or more filters. See documentation for details & filter options.
      name: filter
    - description: One or more instance IDs. Seprated by comma.
      name: instanceIds
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that runs every 15  seconds until a successful state is reached
    name: aws-ec2-waiter-instance-stopped
  - arguments:
    - description: One or more filters. See documentation for details & filter options.
      name: filter
    - description: One or more instance IDs. Seprated by comma.
      name: instanceIds
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that runs every 15  seconds until a successful state is reached
    name: aws-ec2-waiter-instance-terminated
  - arguments:
    - description: One or more filters. See documentation for available filters.
      name: filters
    - description: One or more image IDs. Sperated by comma.
      name: imageIds
    - description: Filters the images by the owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace | microsoft ). Omitting this option returns all images for which you have launch permissions, regardless of ownership.
      name: owners
    - description: Scopes the images by users with explicit launch permissions. Specify an AWS account ID, self (the sender of the request), or all (public AMIs).
      name: executableUsers
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that waits until image is avilable
    name: aws-ec2-waiter-image-available
  - arguments:
    - description: One or more filters. See documentation for available filters.
      name: filters
    - description: Returns the snapshots owned by the specified owner. Multiple owners can be specified. Sperated by comma.
      name: ownerIds
    - description: One or more snapshot IDs. Sperated by comma.
      name: snapshotIds
    - description: One or more AWS accounts IDs that can create volumes from the snapshot.
      name: restorableByUserIds
    - description: The amount of time in seconds to wait between attempts. Default 15
      name: waiterDelay
    - description: The maximum number of attempts to be made. Default 40
      name: waiterMaxAttempts
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: A waiter function that waits until the snapshot is complate
    name: aws-ec2-waiter-snapshot_completed
  - arguments:
    - description: One or more filters. See documentation for available filters.
      name: filters
    - description: Filters the images by the owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace | microsoft ). Omitting this option returns all images for which you have launch permissions, regardless of ownership.
      name: owners
    - description: Scopes the images by users with explicit launch permissions. Specify an AWS account ID, self (the sender of the request), or all (public AMIs).
      name: executableUsers
    - description: The AWS Region, if not specified the default region will be used
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Get The latest AMI
    name: aws-ec2-get-latest-ami
    outputs:
    - contextPath: AWS.EC2.Images.Architecture
      description: The architecture of the image.
      type: string
    - contextPath: AWS.EC2.Images.CreationDate
      description: The date and time the image was created.
      type: date
    - contextPath: AWS.EC2.Images.ImageId
      description: The ID of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.ImageLocation
      description: The location of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.ImageType
      description: The type of image.
      type: string
    - contextPath: AWS.EC2.Images.Public
      description: Indicates whether the image has public launch permissions. The value is true if this image has public launch permissions or false if it has only implicit and explicit launch permissions.
      type: boolean
    - contextPath: AWS.EC2.Images.KernelId
      description: The kernel associated with the image, if any. Only applicable for machine images.
      type: string
    - contextPath: AWS.EC2.Images.OwnerId
      description: The AWS account ID of the image owner.
      type: string
    - contextPath: AWS.EC2.Images.Platform
      description: The value is Windows for Windows AMIs; otherwise blank.
      type: string
    - contextPath: AWS.EC2.Images.ProductCodes.ProductCodeId
      description: The product code.
      type: string
    - contextPath: AWS.EC2.Images.ProductCodes.ProductCodeType
      description: The type of product code.
      type: string
    - contextPath: AWS.EC2.Images.RamdiskId
      description: The RAM disk associated with the image, if any. Only applicable for machine images.
      type: string
    - contextPath: AWS.EC2.Images.State
      description: The current state of the AMI. If the state is available , the image is successfully registered and can be used to launch an instance.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.DeviceName
      description: The device name (for example, /dev/sdh or xvdh ).
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.VirtualName
      description: The virtual device name (ephemeral N).
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.Encrypted
      description: Indicates whether the EBS volume is encrypted.
      type: boolean
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.DeleteOnTermination
      description: Indicates whether the EBS volume is deleted on instance termination.
      type: boolean
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.Iops
      description: The number of I/O operations per second (IOPS) that the volume supports.
      type: number
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.KmsKeyId
      description: Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.SnapshotId
      description: The ID of the snapshot.
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.VolumeSize
      description: The size of the volume, in GiB.
      type: number
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.Ebs.VolumeType
      description: The volume type
      type: string
    - contextPath: AWS.EC2.Images.BlockDeviceMappings.NoDevice
      description: Suppresses the specified device included in the block device mapping of the AMI.
      type: string
    - contextPath: AWS.EC2.Images.Description
      description: The description of the AMI that was provided during image creation.
      type: string
    - contextPath: AWS.EC2.Images.EnaSupport
      description: Specifies whether enhanced networking with ENA is enabled.
      type: boolean
    - contextPath: AWS.EC2.Images.Hypervisor
      description: The hypervisor type of the image.
      type: string
    - contextPath: AWS.EC2.Images.ImageOwnerAlias
      description: The AWS account alias (for example, amazon , self ) or the AWS account ID of the AMI owner.
      type: string
    - contextPath: AWS.EC2.Images.Name
      description: The name of the AMI that was provided during image creation.
      type: string
    - contextPath: AWS.EC2.Images.RootDeviceName
      description: The device name of the root device volume (for example, /dev/sda1).
      type: string
    - contextPath: AWS.EC2.Images.RootDeviceType
      description: The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.
      type: string
    - contextPath: AWS.EC2.Images.SriovNetSupport
      description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
      type: string
    - contextPath: AWS.EC2.Images.StateReason.Code
      description: The reason code for the state change.
      type: string
    - contextPath: AWS.EC2.Images.StateReason.Message
      description: The message for the state change.
      type: string
    - contextPath: AWS.EC2.Images.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Images.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Images.VirtualizationType
      description: The type of virtualization of the AMI.
      type: string
  - arguments:
    - description: The name of the security group.
      name: groupName
      required: true
    - description: A description for the security group.
      name: description
      required: true
    - description: The ID of the VPC.
      name: vpcId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates a security group.
    execution: true
    name: aws-ec2-create-security-group
    outputs:
    - contextPath: AWS.EC2.SecurityGroups.GroupName
      description: The name of the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.Description
      description: A description for the security group.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.EC2.SecurityGroups.GroupId
      description: The ID of the security group.
      type: string
  - arguments:
    - description: The ID of the security group. Required for a nondefault VPC.
      name: groupId
    - description: default VPC only.  The name of the security group. You can specify either the security group name or the security group ID.
      name: groupName
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Deletes a security group.
    execution: true
    name: aws-ec2-delete-security-group
  - arguments:
    - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
      name: groupId
      required: true
    - description: The start of port range for the TCP and UDP protocols.
      name: fromPort
    - description: The end of port range for the TCP and UDP protocols.
      name: toPort
    - description: The CIDR IPv4 address range.
      name: cidrIp
    - description: The IP protocol name (tcp , udp , icmp) or number.  Use -1 to specify all protocols.
      name: ipProtocol
    - description: The name of the source security group. The source security group must be in the same VPC.
      name: sourceSecurityGroupName
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsfromPort
    - description: The IP protocol name (tcp, udp, icmp, icmpv6) or number.
      name: IpPermissionsIpProtocol
    - description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsToPort
    - description: The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
      name: IpRangesCidrIp
    - description: |-
        A description for the security group rule that references this IPv4 address range.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: IpRangesDesc
    - description: The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
      name: Ipv6RangesCidrIp
    - description: |-
        A description for the security group rule that references this IPv6 address range.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: Ipv6RangesDesc
    - description: The ID of the prefix.
      name: PrefixListId
    - description: |-
        A description for the security group rule that references this prefix list ID.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: PrefixListIdDesc
    - description: |-
        A description for the security group rule that references this user ID group pair.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: UserIdGroupPairsDescription
    - description: The ID of the security group.
      name: UserIdGroupPairsGroupId
    - description: The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
      name: UserIdGroupPairsGroupName
    - description: The status of a VPC peering connection, if applicable.
      name: UserIdGroupPairsPeeringStatus
    - description: The ID of an AWS account.
      name: UserIdGroupPairsUserId
    - description: The ID of the VPC for the referenced security group, if applicable.
      name: UserIdGroupPairsVpcId
    - description: The ID of the VPC peering connection, if applicable.
      name: UserIdGroupPairsVpcPeeringConnectionId
    - description: 'Full IpPermissions argument as a string to more easily copy rules (e.x. """[{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}]""").'
      name: IpPermissionsFull
    description: Adds ingress rule to a security group.
    execution: true
    name: aws-ec2-authorize-security-group-ingress-rule
  - arguments:
    - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
      name: groupId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsfromPort
    - description: The IP protocol name (tcp, udp, icmp, icmpv6) or number.
      name: IpPermissionsIpProtocol
    - description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsToPort
    - description: The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
      name: IpRangesCidrIp
    - description: |-
        A description for the security group rule that references this IPv4 address range.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: IpRangesDesc
    - description: The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
      name: Ipv6RangesCidrIp
    - description: |-
        A description for the security group rule that references this IPv6 address range.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: Ipv6RangesDesc
    - description: The ID of the prefix.
      name: PrefixListId
    - description: |-
        A description for the security group rule that references this prefix list ID.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: PrefixListIdDesc
    - description: |-
        A description for the security group rule that references this user ID group pair.

        Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
      name: UserIdGroupPairsDescription
    - description: The ID of the security group.
      name: UserIdGroupPairsGroupId
    - description: The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
      name: UserIdGroupPairsGroupName
    - description: The status of a VPC peering connection, if applicable.
      name: UserIdGroupPairsPeeringStatus
    - description: The ID of an AWS account.
      name: UserIdGroupPairsUserId
    - description: The ID of the VPC for the referenced security group, if applicable.
      name: UserIdGroupPairsVpcId
    - description: The ID of the VPC peering connection, if applicable.
      name: UserIdGroupPairsVpcPeeringConnectionId
    - description: 'Full IpPermissions argument as a string to more easily copy rules (e.x. """[{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}]""").'
      name: IpPermissionsFull
    description: Adds egress rule to a security group.
    execution: true
    name: aws-ec2-authorize-security-group-egress-rule
  - arguments:
    - description: The ID of the security group.
      name: groupId
      required: true
    - description: The start of port range for the TCP and UDP protocols.
      name: fromPort
    - description: The end of port range for the TCP and UDP protocols.
      name: toPort
    - description: The CIDR IPv4 address range.
      name: cidrIp
    - description: The CIDR IPv6 address range.
      name: cidrIpv6
    - description: The IP protocol name (tcp , udp , icmp) or number. Use -1 to specify all protocols.
      name: ipProtocol
    - description: The name of the source security group. The source security group must be in the same VPC.
      name: sourceSecurityGroupName
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: 'Full IpPermissions argument as a string to more easily target rules (e.x. """[{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}]""").'
      name: IpPermissionsFull
    description: Removes egress rule from a security group. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.
    execution: true
    name: aws-ec2-revoke-security-group-ingress-rule
  - arguments:
    - description: The name of the new AMI in the destination region.
      name: name
      required: true
    - description: The ID of the AMI to copy.
      name: sourceImageId
      required: true
    - description: The name of the region that contains the AMI to copy.
      name: sourceRegion
      required: true
    - description: A description for the new AMI in the destination region.
      name: description
    - auto: PREDEFINED
      description: Specifies whether the destination snapshots of the copied image should be encrypted. The default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with KmsKeyId .
      name: encrypted
      predefined:
      - 'True'
      - 'False'
    - description: An identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.
      name: kmsKeyId
    - description: nique, case-sensitive identifier you provide to ensure idempotency of the request.
      name: clientToken
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Initiates the copy of an AMI from the specified source region to the current region.
    execution: true
    name: aws-ec2-copy-image
    outputs:
    - contextPath: AWS.EC2.Images.ImageId
      description: The ID of the new AMI.
      type: string
    - contextPath: AWS.EC2.Images.Region
      description: The Region where the image is located.
      type: string
  - arguments:
    - description: The ID of the EBS snapshot to copy.
      name: sourceSnapshotId
      required: true
    - description: The ID of the region that contains the snapshot to be copied.
      name: sourceRegion
      required: true
    - description: A description for the EBS snapshot.
      name: description
    - description: ' Specifies whether the destination snapshot should be encrypted. You can encrypt a copy of an unencrypted snapshot using this flag, but you cannot use it to create an unencrypted copy from an encrypted snapshot. Your default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with KmsKeyId .'
      name: encrypted
    - description: An identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.
      name: kmsKeyId
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the snapshot within the same region or from one region to another.
    execution: true
    name: aws-ec2-copy-snapshot
    outputs:
    - contextPath: AWS.EC2.Snapshots.SnapshotId
      description: The ID of the new snapshot.
      type: string
    - contextPath: AWS.EC2.Snapshots.Region
      description: The Region where the snapshot is located.
      type: string
  - arguments:
    - description: ne or more filters.
      name: filters
    - description: One or more Reserved Instance IDs. Separated by comma.
      name: reservedInstancesIds
    - auto: PREDEFINED
      description: Describes whether the Reserved Instance is Standard or Convertible.
      name: offeringClass
      predefined:
      - standard
      - convertible
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Describes one or more of the Reserved Instances that you purchased.
    name: aws-ec2-describe-reserved-instances
    outputs:
    - contextPath: AWS.EC2.ReservedInstances.AvailabilityZone
      description: The Availability Zone in which the Reserved Instance can be used.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Duration
      description: The duration of the Reserved Instance, in seconds.
      type: number
    - contextPath: AWS.EC2.ReservedInstances.End
      description: The time when the Reserved Instance expires.
      type: date
    - contextPath: AWS.EC2.ReservedInstances.FixedPrice
      description: The purchase price of the Reserved Instance.
      type: number
    - contextPath: AWS.EC2.ReservedInstances.InstanceCount
      description: The number of reservations purchased.
      type: number
    - contextPath: AWS.EC2.ReservedInstances.InstanceType
      description: The instance type on which the Reserved Instance can be used.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.ProductDescription
      description: The Reserved Instance product platform description.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.ReservedInstancesId
      description: The ID of the Reserved Instance.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Start
      description: The date and time the Reserved Instance started.
      type: date
    - contextPath: AWS.EC2.ReservedInstances.State
      description: The state of the Reserved Instance purchase.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.UsagePrice
      description: The usage price of the Reserved Instance, per hour.
      type: number
    - contextPath: AWS.EC2.ReservedInstances.CurrencyCode
      description: The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is USD .
      type: string
    - contextPath: AWS.EC2.ReservedInstances.InstanceTenancy
      description: The tenancy of the instance.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.OfferingClass
      description: The offering class of the Reserved Instance.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.OfferingType
      description: The Reserved Instance offering type.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.RecurringCharges.Amount
      description: The amount of the recurring charge.
      type: number
    - contextPath: AWS.EC2.ReservedInstances.RecurringCharges.Frequency
      description: he frequency of the recurring charge.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Scope
      description: The scope of the Reserved Instance.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.ReservedInstances.Region
      description: The AWS region where the reserved instance is located.
      type: string
  - arguments:
    - description: One or more instance IDs. Separated by comma.
      name: instancesIds
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Enables detailed monitoring for a running instance.
    execution: true
    name: aws-ec2-monitor-instances
    outputs:
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: string
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      type: string
  - arguments:
    - description: One or more instance IDs. Separated by comma.
      name: instancesIds
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Disables detailed monitoring for a running instance.
    execution: true
    name: aws-ec2-unmonitor-instances
    outputs:
    - contextPath: AWS.EC2.Instances.InstanceId
      description: The ID of the instance.
      type: Unknown
    - contextPath: AWS.EC2.Instances.Monitoring.State
      description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      type: Unknown
  - arguments:
    - description: One or more instance IDs. Separated by comma.
      name: instanceIds
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Requests a reboot of one or more instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored. If an instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot.
    execution: true
    name: aws-ec2-reboot-instances
  - arguments:
    - description: The ID of the Windows instance.
      name: instanceId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Retrieves the encrypted administrator password for a running Windows instance.
    execution: true
    name: aws-ec2-get-password-data
    outputs:
    - contextPath: AWS.EC2.Instances.PasswordData.PasswordData
      description: The password of the instance. Returns an empty string if the password is not available.
      type: string
    - contextPath: AWS.EC2.Instances.PasswordData.Timestamp
      description: The time the data was last updated.
      type: date
  - arguments:
    - description: The ID of the network interface.
      name: networkInterfaceId
      required: true
    - description: Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.
      name: groups
    - auto: PREDEFINED
      description: Indicates whether source/destination checking is enabled. A value of true means checking is enabled, and false means checking is disabled. This value must be false for a NAT instance to perform NAT.
      name: sourceDestCheck
      predefined:
      - 'True'
      - 'False'
    - description: A description for the network interface.
      name: description
    - description: The ID of the network interface attachment. Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.
      name: attachmentId
    - auto: PREDEFINED
      description: Indicates whether the network interface is deleted when the instance is terminated. Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.
      name: deleteOnTermination
      predefined:
      - 'True'
      - 'False'
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Modifies the specified network interface attribute. You can specify only one attribute at a time.
    execution: true
    name: aws-ec2-modify-network-interface-attribute
  - arguments:
    - description: The ID of the instance.
      name: instanceId
      required: true
    - auto: PREDEFINED
      description: Specifies whether source/destination checking is enabled. A value of true means that checking is enabled, and false means that checking is disabled. This value must be false for a NAT instance to perform NAT.
      name: sourceDestCheck
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: If the value is true , you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.
      name: disableApiTermination
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
      name: ebsOptimized
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: Set to true to enable enhanced networking with ENA for the instance.  This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.
      name: enaSupport
      predefined:
      - 'True'
      - 'False'
    - description: Changes the instance type to the specified value.
      name: instanceType
    - auto: PREDEFINED
      description: Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)
      name: instanceInitiatedShutdownBehavior
      predefined:
      - Stop
      - Terminate
    - description: '[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it''s just the default security group for the VPC. You must specify the security group ID, not the security group name.'
      name: groups
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Modifies the specified attribute of the specified instance. You can specify only one attribute at a time. Using this action to change the security groups associated with an elastic network interface (ENI) attached to an instance in a VPC can result in an error if the instance has more than one ENI. To change the security groups associated with an ENI attached to an instance that has multiple ENIs, we recommend that you use the ModifyNetworkInterfaceAttribute action.
    execution: true
    name: aws-ec2-modify-instance-attribute
  - arguments:
    - auto: PREDEFINED
      description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: DryRun
      predefined:
      - 'True'
      - 'False'
    - description: The ID of the VPC.
      name: VpcId
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.
    name: aws-ec2-create-network-acl
    outputs:
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Associations.NetworkAclAssociationId
      description: The ID of the association between a network ACL and a subnet.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Associations.NetworkAclId
      description: The ID of the network ACL.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Associations.SubnetId
      description: The ID of the subnet.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.CidrBlock
      description: The IPv4 network range to allow or deny, in CIDR notation.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.Egress
      description: Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
      type: Boolean
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.IcmpTypeCode.Code
      description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
      type: Number
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.IcmpTypeCode.Type
      description: The ICMP type. A value of -1 means all types.
      type: Number
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.Ipv6CidrBlock
      description: The IPv6 network range to allow or deny, in CIDR notation.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.PortRange.From
      description: The first port in the range.
      type: Number
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.PortRange.To
      description: The last port in the range.
      type: Number
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.Protocol
      description: The protocol number. A value of "-1" means all protocols.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.RuleAction
      description: Indicates whether to allow or deny the traffic that matches the rule.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Entries.RuleNumber
      description: The rule number for the entry. ACL entries are processed in ascending order by rule number.
      type: Number
    - contextPath: AWS.EC2.VpcId.NetworkAcl.NetworkAclId
      description: The ID of the network ACL.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Tags.Key
      description: The key of the tag.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.VpcId
      description: The ID of the VPC for the network ACL.
      type: String
    - contextPath: AWS.EC2.VpcId.NetworkAcl.OwnerId
      description: The ID of the AWS account that owns the network ACL.
      type: String
  - arguments:
    - description: The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).
      name: CidrBlock
    - auto: PREDEFINED
      description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: DryRun
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
      name: Egress
      predefined:
      - 'True'
      - 'False'
      required: true
    - description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
      name: Code
    - description: The ICMP type. A value of -1 means all types.
      name: Type
    - description: The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64 ).
      name: Ipv6CidrBlock
    - description: The ID of the network ACL.
      name: NetworkAclId
      required: true
    - description: The first port in the range.
      name: From
    - description: The last port in the range.
      name: To
    - description: The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
      name: Protocol
      required: true
    - description: Indicates whether to allow or deny the traffic that matches the rule.
      name: RuleAction
      required: true
    - description: The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.
      name: RuleNumber
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Creates an entry (a rule) in a network ACL with the specified rule number.
    name: aws-ec2-create-network-acl-entry
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - auto: PREDEFINED
      description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: DryRun
      predefined:
      - 'True'
      - 'False'
    - description: Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
      name: ClientToken
    - description: Indicates how to allocate the target capacity across the Spot pools specified by the Spot Fleet request.
      name: SpotAllocationStrategy
    - description: The behavior when a Spot Instance is interrupted.
      name: InstanceInterruptionBehavior
    - description: The number of Spot pools across which to allocate your target Spot capacity.
      name: InstancePoolsToUseCount
    - auto: PREDEFINED
      description: Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.
      name: SpotSingleInstanceType
      predefined:
      - 'True'
      - 'False'
    - description: The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
      name: SpotMinTargetCapacity
    - description: The order of the launch template overrides to use in fulfilling On-Demand capacity.
      name: OnDemandAllocationStrategy
    - description: Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.
      name: OnDemandSingleInstanceType
    - description: Indicates that the fleet launches all On-Demand Instances into a single Availability Zone.
      name: OnDemandSingleAvailabilityZone
    - description: The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
      name: OnDemandMinTargetCapacity
    - description: ' Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.'
      name: ExcessCapacityTerminationPolicy
    - description: The ID of the launch template.
      name: LaunchTemplateId
      required: true
    - description: The name of the launch template.
      name: LaunchTemplateName
      required: true
    - description: The version number of the launch template.
      name: Version
      required: true
    - description: The instance type.
      name: OverrideInstanceType
    - description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      name: OverrideMaxPrice
    - description: The ID of the subnet in which to launch the instances.
      name: OverrideSubnetId
    - description: The Availability Zone in which to launch the instances.
      name: OverrideAvailabilityZone
    - description: The number of units provided by the specified instance type.
      name: OverrideWeightedCapacity
    - description: The priority for the launch template override.
      name: OverridePriority
    - description: The number of units to request, filled using DefaultTargetCapacityType .
      name: TotalTargetCapacity
      required: true
    - description: The number of On-Demand units to request.
      name: OnDemandTargetCapacity
      required: true
    - description: The number of Spot units to request.
      name: SpotTargetCapacity
      required: true
    - description: The default TotalTargetCapacity, which is either Spot or On-Demand .
      name: DefaultTargetCapacityType
      required: true
    - description: The type of the request.
      name: Type
    - description: The start date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).
      name: ValidFrom
    - description: The end date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).
      name: ValidUntil
    - description: Indicates whether EC2 Fleet should replace unhealthy instances.
      name: ReplaceUnhealthyInstances
    - description: The tags to apply to the resource.
      name: Tags
    description: Launches an EC2 Fleet.
    name: aws-ec2-create-fleet
    outputs:
    - contextPath: AWS.EC2.Fleet.FleetId
      description: The ID of the EC2 Fleet.
      type: String
    - contextPath: AWS.EC2.Fleet.Errors
      description: Information about the instances that could not be launched by the fleet. Valid only when Type is set to instant.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateId
      description: The ID of the launch template. You must specify either a template ID or a template name.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateName
      description: The name of the launch template. You must specify either a template name or a template ID.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.LaunchTemplateSpecification.Version
      description: The version number of the launch template. You must specify a version number.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.MaxPrice
      description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.SubnetId
      description: The ID of the subnet in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.AvailabilityZone
      description: The Availability Zone in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.WeightedCapacity
      description: The number of units provided by the specified instance type.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.Priority
      description: The priority for the launch template override.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Overrides.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.Lifecycle
      description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.ErrorCode
      description: 'The error code that indicates why the instance could not be launched. '
      type: String
    - contextPath: AWS.EC2.Fleet.LaunchTemplateAndOverrides.ErrorMessage
      description: The error message that describes why the instance could not be launched.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateId
      description: The ID of the launch template. You must specify either a template ID or a template name.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateName
      description: The name of the launch template. You must specify either a template name or a template ID.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.Version
      description: The version number of the launch template. You must specify a version number.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.MaxPrice
      description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.SubnetId
      description: The ID of the subnet in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.AvailabilityZone
      description: The Availability Zone in which to launch the instances.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.WeightedCapacity
      description: The number of units provided by the specified instance type.
      type: Number
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.Priority
      description: The priority for the launch template override.
      type: Number
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.Lifecycle
      description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.InstanceIds
      description: The IDs of the instances.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Fleet.Instances.LaunchTemplateAndOverrides.Overrides.Platform
      description: The value is Windows for Windows instances; otherwise blank.
      type: String
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: DryRun
    - description: The IDs of the EC2 Fleets.
      name: FleetIds
      required: true
    - description: Indicates whether to terminate instances for an EC2 Fleet if it is deleted successfully.
      name: TerminateInstances
      required: true
    description: Deletes the specified EC2 Fleet.
    name: aws-ec2-delete-fleet
    outputs:
    - contextPath: AWS.EC2.DeletedFleets.SuccessfulFleetDeletions.CurrentFleetState
      description: The current state of the EC2 Fleet.
      type: String
    - contextPath: AWS.EC2.DeletedFleets.SuccessfulFleetDeletions.PreviousFleetState
      description: The previous state of the EC2 Fleet.
      type: String
    - contextPath: AWS.EC2.DeletedFleets.SuccessfulFleetDeletions.FleetId
      description: The ID of the EC2 Fleet.
      type: String
    - contextPath: AWS.EC2.DeletedFleets.UnsuccessfulFleetDeletions.Error.Code
      description: The error code.
      type: String
    - contextPath: AWS.EC2.DeletedFleets.UnsuccessfulFleetDeletions.Error.Message
      description: The description for the error code.
      type: String
    - contextPath: AWS.EC2.DeletedFleets.UnsuccessfulFleetDeletions.FleetId
      description: The ID of the EC2 Fleet.
      type: String
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: One or more filters.
      name: filters
    - description: The ID of the EC2 Fleets.
      name: FleetIds
    - description: The maximum number of results to return in a single call. Specify a value between 1 and 1000.
      name: MaxResults
    - description: The token for the next set of results.
      name: NextToken
    description: Describes one or more of your EC2 Fleets.
    name: aws-ec2-describe-fleets
    outputs:
    - contextPath: AWS.EC2.Fleet.NextToken
      description: The token for the next set of results.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.ActivityStatus
      description: 'The progress of the EC2 Fleet. If there is an error, the status is error . '
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.CreateTime
      description: The creation date and time of the EC2 Fleet.
      type: date
    - contextPath: AWS.EC2.Fleet.Fleets.FleetId
      description: The ID of the EC2 Fleet.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.FleetState
      description: The state of the EC2 Fleet.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.ClientToken
      description: Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.ExcessCapacityTerminationPolicy
      description: Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.FulfilledCapacity
      description: The number of units fulfilled by this request compared to the set target capacity.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.FulfilledOnDemandCapacity
      description: The number of units fulfilled by this request compared to the set target On-Demand capacity.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.LaunchTemplateId
      description: The ID of the launch template. You must specify either a template ID or a template name.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.LaunchTemplateName
      description: The name of the launch template. You must specify either a template name or a template ID.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Version
      description: The version number of the launch template. You must specify a version number.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.MaxPrice
      description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.SubnetId
      description: The ID of the subnet in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.AvailabilityZone
      description: The Availability Zone in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.WeightedCapacity
      description: The number of units provided by the specified instance type.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.Priority
      description: The priority for the launch template override.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.LaunchTemplateConfigs.LaunchTemplateSpecification.Overrides.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.TargetCapacitySpecification.TotalTargetCapacity
      description: The number of units to request, filled using DefaultTargetCapacityType .
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.TargetCapacitySpecification.OnDemandTargetCapacity
      description: The number of On-Demand units to request.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.TargetCapacitySpecification.SpotTargetCapacity
      description: The maximum number of Spot units to launch.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.TargetCapacitySpecification.DefaultTargetCapacityType
      description: The default TotalTargetCapacity , which is either Spot or On-Demand.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.TerminateInstancesWithExpiration
      description: Indicates whether running instances should be terminated when the EC2 Fleet expires.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.Type
      description: The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.ValidFrom
      description: The start date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).
      type: date
    - contextPath: AWS.EC2.Fleet.Fleets.ValidUntil
      description: The end date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).
      type: date
    - contextPath: AWS.EC2.Fleet.Fleets.ReplaceUnhealthyInstances
      description: Indicates whether EC2 Fleet should replace unhealthy instances.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.AllocationStrategy
      description: Indicates how to allocate the target capacity across the Spot pools specified by the Spot Fleet request.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.InstanceInterruptionBehavior
      description: The behavior when a Spot Instance is interrupted. The default is terminate.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.InstancePoolsToUseCount
      description: The number of Spot pools across which to allocate your target Spot capacity.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.SingleInstanceType
      description: Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.SingleAvailabilityZone
      description: Indicates that the fleet launches all Spot Instances into a single Availability Zone.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.SpotOptions.MinTargetCapacity
      description: The minimum target capacity for Spot Instances in the fleet.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.OnDemandOptions.AllocationStrategy
      description: The order of the launch template overrides to use in fulfilling On-Demand capacity.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.OnDemandOptions.SingleInstanceType
      description: Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.OnDemandOptions.SingleAvailabilityZone
      description: Indicates that the fleet launches all On-Demand Instances into a single Availability Zone.
      type: boolean
    - contextPath: AWS.EC2.Fleet.Fleets.OnDemandOptions.MinTargetCapacity
      description: 'The minimum target capacity for On-Demand Instances in the fleet. '
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.Tags.Key
      description: The key of the tag.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Tags.Value
      description: The value of the tag.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateId
      description: The ID of the launch template. You must specify either a template ID or a template name.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateName
      description: The name of the launch template. You must specify either a template name or a template ID.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.LaunchTemplateAndOverrides.LaunchTemplateSpecification.Version
      description: The version number of the launch template. You must specify a version number.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.MaxPrice
      description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.SubnetId
      description: The ID of the subnet in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.AvailabilityZone
      description: The Availability Zone in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.WeightedCapacity
      description: The number of units provided by the specified instance type.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.Priority
      description: The priority for the launch template override.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Overrides.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.Lifecycle
      description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.ErrorCode
      description: The error code that indicates why the instance could not be launched.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Errors.ErrorMessage
      description: The error message that describes why the instance could not be launched.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateId
      description: The ID of the launch template. You must specify either a template ID or a template name.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.LaunchTemplateName
      description: The name of the launch template. You must specify either a template name or a template ID.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.LaunchTemplateSpecification.Version
      description: The version number of the launch template. You must specify a version number.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.MaxPrice
      description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.SubnetId
      description: The ID of the subnet in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.AvailabilityZone
      description: The Availability Zone in which to launch the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.WeightedCapacity
      description: The number of units provided by the specified instance type.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.Priority
      description: The priority for the launch template override.
      type: number
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.LaunchTemplateAndOverrides.Overrides.Placement.GroupName
      description: The name of the placement group the instance is in.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.Lifecycle
      description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.InstanceIds
      description: The IDs of the instances.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.InstanceType
      description: The instance type.
      type: string
    - contextPath: AWS.EC2.Fleet.Fleets.Instances.Platform
      description: The value is Windows for Windows instances; otherwise blank.
      type: string
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: A filter name and value pair that is used to return a more specific list of results from a describe operation.
      name: filters
    - description: The ID of the EC2 Fleet.
      name: FleetId
      required: true
    - description: The maximum number of results to return in a single call. Specify a value between 1 and 1000.
      name: MaxResults
    - description: The token for the next set of results.
      name: NextToken
    description: Describes the running instances for the specified EC2 Fleet.
    name: aws-ec2-describe-fleet-instances
    outputs:
    - contextPath: AWS.EC2.Fleet.ActiveInstances.InstanceId
      description: The ID of the instance.
      type: String
    - contextPath: AWS.EC2.Fleet.ActiveInstances.InstanceType
      description: The instance type.
      type: String
    - contextPath: AWS.EC2.Fleet.ActiveInstances.SpotInstanceRequestId
      description: The ID of the Spot Instance request.
      type: String
    - contextPath: AWS.EC2.Fleet.ActiveInstances.InstanceHealth
      description: The health status of the instance.
      type: String
    - contextPath: AWS.EC2.Fleet.NextToken
      description: The token for the next set of results.
      type: String
    - contextPath: AWS.EC2.Fleet.FleetId
      description: The ID of the EC2 Fleet.
      type: String
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the EC2 Fleet.
      name: FleetId
      required: true
    - description: The number of units to request, filled using DefaultTargetCapacityType.
      name: TotalTargetCapacity
      required: true
    - description: The number of On-Demand units to request.
      name: OnDemandTargetCapacity
    - description: The number of Spot units to request.
      name: SpotTargetCapacity
    - description: The default TotalTargetCapacity, which is either Spot or On-Demand.
      name: DefaultTargetCapacityType
    description: Modifies the specified EC2 Fleet.
    name: aws-ec2-modify-fleet
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
      name: ClientToken
    - description: A name for the launch template.
      name: LaunchTemplateName
      required: true
    - description: A description for the first version of the launch template.
      name: VersionDescription
    - description: The ID of the kernel.
      name: KernelId
    - auto: PREDEFINED
      description: Indicates whether the instance is optimized for Amazon EBS I/O.
      name: EbsOptimized
      predefined:
      - 'True'
      - 'False'
    - description: The Amazon Resource Name (ARN) of the instance profile.
      name: iamInstanceProfileArn
    - description: The name of the instance profile.
      name: iamInstanceProfileName
    - description: The device name (for example, /dev/sdh or xvdh).
      name: deviceName
    - description: The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0.
      name: VirtualName
    - auto: PREDEFINED
      description: Indicates whether the EBS volume is encrypted.
      name: ebsEncrypted
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: Indicates whether the EBS volume is deleted on instance termination.
      name: ebsDeleteOnTermination
      predefined:
      - 'True'
      - 'False'
    - description: The number of I/O operations per second (IOPS) that the volume supports.
      name: ebsIops
    - description: The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.
      name: ebsKmsKeyId
    - description: The ID of the snapshot.
      name: ebsSnapshotId
    - description: The size of the volume, in GiB.
      name: ebsVolumeSize
    - description: The volume type.
      name: ebsVolumeType
    - description: Suppresses the specified device included in the block device mapping of the AMI.
      name: NoDevice
    - auto: PREDEFINED
      description: Associates a public IPv4 address with eth0 for a new network interface.
      name: AssociatePublicIpAddress
      predefined:
      - 'True'
      - 'False'
    - auto: PREDEFINED
      description: Indicates whether the network interface is deleted when the instance is terminated.
      name: NetworkInterfacesDeleteOnTermination
      predefined:
      - 'True'
      - 'False'
    - description: A description for the network interface.
      name: NetworkInterfacesDescription
    - description: The device index for the network interface attachment.
      name: NetworkInterfacesDeviceIndex
    - description: The IDs of one or more security groups.
      name: NetworkInterfaceGroups
    - description: 'The number of IPv6 addresses to assign to a network interface. '
      name: Ipv6AddressCount
    - description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.
      name: Ipv6Addresses
    - description: The ID of the network interface.
      name: NetworkInterfaceId
    - description: The primary private IPv4 address of the network interface.
      name: PrivateIpAddress
    - description: The ID of the subnet for the network interface.
      name: SubnetId
    - description: The ID of the AMI, which you can get by using DescribeImages.
      name: ImageId
    - description: The instance type.
      name: InstanceType
    - description: The name of the key pair.
      name: KeyName
    - auto: PREDEFINED
      description: Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.
      name: Monitoring
      predefined:
      - 'True'
      - 'False'
    - description: The Availability Zone for the instance.
      name: AvailabilityZone
    - description: The affinity setting for an instance on a Dedicated Host.
      name: PlacementAffinity
    - description: The name of the placement group for the instance.
      name: AvailabilityZoneGroupName
    - description: The ID of the Dedicated Host for the instance.
      name: PlacementHostId
    - description: The tenancy of the instance (if the instance is running in a VPC).
      name: PlacementTenancy
    - description: Reserved for future use.
      name: PlacementSpreadDomain
    - description: The ID of the RAM disk.
      name: RamDiskId
    - auto: PREDEFINED
      description: If set to true , you can't terminate the instance using the Amazon EC2 console, CLI, or API.
      name: DisableApiTermination
      predefined:
      - 'True'
      - 'False'
    - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
      name: InstanceInitiatedShutdownBehavior
    - description: The Base64-encoded user data to make available to the instance.
      name: UserData
    - description: The tags to apply to the resource.
      name: Tags
    - description: The type of Elastic Graphics accelerator.
      name: ElasticGpuSpecificationsType
    - description: The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.
      name: ElasticInferenceAcceleratorsType
    - description: One or more security group IDs.
      name: securityGroupIds
    - description: One or more security group names.
      name: securityGroups
    - description: The market type.
      name: MarketType
    - description: The Spot Instance request type.
      name: SpotInstanceType
    - description: The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
      name: BlockDurationMinutes
    - description: The end date of the request.
      name: SpotValidUntil
    - description: The behavior when a Spot Instance is interrupted. The default is terminate.
      name: SpotInstanceInterruptionBehavior
    - description: The maximum hourly price you're willing to pay for the Spot Instances.
      name: SpotMaxPrice
    description: Creates a launch template. A launch template contains the parameters to launch an instance.
    name: aws-ec2-create-launch-template
    outputs:
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.LaunchTemplateId
      description: The ID of the launch template.
      type: String
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.LaunchTemplateName
      description: The name of the launch template.
      type: String
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.CreateTime
      description: The time launch template was created.
      type: Date
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.CreatedBy
      description: The principal that created the launch template.
      type: String
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.DefaultVersionNumber
      description: The version number of the default version of the launch template.
      type: Number
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.LatestVersionNumber
      description: The version number of the latest version of the launch template.
      type: Number
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.Tags.Key
      description: The key of the tag.
      type: String
    - contextPath: AWS.EC2.LaunchTemplates.LaunchTemplate.Tags.Value
      description: The value of the tag.
      type: String
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the launch template.
      name: LaunchTemplateId
    - description: The name of the launch template.
      name: LaunchTemplateName
    description: Deletes a launch template. Deleting a launch template deletes all of its versions.
    name: aws-ec2-delete-launch-template
    outputs:
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.LaunchTemplateId
      description: The ID of the launch template.
      type: String
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.LaunchTemplateName
      description: The name of the launch template.
      type: String
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.CreateTime
      description: The time launch template was created.
      type: Date
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.CreatedBy
      description: The principal that created the launch template.
      type: String
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.DefaultVersionNumber
      description: The version number of the default version of the launch template.
      type: Number
    - contextPath: AWS.EC2.DeletedLaunchTemplates.LaunchTemplate.LatestVersionNumber
      description: The version number of the latest version of the launch template.
      type: Number
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The name of the attribute to modify. The valid values are description, launchPermission, and productCodes.
      name: Attribute
    - description: A new description for the AMI.
      name: Description
    - description: The ID of the AMI.
      name: ImageId
      required: true
    - description: The name of the group.
      name: LaunchPermission-Add-Group
    - description: The AWS account ID.
      name: LaunchPermission-Add-UserId
    - description: The name of the group.
      name: LaunchPermission-Remove-Group
    - description: The AWS account ID.
      name: LaunchPermission-Remove-UserId
    - description: The operation type.
      name: OperationType
    - description: One or more DevPay product codes. After you add a product code to an AMI, it can't be removed.
      name: ProductCodes
    - description: One or more user groups. This parameter can be used only when the Attribute parameter is launchPermission.
      name: UserGroups
    - description: One or more AWS account IDs. This parameter can be used only when the Attribute parameter is launchPermission.
      name: UserIds
    - description: The value of the attribute being modified. This parameter can be used only when the Attribute parameter is description or productCodes.
      name: Value
    description: Modifies the specified attribute of the specified AMI.
    name: aws-ec2-modify-image-attribute
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the subnet.
      name: SubnetId
      required: true
    description: Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
    name: aws-ec2-delete-subnet
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the VPC.
      name: VpcId
      required: true
    description: Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.
    name: aws-ec2-delete-vpc
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the internet gateway.
      name: InternetGatewayId
      required: true
    description: Deletes the specified internet gateway. You must detach the internet gateway from the VPC before you can delete it.
    name: aws-ec2-delete-internet-gateway
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: One or more filters.
      name: filters
    - description: One or more internet gateway IDs.
      name: InternetGatewayIds
    description: Describes one or more of your internet gateways.
    name: aws-ec2-describe-internet-gateway
    outputs:
    - contextPath: AWS.EC2.InternetGateways.InternetGatewayId
      description: The ID of the internet gateway.
      type: string
    - contextPath: AWS.EC2.InternetGateways.OwnerId
      description: The ID of the AWS account that owns the internet gateway.
      type: string
    - contextPath: AWS.EC2.InternetGateways.Tags
      description: Any tags assigned to the internet gateway.
      type: string
    - contextPath: AWS.EC2.InternetGateways.Attachments.State
      description: The current state of the attachment.
      type: string
    - contextPath: AWS.EC2.InternetGateways.Attachments.VpcId
      description: The ID of the VPC.
      type: string
  - arguments:
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: The ID of the internet gateway.
      name: InternetGatewayId
      required: true
    - description: The ID of the VPC.
      name: VpcId
      required: true
    description: Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.
    name: aws-ec2-detach-internet-gateway
  - arguments:
    - description: The ID of the source network interface.
      name: NetworkInterfaceId
      required: true
    - description: The ID of the Traffic Mirror target.
      name: TrafficMirrorTargetId
      required: true
    - description: The ID of the Traffic Mirror filter.
      name: TrafficMirrorFilterId
      required: true
    - description: The number of bytes in each packet to mirror.
      name: PacketLength
    - description: The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions.
      name: SessionNumber
      required: true
    - description: The VXLAN ID for the Traffic Mirror session.
      name: VirtualNetworkId
    - description: The description of the Traffic Mirror session.
      name: Description
    - description: The tags to assign to a Traffic Mirror session.
      name: Tags
    - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response.
      name: DryRun
    - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
      name: ClientToken
    description: Creates a Traffic Mirror session.
    name: aws-ec2-create-traffic-mirror-session
    outputs:
    - contextPath: AWS.EC2.TrafficMirrorSession.TrafficMirrorSessionId
      description: The ID for the Traffic Mirror session.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.TrafficMirrorTargetId
      description: The ID of the Traffic Mirror target.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.TrafficMirrorFilterId
      description: The ID of the Traffic Mirror filter.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.NetworkInterfaceId
      description: The ID of the Traffic Mirror session's network interface.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.OwnerId
      description: The ID of the account that owns the Traffic Mirror session.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.PacketLength
      description: The number of bytes in each packet to mirror.
      type: Number
    - contextPath: AWS.EC2.TrafficMirrorSession.SessionNumber
      description: The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions.
      type: Number
    - contextPath: AWS.EC2.TrafficMirrorSession.VirtualNetworkId
      description: The virtual network ID associated with the Traffic Mirror session.
      type: Number
    - contextPath: AWS.EC2.TrafficMirrorSession.Description
      description: The description of the Traffic Mirror session.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.Tags.Key
      description: The key of the tag.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.EC2.TrafficMirrorSession.ClientToken
      description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
      type: String
  - arguments:
    - description: The ID of the security group.
      name: groupId
      required: true
    - description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsfromPort
    - description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
      name: IpPermissionsToPort
    - description: The IP protocol name (tcp, udp, icmp, icmpv6) or number.
      name: IpPermissionsIpProtocol
    - description: The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
      name: IpRangesCidrIp
    - description: 'A description for the security group rule that references this IPv4 address range.Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*'
      name: IpRangesDescription
    - description: The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
      name: Ipv6RangesCidrIp
    - description: 'A description for the security group rule that references this IPv6 address range. Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*'
      name: Ipv6RangesDescription
    - description: The ID of the prefix.
      name: PrefixListId
    - description: 'A description for the security group rule that references this prefix list ID. Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*'
      name: PrefixListIdDescription
    - description: 'A description for the security group rule that references this user ID group pair. Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*'
      name: UserIdGroupPairsDescription
    - description: The ID of the security group.
      name: UserIdGroupPairsGroupId
    - description: The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.
      name: UserIdGroupPairsGroupName
    - description: The status of a VPC peering connection, if applicable.
      name: UserIdGroupPairsPeeringStatus
    - description: The ID of an AWS account. For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned. [EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.
      name: UserIdGroupPairsUserId
    - description: The ID of the VPC for the referenced security group, if applicable.
      name: UserIdGroupPairsVpcId
    - description: The ID of the VPC peering connection, if applicable.
      name: UserIdGroupPairsVpcPeeringConnectionId
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    - description: 'Full IpPermissions argument as a string to more easily target rules (e.x. """[{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}]""").'
      name: IpPermissionsFull
    description: Removes egress rule from a security group. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.
    execution: true
    name: aws-ec2-revoke-security-group-egress-rule
  - arguments:
    - description: The Availability Zone in which to allocate the Dedicated Host.
      name: availability_zone
      required: true
    - description: The number of Dedicated Hosts to allocate to your account with these parameters.
      name: quantity
      required: true
    - auto: PREDEFINED
      description: Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. The default is "on".
      name: auto_placement
      predefined:
      - 'on'
      - 'off'
    - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
      name: client_token
    - description: Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. If you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify InstanceFamily instead. You cannot specify InstanceType and InstanceFamily in the same request.
      name: instance_type
    - description: Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. If you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify InstanceType instead. You cannot specify InstanceFamily and InstanceType in the same request
      name: instance_family
    - auto: PREDEFINED
      description: Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default.
      name: host_recovery
      predefined:
      - 'on'
      - 'off'
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Allocates a Dedicated Host to your account.
    name: aws-ec2-allocate-hosts
    outputs:
    - contextPath: AWS.EC2.Host.HostId
      description: The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.
      type: String
  - arguments:
    - description: A comma-separated list of IDs of the Dedicated Hosts to release.
      isArray: true
      name: host_id
      required: true
    - description: The AWS Region, if not specified the default region will be used.
      name: region
    - description: The Amazon Resource Name (ARN) of the role to assume.
      name: roleArn
    - description: An identifier for the assumed role session.
      name: roleSessionName
    - description: The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role.
      name: roleSessionDuration
    description: Release on demand dedicated host.
    name: aws-ec2-release-hosts
  dockerimage: demisto/boto3py3:1.0.0.72237
  runonce: false
  script: '-'
  subtype: python3
  type: python
tests:
- AWS - EC2 Test Playbook
fromversion: 5.0.0
sectionOrder:
- Connect
- Collect
