id: d66e5f86-e045-403f-819e-5058aa603c32
version: -1
name: AWS - EC2 Test Playbook actions
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 365be7a9-574d-427c-8125-33f7bf932890
    type: start
    task:
      id: 365be7a9-574d-427c-8125-33f7bf932890
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 4aa07349-33b0-4ee9-851c-9e5fb15d8e70
    type: regular
    task:
      id: 4aa07349-33b0-4ee9-851c-9e5fb15d8e70
      version: -1
      name: aws-ec2-allocate-address
      description: Allocates an Elastic IP address.
      script: AWS - EC2|||aws-ec2-allocate-address
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "31"
      - "30"
      - "32"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 15f5580d-e1a9-439c-8550-4f1e5f19b330
    type: regular
    task:
      id: 15f5580d-e1a9-439c-8550-4f1e5f19b330
      version: -1
      name: aws-ec2-associate-address
      description: Associates an Elastic IP address with an instance or a network
        interface.
      script: AWS - EC2|||aws-ec2-associate-address
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "44"
    scriptarguments:
      allocationId:
        simple: ${AWS.EC2.ElasticIPs.AllocationId}
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: fca6d93b-45d1-488b-81a1-de3bab10b3c9
    type: regular
    task:
      id: fca6d93b-45d1-488b-81a1-de3bab10b3c9
      version: -1
      name: aws-ec2-create-snapshot
      description: Creates a snapshot of an EBS volume and stores it in Amazon S3.
        You can use snapshots for backups, to make copies of EBS volumes, and to save
        data before shutting down an instance.
      script: AWS - EC2|||aws-ec2-create-snapshot
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "46"
      - "45"
      - "47"
    scriptarguments:
      description:
        simple: test
      volumeId:
        simple: ${AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 3695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: e9482263-cd96-47cb-8489-ab9ad02306a2
    type: regular
    task:
      id: e9482263-cd96-47cb-8489-ab9ad02306a2
      version: -1
      name: aws-ec2-delete-snapshot
      description: Deletes the specified snapshot.
      script: AWS - EC2|||aws-ec2-delete-snapshot
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      snapshotId:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4395
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: 0abe0a82-afeb-4e9d-82d9-16df8b16fa30
    type: regular
    task:
      id: 0abe0a82-afeb-4e9d-82d9-16df8b16fa30
      version: -1
      name: aws-ec2-create-image
      description: Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance
        that is either running or stopped.
      script: AWS - EC2|||aws-ec2-create-image
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "52"
      - "51"
    scriptarguments:
      description:
        simple: test
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      name:
        simple: Test
      noReboot:
        simple: "True"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "6":
    id: "6"
    taskid: ef2ecab1-df53-4912-8b10-b0d5ce69fae6
    type: regular
    task:
      id: ef2ecab1-df53-4912-8b10-b0d5ce69fae6
      version: -1
      name: aws-ec2-deregister-image
      description: Deregisters the specified AMI.
      script: AWS - EC2|||aws-ec2-deregister-image
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      imageId:
        simple: ${AWS.EC2.Images.[1].ImageId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 5620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "7":
    id: "7"
    taskid: e6b1a266-9ee0-4220-8b46-3f76ec91afa2
    type: regular
    task:
      id: e6b1a266-9ee0-4220-8b46-3f76ec91afa2
      version: -1
      name: aws-ec2-modify-volume
      description: You can modify several parameters of an existing EBS volume, including
        volume size, volume type, and IOPS capacity.
      script: AWS - EC2|||aws-ec2-modify-volume
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "48"
      - "49"
      - "50"
    scriptarguments:
      size:
        simple: "60"
      volumeId:
        simple: ${AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "8":
    id: "8"
    taskid: 69414416-c3ce-4fa7-8243-381e9814e8b5
    type: regular
    task:
      id: 69414416-c3ce-4fa7-8243-381e9814e8b5
      version: -1
      name: aws-ec2-create-tags
      description: Adds or overwrites one or more tags for the specified Amazon EC2
        resource or resources.
      script: AWS - EC2|||aws-ec2-create-tags
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      resources:
        simple: ${AWS.EC2.Instances.InstanceId}
      tags:
        simple: key=Usage,value=Test
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: 1f24c3b0-8b3f-40f0-82e7-87df29133f63
    type: regular
    task:
      id: 1f24c3b0-8b3f-40f0-82e7-87df29133f63
      version: -1
      name: aws-ec2-disassociate-address
      description: Disassociates an Elastic IP address from the instance or network
        interface its associated with.
      script: AWS - EC2|||aws-ec2-disassociate-address
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      associationId:
        simple: ${AWS.EC2.ElasticIPs.AssociationId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "10":
    id: "10"
    taskid: 9b4d1372-5f9e-4a18-8f8a-f3dbbc02fb27
    type: regular
    task:
      id: 9b4d1372-5f9e-4a18-8f8a-f3dbbc02fb27
      version: -1
      name: aws-ec2-release-address
      description: Releases the specified Elastic IP address.
      script: AWS - EC2|||aws-ec2-release-address
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      allocationId:
        simple: ${AWS.EC2.ElasticIPs.AllocationId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "11":
    id: "11"
    taskid: cd812038-6402-496e-8f44-c2a30d18b65a
    type: regular
    task:
      id: cd812038-6402-496e-8f44-c2a30d18b65a
      version: -1
      name: aws-ec2-start-instances
      description: Starts an Amazon EBS-backed instance that you have previously stopped.
      script: AWS - EC2|||aws-ec2-start-instances
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "12":
    id: "12"
    taskid: 4aa82372-623f-485b-8b17-268ba3eaa3dc
    type: regular
    task:
      id: 4aa82372-623f-485b-8b17-268ba3eaa3dc
      version: -1
      name: aws-ec2-stop-instances
      description: Stops an Amazon EBS-backed instance.
      script: AWS - EC2|||aws-ec2-stop-instances
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: 8b7e1bb5-4dc7-44ac-873c-27f114859533
    type: regular
    task:
      id: 8b7e1bb5-4dc7-44ac-873c-27f114859533
      version: -1
      name: aws-ec2-terminate-instances
      description: Shuts down one or more instances. This operation is idempotent;
        if you terminate an instance more than once, each call succeeds.
      script: AWS - EC2|||aws-ec2-terminate-instances
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "14":
    id: "14"
    taskid: 3bb812e2-2a34-4ed7-8f1a-733140c727bd
    type: regular
    task:
      id: 3bb812e2-2a34-4ed7-8f1a-733140c727bd
      version: -1
      name: aws-ec2-create-volume
      description: Creates an EBS volume that can be attached to an instance in the
        same Availability Zone.
      script: AWS - EC2|||aws-ec2-create-volume
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "55"
      - "53"
      - "54"
    scriptarguments:
      availabilityZone:
        simple: ${AWS.EC2.Instances.Placement.AvailabilityZone}
      size:
        simple: "20"
      volumeType:
        simple: gp2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 5795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: a2940b2b-7de9-4c3f-8979-95b6adc81069
    type: regular
    task:
      id: a2940b2b-7de9-4c3f-8979-95b6adc81069
      version: -1
      name: aws-ec2-attach-volume
      description: Attaches an EBS volume to a running or stopped instance and exposes
        it to the instance with the specified device name.
      script: AWS - EC2|||aws-ec2-attach-volume
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "58"
      - "56"
      - "57"
    scriptarguments:
      device:
        simple: /dev/xvdb
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 6145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: 72d8e6c9-14c2-4f33-8e2a-85c088708930
    type: regular
    task:
      id: 72d8e6c9-14c2-4f33-8e2a-85c088708930
      version: -1
      name: aws-ec2-detach-volume
      description: Detaches an EBS volume from an instance.
      script: AWS - EC2|||aws-ec2-detach-volume
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "61"
      - "60"
      - "59"
    scriptarguments:
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 6495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: 97439a12-ceab-4840-8a71-4715b705fa1e
    type: regular
    task:
      id: 97439a12-ceab-4840-8a71-4715b705fa1e
      version: -1
      name: aws-ec2-delete-volume
      description: Deletes the specified EBS volume. The volume must be in the available
        state (not attached to an instance).
      script: AWS - EC2|||aws-ec2-delete-volume
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "63"
    scriptarguments:
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 6845
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: 0260c93e-a497-436b-8bfe-e06ef712d6bd
    type: regular
    task:
      id: 0260c93e-a497-436b-8bfe-e06ef712d6bd
      version: -1
      name: aws-ec2-run-instances
      description: Launches the specified number of instances using an AMI for which
        you have permissions. You can create a launch template , which is a resource
        that contains the parameters to launch an instance. When you launch an instance
        using RunInstances , you can specify the launch template instead of specifying
        the launch parameters. An instance is ready for you to use when its in the
        running state. You can check the state of your instance using DescribeInstances.
      script: AWS - EC2|||aws-ec2-run-instances
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "41"
      - "40"
      - "39"
      - "43"
      - "42"
    scriptarguments:
      count:
        simple: "1"
      deviceName:
        simple: /dev/xvda
      ebsDeleteOnTermination:
        simple: "True"
      ebsVolumeSize:
        simple: "50"
      ebsVolumeType:
        simple: gp2
      imageId:
        simple: ${AWS.EC2.Images.ImageId}
      instanceType:
        simple: t2.small
      keyName:
        simple: frankfurt-test
      securityGroupIds:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      tags:
        simple: key=Name,Value=PlaybookTest
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: a0d22c52-0f65-4730-826b-29aa05ce4eeb
    type: regular
    task:
      id: a0d22c52-0f65-4730-826b-29aa05ce4eeb
      version: -1
      name: aws-ec2-waiter-instance-running
      description: A waiter function that runs every 15  seconds until a successful
        state is reached.
      script: AWS - EC2|||aws-ec2-waiter-instance-running
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "20":
    id: "20"
    taskid: 64f606bf-b770-44c1-8019-cebfa8f03397
    type: regular
    task:
      id: 64f606bf-b770-44c1-8019-cebfa8f03397
      version: -1
      name: aws-ec2-waiter-instance-status-ok
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      script: AWS - EC2|||aws-ec2-waiter-instance-status-ok
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "70"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: 63febf06-96bd-4cb7-8435-2dba189f2f5d
    type: regular
    task:
      id: 63febf06-96bd-4cb7-8435-2dba189f2f5d
      version: -1
      name: aws-ec2-waiter-instance-stopped
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      script: AWS - EC2|||aws-ec2-waiter-instance-stopped
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "22":
    id: "22"
    taskid: a53f24dc-7981-4af9-89ba-1e95a95297be
    type: regular
    task:
      id: a53f24dc-7981-4af9-89ba-1e95a95297be
      version: -1
      name: aws-ec2-waiter-instance-terminated
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      script: AWS - EC2|||aws-ec2-waiter-instance-terminated
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "23":
    id: "23"
    taskid: 72261e80-f1d7-46ca-80f6-c150a0d29148
    type: regular
    task:
      id: 72261e80-f1d7-46ca-80f6-c150a0d29148
      version: -1
      name: aws-ec2-waiter-image-available
      description: A waiter function that waits until image is avilable
      script: AWS - EC2|||aws-ec2-waiter-image-available
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "66"
    scriptarguments:
      imageIds:
        simple: ${AWS.EC2.Images.[1].ImageId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 5270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: 3d68dea3-8e6e-49de-83b1-7962325062dd
    type: regular
    task:
      id: 3d68dea3-8e6e-49de-83b1-7962325062dd
      version: -1
      name: aws-ec2-waiter-snapshot_completed
      description: A waiter function that waits until the snapshot is complate
      script: AWS - EC2|||aws-ec2-waiter-snapshot_completed
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "67"
    scriptarguments:
      snapshotIds:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "25":
    id: "25"
    taskid: 1be14a97-9bf5-4b67-8fd3-d60743a17f67
    type: regular
    task:
      id: 1be14a97-9bf5-4b67-8fd3-d60743a17f67
      version: -1
      name: aws-ec2-get-latest-ami
      description: Get The latest AMI
      script: AWS - EC2|||aws-ec2-get-latest-ami
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "34"
      - "35"
      - "33"
    scriptarguments:
      filters:
        simple: Name=name,Values=CentOS Linux 7 x86_64 HVM EBS*
      owners:
        simple: aws-marketplace
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "26":
    id: "26"
    taskid: a812275d-aec3-41f3-8ecc-d79637a24f94
    type: regular
    task:
      id: a812275d-aec3-41f3-8ecc-d79637a24f94
      version: -1
      name: aws-ec2-create-security-group
      description: Creates a security group.
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "37"
      - "36"
      - "38"
    scriptarguments:
      description:
        simple: Demisto-PlaybookTest
      groupName:
        simple: Demisto-PlaybookTest
      vpcId:
        simple: vpc-7bfc8e10
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "27":
    id: "27"
    taskid: c2e32871-45ce-4677-800c-2342583b2c38
    type: regular
    task:
      id: c2e32871-45ce-4677-800c-2342583b2c38
      version: -1
      name: aws-ec2-delete-security-group
      description: Deletes a security group.
      script: AWS - EC2|||aws-ec2-delete-security-group
      type: regular
      iscommand: true
      brand: AWS - EC2
    scriptarguments:
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "28":
    id: "28"
    taskid: 0ad15846-9c50-4d9f-86e8-f4f66b5a42c8
    type: regular
    task:
      id: 0ad15846-9c50-4d9f-86e8-f4f66b5a42c8
      version: -1
      name: aws-ec2-authorize-security-group-ingress-rule
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "69"
    scriptarguments:
      cidrIp:
        simple: 0.0.0.0/0
      fromPort:
        simple: "22"
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      ipProtocol:
        simple: TCP
      toPort:
        simple: "22"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "29":
    id: "29"
    taskid: 692065ec-88f9-4160-852d-ebc94dfb93f9
    type: regular
    task:
      id: 692065ec-88f9-4160-852d-ebc94dfb93f9
      version: -1
      name: aws-ec2-revoke-security-group-ingress-rule
      description: Removes egress rule from a security group. To remove a rule, the
        values that you specify (for example, ports) must match the existing rule's
        values exactly.
      script: AWS - EC2|||aws-ec2-revoke-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "72"
    scriptarguments:
      cidrIp:
        simple: 0.0.0.0/0
      fromPort:
        simple: "22"
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      ipProtocol:
        simple: TCP
      toPort:
        simple: "22"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "30":
    id: "30"
    taskid: e9450631-5f3d-4dc8-87ad-c924b370ea5b
    type: regular
    task:
      id: e9450631-5f3d-4dc8-87ad-c924b370ea5b
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      path:
        simple: AWS.EC2.ElasticIPs.AllocationId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "31":
    id: "31"
    taskid: 30669d1a-294b-47b1-8b99-6ea76e5a3cc5
    type: regular
    task:
      id: 30669d1a-294b-47b1-8b99-6ea76e5a3cc5
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      path:
        simple: AWS.EC2.ElasticIPs.Domain
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "32":
    id: "32"
    taskid: c00b6c3b-35b4-486f-8c27-dfde0c92f65f
    type: regular
    task:
      id: c00b6c3b-35b4-486f-8c27-dfde0c92f65f
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      path:
        simple: AWS.EC2.ElasticIPs.PublicIp
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "33":
    id: "33"
    taskid: e316159b-21c6-448c-8a22-e0ee34d037b9
    type: regular
    task:
      id: e316159b-21c6-448c-8a22-e0ee34d037b9
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      path:
        simple: AWS.EC2.Images.CreationDate
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: 2d059368-16ff-4c9d-863d-2dae9c2ae662
    type: regular
    task:
      id: 2d059368-16ff-4c9d-863d-2dae9c2ae662
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      path:
        simple: AWS.EC2.Images.ImageId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "35":
    id: "35"
    taskid: ec427bd8-ca7f-4813-841b-1c1d6571e4b7
    type: regular
    task:
      id: ec427bd8-ca7f-4813-841b-1c1d6571e4b7
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      path:
        simple: AWS.EC2.Images.ImageType
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "36":
    id: "36"
    taskid: c4b1f30e-11d9-4a9f-8055-a5e996db441c
    type: regular
    task:
      id: c4b1f30e-11d9-4a9f-8055-a5e996db441c
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      path:
        simple: AWS.EC2.SecurityGroups.VpcId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "37":
    id: "37"
    taskid: db4ee8a3-01c1-4842-8d44-2d967e6e8ddd
    type: regular
    task:
      id: db4ee8a3-01c1-4842-8d44-2d967e6e8ddd
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      path:
        simple: AWS.EC2.SecurityGroups.Description
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "38":
    id: "38"
    taskid: bab6b383-dd1d-4524-89db-473eedbb47b1
    type: regular
    task:
      id: bab6b383-dd1d-4524-89db-473eedbb47b1
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      path:
        simple: AWS.EC2.SecurityGroups.GroupName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "39":
    id: "39"
    taskid: b198c853-5559-46ff-87ce-7cc57a63b99f
    type: regular
    task:
      id: b198c853-5559-46ff-87ce-7cc57a63b99f
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      path:
        simple: AWS.EC2.Instances.InstanceType
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "40":
    id: "40"
    taskid: 9a56cbdc-a759-439d-8fe7-27033e30a3c0
    type: regular
    task:
      id: 9a56cbdc-a759-439d-8fe7-27033e30a3c0
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      path:
        simple: AWS.EC2.Instances.SecurityGroups.GroupId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "41":
    id: "41"
    taskid: f17efbd4-8dde-42bf-8a2e-4ded2d456140
    type: regular
    task:
      id: f17efbd4-8dde-42bf-8a2e-4ded2d456140
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      path:
        simple: AWS.EC2.Instances.InstanceId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "42":
    id: "42"
    taskid: d58ae543-a310-430b-8978-055151d0d863
    type: regular
    task:
      id: d58ae543-a310-430b-8978-055151d0d863
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      path:
        simple: AWS.EC2.Instances.Monitoring.State
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "43":
    id: "43"
    taskid: b4404c3f-98b2-4643-868a-1c8104b08d16
    type: regular
    task:
      id: b4404c3f-98b2-4643-868a-1c8104b08d16
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      path:
        simple: AWS.EC2.Instances.SubnetId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1770,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "44":
    id: "44"
    taskid: 6e4303be-a69f-430a-8777-9de8ce95a4fc
    type: regular
    task:
      id: 6e4303be-a69f-430a-8777-9de8ce95a4fc
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "68"
    scriptarguments:
      path:
        simple: AWS.EC2.ElasticIPs.AssociationId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 3345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "45":
    id: "45"
    taskid: b30bea42-3071-44af-8949-eb58bcff48ff
    type: regular
    task:
      id: b30bea42-3071-44af-8949-eb58bcff48ff
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      path:
        simple: AWS.EC2.Snapshots.SnapshotId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "46":
    id: "46"
    taskid: 7b279655-bf6e-497d-8a94-bae5357c9cf7
    type: regular
    task:
      id: 7b279655-bf6e-497d-8a94-bae5357c9cf7
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      path:
        simple: AWS.EC2.Snapshots.State
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 3870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "47":
    id: "47"
    taskid: 2503e053-c276-4334-873c-0f7cc7a21634
    type: regular
    task:
      id: 2503e053-c276-4334-873c-0f7cc7a21634
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      path:
        simple: AWS.EC2.Snapshots.StartTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 3870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "48":
    id: "48"
    taskid: 95ab4445-6f47-4e43-8ab1-f3363d9d6d1f
    type: regular
    task:
      id: 95ab4445-6f47-4e43-8ab1-f3363d9d6d1f
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Modification.VolumeId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 4745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "49":
    id: "49"
    taskid: ee49871f-fdb4-4ed2-886c-661d50870103
    type: regular
    task:
      id: ee49871f-fdb4-4ed2-886c-661d50870103
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Modification.ModificationState
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "50":
    id: "50"
    taskid: b4491887-ab68-4240-8746-71cd62c48c62
    type: regular
    task:
      id: b4491887-ab68-4240-8746-71cd62c48c62
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Modification.OriginalSize
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 4745
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "51":
    id: "51"
    taskid: c3bfe8c7-8a9b-4219-8900-57e57f8ef2d8
    type: regular
    task:
      id: c3bfe8c7-8a9b-4219-8900-57e57f8ef2d8
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      path:
        simple: AWS.EC2.Images.Name
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 5095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "52":
    id: "52"
    taskid: 4c1afaab-7582-42f8-8bd7-000b7476bb17
    type: regular
    task:
      id: 4c1afaab-7582-42f8-8bd7-000b7476bb17
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      path:
        simple: AWS.EC2.Images.ImageId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 5095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "53":
    id: "53"
    taskid: 06458db2-6ec1-4c06-8cdf-033e90885ffb
    type: regular
    task:
      id: 06458db2-6ec1-4c06-8cdf-033e90885ffb
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Iops
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "54":
    id: "54"
    taskid: 560a025e-1b13-4f9c-8d6b-78c5eba6ec85
    type: regular
    task:
      id: 560a025e-1b13-4f9c-8d6b-78c5eba6ec85
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.VolumeId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 5970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "55":
    id: "55"
    taskid: 5acde28c-b1cc-4bc7-8a8b-47bda9c56e30
    type: regular
    task:
      id: 5acde28c-b1cc-4bc7-8a8b-47bda9c56e30
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Size
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 5970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "56":
    id: "56"
    taskid: 38b9a152-8dd9-4a30-85eb-7433147f63b5
    type: regular
    task:
      id: 38b9a152-8dd9-4a30-85eb-7433147f63b5
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.Device
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "57":
    id: "57"
    taskid: cdb0ee85-30ed-4e29-89b0-7cd347837713
    type: regular
    task:
      id: cdb0ee85-30ed-4e29-89b0-7cd347837713
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.VolumeId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 6320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "58":
    id: "58"
    taskid: 1b8c5995-fc14-479d-82d4-535d33251a6e
    type: regular
    task:
      id: 1b8c5995-fc14-479d-82d4-535d33251a6e
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.AttachTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 6320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "59":
    id: "59"
    taskid: 98d721ad-4800-4a7d-8f0f-3e55a45fc396
    type: regular
    task:
      id: 98d721ad-4800-4a7d-8f0f-3e55a45fc396
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.InstanceId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "60":
    id: "60"
    taskid: 84074114-c438-40ad-8e3e-1cd41161584d
    type: regular
    task:
      id: 84074114-c438-40ad-8e3e-1cd41161584d
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.AttachTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 6670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "61":
    id: "61"
    taskid: ba0ca8e6-d5fc-46b2-8849-37fdab3cc88d
    type: regular
    task:
      id: ba0ca8e6-d5fc-46b2-8849-37fdab3cc88d
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      path:
        simple: AWS.EC2.Volumes.Attachments.Device
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 6670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "62":
    id: "62"
    taskid: 81cca167-9479-4abb-8d66-47e370d93e81
    type: regular
    task:
      id: 81cca167-9479-4abb-8d66-47e370d93e81
      version: -1
      name: aws-ec2-describe-instances
      description: Describes one or more of your instances.
      script: AWS - EC2|||aws-ec2-describe-instances
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "63":
    id: "63"
    taskid: cd9f9a22-9431-418d-8f27-309b6ea25e65
    type: regular
    task:
      id: cd9f9a22-9431-418d-8f27-309b6ea25e65
      version: -1
      name: aws-ec2-reboot-instances
      description: Requests a reboot of one or more instances. This operation is asynchronous;
        it only queues a request to reboot the specified instances. The operation
        succeeds if the instances are valid and belong to you. Requests to reboot
        terminated instances are ignored.  If an instance does not cleanly shut down
        within four minutes, Amazon EC2 performs a hard reboot.
      script: AWS - EC2_copy|||aws-ec2-reboot-instances
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "9"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 7020
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "64":
    id: "64"
    taskid: 99e87193-f9fd-4766-8552-77919f5742a8
    type: regular
    task:
      id: 99e87193-f9fd-4766-8552-77919f5742a8
      version: -1
      name: aws-ec2-unmonitor-instances
      description: Disables detailed monitoring for a running instance.
      script: AWS - EC2_copy|||aws-ec2-unmonitor-instances
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "62"
    scriptarguments:
      instancesIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "65":
    id: "65"
    taskid: 5845d4a8-632f-4c83-8e35-437f047bcbab
    type: regular
    task:
      id: 5845d4a8-632f-4c83-8e35-437f047bcbab
      version: -1
      name: aws-ec2-monitor-instances
      description: Enables detailed monitoring for a running instance.
      script: AWS - EC2_copy|||aws-ec2-monitor-instances
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "64"
    scriptarguments:
      instancesIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "66":
    id: "66"
    taskid: 54c89ed3-9696-49bb-8285-7cf09d0d19bb
    type: regular
    task:
      id: 54c89ed3-9696-49bb-8285-7cf09d0d19bb
      version: -1
      name: aws-ec2-copy-image
      description: Initiates the copy of an AMI from the specified source region to
        the current region.
      script: AWS - EC2_copy|||aws-ec2-copy-image
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      name:
        simple: test2
      sourceImageId:
        simple: ${AWS.EC2.Images.ImageId}
      sourceRegion:
        simple: eu-central-1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 5445
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "67":
    id: "67"
    taskid: ccb58b2a-52f1-48a8-8aaa-6b591a5bad47
    type: regular
    task:
      id: ccb58b2a-52f1-48a8-8aaa-6b591a5bad47
      version: -1
      name: aws-ec2-copy-snapshot
      description: Copies a point-in-time snapshot of an EBS volume and stores it
        in Amazon S3. You can copy the snapshot within the same region or from one
        region to another.
      script: AWS - EC2_copy|||aws-ec2-copy-snapshot
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      sourceRegion:
        simple: eu-central-1
      sourceSnapshotId:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "68":
    id: "68"
    taskid: 57ac74a5-4136-48f0-8b0b-2db68beacceb
    type: regular
    task:
      id: 57ac74a5-4136-48f0-8b0b-2db68beacceb
      version: -1
      name: Delete context images
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      key:
        simple: AWS.EC2.Images
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 3520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "69":
    id: "69"
    taskid: 11405132-3995-4531-85f7-8d266a96195c
    type: regular
    task:
      id: 11405132-3995-4531-85f7-8d266a96195c
      version: -1
      name: aws-ec2-create-security-group
      description: Creates a security group.
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      description:
        simple: Demisto-PlaybookTest2
      groupName:
        simple: Demisto-PlaybookTest2
      vpcId:
        simple: vpc-7bfc8e10
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "70":
    id: "70"
    taskid: a21775a9-b8d2-4e48-866c-f3b811c83d8a
    type: regular
    task:
      id: a21775a9-b8d2-4e48-866c-f3b811c83d8a
      version: -1
      name: aws-ec2-modify-instance-attribute
      description: Modifies the specified attribute of the specified instance. You
        can specify only one attribute at a time. Using this action to change the
        security groups associated with an elastic network interface (ENI) attached
        to an instance in a VPC can result in an error if the instance has more than
        one ENI. To change the security groups associated with an ENI attached to
        an instance that has multiple ENIs, we recommend that you use the ModifyNetworkInterfaceAttribute
        action.
      script: AWS - EC2_copy|||aws-ec2-modify-instance-attribute
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "71"
    scriptarguments:
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "71":
    id: "71"
    taskid: 33f2ce33-747f-421b-8f22-224c5732f9d2
    type: regular
    task:
      id: 33f2ce33-747f-421b-8f22-224c5732f9d2
      version: -1
      name: aws-ec2-modify-network-interface-attribute
      description: Modifies the specified network interface attribute. You can specify
        only one attribute at a time.
      script: AWS - EC2_copy|||aws-ec2-modify-network-interface-attribute
      type: regular
      iscommand: true
      brand: AWS - EC2_copy
    nexttasks:
      '#none#':
      - "65"
    scriptarguments:
      networkInterfaceId:
        simple: ${AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "72":
    id: "72"
    taskid: 1dd06c13-1bd5-41ab-8f1f-f6288015b424
    type: regular
    task:
      id: 1dd06c13-1bd5-41ab-8f1f-f6288015b424
      version: -1
      name: aws-ec2-revoke-security-group-egress-rule
      description: Removes egress rule from a security group. To remove a rule, the
        values that you specify (for example, ports) must match the existing rule's
        values exactly.
      script: AWS - EC2|||aws-ec2-revoke-security-group-egress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      IpPermissionsIpProtocol:
        simple: "-1"
      IpPermissionsToPort:
        simple: "1"
      IpPermissionsfromPort:
        simple: "1"
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 8770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
system: true
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 8990,
        "width": 2100,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
description: Test playbook for actions in AWS EC2 integration.
