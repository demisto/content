category: Identity and Access Management
sectionOrder:
- Connect
- Collect
commonfields:
  id: Azure
  version: -1
configuration:
- defaultvalue: d4736600-e3d5-4c97-8e65-57abd2b979fe
  display: Application ID
  name: app_id
  type: 0
  section: Connect
- display: Default Subscription ID
  name: subscription_id
  required: true
  type: 0
  section: Connect
  additionalinfo: There are two options to set the specified value, either in the configuration or directly within the commands. However, setting values in both places will cause an override by the command value.
- display: Default Resource Group Name
  name: resource_group_name
  required: true
  type: 0
  section: Connect
  additionalinfo: There are two options to set the specified value, either in the configuration or directly within the commands. However, setting values in both places will cause an override by the command value.
- defaultvalue: https://login.microsoftonline.com
  display: Azure AD endpoint
  name: azure_ad_endpoint
  options:
  - https://login.microsoftonline.com
  - https://login.microsoftonline.us
  - https://login.microsoftonline.de
  - https://login.chinacloudapi.cn
  type: 15
  additionalinfo: Azure AD endpoint associated with a national cloud.
  section: Connect
  advanced: true
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
- name: auth_type
  display: Authentication Type
  required: true
  defaultvalue: Device Code
  type: 15
  additionalinfo: Type of authentication - can be Authorization Code Flow (recommended), Device Code Flow or Azure Managed Identities.
  options:
  - Authorization Code
  - Client Credentials
  - Device Code
  - Azure Managed Identities
  section: Connect
- name: tenant_id
  display: Tenant ID
  defaultvalue:
  type: 0
  additionalinfo: ""
  section: Connect
  required: false
- name: credentials
  display: Client Secret
  defaultvalue:
  type: 9
  additionalinfo: ""
  displaypassword: Client Secret
  hiddenusername: true
  section: Connect
  required: false
- name: redirect_uri
  display: Application redirect URI
  defaultvalue:
  type: 0
  additionalinfo: ""
  section: Connect
  advanced: true
  required: false
- name: auth_code
  display: Authorization code
  defaultvalue:
  type: 9
  additionalinfo: For user-auth mode - received from the authorization step. See Detailed Instructions (?) section.
  displaypassword: Authorization code
  hiddenusername: true
  section: Connect
  advanced: true
  required: false
- additionalinfo: The Managed Identities client ID for authentication - relevant only if the integration is running on Azure VM.
  displaypassword: Azure Managed Identities Client ID
  name: managed_identities_client_id
  hiddenusername: true
  type: 9
  section: Connect
  required: false
description: '[Enter a comprehensive, yet concise, description of what the integration does, what use cases it is designed for, etc.]'
display: Azure
name: Azure
script:
  commands:
  - arguments:
    - description: The subscription ID.
      name: subscription_id
      type: String
    - description: The name of the resource group.
      name: resource_group_name
      type: String
    - description: The name of the security group.
      name: security_group_name
      required: true
    - description: The name of the rule to be updated.
      name: security_rule_name
      required: true
    - auto: PREDEFINED
      description: 'The direction of the rule. Possible values are: "Inbound" and "Outbound".'
      name: direction
      predefined:
      - Inbound
      - Outbound
    - description: Whether to allow the traffic. Possible values are "Allow" and "Deny".
      name: action
      auto: PREDEFINED
      predefined:
      - Allow
      - Deny
    - description: 'The protocol on which to apply the rule. Possible values are: "Any", "TCP", "UDP", and "ICMP".'
      name: protocol
      auto: PREDEFINED
      predefined:
      - Any
      - TCP
      - UDP
      - ICMP
    - description: The source IP address range from which incoming traffic will be allowed or denied by this rule. Possible values are "Any", an IP address range, an application security group, or a default tag. Default is "Any".
      name: source
    - description: The priority by which the rules will be processed. The lower the number, the higher the priority. We recommend leaving gaps between rules - 100, 200, 300, etc. - so that it is easier to add new rules without having to edit existing rules. Default is "4096".
      name: priority
    - description: The source ports from which traffic will be allowed or denied by this rule. Provide a single port, such as 80; a port range, such as 1024-65535; or a comma-separated list of single ports and/or port ranges, such as 80,1024-65535. Use an asterisk (*) to allow traffic on any port. Default is "*".
      name: source_ports
    - description: The specific destination IP address range for outgoing traffic that will be allowed or denied by this rule. The destination filter can be "Any", an IP address range, an application security group, or a default tag.
      name: destination
    - description: The destination ports for which traffic will be allowed or denied by this rule. Provide a single port, such as 80; a port range, such as 1024-65535; or a comma-separated list of single ports and/or port ranges, such as 80,1024-65535. Use an asterisk (*) to allow traffic on any port.
      name: destination_ports
    - description: A description to add to the rule.
      name: description
    - auto: PREDEFINED
      description: The network traffic is allowed or denied.
      name: access
      predefined:
      - Allow
      - Deny
    description: Update a security rule. If one does not exist, it will be created.
    name: azure-nsg-security-rule-update
    outputs:
    - contextPath: Azure.NSG.Rule.name
      description: The rule's name.
      type: String
    - contextPath: Azure.NSG.Rule.id
      description: The rule's ID.
      type: String
    - contextPath: Azure.NSG.Rule.etag
      description: The rule's ETag.
      type: String
    - contextPath: Azure.NSG.Rule.type
      description: The rule's type.
      type: String
    - contextPath: Azure.NSG.Rule.provisioningState
      description: The rule's provisioning state.
      type: String
    - contextPath: Azure.NSG.Rule.protocol
      description: The protocol. Can be "TCP", "UDP", "ICMP", "*".
      type: String
    - contextPath: Azure.NSG.Rule.sourcePortRange
      description: For a single port, the source port or a range of ports. Note that for multiple ports, `sourcePortRanges` will appear instead.
      type: String
    - contextPath: Azure.NSG.Rule.sourcePortRanges
      description: For multiple ports, a list of these ports. Note that for single ports, `sourcePortRange` will appear instead.
      type: String
    - contextPath: Azure.NSG.Rule.destinationPortRange
      description: For a single port, the destination port or range of ports. Note that for multiple ports, `destinationPortRanges` will appear instead.
      type: String
    - contextPath: Azure.NSG.Rule.destinationPortRanges
      description: For multiple ports, a list of destination ports. Note that for single ports, `destinationPortRange` will appear instead.
      type: String
    - contextPath: Azure.NSG.Rule.sourceAddressPrefix
      description: The source address.
      type: String
    - contextPath: Azure.NSG.Rule.destinationAddressPrefix
      description: The destination address.
      type: String
    - contextPath: Azure.NSG.Rule.access
      description: The rule's access. Can be "Allow" or "Deny".
      type: String
    - contextPath: Azure.NSG.Rule.priority
      description: The rule's priority. Can be from 100 to 4096.
      type: Number
    - contextPath: Azure.NSG.Rule.direction
      description: The rule's direction. Can be "Inbound" or "Outbound".
      type: String
  - arguments:
    - description: The resource group name.
      name: resource_group_name
    - description: The subscription ID.
      name: subscription_id
    - description: The name of the storage account.
      name: account_name
      required: true
    - auto: PREDEFINED
      description: Gets or sets the SKU name, Required for account creation; optional for update.
      name: sku
      predefined:
      - Premium_LRS
      - Premium_ZRS
      - Standard_GRS
      - Standard_GZRS
      - Standard_LRS
      - Standard_RAGRS
      - Standard_RAGZRS
      - Standard_ZRS
    - description: Indicates the type of storage account, Required for account creation; optional for update.
      name: kind
      auto: PREDEFINED
      predefined:
      - Storage
      - StorageV2
      - BlobStorage
      - FileStorage
      - BlockBlobStorage
    - description: Gets or sets the location of the resource. The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. Required for account creation; optional for update.
      name: location
      auto: PREDEFINED
      predefined:
      - eastus
      - eastus2
      - westus
      - westeurope
      - eastasia
      - southeastasia
      - japaneast
      - japanwest
      - northcentralus
      - southcentralus
      - centralus
      - northeurope
      - brazilsouth
      - australiaeast
      - australiasoutheast
      - southindia
      - centralindia
      - westindia
      - canadaeast
      - canadacentral
      - westus2
      - westcentralus
      - uksouth
      - ukwest
      - koreacentral
      - koreasouth
      - francecentral
      - australiacentral
      - southafricanorth
      - uaenorth
      - switzerlandnorth
      - germanywestcentral
      - norwayeast
    - description: Gets or sets a list of tags that describe the resource.
      name: tags
      isArray: true
    - description: Gets or sets the custom domain name assigned to the storage account.
      name: custom_domain_name
    - auto: PREDEFINED
      description: Indicates whether indirect CName validation is enabled.
      name: use_sub_domain_name
      predefined:
      - 'true'
      - 'false'
    - description: The encryption keySource.
      name: enc_key_source
      auto: PREDEFINED
      predefined:
      - Microsoft.Storage
      - Microsoft.Keyvault
    - description: Indicating whether the service applies a secondary layer of encryption with platform managed keys for data at rest.
      name: enc_requireInfrastructureEncryption
      auto: PREDEFINED
      predefined:
      - 'true'
      - 'false'
    - description: The name of KeyVault key.
      name: enc_keyvault_key_name
    - description: The version of KeyVault key.
      name: enc_keyvault_key_version
    - description: The Uri of KeyVault.
      name: enc_keyvault_uri
    - auto: PREDEFINED
      description: The access tier for the account. Required where kind = BlobStorage.
      name: access_tier
      predefined:
      - 'Hot'
      - 'Cool'
    - auto: PREDEFINED
      description: Allows https traffic only to storage service if sets to true.
      name: supports_https_traffic_only
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Account HierarchicalNamespace enabled if sets to true.
      name: is_hns_enabled
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      description: Allow large file shares if sets to Enabled.
      name: large_file_shares_state
      predefined:
      - Disabled
      - Enabled
    - auto: PREDEFINED
      description: Allow or disallow public access to all blobs or containers in the storage account.
      name: allow_blob_public_access
      predefined:
      - 'true'
      - 'false'
    - description: Set the minimum TLS version to be permitted on requests to storage.
      name: minimum_tls_version
      auto: PREDEFINED
      predefined:
      - TLS1_0
      - TLS1_1
      - TLS1_2
    - description: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices.
      name: network_ruleset_bypass
      auto: PREDEFINED
      isArray: true
      predefined:
      - AzureServices
      - Logging
      - Metrics
      - None
    - description: Specifies the default action of allow or deny when no other rules match.
      name: network_ruleset_default_action
    - description: Sets the IP ACL rules.
      name: network_ruleset_ipRules
    - description: Sets the virtual network rules.
      name: virtual_network_rules
    - auto: PREDEFINED
      description: Allow or disallow cross AAD tenant object replication.
      name: allow_cross_tenant_replication
      predefined:
      - 'true'
      - 'false'
    description: Updates a specific account storage.
    name: azure-storage-account-create-update
    outputs:
    - ContextPath: Azure.StorageAccount.id
      description: Fully qualified resource ID for the resource.
      type: String
    - ContextPath: Azure.StorageAccount.kind
      description: Gets the Kind.
      type: String
    - ContextPath: Azure.StorageAccount.location
      description: The geo-location where the resource lives.
      type: String
    - ContextPath: Azure.StorageAccount.name
      description: The name of the resource.
      type: String
    - ContextPath: Azure.StorageAccount.properties.isHnsEnabled
      description: Account HierarchicalNamespace enabled if sets to true.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.allowBlobPublicAccess
      description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.minimumTlsVersion
      description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
      type: String
    - ContextPath: Azure.StorageAccount.properties.allowSharedKeyAccess
      description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD).
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.creationTime
      description: Gets the creation date and time of the storage account in UTC.
      type: Date
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.web
      description: Gets the web endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.dfs
      description: Gets the dfs endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.blob
      description: Gets the blob endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.file
      description: Gets the file endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.queue
      description: Gets the queue endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.table
      description: Gets the table endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.web
      description: Gets the web microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.dfs
      description: Gets the dfs microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.blob
      description: Gets the blob microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.file
      description: Gets the file microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.queue
      description: Gets the queue microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.microsoftEndpoints.table
      description: Gets the table microsoft endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.internetEndpoints.web
      description: Gets the web internet endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.internetEndpoints.dfs
      description: Gets the dfs internet endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.internetEndpoints.blob
      description: Gets the blob internet endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryEndpoints.internetEndpoints.file
      description: Gets the file internet endpoint.
      type: String
    - ContextPath: Azure.StorageAccount.properties.primaryLocation
      description: Gets the location of the primary data center for the storage account.
      type: String
    - ContextPath: Azure.StorageAccount.properties.provisioningState
      description: Gets the status of the storage account at the time the operation was called.
      type: String
    - ContextPath: Azure.StorageAccount.properties.routingPreference.routingChoice
      description: Routing Choice defines the kind of network routing opted by the user.
      type: String
    - ContextPath: Azure.StorageAccount.properties.routingPreference.publishMicrosoftEndpoints
      description: A boolean flag which indicates whether microsoft routing storage endpoints are to be published.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.routingPreference.publishInternetEndpoints
      description: A boolean flag which indicates whether internet routing storage endpoints are to be published.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.encryption.services.file.keyType
      description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
      type: String
    - ContextPath: Azure.StorageAccount.properties.encryption.services.file.enabled
      description: A boolean indicating whether or not the service encrypts the data as it is stored.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.encryption.services.file.lastEnabledTime
      description: Gets a rough estimate of the date/time when the encryption was last enabled by the user.
      type: Date
    - ContextPath: Azure.StorageAccount.properties.encryption.services.blob.keyType
      description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
      type: String
    - ContextPath: Azure.StorageAccount.properties.encryption.services.blob.enabled
      description: A boolean indicating whether or not the service encrypts the data as it is stored.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.encryption.services.blob.lastEnabledTime
      description: Gets a rough estimate of the date/time when the encryption was last enabled by the user.
      type: Date
    - ContextPath: Azure.StorageAccount.properties.encryption.requireInfrastructureEncryption
      description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
      type: Boolean
    - ContextPath: Azure.StorageAccount.properties.encryption.keySource
      description: 'The encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault.'
      type: String
    - ContextPath: Azure.StorageAccount.properties.secondaryLocation
      description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
      type: String
    - ContextPath: Azure.StorageAccount.properties.statusOfPrimary
      description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
      type: String
    - ContextPath: Azure.StorageAccount.properties.statusOfSecondary
      description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
      type: String
    - ContextPath: Azure.StorageAccount.properties.supportsHttpsTrafficOnly
      description: Allows https traffic only to storage service if sets to true.
      type: Boolean
    - ContextPath: Azure.StorageAccount.sku.name
      description: The SKU name. Required for account creation; optional for update.
      type: String
    - ContextPath: Azure.StorageAccount.sku.tier
      description: The SKU tier. This is based on the SKU name.
      type: String
    - ContextPath: Azure.StorageAccount.tags
      description: Resource tags.
      type: Unknown
    - ContextPath: Azure.StorageAccount.type
      description: The type of the resource.
      type: String
  - arguments:
    - description: The resource group name.
      name: resource_group_name
    - description: The subscription ID.
      name: subscription_id
    - description: The name of the storage account.
      name: account_name
      required: true
    - auto: PREDEFINED
      description: Indicates whether DeleteRetentionPolicy is enabled.
      name: delete_rentention_policy_enabled
      predefined:
      - 'true'
      - 'false'
      type: bool
    - description: Indicates the number of days that the deleted item should be retained.
      name: delete_rentention_policy_days
    description: Sets properties for the blob service in a specific account storage.
    name: azure-storage-blob-service-properties-set
    outputs:
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.id
      description: Fully qualified resource ID for the resource.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.name
      description: The name of the resource.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.type
      description: The type of the resource.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.cors.corsRules.allowedOrigins
      description: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.cors.corsRules.allowedMethods
      description: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.cors.corsRules.maxAgeInSeconds
      description: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
      type: Number
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.cors.corsRules.exposedHeaders
      description: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.cors.corsRules.allowedHeaders
      description: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.defaultServiceVersion
      description: Indicates the default version to use for requests to the Blob service if an incoming request\u2019s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
      type: Date
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.deleteRetentionPolicy.enabled
      description: Indicates whether DeleteRetentionPolicy is enabled.
      type: Boolean
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.deleteRetentionPolicy.days
      description: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
      type: Number
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.isVersioningEnabled
      description: Versioning is enabled if set to true.
      type: Boolean
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.changeFeed.enabled
      description: Indicates whether change feed event logging is enabled for the Blob service.
      type: Boolean
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.properties.changeFeed.retentionInDays
      description: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days.
      type: Number
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.sku.name
      description: The SKU name.
      type: String
    - ContextPath: Azure.StorageAccount.BlobServiceProperties.sku.tier
      description: The SKU tier.
      type: String
  - arguments:
    - name: name
      required: true
      description: Name of the policy assignment.
    - name: subscription_id
      type: string
      description: The subscription ID.
    - name: policy_definition_id
      required: false
      type: string
      description: The ID of the policy definition or policy set definition being assigned.
    - name: display_name
      type: string
      description: Display name of the assignment.
    - name: parameters
      description: JSON object of policy properties parameters and their values.
    - name: description
      type: string
      description: This message will be part of the response in case of policy violation.
    name: azure-policy-assignment-create
    description: Creates a policy assignment.
    outputs:
    - contextPath: Azure.PolicyAssignment.ID
      description: The resource ID of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Name
      description: The name of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Type
      description: The type of the resource (e.g., 'Microsoft.Authorization/policyAssignments').
      type: string
    - contextPath: Azure.PolicyAssignment.Location
      description: The location of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Identity
      description: The managed identity associated with the policy assignment.
      type: object
    - contextPath: Azure.PolicyAssignment.Properties.DisplayName
      description: The display name of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.Description
      description: The description of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.PolicyDefinitionId
      description: The ID of the policy definition or policy set definition being assigned.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.Scope
      description: The scope of the policy assignment.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.NotScopes
      description: The list of scopes that are excluded from the policy assignment.
      type: array
    - contextPath: Azure.PolicyAssignment.Properties.Parameters
      description: The parameter values for the assigned policy rule.
      type: object
    - contextPath: Azure.PolicyAssignment.Properties.Metadata
      description: The metadata associated with the policy assignment.
      type: object
    - contextPath: Azure.PolicyAssignment.Properties.EnforcementMode
      description: The policy assignment enforcement mode (e.g., 'Default' or 'DoNotEnforce').
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.latestDefinitionVersion
      description: The latest version of the policy definition available. This is only present if requested via the $expand query parameter.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.NonComplianceMessages
      description: The messages that describe why a resource is non-compliant with the policy.
      type: array
    - contextPath: Azure.PolicyAssignment.Properties.DefinitionVersion
      description: The version of the policy definition to use.
      type: string
    - contextPath: Azure.PolicyAssignment.Properties.Overrides
      description: The policy property value overrides.
      type: array
    - contextPath: Azure.PolicyAssignment.Properties.ResourceSelectors
      description: The resource selectors to filter policies by resource properties.
      type: array
    - contextPath: Azure.PolicyAssignment.SystemData
      description: The system metadata relating to this resource.
      type: array
  - arguments:
    - name: resource_group_name
      type: string
      description: The resource group name.
    - name: server_name
      type: string
      required: true
      description: Name of the PostgreSQL server.
    - name: configuration_name
      type: string
      required: true
      description: Name of the configuration setting.
    - name: subscription_id
      type: string
      description: Subscription ID.
    - name: source
      type: string
      description: Source of the configuration.
    - name: value
      type: string
      description: Value of the configuration.
    name: azure-postgres-config-set
    description: Updates a configuration of a server.
    outputs:
    - contextPath: Azure.Postgres.Configuration.id
      description: The resource ID of the configuration.
      type: string
    - contextPath: Azure.Postgres.Configuration.name
      description: The name of the configuration setting.
      type: string
    - contextPath: Azure.Postgres.Configuration.type
      description: The type of the resource.
      type: string
    - contextPath: Azure.Postgres.Configuration.properties.value
      description: The value of the configuration setting.
      type: string
    - contextPath: Azure.Postgres.Configuration.properties.source
      description: The source of the configuration value.
      type: string
  - arguments:
    - name: resource_group_name
      type: string
      required: false
      description: The resource group name.
    - name: subscription_id
      type: string
      required: false
      description: Subscription ID.
    - name: name
      type: string
      required: true
      description: Name of the Web App.
    - auto: PREDEFINED
      name: http20_enabled
      type: bool
      required: false
      description: Configures a web site to allow clients to connect over http2.0
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      name: remote_debugging_enabled
      type: bool
      required: false
      description: True if remote debugging is enabled; otherwise, false.
      predefined:
      - 'true'
      - 'false'
    - name: min_tls_version
      type: str
      auto: PREDEFINED
      required: false
      description: Configures the minimum version of TLS required for SSL requests
      predefined:
      - 1.0	
      - 1.1	
      - 1.2	
      - 1.3
    name: azure-webapp-config-set
    description: Updates the configuration settings of an existing Azure Web App.
    outputs: []
  - arguments:
    - name: resource_group_name
      type: string
      required: false
      description: The resource group name.
    - name: subscription_id
      type: string
      required: false
      description: Subscription ID.
    - name: name
      type: string
      required: true
      description: Name of the Web App.
    - auto: PREDEFINED
      name: enabled
      type: bool
      required: false
      description: True if the Authentication / Authorization feature is enabled for the current app; otherwise, false.
      predefined:
      - 'true'
      - 'false'
    name: azure-webapp-auth-update
    description: Updates the authentication and authorization settings of an existing Azure Web App.
    outputs: []
  - arguments:
    - name: resource_id
      type: string
      required: true
      description: Full Azure resource ID to update.
    - auto: PREDEFINED
      name: allow_blob_public_access
      type: bool
      description: Whether to allow public access to blob containers.
      predefined:
      - 'true'
      - 'false'
    - name: location
      required: true
      type: string
      description: Resource location.
    - name: account_type
      type: string
      description: Account type of the resource.
    name: azure-resource-update
    description: Updates a resource by ID.
    outputs: []
  - arguments:
    - name: resource_group_name
      type: string
      required: false
      description: The resource group name.
    - name: subscription_id
      type: string
      required: false
      description: Subscription ID.
    - name: server_name
      type: string
      required: true
      description: Name of the MySQL flexible server.
    - name: configuration_name
      type: string
      required: true
      description: The name of the server configuration.
    - name: source
      type: string
      required: false
      description: Source of the configuration.
    - name: value
      type: string
      required: false
      description: Value of the configuration.
    name: azure-mysql-flexible-server-param-set
    description: Updates a configuration of a server.
    outputs: []
  - arguments:
    - name: log_profile_name
      description: The name of the log profile to update.
      required: true
      type: String
    - name: subscription_id
      description: Subscription ID.
      type: String
    - name: location
      description: Resource location.
      required: true
    - name: retention_policy_days
      description: Number of days to retain logs.
      type: Number
    - auto: PREDEFINED
      name: retention_policy_enabled
      description: Whether to enable the retention policy.
      type: bool
      predefined:
      - 'true'
      - 'false'
    name: azure-monitor-log-profile-update
    description: Create or update a log profile in Azure Monitoring REST API.
    outputs: []
  - arguments:
    - name: resource_group_name
      type: string
      required: false
      description: The resource group name.
    - name: subscription_id
      type: string
      required: false
      description: Subscription ID.
    - name: disk_name
      type: string
      required: true
      description: The name of the managed disk that is being created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
    - name: public_network_access
      type: string
      required: false
      auto: PREDEFINED
      predefined:
        - Disabled
        - Enabled
      description: Policy for controlling export on the disk.
    - name: network_access_policy
      type: string
      required: false
      auto: PREDEFINED
      predefined:
        - AllowAll
        - AllowPrivate
        - DenyAll
      description: Policy for accessing the disk via network.
    - name: data_access_auth_mode
      type: string
      required: false
      auto: PREDEFINED
      predefined:
        - AzureActiveDirectory
      description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
    name: azure-compute-disk-update
    description: Updates a disk.
    outputs: 
    - contextPath: Azure.Compute.Disk.id
      description: Resource ID of the disk.
      type: String
    - contextPath: Azure.Compute.Disk.name
      description: Name of the disk.
      type: String
    - contextPath: Azure.Compute.Disk.type
      description: Type of the resource.
      type: String
    - contextPath: Azure.Compute.Disk.location
      description: Location of the disk.
      type: String
    - contextPath: Azure.Compute.Disk.tags
      description: Resource tags.
    - contextPath: Azure.Compute.Disk.managedBy
      description: ARM ID of the resource that manages the disk.
      type: String
    - contextPath: Azure.Compute.Disk.sku
      description: The disk SKU name.
    - contextPath: Azure.Compute.Disk.zones
      description: A list of availability zones.
    - contextPath: Azure.Compute.Disk.properties.timeCreated
      description: The time when the disk was created.
      type: String
    - contextPath: Azure.Compute.Disk.properties.diskSizeGB
      description: Size of the disk in GB.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.diskIopsReadWrite
      description: The number of IOPS allowed for this disk.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.diskMBpsReadWrite
      description: The bandwidth allowed for this disk in MBps.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.diskIOPSReadOnly
      description: The number of read-only IOPS for this disk.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.diskMBpsReadOnly
      description: The read-only bandwidth for this disk in MBps.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.diskSizeBytes
      description: The size of the disk in bytes.
      type: Number
    - contextPath: Azure.Compute.Disk.properties.networkAccessPolicy
      description: Policy for accessing the disk via network.
      type: String
    - contextPath: Azure.Compute.Disk.properties.publicNetworkAccess
      description: Policy for export on the disk.
      type: String
    - contextPath: Azure.Compute.Disk.properties.burstingEnabled
      description: Whether bursting is enabled on the disk.
      type: Boolean
    - contextPath: Azure.Compute.Disk.properties.optimization
      description: The disk optimization setting.
      type: String
    - contextPath: Azure.Compute.Disk.properties.diskState
      description: The current state of the disk.
      type: String
    - contextPath: Azure.Compute.Disk.properties.supportedCapabilities
      description: Supported capabilities of the disk.
    - contextPath: Azure.Compute.Disk.properties.supportedPerformanceTiers
      description: Supported performance tiers of the disk.
    - contextPath: Azure.Compute.Disk.properties.supportedDiskTypes
      description: Supported disk types for the disk.
    - contextPath: Azure.Compute.Disk.properties.provisioningState
      description: The provisioning state of the disk.
    - contextPath: Azure.Compute.Disk.properties.timeModified
      description: The time when the disk was last modified.
    - contextPath: Azure.Compute.Disk.properties.diskAccessId
      description: ARM id of the DiskAccess resource.
      type: String
    - contextPath: Azure.Compute.Disk.properties.networkProfile
      description: The network profile of the disk.
    - contextPath: Azure.Compute.Disk.properties.creationData
      description: Disk creation data.
    - contextPath: Azure.Compute.Disk.properties.encryption
      description: Encryption settings for the disk.
    - contextPath: Azure.Compute.Disk.properties.encryptionSettingsCollection
      description: A collection of encryption settings.
    - contextPath: Azure.Compute.Disk.properties.encryptionType
      description: The type of key used to encrypt the data on the disk.
      type: String
    - contextPath: Azure.Compute.Disk.properties.securityProfile
      description: Security profile for the disk.
    - contextPath: Azure.Compute.Disk.properties.tieringProfile
      description: Tiering profile for the disk.
    - contextPath: Azure.Compute.Disk.properties.supportedTierList
      description: List of supported tiers for the disk.
    - contextPath: Azure.Compute.Disk.properties.availabilityZone
      description: Availability zone of the disk.
      type: String
    - contextPath: Azure.Compute.Disk.properties.dataAccessAuthMode
      description: Additional authentication requirements when exporting or uploading to a disk.
      type: String
    - contextPath: Azure.Compute.Disk.properties.osType
      description: The operating system type.
      type: String
    - contextPath: Azure.Compute.Disk.properties.hyperVGeneration
      description: The HyperVGenerationType of the virtual machine.
      type: String
    - contextPath: Azure.Compute.Disk.properties.lastOwnershipUpdateTime
      description: The last time ownership of the disk was updated.
      type: String
  - arguments:
    - name: resource_group_name
      type: String
      required: false
      description: The resource group name.
    - name: subscription_id
      type: String
      required: false
      description: Subscription ID.
    - name: name
      type: String
      required: true
      description: Name of the Web App.
    - name: identity_type
      type: String
      required: false
      auto: PREDEFINED
      predefined:
        - None
        - SystemAssigned
      description: Managed service identity type.
    - name: https_only
      description: Configures the web site to accept only https requests.
      type: bool
      predefined:
      - 'true'
      - 'false'
    - name: client_cert_enabled
      description: Configures the web site to accept only https requests
      type: bool
      predefined:
      - 'true'
      - 'false'
    name: azure-webapp-update
    description: Updates an Azure Web App.
    outputs: []
  - arguments:
    - name: resource_group_name
      type: String
      description: The resource group name.
    - name: subscription_id
      type: String
      description: Subscription ID.
    - name: registry_name
      type: String
      required: true
      description: The name of the container registry.
    - name: allow_exports
      type: Boolean
      description: Whether artifacts can be exported.
      predefined:
        - 'true'
        - 'false'
    - name: public_network_access
      type: String
      description: Whether public network access is allowed for the container registry.
      predefined:
        - Disabled
        - Enabled
    - name: anonymous_pull_enabled
      type: Boolean
      description: Enables registry-wide pull from unauthenticated clients.
      predefined:
        - 'true'
        - 'false'
    - name: authentication_as_arm_policy
      auto: PREDEFINED
      predefined:
      - Disabled
      - Enabled
      description: Whether the policy is enabled or not.
    name: azure-acr-update
    description: Updates a container registry.
    outputs: []
  - arguments:
    - name: resource_group_name
      type: String
      required: false
      description: The resource group name.
    - name: subscription_id
      type: String
      required: false
      description: Subscription ID.
    - name: server_name
      type: String
      required: true
      description: Name of the PostgreSQL server.
    - name: ssl_enforcement
      type: String
      description: Enable ssl enforcement or not when connect to server.
      predefined:
        - Disabled
        - Enabled
    name: azure-postgres-server-update
    description: Updates an existing server.
    outputs: []
  - arguments:
    - description: Key Vault name.
      name: vault_name
      required: true
    - name: subscription_id
      description: The subscription ID.
      type: String
    - name: resource_group_name
      description: The name of the resource group.
      type: String
    - name: enable_purge_protection
      description: Whether protection against purge is enabled for this vault. Enabling this functionality is irreversible - that is, the property does not accept false as its value.
      type: bool
      auto: PREDEFINED
      predefined:
      - 'true'
    - name: enable_soft_delete
      description: Whether the 'soft delete' functionality is enabled for this key vault. Enabling this functionality is irreversible - that is, the property does not accept false as its value.
      type: bool
      auto: PREDEFINED
      predefined:
      - 'true'
    description: Updates a key vault in the specified subscription. 
    name: azure-key-vault-update
    outputs:
    - contextPath: AzureKeyVault.KeyVault.id
      description: Resource ID.
      type: String
    - contextPath: AzureKeyVault.KeyVault.name
      description: Key Vault name.
      type: String
    - contextPath: AzureKeyVault.KeyVault.type
      description: Resource type in Azure.
      type: String
    - contextPath: AzureKeyVault.KeyVault.location
      description: Key Vault location.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.sku.family
      description: SKU family name.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.sku.name
      description: SKU name to specify whether the key vault is a standard vault or a premium vault.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.tenantId
      description: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.accessPolicies.tenantId
      description: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.accessPolicies.objectId
      description: The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.accessPolicies.permissions.keys
      description: Permissions to keys.
      type: Unknown
    - contextPath: AzureKeyVault.KeyVault.properties.accessPolicies.permissions.secrets
      description: Permissions to secrets.
      type: Unknown
    - contextPath: AzureKeyVault.KeyVault.properties.accessPolicies.permissions.certificates
      description: Permissions to certificates.
      type: Unknown
    - contextPath: AzureKeyVault.KeyVault.properties.enabledForDeployment
      description: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
      type: Boolean
    - contextPath: AzureKeyVault.KeyVault.properties.enabledForDiskEncryption
      description: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
      type: Boolean
    - contextPath: AzureKeyVault.KeyVault.properties.enabledForTemplateDeployment
      description: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
      type: Boolean
    - contextPath: AzureKeyVault.KeyVault.properties.vaultUri
      description: The URI of the vault for performing operations on keys and secrets.
      type: String
    - contextPath: AzureKeyVault.KeyVault.properties.provisioningState
      description: The current provisioning state.
      type: String
  - arguments:
    - description: Server name.
      name: server_name
      required: true
    - description: Database name.
      name: db_name
      required: true
    - auto: PREDEFINED
      description: 'Whether the alert is sent to the account administrators. Possible values: "true" and "false".'
      name: email_account_admins
      predefined:
      - 'true'
      - 'false'
    - description: Subscription ID.
      name: subscription_id
    - description: The name of the resource group.
      isArray: true
      name: resource_group_name
    description: Updates the database's threat detection policy.
    name: azure-sql-db-threat-policy-update
    outputs:
    - contextPath: Azure.SQL.DBThreatPolicy.kind
      description: Kind of threat policy.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.location
      description: Threat policy location.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.id
      description: Threat policy ID.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.name
      description: Threat policy name.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.type
      description: Threat policy type.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.state
      description: Threat policy state.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.creationTime
      description: Threat policy creation time.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.retentionDays
      description: Number of days to keep in the Threat Detection audit logs.
      type: Number
    - contextPath: Azure.SQL.DBThreatPolicy.storageAccountAccessKey
      description: The identifier key of the Threat Detection audit storage account.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.storageEndpoint
      description: Threat Detection audit storage account.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.emailAccountAdmins
      description: Email accounts administrators who the alert is sent to.
      type: Boolean
    - contextPath: Azure.SQL.DBThreatPolicy.emailAddresses
      description: List of email addresses to which the alert is sent.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.disabledAlerts
      description: List of alerts that are disabled, or an empty string if no alerts are disabled.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.useServerDefault
      description: Whether to use the default server policy.
      type: Unknown
    - contextPath: Azure.SQL.DBThreatPolicy.databaseName
      description: The name of the database that the threat policy is related to.
      type: String
    - contextPath: Azure.SQL.DBThreatPolicy.serverName
      description: The name of server that the threat policy is related to.
      type: String
  - arguments:
    - description: Server name.
      name: server_name
      required: true
    - description: Database name.
      name: db_name
      required: true
    - auto: PREDEFINED
      description: The state of the transparent data encryption.
      name: state
      predefined:
      - Disabled
      - Enabled
    - description: Subscription ID.
      name: subscription_id
    - description: The name of the resource group.
      isArray: true
      name: resource_group_name
    description: Updates a logical database's transparent data encryption configuration.
    name: azure-sql-db-transparent-data-encryption-set
    outputs: []
  - arguments:
    - description: Cosmos DB database account name.
      name: account_name
      required: true
    - auto: PREDEFINED
      description: Disable write operations on metadata resources via account keys.
      name: disable_key_based_metadata_write_access
      predefined:
      - 'true'
      - 'false'
      type: bool
    - description: Subscription ID.
      name: subscription_id
    - description: The name of the resource group.
      isArray: true
      name: resource_group_name
    description: Updates the properties of an existing Azure Cosmos DB database account.
    name: azure-cosmos-db-update
    outputs: []
  isfetch: false
  runonce: false
  script: '-'
  type: python
  subtype: python3
  dockerimage: devdemisto/azure-cli:1.0.0.3254609
fromversion: 6.1.0
marketplaces:
- xsoar
- marketplacev2
tests:
- No tests (auto formatted)
