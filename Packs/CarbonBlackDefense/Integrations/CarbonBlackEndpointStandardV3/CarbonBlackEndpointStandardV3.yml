category: Endpoint
commonfields:
  id: Carbon Black Endpoint Standard v3 -dev
  version: -1
configuration:
- name: url
  defaultvalue: https://defense.conferdeploy.net/
  display: URL
  required: true
  type: 0
- name: custom_credentials
  display: Custom Api Key (using for API version 7)
  type: 9
  required: false
- name: live_response_credentials
  display: Api Key (Api/Live Response key using for API version 3)
  type: 9
  required: false
- name: organization_key
  display: Organization Key
  type: 0
  required: false
  additionalinfo: The organization unique key. This is required for all use cases (and for fetching incidents).
- name: incidentType
  display: Incident type
  type: 13
  required: false
- name: isFetch
  display: Fetch incidents
  type: 8
  required: false
- name: insecure
  display: Trust any certificate (not secure)
  type: 8
  required: false
- name: proxy
  display: Use system proxy settings
  type: 8
  required: false
- name: type
  display: The type of the alert
  defaultvalue: all
  options:
    - cbanalytics
    - containerruntime
    - devicecontrol
    - hostnasedfirewall
    - intrusiondetectionsystem
    - watchlist
    - all
  type: 15
  required: false
  additionalinfo: Type of alert to be fetched.
- name: device_id
  display: Device id
  type: 0
  required: false
  additionalinfo: The alerts related to a specific device, represented by its ID.
- name: policy_id
  display: Policy id
  type: 0
  required: false
  additionalinfo: The alerts related to a specific policy, represented by its ID.
- name: device_username
  display: Device username
  type: 0
  required: false
  additionalinfo: The alerts related to a specific device, represented by its username.
- name: min_severity
  display: Minimum severity
  options:
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
  - '6'
  - '7'
  - '8'
  - '9'
  - '10'
  type: 15
  required: false
  additionalinfo: The minimum severity of the alerts to be fetched.
- name: query
  display: Query
  type: 0
  required: false
  additionalinfo: Query in Lucene syntax and/or value searches. If defined, the other fetch incidents parameters should be left blank.
- name: first_fetch
  display: First fetch timestamp (<number> <time unit>, e.g., 12 hours, 7 days).
  type: 0
  required: false
  defaultvalue: 7 days
- name: max_fetch
  display: Maximum number of incidents per fetch
  type: 0
  required: false
  defaultvalue: '50'
description: Endpoint Standard is an industry-leading next-generation antivirus (NGAV) and behavioral endpoint detection and response (EDR) solution. Endpoint Standard is delivered through the Carbon Black Cloud, an endpoint protection platform that consolidates security in the cloud using a single agent, console and data set.
display: Carbon Black Endpoint Standard v3 -dev
name: Carbon Black Endpoint Standard v3 -dev
script:
  commands:
  - name: cbd-get-alert-details
    arguments:
    - name: alertId
      description: The ID of the alert.
      required: true
    description: Get details about the events that led to an alert by its ID. This includes retrieving metadata around the alert as well as a list of all the events associated with the alert. Only API keys of type “API” can call the alerts API.
  - name: cbd-alerts-search
    arguments:
    - name: type
      description: The type of the alerts.
      auto: PREDEFINED
      predefined:
      - cbanalytics
      - containerruntime
      - devicecontrol
      - hostnasedfirewall
      - intrusiondetectionsystem
      - watchlist
      - all
      defaultValue: all
    - name: device_id
      description: The device ID.
    - name: first_event_time
      description: 'The time of the first event associated with the alert. The syntax is  {"start": "<dateTime>", "range": "<string>", "end": "<dateTime>" }. For example: { "start": "2010-09-25T00:10:50.277Z", "end": "2015-01-20T10:40:00.00Z"}.'
    - name: policy_id
      description: The policy ID.
    - name: process_sha256
      description: The SHA-256 hash of the primary involved process.
    - name: reputation
      auto: PREDEFINED
      predefined:
      - ADAPTIVE_WHITE_LIST
      - COMMON_WHITE_LIST
      - COMPANY_BLACK_LIST
      - COMPANY_WHITE_LIST
      - PUP
      - TRUSTED_WHITE_LIST
      - RESOLVING
      - COMPROMISED_OBSOLETE
      - DLP_OBSOLETE
      - IGNORE
      - ADWARE
      - HEURISTIC
      - SUSPECT_MALWARE
      - KNOWN_MALWARE
      - ADMIN_RESTRICT_OBSOLETE
      - NOT_LISTED
      - GRAY_OBSOLETE
      - NOT_COMPANY_WHITE_OBSOLETE
      - LOCAL_WHITE
      - NOT_SUPPORTED
      description: 'The reputation of the primary involved process. Possible values: "KNOWN_MALWARE", "NOT_LISTED", etc.'
    - name: tags
      description: The tags associated with the alert.
    - name: device_username
      description: The username of the user logged on during the alert. If the user is not available then this may be populated with the device owner.
    - name: query
      description: The query in Lucene syntax and/or value searches.
    - name: rows
      description: The number of results to be returned.
    - name: start
      description: The number of the alert from where to start retrieving results.
    description: Gets details on the events that led to an alert. This includes retrieving metadata around the alert as well as the event associated with the alert.
  - name: cbd-get-policy
    arguments:
    - name: policyId
      description: The policy ID.
      required: true
    description: Retrieves a policy object by ID.
  - name: cbd-delete-policy
    arguments:
    - name: policyId
      description: The policy ID.
      required: true
    description: 'Deletes a policy from the CB Defense backend. This may return an error if devices are actively assigned to the policy ID requested for deletion. Note: System policies cannot be deleted.'
  - name: cbd-create-policy
    arguments:
    - name: description
      description: A description of the policy. Can be multiple lines.
      required: true
    - name: name
      description: A unique one-line name for the policy.
      required: true
    - name: priorityLevel
      description: 'The priority score associated with sensors assigned to this policy. Possible values: "MISSION_CRITICAL", "HIGH", "MEDIUM", and "LOW".'
      auto: PREDEFINED
      predefined:
      - MISSION_CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      required: true
    - name: policy
      description: The JSON object containing the policy details. Make sure a valid policy object is passed. You can use the get-policy command to retrieve a similar policy object. Then you can reset some of the policy's fields with the set-policy command, and pass the edited object.
      required: true
    description: Creates a new policy on the CB Defense backend.
  - name: cbd-update-policy
    arguments:
    - name: description
      description: A description of the policy. Can be multiple lines.
      required: true
    - name: name
      description: A unique one-line name for the policy.
      required: true
    - name: priorityLevel
      description: 'The priority score associated with sensors assigned to this policy. Possible values: "MISSION_CRITICAL", "HIGH", "MEDIUM", and "LOW".'
      auto: PREDEFINED
      predefined:
      - MISSION_CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      required: true
    - name: id
      description: The policy ID to update.
      required: true
    - name: policy
      description: The JSON object containing the policy details. Make sure a valid policy object is passed. You can use the get-policy command to retrieve a similar policy object. Then you can reset some of the policy's fields with the set-policy command, and pass the edited object.
      required: true
    description: Update an existing policy on the CB Defense backend.
  - name: cbd-set-policy
    arguments:
    - name: policy
      description: The policy ID to set.
      required: true
    - name: keyValue
      description: The JSON object containing the policy details. Make sure a valid policy object is passed. You can use the get-policy command to retrieve a similar policy object. Then you can reset some of the policy's fields with the set-policy command, and pass the edited object.
      required: true
    description: Set existing policy's fields on the CB Defense backend.
  - name: cbd-delete-policy
    arguments:
    - name: policyId
      description: The policy ID to delete.
      required: true
    description: Delete policy from the CB Defense backend.
  - name: cbd-add-rule-to-policy
    arguments:
    - name: action
      auto: PREDEFINED
      description: 'Rule action. Possible values: "TERMINATE", "IGNORE", "TERMINATE_THREAD", "ALLOW", "DENY, and "TERMINATE_PROCESS".'
      predefined:
      - TERMINATE
      - IGNORE
      - TERMINATE_THREAD
      - ALLOW
      - DENY
      - TERMINATE_PROCESS
      required: true
    - name: operation
      auto: PREDEFINED
      description: Rule operation.
      predefined:
      - BYPASS_ALL
      - BYPASS_API
      - INVOKE_SCRIPT
      - INVOKE_SYSAPP
      - POL_INVOKE_NOT_TRUSTED
      - INVOKE_CMD_INTERPRETER
      - RANSOM
      - NETWORK
      - CODE_INJECTION
      - PROCESS_ISOLATION
      - MEMORY_SCRAPE
      - RUN_INMEMORY_CODE
      - ESCALATE
      - RUN
      required: true
    - name: required
      auto: PREDEFINED
      description: 'Whether the rule is required. Possible values: "true" and "false".'
      predefined:
      - 'true'
      - 'false'
      required: true
    - name: type
      auto: PREDEFINED
      description: 'Application type. Possible values: "REPUTATION", "SIGNED_BY", and "NAME_PATH".'
      predefined:
      - REPUTATION
      - SIGNED_BY
      - NAME_PATH
      required: true
    - name: value
      description: Application value.
      predefined:
      - ADWARE,
      - COMMON_WHITE_LIST,
      - COMPANY_BLACK_LIST,
      - COMPANY_WHITE_LIST,
      - HEURISTIC,
      - IGNORE,
      - KNOWN_MALWARE,
      - LOCAL_WHITE, 
      - NOT_LISTED,
      - PUP,
      - RESOLVING,
      - SUSPECT_MALWARE,
      - TRUSTED_WHITE_LIST
      required: true
    - name: policyId
      description: The policy ID.
      required: true
    description: 'Adds a new rule to an existing policy. Note: System policies cannot be modified.'
  - name: cbd-update-rule-in-policy
    arguments:
    - name: action
      auto: PREDEFINED
      description: 'Rule action. Possible values: "TERMINATE", "IGNORE", "TERMINATE_THREAD", "ALLOW", "DENY", and "TERMINATE_PROCESS".'
      predefined:
      - TERMINATE
      - IGNORE
      - TERMINATE_THREAD
      - ALLOW
      - DENY
      - TERMINATE_PROCESS
      required: true
    - name: operation
      auto: PREDEFINED
      description: Rule operation.
      predefined:
      - BYPASS_ALL
      - BYPASS_API
      - INVOKE_SCRIPT
      - INVOKE_SYSAPP
      - POL_INVOKE_NOT_TRUSTED
      - INVOKE_CMD_INTERPRETER
      - RANSOM
      - NETWORK
      - CODE_INJECTION
      - PROCESS_ISOLATION
      - MEMORY_SCRAPE
      - RUN_INMEMORY_CODE
      - ESCALATE
      - RUN
      required: true
    - name: required
      auto: PREDEFINED
      description: 'Whether the rule is required. Possible values: "true" and "false".'
      predefined:
      - 'true'
      - 'false'
      required: true
    - name: id
      description: Rule ID.
      required: true
    - name: type
      auto: PREDEFINED
      description: 'Application type. Possible values: "REPUTATION", "SIGNED_BY", and "NAME_PATH".'
      predefined:
      - REPUTATION
      - SIGNED_BY
      - NAME_PATH
      required: true
    - name: value
      description: Application value.
      required: true
    - name: policyId
      description: The policy ID.
      required: true
    description: 'Updates an existing rule with a new rule. Note: System policies cannot be modified.'
  - name: cbd-delete-rule-from-policy
    arguments:
    - name: policyId
      description: The policy ID.
      required: true
    - name: ruleId
      description: The rule ID.
      required: true
    description: 'Removes a rule from an existing policy. Note: System policies cannot be modified.'
  - name: cbd-get-policies-summary
    description: Get an overview of the policies available in the organization.
  - name: cbd-find-processes
    arguments:
    - name: job_id
      hidden: true
      description: 'The unique identifier for the process search job. This ID is used to retrieve the results of the process search initiated by the Carbon Black Cloud. If not provided, a new search job will be created based on the other provided arguments.'
    - name: alert_category
      auto: PREDEFINED
      description: 'The Carbon Black Cloud classification for events tagged to an alert. Possible values: "THREAT" and "OBSERVED".'
      predefined:
      - THREAT
      - OBSERVED
    - name: device_external_ip
      description: The IP address of the endpoint according to Carbon Black Cloud. This IP address can differ from the device_internal_ip due to network proxy or NAT. Can be either IPv4 or IPv6 format.
    - name: device_id
      description: The ID assigned to the endpoint by Carbon Black Cloud. This ID is unique across all Carbon Black Cloud environments.
    - name: device_internal_ip
      description: The IP address of the endpoint reported by the sensor. Can be either IPv4 or IPv6 format.
    - name: device_name
      description: The hostname of the endpoint recorded by the sensor when last initialized.
    - name: device_os
      auto: PREDEFINED
      description: 'The operating system of the endpoint. Possible values: "WINDOWS", "MAC", "LINUX".'
      predefined:
      - WINDOWS
      - MAC
      - LINUX
    - name: device_timestamp
      description: 'The sensor-reported timestamp of the batch of events in which this record was submitted to Carbon Black Cloud. specified as ISO 8601 timestamp in UTC for example: 2020-01-19T04:28:40.190Z.'
    - name: event_type
      auto: PREDEFINED
      description: 'The type of enriched event observed. Possible value: "filemod", "netconn", "regmod", "modload", "crossproc", "childproc", "scriptload", and "fileless_scriptload".'
      predefined:
      - filemod
      - netconn
      - regmod
      - modload
      - crossproc
      - childproc
      - scriptload
      - fileless_scriptload
    - name: parent_name
      description: The file system path of the parent process binary.
    - name: parent_reputation
      auto: PREDEFINED
      description: 'The reputation of the parent process applied by Carbon Black Cloud when the event is initially processed. Possible values: "ADAPTIVE_WHITE_LIST", "ADWARE", "COMMON_WHITE_LIST", "COMPANY_BLACK_LIST", "COMPANY_WHITE_LIST", "HEURISTIC", "IGNORE", "KNOWN_MALWARE", "LOCAL_WHITE", "NOT_LISTED", "PUP", "RESOLVING", "SUSPECT_MALWARE", and "TRUSTED_WHITE_LIST".'
      predefined:
      - ADAPTIVE_WHITE_LIST
      - ADWARE
      - COMMON_WHITE_LIST
      - COMPANY_BLACK_LIST
      - COMPANY_WHITE_LIST
      - HEURISTIC
      - IGNORE
      - KNOWN_MALWARE
      - LOCAL_WHITE
      - NOT_LISTED
      - PUP
      - RESOLVING
      - SUSPECT_MALWARE
      - TRUSTED_WHITE_LIST
    - name: process_cmdline
      description: The command line executed by the actor process.
    - name: process_guid
      description: The unique process identifier for the actor process.
    - name: hash
      description: Aggregate set of MD5 and SHA-256 hashes associated with the process (including childproc_hash, crossproc_hash, filemod_hash, modload_hash, process_hash).
    - name: process_name
      description: The file system path of the actor process binary.
    - name: process_pid
      description: The process identifier assigned by the operating system. This can be multi-valued in case of fork() or exec() process operations on Linux and macOS.
    - name: process_reputation
      auto: PREDEFINED
      description: 'The reputation of the actor process applied when the event is processed by Carbon Black Cloud. Possible values: "ADAPTIVE_WHITE_LIST", "ADWARE", "COMMON_WHITE_LIST", "COMPANY_BLACK_LIST", "COMPANY_WHITE_LIST", "HEURISTIC", "IGNORE", "KNOWN_MALWARE", "LOCAL_WHITE", "NOT_LISTED", "PUP", "RESOLVING", "SUSPECT_MALWARE", and "TRUSTED_WHITE_LIST".'
      predefined:
      - ADAPTIVE_WHITE_LIST
      - ADWARE
      - COMMON_WHITE_LIST
      - COMPANY_BLACK_LIST
      - COMPANY_WHITE_LIST
      - HEURISTIC
      - IGNORE
      - KNOWN_MALWARE
      - LOCAL_WHITE
      - NOT_LISTED
      - PUP
      - RESOLVING
      - SUSPECT_MALWARE
      - TRUSTED_WHITE_LIST
    - name: process_start_time
      description: 'The sensor reported timestamp of when the process started. specified as ISO 8601 timestamp in UTC for example: 2020-05-04T21:34:03.968Z. This is not available for processes running before the sensor starts.'
    - name: process_terminated
      auto: PREDEFINED
      description: 'Whether the process has terminated. Possible values: "true" and "false". Always "false" for enriched events (process termination not recorded).'
      predefined:
      - 'true'
      - 'false'
    - name: process_username
      description: |-
        The user context in which the actor process was executed.
        MacOS - all users for the PID for fork() and exec() transitions.
        Linux - process user for exec() events, but in a future sensor release can be multi-valued due to setuid().
    - name: sensor_action
      auto: PREDEFINED
      description: 'The action performed by the sensor on the process. Possible values: "TERMINATE", "DENY", and "SUSPEND".'
      predefined:
      - TERMINATE
      - DENY
      - SUSPEND
    - name: query
      description: The query in Lucene syntax and/or value searches.
    - name: rows
      description: The number of rows to request. Can be paginated.
    - name: start
      description: The first row to use for pagination.
    - name: time_range
      description: 'The time window in which to restrict the search to match using device_timestamp as the reference. The window value will take priority over the start and end times if provided. For example {"end": "2020-01-21T18:34:04Z", "start": "2020-01-18T18:34:04Z", "window": "-2w"}, window: “-2w” (where y=year, w=week, d=day, h=hour, m=minute, s=second) start: ISO 8601 timestamp, end: ISO 8601 timestamp.'
    - name: interval_in_seconds
      description: Used for polling.
    - name: time_out
      description: Used for polling.
    description: 'Creates a process search job and retrieves the search results. At least one of the arguments (not including: rows, start, and time_range) is required.'
    polling: true
  - name: cbd-find-observation-details
    arguments:
    - name: job_id
      hidden: true
      description: The ID of the job to retrieve the details. This is used internally for polling.
    - name: alert_id
      description: The ID of the alert to retrieve the observation details.
    - name: event_ids
      description: A list of observation IDs to retrieve the details.
    - name: process_hash
      description: The hash of the process to search for.
    - name: device_id
      description: The ID of the device to filter the observations.
    - name: count_unique_devices
      description: A boolean indicating whether to count unique devices executing the process hash.
    - name: rows
      description: The maximum number of rows to return, up to 10,000.
    description: Fetches Carbon Black events details based on specified parameters. Supports polling to wait for the search job completion.
    polling: true
  - name: cbd-find-observation
    arguments:
    - name: job_id
      hidden: true
      description: The ID of the job to retrieve the observation. This is used internally for polling.
    - name: alert_category
      auto: PREDEFINED
      description: 'The Carbon Black Cloud classification for events tagged to an alert. Possible values: "THREAT" and "OBSERVED".'
      predefined:
      - THREAT
      - OBSERVED
    - name: device_external_ip
      description: The IP address of the endpoint according to Carbon Black Cloud. This IP address can differ from the device_internal_ip due to network proxy or NAT. Can be either IPv4 or IPv6 format.
    - name: device_id
      description: The ID assigned to the endpoint by Carbon Black Cloud. This ID is unique across all Carbon Black Cloud environments.
    - name: device_internal_ip
      description: The IP address of the endpoint reported by the sensor. Can be either IPv4 or IPv6 format.
    - name: device_name
      description: The hostname of the endpoint recorded by the sensor when last initialized.
    - name: device_os
      auto: PREDEFINED
      description: 'The operating system of the endpoint. Possible values: "WINDOWS", "MAC", "LINUX".'
      predefined:
      - WINDOWS
      - MAC
      - LINUX
    - name: device_timestamp
      description: 'The sensor-reported timestamp of the batch of events in which this record was submitted to Carbon Black Cloud. specified as ISO 8601 timestamp in UTC for example: 2020-01-19T04:28:40.190Z.'
    - name: event_type
      auto: PREDEFINED
      description: 'The type of enriched event observed. Possible value: "filemod", "netconn", "regmod", "modload", "crossproc", "childproc", "scriptload", and "fileless_scriptload".'
      predefined:
      - filemod
      - netconn
      - regmod
      - modload
      - crossproc
      - childproc
      - scriptload
      - fileless_scriptload
    - name: parent_name
      description: The file system path of the parent process binary.
    - name: parent_reputation
      auto: PREDEFINED
      description: 'The reputation of the parent process applied by Carbon Black Cloud when the event is initially processed. Possible values: "ADAPTIVE_WHITE_LIST", "ADWARE", "COMMON_WHITE_LIST", "COMPANY_BLACK_LIST", "COMPANY_WHITE_LIST", "HEURISTIC", "IGNORE", "KNOWN_MALWARE", "LOCAL_WHITE", "NOT_LISTED", "PUP", "RESOLVING", "SUSPECT_MALWARE", and "TRUSTED_WHITE_LIST".'
      predefined:
      - ADAPTIVE_WHITE_LIST
      - ADWARE
      - COMMON_WHITE_LIST
      - COMPANY_BLACK_LIST
      - COMPANY_WHITE_LIST
      - HEURISTIC
      - IGNORE
      - KNOWN_MALWARE
      - LOCAL_WHITE
      - NOT_LISTED
      - PUP
      - RESOLVING
      - SUSPECT_MALWARE
      - TRUSTED_WHITE_LIST
    - name: process_cmdline
      description: The command line executed by the actor process.
    - name: process_guid
      description: The unique process identifier for the actor process.
    - name: hash
      description: Aggregate set of MD5 and SHA-256 hashes associated with the process (including childproc_hash, crossproc_hash, filemod_hash, modload_hash, process_hash).
    - name: process_name
      description: The file system path of the actor process binary.
    - name: process_pid
      description: The process identifier assigned by the operating system. This can be multi-valued in case of fork() or exec() process operations on Linux and macOS.
    - name: process_reputation
      auto: PREDEFINED
      description: 'The reputation of the actor process applied when the event is processed by Carbon Black Cloud. Possible values: "ADAPTIVE_WHITE_LIST", "ADWARE", "COMMON_WHITE_LIST", "COMPANY_BLACK_LIST", "COMPANY_WHITE_LIST", "HEURISTIC", "IGNORE", "KNOWN_MALWARE", "LOCAL_WHITE", "NOT_LISTED", "PUP", "RESOLVING", "SUSPECT_MALWARE", and "TRUSTED_WHITE_LIST".'
      predefined:
      - ADAPTIVE_WHITE_LIST
      - ADWARE
      - COMMON_WHITE_LIST
      - COMPANY_BLACK_LIST
      - COMPANY_WHITE_LIST
      - HEURISTIC
      - IGNORE
      - KNOWN_MALWARE
      - LOCAL_WHITE
      - NOT_LISTED
      - PUP
      - RESOLVING
      - SUSPECT_MALWARE
      - TRUSTED_WHITE_LIST
    - name: process_start_time
      description: 'The sensor reported timestamp of when the process started. specified as ISO 8601 timestamp in UTC for example: 2020-05-04T21:34:03.968Z. This is not available for processes running before the sensor starts.'
    - name: process_terminated
      auto: PREDEFINED
      description: 'Whether the process has terminated. Possible values: "true" and "false". Always "false" for enriched events (process termination not recorded).'
      predefined:
      - 'true'
      - 'false'
    - name: process_username
      description: |-
        The user context in which the actor process was executed.
        MacOS - all users for the PID for fork() and exec() transitions.
        Linux - process user for exec() events, but in a future sensor release can be multi-valued due to setuid().
    - name: sensor_action
      auto: PREDEFINED
      description: 'The action performed by the sensor on the process. Possible values: "TERMINATE", "DENY", and "SUSPEND".'
      predefined:
      - TERMINATE
      - DENY
      - SUSPEND
    - name: query
      description: The query in Lucene syntax and/or value searches.
    - name: rows
      description: The number of rows to request. Can be paginated.
    - name: start
      description: The first row to use for pagination.
    - name: time_range
      description: 'The time window in which to restrict the search to match using device_timestamp as the reference. The window value will take priority over the start and end times if provided. For example {"end": "2020-01-21T18:34:04Z", "start": "2020-01-18T18:34:04Z", "window": "-2w"}, window: “-2w” (where y=year, w=week, d=day, h=hour, m=minute, s=second) start: ISO 8601 timestamp, end: ISO 8601 timestamp.'
    - name: interval_in_seconds
      description: Used for polling.
    - name: time_out
      description: Used for polling.
    description: Fetches Carbon Black events details based on specified parameters. Supports polling to wait for the search job completion.
    polling: true
  - name: cbd-device-search
    arguments:
    - name: device_id
      description: The identifier for the device.
    - name: os
      auto: PREDEFINED
      description: 'The operating system. Possible values: "WINDOWS", "MAC", "LINUX", and "OTHER".'
      predefined:
      - WINDOWS
      - MAC
      - LINUX
      - OTHER
    - name: status
      auto: PREDEFINED
      description: 'The status of the device. Possible values: "PENDING", "REGISTERED", "DEREGISTERED", "BYPASS", "ACTIVE", "INACTIVE", "ERROR", "ALL", "BYPASS_ON", "LIVE", "SENSOR_PENDING_UPDATE".'
      predefined:
      - PENDING
      - REGISTERED
      - DEREGISTERED
      - BYPASS
      - ACTIVE
      - INACTIVE
      - ERROR
      - ALL
      - BYPASS_ON
      - LIVE
      - SENSOR_PENDING_UPDATE
    - name: start_time
      description: 'The time to start getting results. specified as ISO-8601 strings for example: "2021-01-27T12:43:26.243Z".'
    - name: target_priority
      auto: PREDEFINED
      description: 'The “Target value” configured in the policy assigned to the sensor. Possible values: "LOW", "MEDIUM", "HIGH", "MISSION_CRITICAL".'
      predefined:
      - LOW
      - MEDIUM
      - HIGH
      - MISSION_CRITICAL
    - name: query
      description: The query in Lucene syntax and/or value searches.
    - name: end_time
      description: 'The time to stop getting results. specified as ISO-8601 strings for example: "2021-02-27T12:43:26.243Z".'
    - name: rows
      defaultValue: '20'
      description: The maximum number of rows to return. Default is 20.
    description: Searches devices in your organization.
  - name: cbd-device-quarantine
    arguments:
    - name: device_id
      description: The ID of the device.
      required: true
    description: Quarantines the device. Not supported for devices in a Linux operating system.
  - name: cbd-device-unquarantine
    arguments:
    - name: device_id
      description: The ID of the device.
      required: true
    description: Unquarantines the device. Not supported for devices in a Linux operating system.
  - name: cbd-device-background-scan
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
    description: Starts a background scan on the device. Not supported for devices in a Linux operating system.
  - name: cbd-device-background-scan-stop
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
    description: Stops a background scan on the device. Not supported for devices in a Linux operating system.
  - name: cbd-device-bypass
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
    description: Bypasses a device.
  - name: cbd-device-unbypass
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
    description: Unbypasses a device.
  - name: cbd-device-policy-update
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
      - name: policy_id
        description: The ID of the policy.
        required: true
    description: Updates the devices to the specified policy ID.
  - name: cbd-device-update-sensor-version
    arguments:
      - name: device_id
        description: The ID of the device.
        required: true
      - name: sensor_version
        description: 'The new version of the sensor. For example: { "MAC": "1.2.3.4" }. Supported types: XP, WINDOWS, MAC, AV_SIG, OTHER, RHEL, UBUNTU, SUSE, AMAZON_LINUX, MAC_OSX.'
        predefined:
          - '{"XP":}'
          - '{"WINDOWS":}'
          - '{"MAC":}'
          - '{"AV_SIG":}'
          - '{"OTHER":}'
          - '{"RHEL":}'
          - '{"UBUNTU":}'
          - '{"SUSE":}'
          - '{"AMAZON_LINUX":}'
          - '{"MAC_OSX":}'
        required: true
    description: Updates the version of a sensor.
  dockerimage: demisto/python3:3.10.14.97608
  isfetch: true
  runonce: false
  script: '-'
  subtype: python3
  type: python
tests:
- carbonBlackEndpointStandardTestPlaybook
fromversion: 6.10.0
defaultmapperin: "Carbon Black Endpoint Standard-mapper"
