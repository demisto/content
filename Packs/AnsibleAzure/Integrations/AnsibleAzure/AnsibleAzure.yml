category: IT Services
commonfields:
  id: AnsibleAzure
  version: -1
configuration:
- additionalinfo: Your Azure subscription Id.
  display: Subscription ID
  name: subscription_id
  required: true
  type: 0
- additionalinfo: Azure client ID
  display: Client ID
  displaypassword: Access Secret
  name: creds
  required: true
  type: 9
- additionalinfo: Azure tenant ID
  display: Tenant ID
  name: tenant
  required: true
  type: 0
- additionalinfo: For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, `AzureChinaCloud`, `AzureUSGovernment`), or a metadata discovery endpoint URL (required for Azure Stack).
  defaultvalue: AzureCloud
  display: Azure Cloud Environment
  name: cloud_environment
  required: true
  type: 0
- additionalinfo: Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing `ignore`.
  defaultvalue: validate
  display: Certificate Validation Mode
  name: cert_validation_mode
  options:
  - ignore
  - validate
  required: true
  type: 15
- additionalinfo: Selects an API profile to use when communicating with Azure services. Default value of `latest` is appropriate for public clouds; future values will allow use with Azure Stack.
  defaultvalue: latest
  display: API Profile
  name: api_profile
  required: true
  type: 0
description: Manage Azure resources
display: Ansible Azure
fromversion: 6.0.0
name: AnsibleAzure
script:
  commands:
  - arguments:
    - description: 'The identifier of the resource to apply autoscale setting. It could be the resource id string. It also could be a dict contains the `name`, `subscription_id`, `namespace`, `types`, `resource_group` of the resource.'
      name: target
    - description: Resource group of the resource.
      name: resource_group
      required: true
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: Specifies whether automatic scaling is enabled for the resource.
      name: enabled
      predefined:
      - 'Yes'
      - 'No'
    - description: 'The collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.'
      name: profiles
    - description: The collection of notifications.
      name: notifications
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the virtual network. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - present
      - absent
    - description: location of the resource.
      name: location
    - description: name of the resource.
      name: name
      required: true
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure autoscale setting\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_autoscale_module.html"
    name: azure-rm-autoscale
    outputs:
    - contextPath: Azure.AzureRmAutoscale.state
      description: Current state of the resource.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Auto Scale Setting.
      name: name
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Auto Scale Setting facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_autoscale_info_module.html"
    name: azure-rm-autoscale-info
    outputs:
    - contextPath: Azure.AzureRmAutoscaleInfo.autoscales
      description: List of Azure Scale Settings dicts.
      type: unknown
  - arguments:
    - description: Name of a resource group where the availability set exists or will be created.
      name: resource_group
      required: true
    - description: Name of the availability set.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the availability set. Use `present` to create or update an availability set and `absent` to delete an availability set.'
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - defaultValue: '5'
      description: Update domains indicate groups of virtual machines and underlying physical hardware that can be rebooted at the same time.
      name: platform_update_domain_count
    - defaultValue: '3'
      description: 'Fault domains define the group of virtual machines that share a common power source and network switch. Should be between `1` and `3`.'
      name: platform_fault_domain_count
    - auto: PREDEFINED
      defaultValue: Classic
      description: Define if the availability set supports managed disks.
      name: sku
      predefined:
      - Classic
      - Aligned
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Availability Set\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_availabilityset_module.html"
    name: azure-rm-availabilityset
    outputs:
    - contextPath: Azure.AzureRmAvailabilityset.state
      description: Current state of the availability set.
      type: unknown
    - contextPath: Azure.AzureRmAvailabilityset.changed
      description: Whether or not the resource has changed
      type: boolean
  - arguments:
    - description: Limit results to a specific availability set.
      name: name
    - description: The resource group to search for the desired availability set.
      name: resource_group
    - description: List of tags to be matched.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Availability Set facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_availabilityset_info_module.html"
    name: azure-rm-availabilityset-info
    outputs:
    - contextPath: Azure.AzureRmAvailabilitysetInfo.azure_availabilityset
      description: List of availability sets dicts.
      type: unknown
  - arguments:
    - description: The resource group name to use or create to host the deployed template.
      name: resource_group
      required: true
    - defaultValue: ansible-arm
      description: "The name of the deployment to be tracked in the resource group deployment history. Re-using a deployment name will overwrite the previous value in the resource group's deployment history."
      name: name
    - defaultValue: westus
      description: The geo-locations in which the resource group will be located.
      name: location
    - auto: PREDEFINED
      defaultValue: incremental
      description: 'In incremental mode, resources are deployed without deleting existing resources that are not included in the template. In complete mode resources are deployed and existing resources in the resource group not included in the template are deleted.'
      name: deployment_mode
      predefined:
      - complete
      - incremental
    - description: 'A hash containing the templates inline. This parameter is mutually exclusive with `template_link`. Either `template` or `template_link` is required if `state=present`.'
      isArray: true
      name: template
    - description: 'Uri of file containing the template body. This parameter is mutually exclusive with `template`. Either `template` or `template_link` is required if `state=present`.'
      name: template_link
    - description: 'A hash of all the required template variables for the deployment template. This parameter is mutually exclusive with `parameters_link`. Either `parameters_link` or `parameters` is required if `state=present`.'
      isArray: true
      name: parameters
    - description: 'Uri of file containing the parameters body. This parameter is mutually exclusive with `parameters`. Either `parameters_link` or `parameters` is required if `state=present`.'
      name: parameters_link
    - defaultValue: 'yes'
      description: Whether or not to block until the deployment has completed.
      name: wait_for_deployment_completion
    - defaultValue: '10'
      description: Time (in seconds) to wait between polls when waiting for deployment completion.
      name: wait_for_deployment_polling_period
    - auto: PREDEFINED
      defaultValue: present
      description: 'If `state=present`, template will be created. If `state=present` and deployment exists, it will be updated. If `state=absent`, stack will be removed.'
      name: state
      predefined:
      - present
      - absent
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Create or destroy Azure Resource Manager template deployments\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_deployment_module.html"
    name: azure-rm-deployment
    outputs:
    - contextPath: Azure.AzureRmDeployment.deployment
      description: Deployment details.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the deployment.
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Deployment facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_deployment_info_module.html"
    name: azure-rm-deployment-info
    outputs:
    - contextPath: Azure.AzureRmDeploymentInfo.deployments
      description: A list of dictionaries containing facts for deployments.
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the Azure Function App.
      name: name
      required: true
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: 'App service plan. It can be name of existing app service plan in same resource group as function app. It can be resource id of existing app service plan. Resource id. For example /subscriptions/<subs_id>/resourceGroups/<resource_group>/providers/Microsoft.Web/serverFarms/<plan_name>. It can be a dict which contains `name`, `resource_group`. `name`. Name of app service plan. `resource_group`. Resource group name of app service plan.'
      name: plan
    - description: Web app container settings.
      name: container_settings
    - description: Name of the storage account to use.
      name: storage_account
      required: true
    - description: Dictionary containing application settings.
      name: app_settings
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the Function App. Use `present` to create or update a Function App and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Function Apps\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_functionapp_module.html"
    name: azure-rm-functionapp
    outputs:
    - contextPath: Azure.AzureRmFunctionapp.state
      description: Current state of the Azure Function App.
      type: unknown
  - arguments:
    - description: Only show results for a specific Function App.
      name: name
    - description: Limit results to a resource group. Required when filtering by name.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Function App facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_functionapp_info_module.html"
    name: azure-rm-functionapp-info
    outputs:
    - contextPath: Azure.AzureRmFunctionappInfo.azure_functionapps
      description: List of Azure Function Apps dicts.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Shared Image Gallery. Valid names consist of less than 80 alphanumeric characters, underscores and periods.
      name: name
      required: true
    - description: Resource location
      name: location
    - description: The description of this Shared Image Gallery resource. This property is updatable.
      name: description
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the Gallery. Use `present` to create or update a Gallery and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Shared Image Gallery instance.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_gallery_module.html"
    name: azure-rm-gallery
    outputs:
    - contextPath: Azure.AzureRmGallery.id
      description: Resource Id
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
    - description: Resource name
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Shared Image Gallery info.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_gallery_info_module.html"
    name: azure-rm-gallery-info
    outputs:
    - contextPath: Azure.AzureRmGalleryInfo.galleries
      description: A list of dict results where the key is the name of the gallery and the values are the info for that gallery.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Shared Image Gallery in which the Image Definition is to be created.
      name: gallery_name
      required: true
    - description: The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
      name: name
      required: true
    - description: Resource location
      name: location
    - description: The description of this gallery Image Definition resource. This property is updatable.
      name: description
    - description: The Eula agreement for the gallery Image Definition.
      name: eula
    - description: The privacy statement uri.
      name: privacy_statement_uri
    - description: The release note uri.
      name: release_note_uri
    - auto: PREDEFINED
      description: This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image.
      name: os_type
      predefined:
      - windows
      - linux
      required: true
    - auto: PREDEFINED
      description: The allowed values for OS State are 'Generalized'.
      name: os_state
      predefined:
      - generalized
      - specialized
      required: true
    - description: The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable. Format should be according to ISO-8601, for instance "2019-06-26".
      name: end_of_life_date
    - description: Image identifier.
      isArray: true
      name: identifier
      required: true
    - description: Recommended parameter values.
      isArray: true
      name: recommended
    - description: Disallowed parameter values.
      isArray: true
      name: disallowed
    - description: Purchase plan.
      isArray: true
      name: purchase_plan
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the GalleryImage. Use `present` to create or update a GalleryImage and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: "Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure SIG Image instance.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_galleryimage_module.html"
    name: azure-rm-galleryimage
    outputs:
    - contextPath: Azure.AzureRmGalleryimage.id
      description: Resource Id
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the shared image gallery from which the image definitions are to be retrieved.
      name: gallery_name
      required: true
    - description: Resource name
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure SIG Image info.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_galleryimage_info_module.html"
    name: azure-rm-galleryimage-info
    outputs:
    - contextPath: Azure.AzureRmGalleryimageInfo.images
      description: A list of dict results where the key is the name of the image and the values are the info for that image.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Shared Image Gallery in which the Image Definition resides.
      name: gallery_name
      required: true
    - description: The name of the gallery Image Definition in which the Image Version is to be created.
      name: gallery_image_name
      required: true
    - description: 'The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
      name: name
      required: true
    - description: Resource location
      name: location
    - description: Publishing profile.
      isArray: true
      name: publishing_profile
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the GalleryImageVersion. Use `present` to create or update an GalleryImageVersion and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure SIG Image Version instance.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_galleryimageversion_module.html"
    name: azure-rm-galleryimageversion
    outputs:
    - contextPath: Azure.AzureRmGalleryimageversion.id
      description: Resource Id
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Shared Image Gallery in which the Image Definition resides.
      name: gallery_name
      required: true
    - description: The name of the gallery Image Definition in which the Image Version resides.
      name: gallery_image_name
      required: true
    - description: Resource name
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure SIG Image Version info.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_galleryimageversion_info_module.html"
    name: azure-rm-galleryimageversion-info
    outputs:
    - contextPath: Azure.AzureRmGalleryimageversionInfo.versions
      description: A list of dict results where the key is the name of the version and the values are the info for that version.
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the image.
      name: name
      required: true
    - description: 'OS disk source from the same region. It can be a virtual machine, OS disk blob URI, managed OS disk, or OS snapshot. Each type of source except for blob URI can be given as resource id, name or a dict contains `resource_group`, `name` and `type`. If source type is blob URI, the source should be the full URI of the blob in string type. If you specify the `type` in a dict, acceptable value contains `disks`, `virtual_machines` and `snapshots`.'
      name: source
      required: true
    - description: List of data disk sources, including unmanaged blob URI, managed disk id or name, or snapshot id or name.
      isArray: true
      name: data_disk_sources
    - description: Location of the image. Derived from `resource_group` if not specified.
      name: location
    - auto: PREDEFINED
      description: The OS type of image.
      name: os_type
      predefined:
      - Windows
      - Linux
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the image. Use `present` to create or update a image and `absent` to delete an image.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure image\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_image_module.html"
    name: azure-rm-image
    outputs:
    - contextPath: Azure.AzureRmImage.id
      description: Image resource path.
      type: string
  - arguments:
    - description: Name of resource group.
      name: resource_group
    - description: Name of the image to filter from existing images.
      name: name
    - description: List of tags to be matched.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get facts about azure custom images\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_image_info_module.html"
    name: azure-rm-image-info
    outputs:
    - contextPath: Azure.AzureRmImageInfo.images
      description: List of image dicts.
      type: unknown
  - arguments:
    - description: Name of a resource group where the load balancer exists or will be created.
      name: resource_group
      required: true
    - description: Name of the load balancer.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the load balancer. Use `present` to create/update a load balancer, or `absent` to delete one.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - auto: PREDEFINED
      description: The load balancer SKU.
      name: sku
      predefined:
      - Basic
      - Standard
    - description: List of frontend IPs to be used.
      name: frontend_ip_configurations
    - description: List of backend address pools.
      name: backend_address_pools
    - description: List of probe definitions used to check endpoint health.
      name: probes
    - description: 'Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.'
      name: inbound_nat_pools
    - description: Object collection representing the load balancing rules Gets the provisioning.
      name: load_balancing_rules
    - description: 'Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.'
      name: inbound_nat_rules
    - description: '(deprecated) Name of an existing public IP address object to associate with the security group. This option has been deprecated, and will be removed in 2.9. Use `frontend_ip_configurations` instead.'
      name: public_ip_address_name
    - description: '(deprecated) The port that the health probe will use. This option has been deprecated, and will be removed in 2.9. Use `probes` instead.'
      name: probe_port
    - auto: PREDEFINED
      description: '(deprecated) The protocol to use for the health probe. This option has been deprecated, and will be removed in 2.9. Use `probes` instead.'
      name: probe_protocol
      predefined:
      - Tcp
      - Http
      - Https
    - defaultValue: '15'
      description: '(deprecated) Time (in seconds) between endpoint health probes. This option has been deprecated, and will be removed in 2.9. Use `probes` instead.'
      name: probe_interval
    - defaultValue: '3'
      description: '(deprecated) The amount of probe failures for the load balancer to make a health determination. This option has been deprecated, and will be removed in 2.9. Use `probes` instead.'
      name: probe_fail_count
    - description: '(deprecated) The URL that an HTTP probe or HTTPS probe will use (only relevant if `probe_protocol=Http` or `probe_protocol=Https`). This option has been deprecated, and will be removed in 2.9. Use `probes` instead.'
      name: probe_request_path
    - auto: PREDEFINED
      description: '(deprecated) The protocol (TCP or UDP) that the load balancer will use. This option has been deprecated, and will be removed in 2.9. Use `load_balancing_rules` instead.'
      name: protocol
      predefined:
      - Tcp
      - Udp
    - auto: PREDEFINED
      description: '(deprecated) The type of load distribution that the load balancer will employ. This option has been deprecated, and will be removed in 2.9. Use `load_balancing_rules` instead.'
      name: load_distribution
      predefined:
      - Default
      - SourceIP
      - SourceIPProtocol
    - description: '(deprecated) Frontend port that will be exposed for the load balancer. This option has been deprecated, and will be removed in 2.9. Use `load_balancing_rules` instead.'
      name: frontend_port
    - description: '(deprecated) Backend port that will be exposed for the load balancer. This option has been deprecated, and will be removed in 2.9. Use `load_balancing_rules` instead.'
      name: backend_port
    - defaultValue: '4'
      description: '(deprecated) Timeout for TCP idle connection in minutes. This option has been deprecated, and will be removed in 2.9. Use `load_balancing_rules` instead.'
      name: idle_timeout
    - description: '(deprecated) Start of the port range for a NAT pool. This option has been deprecated, and will be removed in 2.9. Use `inbound_nat_pools` instead.'
      name: natpool_frontend_port_start
    - description: '(deprecated) End of the port range for a NAT pool. This option has been deprecated, and will be removed in 2.9. Use `inbound_nat_pools` instead.'
      name: natpool_frontend_port_end
    - description: '(deprecated) Backend port used by the NAT pool. This option has been deprecated, and will be removed in 2.9. Use `inbound_nat_pools` instead.'
      name: natpool_backend_port
    - description: '(deprecated) The protocol for the NAT pool. This option has been deprecated, and will be removed in 2.9. Use `inbound_nat_pools` instead.'
      name: natpool_protocol
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure load balancers\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_loadbalancer_module.html"
    name: azure-rm-loadbalancer
    outputs:
    - contextPath: Azure.AzureRmLoadbalancer.state
      description: Current state of the load balancer.
      type: unknown
    - contextPath: Azure.AzureRmLoadbalancer.changed
      description: Whether or not the resource has changed.
      type: boolean
  - arguments:
    - description: Limit results to a specific resource group.
      name: name
    - description: The resource group to search for the desired load balancer.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get load balancer facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_loadbalancer_info_module.html"
    name: azure-rm-loadbalancer-info
    outputs:
    - contextPath: Azure.AzureRmLoadbalancerInfo.azure_loadbalancers
      description: List of load balancer dicts.
      type: unknown
  - arguments:
    - description: Name of a resource group where the managed disk exists or will be created.
      name: resource_group
      required: true
    - description: Name of the managed disk.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the managed disk. Use `present` to create or update a managed disk and `absent` to delete a managed disk.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - auto: PREDEFINED
      description: 'Type of storage for the managed disk. If not specified, the disk is created as `Standard_LRS`. `Standard_LRS` is for Standard HDD. `StandardSSD_LRS` (added in 2.8) is for Standard SSD. `Premium_LRS` is for Premium SSD. `UltraSSD_LRS` (added in 2.8) is for Ultra SSD, which is in preview mode, and only available on select instance types. See `https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-types` for more information about disk types.'
      name: storage_account_type
      predefined:
      - Standard_LRS
      - StandardSSD_LRS
      - Premium_LRS
      - UltraSSD_LRS
    - auto: PREDEFINED
      description: '`import` from a VHD file in `source_uri` and `copy` from previous managed disk `source_uri`.'
      name: create_option
      predefined:
      - empty
      - import
      - copy
    - description: URI to a valid VHD file to be used or the resource ID of the managed disk to copy.
      name: source_uri
    - auto: PREDEFINED
      description: 'Type of Operating System. Used when `create_option=copy` or `create_option=import` and the source is an OS disk. If omitted during creation, no value is set. If omitted during an update, no change is made. Once set, this value cannot be cleared.'
      name: os_type
      predefined:
      - linux
      - windows
    - description: 'Size in GB of the managed disk to be created. If `create_option=copy` then the value must be greater than or equal to the source''s size.'
      name: disk_size_gb
    - description: 'Name of an existing virtual machine with which the disk is or will be associated, this VM should be in the same resource group. To detach a disk from a vm, explicitly set to ''''. If this option is unset, the value will not be changed.'
      name: managed_by
    - auto: PREDEFINED
      description: 'Disk caching policy controlled by VM. Will be used when attached to the VM defined by `managed_by`. If this option is different from the current caching policy, the managed disk will be deattached and attached with current caching option again.'
      name: attach_caching
      predefined:
      - ''
      - read_only
      - read_write
    - description: 'Tags to assign to the managed disk.

        Format tags as ''key'' or ''key:value''.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      description: 'The Azure managed disk''s zone. Allowed values are `1`, `2`, `3` and `'' ''`.'
      name: zone
      predefined:
      - '1'
      - '2'
      - '3'
      - ''
    - description: Your Azure subscription Id.
      name: subscription_id
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Manage Disks\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_manageddisk_module.html"
    name: azure-rm-manageddisk
    outputs:
    - contextPath: Azure.AzureRmManageddisk.id
      description: The managed disk resource ID.
      type: unknown
    - contextPath: Azure.AzureRmManageddisk.state
      description: Current state of the managed disk.
      type: unknown
    - contextPath: Azure.AzureRmManageddisk.changed
      description: Whether or not the resource has changed.
      type: boolean
  - arguments:
    - description: Limit results to a specific managed disk.
      name: name
    - description: Limit results to a specific resource group.
      name: resource_group
    - description: 'Limit results by providing a list of tags. Format tags as ''key'' or ''key:value''.'
      isArray: true
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Get managed disk facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_manageddisk_info_module.html"
    name: azure-rm-manageddisk-info
    outputs:
    - contextPath: Azure.AzureRmManageddiskInfo.azure_managed_disk
      description: List of managed disk dicts.
      type: unknown
  - arguments:
    - description: Azure RM Resource URL.
      name: url
    - description: Specific API version to be used.
      name: api_version
    - description: Provider type, should be specified in no URL is given.
      name: provider
    - description: 'Resource group to be used. Required if URL is not specified.'
      name: resource_group
    - description: Resource type.
      name: resource_type
    - description: Resource name.
      name: resource_name
    - description: List of subresources.
      name: subresource
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Generic facts of Azure resources\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_resource_info_module.html"
    name: azure-rm-resource-info
    outputs:
    - contextPath: Azure.AzureRmResourceInfo.response
      description: Response specific to resource type.
      type: unknown
  - arguments:
    - defaultValue: 'no'
      description: 'Remove a resource group and all associated resources. Use with `state=absent` to delete a resource group that contains resources.'
      name: force_delete_nonempty
    - description: 'Azure location for the resource group. Required when creating a new resource group. Cannot be changed once resource group is created.'
      name: location
    - description: Name of the resource group.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the resource group. Use `present` to create or update and `absent` to delete. When `absent` a resource group containing resources will not be removed unless the `force` option is used.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure resource groups\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_resourcegroup_module.html"
    name: azure-rm-resourcegroup
    outputs:
    - contextPath: Azure.AzureRmResourcegroup.contains_resources
      description: Whether or not the resource group contains associated resources.
      type: boolean
    - contextPath: Azure.AzureRmResourcegroup.state
      description: Current state of the resource group.
      type: unknown
  - arguments:
    - description: Limit results to a specific resource group.
      name: name
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: 'List all resources under the resource group. Note this will cost network overhead for each resource group. Suggest use this when `name` set.'
      name: list_resources
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get resource group facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_resourcegroup_info_module.html"
    name: azure-rm-resourcegroup-info
    outputs:
    - contextPath: Azure.AzureRmResourcegroupInfo.azure_resourcegroups
      description: List of resource group dicts.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: Resource name
      name: name
    - description: Resource location
      name: location
    - description: SKU
      isArray: true
      name: sku
    - auto: PREDEFINED
      description: The Operating System type.
      name: os_type
      predefined:
      - Linux
      - Windows
    - description: Disk source information. CreationData information cannot be changed after the disk has been created.
      isArray: true
      name: creation_data
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the Snapshot. Use `present` to create or update an Snapshot and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Snapshot instance.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_snapshot_module.html"
    name: azure-rm-snapshot
    outputs:
    - contextPath: Azure.AzureRmSnapshot.id
      description: Resource Id
      type: string
  - arguments:
    - description: Name of the resource group containing the VM.
      name: resource_group
      required: true
    - description: Name of the VM.
      name: name
      required: true
    - description: 'Data made available to the VM and used by `cloud-init`. Only used on Linux images with `cloud-init` enabled. Consult `https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview` for cloud-init ready images. To enable cloud-init on a Linux image, follow `https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image`.'
      name: custom_data
    - auto: PREDEFINED
      defaultValue: present
      description: 'State of the VM. Set to `present` to create a VM with the configuration specified by other options, or to update the configuration of an existing VM. Set to `absent` to remove a VM. Does not affect power state. Use `started`/`allocated`/`restarted` parameters to change the power state of a VM.'
      name: state
      predefined:
      - absent
      - present
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether the VM is started or stopped. Set to (true) with `state=present` to start the VM. Set to `false` to stop the VM.'
      name: started
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: Whether the VM is allocated or deallocated, only useful with `state=present`.
      name: allocated
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Whether the VM is generalized or not. Set to `true` with `state=present` to generalize the VM. Generalizing a VM is irreversible.'
      name: generalized
    - description: Set to `true` with `state=present` to restart a running VM.
      name: restarted
    - description: Valid Azure location for the VM. Defaults to location of the resource group.
      name: location
    - description: 'Name assigned internally to the host. On a Linux VM this is the name returned by the `hostname` command. When creating a VM, short_hostname defaults to `name`.'
      name: short_hostname
    - description: 'A valid Azure VM size value. For example, `Standard_D4`. Choices vary depending on the subscription and location. Check your subscription for available choices. Required when creating a VM.'
      name: vm_size
    - description: 'Admin username used to access the VM after it is created. Required when creating a VM.'
      name: admin_username
    - description: 'Password for the admin username. Not required if the `os_type=Linux` and SSH password authentication is disabled by setting `ssh_password_enabled=false`.'
      name: admin_password
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether to enable or disable SSH passwords. When `os_type=Linux`, set to `false` to disable SSH password authentication and require use of SSH keys.'
      name: ssh_password_enabled
      predefined:
      - 'Yes'
      - 'No'
    - description: 'For `os_type=Linux` provide a list of SSH keys. Accepts a list of dicts where each dictionary contains two keys, `path` and `key_data`. Set `path` to the default location of the authorized_keys files. For example, `path=/home/<admin username>/.ssh/authorized_keys`. Set `key_data` to the actual value of the public key.'
      name: ssh_public_keys
    - description: 'The image used to build the VM. For custom images, the name of the image. To narrow the search to a specific resource group, a dict with the keys `name` and `resource_group`. For Marketplace images, a dict with the keys `publisher`, `offer`, `sku`, and `version`. Set `version=latest` to get the most recent version of a given image.'
      name: image
      required: true
    - description: Name or ID of an existing availability set to add the VM to. The `availability_set` should be in the same resource group as VM.
      name: availability_set
    - description: 'Name of a storage account that supports creation of VHD blobs. If not specified for a new VM, a new storage account named <vm name>01 will be created using storage type `Standard_LRS`.'
      name: storage_account_name
    - defaultValue: vhds
      description: 'Name of the container to use within the storage account to store VHD blobs. If not specified, a default container will be created.'
      name: storage_container_name
    - description: 'Name of the storage blob used to hold the OS disk image of the VM. Must end with ''.vhd''. If not specified, defaults to the VM name + ''.vhd''.'
      name: storage_blob_name
    - auto: PREDEFINED
      description: 'Managed OS disk type. Create OS disk with managed disk if defined. If not defined, the OS disk will be created with virtual hard disk (VHD).'
      name: managed_disk_type
      predefined:
      - Standard_LRS
      - StandardSSD_LRS
      - Premium_LRS
    - description: OS disk name.
      name: os_disk_name
    - auto: PREDEFINED
      defaultValue: ReadOnly
      description: Type of OS disk caching.
      name: os_disk_caching
      predefined:
      - ReadOnly
      - ReadWrite
    - description: Type of OS disk size in GB.
      name: os_disk_size_gb
    - auto: PREDEFINED
      defaultValue: Linux
      description: Base type of operating system.
      name: os_type
      predefined:
      - Windows
      - Linux
    - description: 'Describes list of data disks. Use `azure_rm_mangeddisk` to manage the specific disk.'
      name: data_disks
    - auto: PREDEFINED
      defaultValue: Static
      description: 'Allocation method for the public IP of the VM. Used only if a network interface is not specified. When set to `Dynamic`, the public IP address may change any time the VM is rebooted or power cycled. The `Disabled` choice was added in Ansible 2.6.'
      name: public_ip_allocation_method
      predefined:
      - Dynamic
      - Static
      - Disabled
    - description: 'List of ports to open in the security group for the VM, when a security group and network interface are created with a VM. For Linux hosts, defaults to allowing inbound TCP connections to port 22. For Windows hosts, defaults to opening ports 3389 and 5986.'
      name: open_ports
    - description: 'Network interface names to add to the VM. Can be a string of name or resource ID of the network interface. Can be a dict containing `resource_group` and `name` of the network interface. If a network interface name is not provided when the VM is created, a default network interface will be created. To create a new network interface, at least one Virtual Network with one Subnet must exist.'
      isArray: true
      name: network_interface_names
    - description: The resource group to use when creating a VM with another resource group's virtual network.
      name: virtual_network_resource_group
    - description: 'The virtual network to use when creating a VM. If not specified, a new network interface will be created and assigned to the first virtual network found in the resource group. Use with `virtual_network_resource_group` to place the virtual network in another resource group.'
      name: virtual_network_name
    - description: 'Subnet for the VM. Defaults to the first subnet found in the virtual network or the subnet of the `network_interface_name`, if provided. If the subnet is in another resource group, specify the resource group with `virtual_network_resource_group`.'
      name: subnet_name
    - defaultValue: '[''all'']'
      description: 'Associated resources to remove when removing a VM using `state=absent`. To remove all resources related to the VM being removed, including auto-created resources, set to `all`. To remove only resources that were automatically created while provisioning the VM being removed, set to `all_autocreated`. To remove only specific resources, set to `network_interfaces`, `virtual_storage` or `public_ips`. Any other input will be ignored.'
      isArray: true
      name: remove_on_absent
    - description: Third-party billing plan for the VM.
      isArray: true
      name: plan
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Accept terms for Marketplace images that require it. Only Azure service admin/account admin users can purchase images from the Marketplace. Only valid when a `plan` is specified.'
      name: accept_terms
      predefined:
      - 'Yes'
      - 'No'
    - description: A list of Availability Zones for your VM.
      isArray: true
      name: zones
    - auto: PREDEFINED
      description: 'On-premise license for the image or disk. Only used for images that contain the Windows Server operating system. To remove all license type settings, set to the string `None`.'
      name: license_type
      predefined:
      - Windows_Server
      - Windows_Client
    - auto: PREDEFINED
      description: Identity for the VM.
      name: vm_identity
      predefined:
      - SystemAssigned
    - description: List of Windows Remote Management configurations of the VM.
      name: winrm
    - description: 'Manage boot diagnostics settings for a VM. Boot diagnostics includes a serial console and remote console screenshots.'
      name: boot_diagnostics
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure virtual machines\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachine_module.html"
    name: azure-rm-virtualmachine
    outputs:
    - contextPath: Azure.AzureRmVirtualmachine.powerstate
      description: Indicates if the state is `running`, `stopped`, `deallocated`, `generalized`.
      type: string
    - contextPath: Azure.AzureRmVirtualmachine.deleted_vhd_uris
      description: List of deleted Virtual Hard Disk URIs.
      type: unknown
    - contextPath: Azure.AzureRmVirtualmachine.deleted_network_interfaces
      description: List of deleted NICs.
      type: unknown
    - contextPath: Azure.AzureRmVirtualmachine.deleted_public_ips
      description: List of deleted public IP address names.
      type: unknown
    - contextPath: Azure.AzureRmVirtualmachine.azure_vm
      description: Facts about the current state of the object. Note that facts are not part of the registered output but available directly.
      type: unknown
  - arguments:
    - description: Name of the resource group containing the virtual machines (required when filtering by vm name).
      name: resource_group
    - description: Name of the virtual machine.
      name: name
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get virtual machine facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachine_info_module.html"
    name: azure-rm-virtualmachine-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachineInfo.vms
      description: List of virtual machines.
      type: unknown
  - arguments:
    - description: Name of a resource group where the vm extension exists or will be created.
      name: resource_group
      required: true
    - description: Name of the vm extension.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: State of the vm extension. Use `present` to create or update a vm extension and `absent` to delete a vm extension.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: The name of the virtual machine where the extension should be create or updated.
      name: virtual_machine_name
    - description: The name of the extension handler publisher.
      name: publisher
    - description: The type of the extension handler.
      name: virtual_machine_extension_type
    - description: The type version of the extension handler.
      name: type_handler_version
    - description: Json formatted public settings for the extension.
      name: settings
    - description: Json formatted protected settings for the extension.
      name: protected_settings
    - description: Whether the extension handler should be automatically upgraded across minor versions.
      name: auto_upgrade_minor_version
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Managed Azure Virtual Machine extension\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachineextension_module.html"
    name: azure-rm-virtualmachineextension
    outputs:
    - contextPath: Azure.AzureRmVirtualmachineextension.state
      description: Current state of the vm extension.
      type: unknown
    - contextPath: Azure.AzureRmVirtualmachineextension.changed
      description: Whether or not the resource has changed.
      type: boolean
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the virtual machine containing the extension.
      name: virtual_machine_name
      required: true
    - description: The name of the virtual machine extension.
      name: name
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Virtual Machine Extension facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachineextension_info_module.html"
    name: azure-rm-virtualmachineextension-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachineextensionInfo.extensions
      description: A list of dictionaries containing facts for Virtual Machine Extension.
      type: unknown
  - arguments:
    - description: 'Azure location value, for example `westus`, `eastus`, `eastus2`, `northcentralus`, etc. Supplying only a location value will yield a list of available publishers for the location.'
      name: location
      required: true
    - description: Name of an image publisher. List image offerings associated with a particular publisher.
      name: publisher
    - description: Name of an image offering. Combine with SKU to see a list of available image versions.
      name: offer
    - description: Image offering SKU. Combine with offer to see a list of available versions.
      name: sku
    - description: Specific version number of an image.
      name: version
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get virtual machine image facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachineimage_info_module.html"
    name: azure-rm-virtualmachineimage-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachineimageInfo.azure_vmimages
      description: List of image dicts.
      type: unknown
  - arguments:
    - description: Name of the resource group containing the virtual machine scale set.
      name: resource_group
      required: true
    - description: Name of the virtual machine.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the virtual machine scale set. State `present` will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated. State `absent` will remove the virtual machine scale set.'
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: Short host name.
      name: short_hostname
    - description: 'A valid Azure VM size value. For example, `Standard_D4`. The list of choices varies depending on the subscription and location. Check your subscription for available choices.'
      name: vm_size
    - defaultValue: '1'
      description: Capacity of VMSS.
      name: capacity
    - auto: PREDEFINED
      description: SKU Tier.
      name: tier
      predefined:
      - Basic
      - Standard
    - auto: PREDEFINED
      description: 'Upgrade policy. Required when creating the Azure virtual machine scale sets.'
      name: upgrade_policy
      predefined:
      - Manual
      - Automatic
    - description: Admin username used to access the host after it is created. Required when creating a VM.
      name: admin_username
    - description: 'Password for the admin username. Not required if the os_type is Linux and SSH password authentication is disabled by setting `ssh_password_enabled=false`.'
      name: admin_password
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: When the os_type is Linux, setting `ssh_password_enabled=false` will disable SSH password authentication and require use of SSH keys.
      name: ssh_password_enabled
      predefined:
      - 'Yes'
      - 'No'
    - description: 'For `os_type=Linux` provide a list of SSH keys. Each item in the list should be a dictionary where the dictionary contains two keys, `path` and `key_data`. Set the `path` to the default location of the authorized_keys files. On an Enterprise Linux host, for example, the `path=/home/<admin username>/.ssh/authorized_keys`. Set `key_data` to the actual value of the public key.'
      name: ssh_public_keys
    - description: 'Specifies the image used to build the VM. If a string, the image is sourced from a custom image based on the name. If a dict with the keys `publisher`, `offer`, `sku`, and `version`, the image is sourced from a Marketplace image. Note that set `version=latest` to get the most recent version of a given image. If a dict with the keys `name` and `resource_group`, the image is sourced from a custom image based on the `name` and `resource_group` set. Note that the key `resource_group` is optional and if omitted, all images in the subscription will be searched for by `name`. Custom image support was added in Ansible 2.5.'
      name: image
      required: true
    - auto: PREDEFINED
      defaultValue: ReadOnly
      description: Type of OS disk caching.
      name: os_disk_caching
      predefined:
      - ReadOnly
      - ReadWrite
    - auto: PREDEFINED
      defaultValue: Linux
      description: Base type of operating system.
      name: os_type
      predefined:
      - Windows
      - Linux
    - auto: PREDEFINED
      description: Managed disk type.
      name: managed_disk_type
      predefined:
      - Standard_LRS
      - Premium_LRS
    - description: Describes list of data disks.
      name: data_disks
    - description: 'When creating a virtual machine, if a specific virtual network from another resource group should be used. Use this parameter to specify the resource group to use.'
      name: virtual_network_resource_group
    - description: Virtual Network name.
      name: virtual_network_name
    - description: Subnet name.
      name: subnet_name
    - description: Load balancer name.
      name: load_balancer
    - description: Application gateway name.
      name: application_gateway
    - defaultValue: '[''all'']'
      description: 'When removing a VM using `state=absent`, also remove associated resources. It can be `all` or a list with any of the following [''network_interfaces'', ''virtual_storage'', ''public_ips'']. Any other input will be ignored.'
      name: remove_on_absent
    - description: Indicates whether user wants to allow accelerated networking for virtual machines in scaleset being created.
      name: enable_accelerated_networking
    - description: 'Existing security group with which to associate the subnet. It can be the security group name which is in the same resource group. It can be the resource ID. It can be a dict which contains `name` and `resource_group` of the security group.'
      name: security_group
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
      name: overprovision
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: When true this limits the scale set to a single placement group, of max size 100 virtual machines.
      name: single_placement_group
      predefined:
      - 'Yes'
      - 'No'
    - description: A list of Availability Zones for your virtual machine scale set.
      isArray: true
      name: zones
    - description: 'Data which is made available to the virtual machine and used by e.g., `cloud-init`. Many images in the marketplace are not cloud-init ready. Thus, data sent to `custom_data` would be ignored. If the image you are attempting to use is not listed in `https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview`, follow these steps `https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image`.'
      name: custom_data
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure virtual machine scale sets\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescaleset_module.html"
    name: azure-rm-virtualmachinescaleset
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescaleset.azure_vmss
      description: 'Facts about the current state of the object. Note that facts are not part of the registered output but available directly.'
      type: unknown
  - arguments:
    - description: Limit results to a specific virtual machine scale set.
      name: name
    - description: The resource group to search for the desired virtual machine scale set.
      name: resource_group
    - description: List of tags to be matched.
      name: tags
    - auto: PREDEFINED
      defaultValue: raw
      description: 'Format of the data returned. If `raw` is selected information will be returned in raw format from Azure Python SDK. If `curated` is selected the structure will be identical to input parameters of `azure_rm_virtualmachinescaleset` module. In Ansible 2.5 and lower facts are always returned in raw format. Please note that this option will be deprecated in 2.10 when curated format will become the only supported format.'
      name: format
      predefined:
      - curated
      - raw
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Virtual Machine Scale Set facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescaleset_info_module.html"
    name: azure-rm-virtualmachinescaleset-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescalesetInfo.vmss
      description: List of virtual machine scale sets.
      type: unknown
  - arguments:
    - description: Name of a resource group where the VMSS extension exists or will be created.
      name: resource_group
      required: true
    - description: The name of the virtual machine where the extension should be create or updated.
      name: vmss_name
      required: true
    - description: Name of the VMSS extension.
      name: name
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: The name of the extension handler publisher.
      name: publisher
    - description: The type of the extension handler.
      name: type
    - description: The type version of the extension handler.
      name: type_handler_version
    - description: 'A dictionary containing extension settings. Settings depend on extension type. Refer to `https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/overview` for more information.'
      name: settings
    - description: 'A dictionary containing protected extension settings. Settings depend on extension type. Refer to `https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/overview` for more information.'
      name: protected_settings
    - description: Whether the extension handler should be automatically upgraded across minor versions.
      name: auto_upgrade_minor_version
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the extension. Use `present` to create or update an extension and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Manage Azure Virtual Machine Scale Set (VMSS) extensions\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescalesetextension_module.html"
    name: azure-rm-virtualmachinescalesetextension
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescalesetextension.id
      description: VMSS extension resource ID.
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of VMSS containing the extension.
      name: vmss_name
      required: true
    - description: The name of the virtual machine extension.
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Virtual Machine Scale Set Extension facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescalesetextension_info_module.html"
    name: azure-rm-virtualmachinescalesetextension-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescalesetextensionInfo.extensions
      description: A list of dictionaries containing facts for Virtual Machine Extension.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the VM scale set.
      name: vmss_name
      required: true
    - description: The instance ID of the virtual machine.
      name: instance_id
      required: true
    - description: Set to `yes` to upgrade to the latest model.
      name: latest_model
    - auto: PREDEFINED
      description: Use this option to change power state of the instance.
      name: power_state
      predefined:
      - running
      - stopped
      - deallocated
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: State of the VMSS instance. Use `present` to update an instance and `absent` to delete an instance.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Virtual Machine Scale Set Instance facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescalesetinstance_module.html"
    name: azure-rm-virtualmachinescalesetinstance
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescalesetinstance.instances
      description: A list of instances.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the VM scale set.
      name: vmss_name
      required: true
    - description: The instance ID of the virtual machine.
      name: instance_id
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Virtual Machine Scale Set Instance facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualmachinescalesetinstance_info_module.html"
    name: azure-rm-virtualmachinescalesetinstance-info
    outputs:
    - contextPath: Azure.AzureRmVirtualmachinescalesetinstanceInfo.instances
      description: A list of dictionaries containing facts for Virtual Machine Scale Set VM.
      type: unknown
  - arguments:
    - description: Name of the resource group to which the resource belongs.
      name: resource_group
      required: true
    - description: Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.
      name: name
      required: true
    - description: Resource location. If not set, location from the resource group will be used as default.
      name: location
    - description: 'App service plan. Required for creation. Can be name of existing app service plan in same resource group as web app. Can be the resource ID of an existing app service plan. For example /subscriptions/<subs_id>/resourceGroups/<resource_group>/providers/Microsoft.Web/serverFarms/<plan_name>. Can be a dict containing five parameters, defined below. `name`, name of app service plan. `resource_group`, resource group of the app service plan. `sku`, SKU of app service plan, allowed values listed on `https://azure.microsoft.com/en-us/pricing/details/app-service/linux/`. `is_linux`, whether or not the app service plan is Linux. defaults to `False`. `number_of_workers`, number of workers for app service plan.'
      name: plan
    - description: 'Set of run time framework settings. Each setting is a dictionary. See `https://docs.microsoft.com/en-us/azure/app-service/app-service-web-overview` for more info.'
      name: frameworks
    - description: Web app container settings.
      name: container_settings
    - description: 'Repository type of deployment source, for example `LocalGit`, `GitHub`. List of supported values maintained at `https://docs.microsoft.com/en-us/rest/api/appservice/webapps/createorupdate#scmtype`.'
      name: scm_type
    - description: Deployment source for git.
      name: deployment_source
    - description: 'The web''s startup file. Used only for Linux web apps.'
      name: startup_file
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: Whether or not to send session affinity cookies, which route client requests in the same session to the same instance.
      name: client_affinity_enabled
      predefined:
      - 'Yes'
      - 'No'
    - description: Configures web site to accept only https requests.
      name: https_only
    - description: Whether or not the web app hostname is registered with DNS on creation. Set to `false` to register.
      name: dns_registration
    - description: Whether or not to skip verification of custom (non *.azurewebsites.net) domains associated with web app. Set to `true` to skip.
      name: skip_custom_domain_verification
    - description: Time to live in seconds for web app default domain name.
      name: ttl_in_seconds
    - description: Configure web app application settings. Suboptions are in key value pair format.
      name: app_settings
    - description: Purge any existing application settings. Replace web app application settings with app_settings.
      name: purge_app_settings
    - auto: PREDEFINED
      defaultValue: started
      description: Start/Stop/Restart the web app.
      name: app_state
      predefined:
      - started
      - stopped
      - restarted
    - auto: PREDEFINED
      defaultValue: present
      description: 'State of the Web App. Use `present` to create or update a Web App and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Web App instances\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_webapp_module.html"
    name: azure-rm-webapp
    outputs:
    - contextPath: Azure.AzureRmWebapp.azure_webapp
      description: ID of current web app.
      type: string
  - arguments:
    - description: Only show results for a specific web app.
      name: name
    - description: Limit results by resource group.
      name: resource_group
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Indicate whether to return publishing profile of the web app.
      name: return_publish_profile
      predefined:
      - 'Yes'
      - 'No'
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure web app facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_webapp_info_module.html"
    name: azure-rm-webapp-info
    outputs:
    - contextPath: Azure.AzureRmWebappInfo.webapps
      description: List of web apps.
      type: unknown
  - arguments:
    - description: Name of the resource group to which the resource belongs.
      name: resource_group
      required: true
    - description: Unique name of the deployment slot to create or update.
      name: name
      required: true
    - description: Web app name which this deployment slot belongs to.
      name: webapp_name
      required: true
    - description: Resource location. If not set, location from the resource group will be used as default.
      name: location
    - description: Source slot to clone configurations from when creating slot. Use webapp's name to refer to the production slot.
      name: configuration_source
    - description: 'Used to configure target slot name to auto swap, or disable auto swap. Set it target slot name to auto swap. Set it to False to disable auto slot swap.'
      name: auto_swap_slot_name
    - description: Swap deployment slots of a web app.
      name: swap
    - description: 'Set of run time framework settings. Each setting is a dictionary. See `https://docs.microsoft.com/en-us/azure/app-service/app-service-web-overview` for more info.'
      name: frameworks
    - description: Web app slot container settings.
      name: container_settings
    - description: 'The slot startup file. This only applies for Linux web app slot.'
      name: startup_file
    - description: Configure web app slot application settings. Suboptions are in key value pair format.
      name: app_settings
    - description: Purge any existing application settings. Replace slot application settings with app_settings.
      name: purge_app_settings
    - description: Deployment source for git.
      name: deployment_source
    - auto: PREDEFINED
      defaultValue: started
      description: Start/Stop/Restart the slot.
      name: app_state
      predefined:
      - started
      - stopped
      - restarted
    - auto: PREDEFINED
      defaultValue: present
      description: 'State of the Web App deployment slot. Use `present` to create or update a  slot and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Web App slot\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_webappslot_module.html"
    name: azure-rm-webappslot
    outputs:
    - contextPath: Azure.AzureRmWebappslot.id
      description: ID of current slot.
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the Azure Firewall.
      name: name
      required: true
    - description: Resource location.
      name: location
    - description: Collection of application rule collections used by Azure Firewall.
      isArray: true
      name: application_rule_collections
    - description: Collection of NAT rule collections used by Azure Firewall.
      isArray: true
      name: nat_rule_collections
    - description: Collection of network rule collections used by Azure Firewall.
      isArray: true
      name: network_rule_collections
    - description: IP configuration of the Azure Firewall resource.
      isArray: true
      name: ip_configurations
    - auto: PREDEFINED
      defaultValue: present
      description: 'Assert the state of the AzureFirewall. Use `present` to create or update an AzureFirewall and `absent` to delete it.'
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Firewall instance.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_azurefirewall_module.html"
    name: azure-rm-azurefirewall
    outputs:
    - contextPath: Azure.AzureRmAzurefirewall.id
      description: Resource ID.
      type: string
  - arguments:
    - description: The name of the resource group.
      name: resource_group
    - description: Resource name.
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get AzureFirewall info.\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_azurefirewall_info_module.html"
    name: azure-rm-azurefirewall-info
    outputs:
    - contextPath: Azure.AzureRmAzurefirewallInfo.firewalls
      description: A list of dict results where the key is the name of the AzureFirewall and the values are the facts for that AzureFirewall.
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: 'List of IPv4 address ranges where each is formatted using CIDR notation. Required when creating a new virtual network or using `purge_address_prefixes`.'
      name: address_prefixes_cidr
    - description: 'Custom list of DNS servers. Maximum length of two. The first server in the list will be treated as the Primary server. This is an explicit list. Existing DNS servers will be replaced with the specified list. Use the `purge_dns_servers` option to remove all custom DNS servers and revert to default Azure servers.'
      name: dns_servers
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: Name of the virtual network.
      name: name
      required: true
    - defaultValue: 'no'
      description: Use with `state=present` to remove any existing `address_prefixes`.
      name: purge_address_prefixes
    - description: Use with `state=present` to remove existing DNS servers, reverting to default Azure servers. Mutually exclusive with DNS servers.
      name: purge_dns_servers
    - auto: PREDEFINED
      defaultValue: present
      description: State of the virtual network. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure virtual networks\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualnetwork_module.html"
    name: azure-rm-virtualnetwork
    outputs:
    - contextPath: Azure.AzureRmVirtualnetwork.state
      description: Current state of the virtual network.
      type: unknown
  - arguments:
    - description: Only show results for a specific security group.
      name: name
    - description: Limit results by resource group. Required when filtering by name.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get virtual network facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualnetwork_info_module.html"
    name: azure-rm-virtualnetwork-info
    outputs:
    - contextPath: Azure.AzureRmVirtualnetworkInfo.azure_virtualnetworks
      description: List of virtual network dicts.
      type: unknown
    - contextPath: Azure.AzureRmVirtualnetworkInfo.virtualnetworks
      description: List of virtual network dicts with same format as `azure_rm_virtualnetwork` module parameters.
      type: unknown
  - arguments:
    - description: Name of a resource group where VPN Gateway exists or will be created.
      name: resource_group
      required: true
    - description: Name of VPN Gateway.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: State of the VPN Gateway. Use `present` to create or update VPN gateway and `absent` to delete VPN gateway.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: 'An existing virtual network with which the VPN Gateway will be associated. Required when creating a VPN Gateway. Can be the name of the virtual network. Must be in the same resource group as VPN gateway when specified by name. Can be the resource ID of the virtual network. Can be a dict which contains `name` and `resource_group` of the virtual network.'
      name: virtual_network
      required: true
    - description: List of IP configurations.
      name: ip_configurations
    - auto: PREDEFINED
      defaultValue: vpn
      description: The type of this virtual network gateway.
      name: gateway_type
      predefined:
      - vpn
      - express_route
    - auto: PREDEFINED
      defaultValue: route_based
      description: The type of this virtual private network.
      name: vpn_type
      predefined:
      - route_based
      - policy_based
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Whether BGP is enabled for this virtual network gateway or not.
      name: enable_bgp
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: VpnGw1
      description: The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
      name: sku
      predefined:
      - VpnGw1
      - VpnGw2
      - VpnGw3
    - description: Virtual network gateway's BGP speaker settings.
      name: bgp_settings
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure virtual network gateways\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualnetworkgateway_module.html"
    name: azure-rm-virtualnetworkgateway
    outputs:
    - contextPath: Azure.AzureRmVirtualnetworkgateway.id
      description: Virtual Network Gateway resource ID.
      type: string
  - arguments:
    - description: Name of a resource group where the vnet exists.
      name: resource_group
      required: true
    - description: Name of the virtual network peering.
      name: name
      required: true
    - description: Name or resource ID of the virtual network to be peered.
      name: virtual_network
      required: true
    - description: 'Remote virtual network to be peered. It can be name of remote virtual network in same resource group. It can be remote virtual network resource ID. It can be a dict which contains `name` and `resource_group` of remote virtual network. Required when creating.'
      name: remote_virtual_network
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Allows VMs in the remote VNet to access all VMs in the local VNet.
      name: allow_virtual_network_access
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Allows forwarded traffic from the VMs in the remote VNet.
      name: allow_forwarded_traffic
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'No'
      description: If remote gateways can be used on this virtual network.
      name: use_remote_gateways
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'No'
      description: 'Allows VNet to use the remote VNet''s gateway. Remote VNet gateway must have --allow-gateway-transit enabled for remote peering. Only 1 peering can have this flag enabled. Cannot be set if the VNet already has a gateway.'
      name: allow_gateway_transit
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: present
      description: State of the virtual network peering. Use `present` to create or update a peering and `absent` to delete it.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Manage Azure Virtual Network Peering\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualnetworkpeering_module.html"
    name: azure-rm-virtualnetworkpeering
    outputs:
    - contextPath: Azure.AzureRmVirtualnetworkpeering.id
      description: ID of the Azure virtual network peering.
      type: string
  - arguments:
    - description: Name of a resource group where the vnet exists.
      name: resource_group
      required: true
    - description: Name or resource ID of a virtual network.
      name: virtual_network
      required: true
    - description: Name of the virtual network peering.
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get facts of Azure Virtual Network Peering\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_virtualnetworkpeering_info_module.html"
    name: azure-rm-virtualnetworkpeering-info
    outputs:
    - contextPath: Azure.AzureRmVirtualnetworkpeeringInfo.vnetpeerings
      description: A list of Virtual Network Peering facts.
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the subnet.
      name: name
      required: true
    - description: CIDR defining the IPv4 address space of the subnet. Must be valid within the context of the virtual network.
      name: address_prefix_cidr
    - description: 'Existing security group with which to associate the subnet. It can be the security group name which is in the same resource group. Can be the resource ID of the security group. Can be a dict containing the `name` and `resource_group` of the security group.'
      name: security_group
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the subnet. Use `present` to create or update a subnet and use `absent` to delete a subnet.
      name: state
      predefined:
      - absent
      - present
    - description: Name of an existing virtual network with which the subnet is or will be associated.
      name: virtual_network_name
      required: true
    - description: 'The reference of the RouteTable resource. Can be the name or resource ID of the route table. Can be a dict containing the `name` and `resource_group` of the route table.'
      name: route_table
    - description: An array of service endpoints.
      isArray: true
      name: service_endpoints
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Manage Azure subnets\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_subnet_module.html"
    name: azure-rm-subnet
    outputs:
    - contextPath: Azure.AzureRmSubnet.state
      description: Current state of the subnet.
      type: unknown
  - arguments:
    - description: The name of the resource group.
      name: resource_group
      required: true
    - description: The name of the virtual network.
      name: virtual_network_name
      required: true
    - description: The name of the subnet.
      name: name
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Subnet facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_subnet_info_module.html"
    name: azure-rm-subnet-info
    outputs:
    - contextPath: Azure.AzureRmSubnetInfo.subnets
      description: A list of dictionaries containing facts for subnet.
      type: unknown
  - arguments:
    - description: Name of a resource group where the Traffic Manager endpoint exists or will be created.
      name: resource_group
      required: true
    - description: The name of the endpoint.
      name: name
      required: true
    - description: Name of Traffic Manager profile where this endpoints attaches to.
      name: profile_name
      required: true
    - auto: PREDEFINED
      description: The type of the endpoint.
      name: type
      predefined:
      - azure_endpoints
      - external_endpoints
      - nested_endpoints
      required: true
    - description: 'The Azure Resource URI of the of the endpoint. Not applicable to endpoints of `type=external_endpoints`.'
      name: target_resource_id
    - description: The fully-qualified DNS name of the endpoint.
      name: target
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: The status of the endpoint.
      name: enabled
      predefined:
      - 'Yes'
      - 'No'
    - description: 'The weight of this endpoint when traffic manager profile has routing_method of `weighted`. Possible values are from 1 to 1000.'
      name: weight
    - description: 'The priority of this endpoint when traffic manager profile has routing_method of `priority`. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter. If specified, it must be specified on all endpoints. No two endpoints can share the same priority value.'
      name: priority
    - description: Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
      name: location
    - description: 'The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of `type=nested_endpoints`.'
      name: min_child_endpoints
    - description: The list of countries/regions mapped to this endpoint when traffic manager profile has routing_method of `geographic`.
      isArray: true
      name: geo_mapping
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the Traffic Manager endpoint. Use `present` to create or update a Traffic Manager endpoint and `absent` to delete it.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Manage Azure Traffic Manager endpoint\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_trafficmanagerendpoint_module.html"
    name: azure-rm-trafficmanagerendpoint
    outputs:
    - contextPath: Azure.AzureRmTrafficmanagerendpoint.id
      description: The ID of the traffic manager endpoint.
      type: string
  - arguments:
    - description: Limit results to a specific Traffic Manager endpoint.
      name: name
    - description: The resource group to search for the desired Traffic Manager profile.
      name: resource_group
      required: true
    - description: Name of Traffic Manager Profile.
      name: profile_name
      required: true
    - auto: PREDEFINED
      description: Type of endpoint.
      name: type
      predefined:
      - azure_endpoints
      - external_endpoints
      - nested_endpoints
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Traffic Manager endpoint facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_trafficmanagerendpoint_info_module.html"
    name: azure-rm-trafficmanagerendpoint-info
    outputs:
    - contextPath: Azure.AzureRmTrafficmanagerendpointInfo.endpoints
      description: List of Traffic Manager endpoints.
      type: unknown
  - arguments:
    - description: Name of a resource group where the Traffic Manager profile exists or will be created.
      name: resource_group
      required: true
    - description: Name of the Traffic Manager profile.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the Traffic Manager profile. Use `present` to create or update a Traffic Manager profile and `absent` to delete it.
      name: state
      predefined:
      - absent
      - present
    - defaultValue: global
      description: 'Valid Azure location. Defaults to `global` because in default public Azure cloud, Traffic Manager profile can only be deployed globally. Reference `https://docs.microsoft.com/en-us/azure/traffic-manager/quickstart-create-traffic-manager-profile#create-a-traffic-manager-profile`.'
      name: location
    - auto: PREDEFINED
      defaultValue: enabled
      description: The status of the Traffic Manager profile.
      name: profile_status
      predefined:
      - enabled
      - disabled
    - auto: PREDEFINED
      defaultValue: performance
      description: The traffic routing method of the Traffic Manager profile.
      name: routing_method
      predefined:
      - performance
      - priority
      - weighted
      - geographic
    - description: The DNS settings of the Traffic Manager profile.
      name: dns_config
    - defaultValue: '{''protocol'': ''HTTP'', ''port'': 80, ''path'': ''/''}'
      description: The endpoint monitoring settings of the Traffic Manager profile.
      name: monitor_config
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Traffic Manager profile\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_trafficmanagerprofile_module.html"
    name: azure-rm-trafficmanagerprofile
    outputs:
    - contextPath: Azure.AzureRmTrafficmanagerprofile.id
      description: The ID of the traffic manager profile.
      type: string
    - contextPath: Azure.AzureRmTrafficmanagerprofile.endpoints
      description: List of endpoint IDs attached to the profile.
      type: unknown
  - arguments:
    - description: Limit results to a specific Traffic Manager profile.
      name: name
    - description: The resource group to search for the desired Traffic Manager profile.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get Azure Traffic Manager profile facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_trafficmanagerprofile_info_module.html"
    name: azure-rm-trafficmanagerprofile-info
    outputs:
    - contextPath: Azure.AzureRmTrafficmanagerprofileInfo.tms
      description: List of Traffic Manager profiles.
      type: unknown
  - arguments:
    - description: Name of a resource group where the network interface exists or will be created.
      name: resource_group
      required: true
    - description: Name of the network interface.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the network interface. Use `present` to create or update an interface and `absent` to delete an interface.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - description: 'An existing virtual network with which the network interface will be associated. Required when creating a network interface. It can be the virtual network''s name. Make sure your virtual network is in the same resource group as NIC when you give only the name. It can be the virtual network''s resource id. It can be a dict which contains `name` and `resource_group` of the virtual network.'
      name: virtual_network
      required: true
    - description: 'Name of an existing subnet within the specified virtual network. Required when creating a network interface. Use the `virtual_network`''s resource group.'
      name: subnet_name
      required: true
    - auto: PREDEFINED
      defaultValue: Linux
      description: 'Determines any rules to be added to a default security group. When creating a network interface, if no security group name is provided, a default security group will be created. If the `os_type=Windows`, a rule allowing RDP access will be added. If the `os_type=Linux`, a rule allowing SSH access will be added.'
      name: os_type
      predefined:
      - Windows
      - Linux
    - description: '(Deprecate) Valid IPv4 address that falls within the specified subnet. This option will be deprecated in 2.9, use `ip_configurations` instead.'
      name: private_ip_address
    - auto: PREDEFINED
      defaultValue: Dynamic
      description: '(Deprecate) Whether or not the assigned IP address is permanent. When creating a network interface, if you specify `private_ip_address=Static`, you must provide a value for `private_ip_address`. You can update the allocation method to `Static` after a dynamic private IP address has been assigned. This option will be deprecated in 2.9, use `ip_configurations` instead.'
      name: private_ip_allocation_method
      predefined:
      - Dynamic
      - Static
    - defaultValue: 'yes'
      description: '(Deprecate) When creating a network interface, if no public IP address name is provided a default public IP address will be created. Set to `false` if you do not want a public IP address automatically created. This option will be deprecated in 2.9, use `ip_configurations` instead.'
      name: public_ip
    - description: '(Deprecate) Name of an existing public IP address object to associate with the security group. This option will be deprecated in 2.9, use `ip_configurations` instead.'
      name: public_ip_address_name
    - auto: PREDEFINED
      defaultValue: Dynamic
      description: '(Deprecate) If a `public_ip_address_name` is not provided, a default public IP address will be created. The allocation method determines whether or not the public IP address assigned to the network interface is permanent. This option will be deprecated in 2.9, use `ip_configurations` instead.'
      name: public_ip_allocation_method
      predefined:
      - Dynamic
      - Static
    - description: List of IP configurations. Each configuration object should include field `private_ip_address`, `private_ip_allocation_method`, `public_ip_address_name`, `public_ip`, `public_ip_allocation_method`, `name`.
      name: ip_configurations
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Whether the network interface should be created with the accelerated networking feature or not.
      name: enable_accelerated_networking
      predefined:
      - 'Yes'
      - 'No'
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Whether a security group should be be created with the NIC. If this flag set to `True` and no `security_group` set, a default security group will be created.'
      name: create_with_security_group
      predefined:
      - 'Yes'
      - 'No'
    - description: 'An existing security group with which to associate the network interface. If not provided, a default security group will be created when `create_with_security_group=true`. It can be the name of security group. Make sure the security group is in the same resource group when you only give its name. It can be the resource id. It can be a dict contains security_group''s `name` and `resource_group`.'
      name: security_group
    - description: When a default security group is created for a Linux host a rule will be added allowing inbound TCP connections to the default SSH port `22`, and for a Windows host rules will be added allowing inbound access to RDP ports `3389` and `5986`. Override the default ports by providing a list of open ports.
      name: open_ports
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Whether to enable IP forwarding.
      name: enable_ip_forwarding
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Which DNS servers should the NIC lookup. List of IP addresses.'
      isArray: true
      name: dns_servers
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure network interfaces\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_networkinterface_module.html"
    name: azure-rm-networkinterface
    outputs:
    - contextPath: Azure.AzureRmNetworkinterface.state
      description: The current state of the network interface.
      type: unknown
  - arguments:
    - description: Only show results for a specific network interface.
      name: name
    - description: Name of the resource group containing the network interface(s). Required when searching by name.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get network interface facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_networkinterface_info_module.html"
    name: azure-rm-networkinterface-info
    outputs:
    - contextPath: Azure.AzureRmNetworkinterfaceInfo.azure_networkinterfaces
      description: List of network interface dicts.
      type: unknown
    - contextPath: Azure.AzureRmNetworkinterfaceInfo.networkinterfaces
      description: List of network interface dicts. Each dict contains parameters can be passed to `azure_rm_networkinterface` module.
      type: unknown
  - arguments:
    - description: Name of resource group with which the Public IP is associated.
      name: resource_group
      required: true
    - auto: PREDEFINED
      defaultValue: dynamic
      description: 'Control whether the assigned Public IP remains permanently assigned to the object. If not set to `Static`, the IP address my changed anytime an associated virtual machine is power cycled.'
      name: allocation_method
      predefined:
      - dynamic
      - static
      - Static
      - Dynamic
    - description: 'The customizable portion of the FQDN assigned to public IP address. This is an explicit setting. If no value is provided, any existing value will be removed on an existing public IP.'
      name: domain_name
    - description: Name of the Public IP.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the Public IP. Use `present` to create or update a and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - description: Valid Azure location. Defaults to location of the resource group.
      name: location
    - auto: PREDEFINED
      description: The public IP address SKU.
      name: sku
      predefined:
      - basic
      - standard
      - Basic
      - Standard
    - description: 'List of IpTag associated with the public IP address. Each element should contain type:value pair.'
      name: ip_tags
    - description: Idle timeout in minutes.
      name: idle_timeout
    - auto: PREDEFINED
      defaultValue: ipv4
      description: The public IP address version.
      name: version
      predefined:
      - ipv4
      - ipv6
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure Public IP Addresses\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_publicipaddress_module.html"
    name: azure-rm-publicipaddress
    outputs:
    - contextPath: Azure.AzureRmPublicipaddress.state
      description: Facts about the current state of the object.
      type: unknown
  - arguments:
    - description: Only show results for a specific Public IP.
      name: name
    - description: Limit results by resource group. Required when using name parameter.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get public IP facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_publicipaddress_info_module.html"
    name: azure-rm-publicipaddress-info
    outputs:
    - contextPath: Azure.AzureRmPublicipaddressInfo.azure_publicipaddresses
      description: 'List of public IP address dicts. Please note that this option will be deprecated in 2.10 when curated format will become the only supported format.'
      type: unknown
    - contextPath: Azure.AzureRmPublicipaddressInfo.publicipaddresses
      description: 'List of publicipaddress. Contains the detail which matches azure_rm_publicipaddress parameters. Returned when the format parameter set to curated.'
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the route.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the route. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - description: The destination CIDR to which the route applies.
      name: address_prefix
    - auto: PREDEFINED
      defaultValue: none
      description: The type of Azure hop the packet should be sent to.
      name: next_hop_type
      predefined:
      - virtual_network_gateway
      - vnet_local
      - internet
      - virtual_appliance
      - none
    - description: 'The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.'
      name: next_hop_ip_address
    - description: The name of the route table.
      name: route_table_name
      required: true
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure route resource\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_route_module.html"
    name: azure-rm-route
    outputs:
    - contextPath: Azure.AzureRmRoute.id
      description: Current state of the route.
      type: string
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the route table.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the route table. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - auto: PREDEFINED
      defaultValue: 'No'
      description: Specified whether to disable the routes learned by BGP on that route table.
      name: disable_bgp_route_propagation
      predefined:
      - 'Yes'
      - 'No'
    - description: 'Region of the resource. Derived from `resource_group` if not specified.'
      name: location
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure route table resource\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_routetable_module.html"
    name: azure-rm-routetable
    outputs:
    - contextPath: Azure.AzureRmRoutetable.changed
      description: Whether the resource is changed.
      type: boolean
    - contextPath: Azure.AzureRmRoutetable.id
      description: Resource ID.
      type: string
  - arguments:
    - description: Limit results to a specific route table.
      name: name
    - description: Limit results in a specific resource group.
      name: resource_group
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get route table facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_routetable_info_module.html"
    name: azure-rm-routetable-info
    outputs:
    - contextPath: Azure.AzureRmRoutetableInfo.id
      description: Resource ID.
      type: string
    - contextPath: Azure.AzureRmRoutetableInfo.name
      description: Name of the resource.
      type: string
    - contextPath: Azure.AzureRmRoutetableInfo.resource_group
      description: Resource group of the route table.
      type: string
    - contextPath: Azure.AzureRmRoutetableInfo.disable_bgp_route_propagation
      description: Whether the routes learned by BGP on that route table disabled.
      type: boolean
    - contextPath: Azure.AzureRmRoutetableInfo.tags
      description: Tags of the route table.
      type: unknown
    - contextPath: Azure.AzureRmRoutetableInfo.routes
      description: Current routes of the route table.
      type: unknown
  - arguments:
    - description: 'The set of default rules automatically added to a security group at creation. In general default rules will not be modified. Modify rules to shape the flow of traffic to or from a subnet or NIC. See rules below for the makeup of a rule dict.'
      name: default_rules
    - description: Valid azure location. Defaults to location of the resource group.
      name: location
    - description: Name of the security group to operate on.
      name: name
    - defaultValue: 'no'
      description: Remove any existing rules not matching those defined in the default_rules parameter.
      name: purge_default_rules
    - defaultValue: 'no'
      description: Remove any existing rules not matching those defined in the rules parameters.
      name: purge_rules
    - description: Name of the resource group the security group belongs to.
      name: resource_group
      required: true
    - description: Set of rules shaping traffic flow to or from a subnet or NIC. Each rule is a dictionary.
      name: rules
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the security group. Set to `present` to create or update a security group. Set to `absent` to remove a security group.
      name: state
      predefined:
      - absent
      - present
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure network security groups\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_securitygroup_module.html"
    name: azure-rm-securitygroup
    outputs:
    - contextPath: Azure.AzureRmSecuritygroup.state
      description: Current state of the security group.
      type: unknown
  - arguments:
    - description: Only show results for a specific security group.
      name: name
    - description: Name of the resource group to use.
      name: resource_group
      required: true
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    description: "Get security group facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_securitygroup_info_module.html"
    name: azure-rm-securitygroup-info
    outputs:
    - contextPath: Azure.AzureRmSecuritygroupInfo.securitygroups
      description: List containing security group dicts.
      type: unknown
  - arguments:
    - description: Name of resource group.
      name: resource_group
      required: true
    - description: Name of the existing DNS zone in which to manage the record set.
      name: zone_name
      required: true
    - description: Relative name of the record set.
      name: relative_name
      required: true
    - auto: PREDEFINED
      description: The type of record set to create or delete.
      name: record_type
      predefined:
      - A
      - AAAA
      - CNAME
      - MX
      - NS
      - SRV
      - TXT
      - PTR
      - CAA
      - SOA
      required: true
    - auto: PREDEFINED
      defaultValue: purge
      description: Whether existing record values not sent to the module should be purged.
      name: record_mode
      predefined:
      - append
      - purge
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the record set. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - defaultValue: '3600'
      description: Time to live of the record set in seconds.
      name: time_to_live
    - description: List of records to be created depending on the type of record (set).
      name: records
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Create, delete and update DNS record sets and records\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_dnsrecordset_module.html"
    name: azure-rm-dnsrecordset
    outputs:
    - contextPath: Azure.AzureRmDnsrecordset.state
      description: Current state of the DNS record set.
      type: unknown
  - arguments:
    - description: Only show results for a Record Set.
      name: relative_name
    - description: Limit results by resource group. Required when filtering by name or type.
      name: resource_group
    - description: Limit results by zones. Required when filtering by name or type.
      name: zone_name
    - description: Limit record sets by record type.
      name: record_type
    - description: Limit the maximum number of record sets to return.
      name: top
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Get DNS Record Set facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_dnsrecordset_info_module.html"
    name: azure-rm-dnsrecordset-info
    outputs:
    - contextPath: Azure.AzureRmDnsrecordsetInfo.azure_dnsrecordset
      description: List of record set dicts.
      type: unknown
    - contextPath: Azure.AzureRmDnsrecordsetInfo.dnsrecordsets
      description: List of record set dicts, which shares the same hierarchy as `azure_rm_dnsrecordset` module's parameter.
      type: unknown
  - arguments:
    - description: name of resource group.
      name: resource_group
      required: true
    - description: Name of the DNS zone.
      name: name
      required: true
    - auto: PREDEFINED
      defaultValue: present
      description: Assert the state of the zone. Use `present` to create or update and `absent` to delete.
      name: state
      predefined:
      - absent
      - present
    - auto: PREDEFINED
      description: The type of this DNS zone (`public` or `private`).
      name: type
      predefined:
      - public
      - private
    - description: 'A list of references to virtual networks that register hostnames in this DNS zone. This is a only when `type=private`. Each element can be the name or resource id, or a dict contains `name`, `resource_group` information of the virtual network.'
      isArray: true
      name: registration_virtual_networks
    - description: 'A list of references to virtual networks that resolve records in this DNS zone. This is a only when `type=private`. Each element can be the name or resource id, or a dict contains `name`, `resource_group` information of the virtual network.'
      isArray: true
      name: resolution_virtual_networks
    - description: Your Azure subscription Id.
      name: subscription_id
    - description: 'Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false.'
      isArray: true
      name: tags
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Manage Azure DNS zones\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_dnszone_module.html"
    name: azure-rm-dnszone
    outputs:
    - contextPath: Azure.AzureRmDnszone.state
      description: Current state of the zone.
      type: unknown
  - arguments:
    - description: Limit results by resource group. Required when filtering by name.
      name: resource_group
    - description: Only show results for a specific zone.
      name: name
    - description: Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
      isArray: true
      name: tags
    - description: Your Azure subscription Id.
      name: subscription_id
    - auto: PREDEFINED
      defaultValue: 'Yes'
      description: 'Use to control if tags field is canonical or just appends to existing tags. When canonical, any tags not found in the tags parameter will be removed from the object''s metadata.'
      name: append_tags
      predefined:
      - 'Yes'
      - 'No'
    description: "Get DNS zone facts\n Further documentation available at https://docs.ansible.com/ansible/2.9/modules/azure_rm_dnszone_info_module.html"
    name: azure-rm-dnszone-info
    outputs:
    - contextPath: Azure.AzureRmDnszoneInfo.azure_dnszones
      description: List of zone dicts.
      type: unknown
    - contextPath: Azure.AzureRmDnszoneInfo.dnszones
      description: List of zone dicts, which share the same layout as azure_rm_dnszone module parameter.
      type: unknown
  dockerimage: demisto/ansible-runner:1.0.0.24037
  script: ''
  subtype: python3
  type: python
tests:
- Test-AnsibleAzure
