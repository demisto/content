category: IT Services
commonfields:
  id: AWS - Lambda
  version: -1
configuration:
- display: AWS Default Region
  name: defaultRegion
  options:
  - us-east-1
  - us-east-2
  - us-west-1
  - us-west-2
  - ca-central-1
  - eu-west-1
  - eu-central-1
  - eu-west-2
  - ap-northeast-1
  - ap-northeast-2
  - ap-southeast-1
  - ap-southeast-2
  - ap-south-1
  - sa-east-1
  - eu-north-1
  - eu-west-3
  - us-gov-east-1
  - us-gov-west-1
  required: false
  type: 15
- display: Role Arn
  name: roleArn
  required: false
  type: 0
- display: Role Session Name
  name: roleSessionName
  required: false
  type: 0
- display: Role Session Duration
  name: sessionDuration
  required: false
  type: 0
- display: Access Key
  name: access_key
  required: false
  type: 0
- display: Secret Key
  name: secret_key
  required: false
  type: 4
- display: Timeout
  name: timeout
  additionalinfo: The time in seconds till a timeout exception is reached. You can
    specify just the read timeout (for example 60) or also the connect timeout followed
    after a comma (for example 60,10). If a connect timeout is not specified, a default
    of 10 second will be used. You may also override the value at the aws-lambda-invoke
    command.
  defaultvalue: 60,10
  required: false
  type: 0
- display: Retries
  name: retries
  defaultvalue: 5
  additionalinfo: "The maximum number of retry attempts when connection or throttling errors
    are encountered. Set to 0 to disable retries. The default value is 5 and the limit is 10.
    Note: Increasing the number of retries will increase the execution time. You may also override the value
    when executing the aws-lambda-invoke command."
  required: false
  type: 0
- display: Trust any certificate (not secure)
  name: insecure
  required: false
  type: 8
- display: Use system proxy settings
  name: proxy
  required: false
  type: 8
description: Amazon Web Services Serverless Compute service (lambda)
display: AWS - Lambda
name: AWS - Lambda
script:
  commands:
  - arguments:
    - default: false
      description: The name of the Lambda function.
      isArray: false
      name: functionName
      required: true
      secret: false
    - default: false
      description: Specify a version or alias to get details about a published version
        of the function.
      isArray: false
      name: qualifier
      required: false
      secret: false
    - auto: PREDEFINED
      default: false
      description: The AWS Region, if not specified the default region will be used
      isArray: false
      name: region
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-central-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - sa-east-1
      - eu-north-1
      - eu-west-3
      required: false
      secret: false
    - default: false
      description: The Amazon Resource Name (ARN) of the role to assume
      isArray: false
      name: roleArn
      required: false
      secret: false
    - default: false
      description: An identifier for the assumed role session.
      isArray: false
      name: roleSessionName
      required: false
      secret: false
    - default: false
      description: The duration, in seconds, of the role session. The value can range
        from 900 seconds (15 minutes) up to the maximum session duration setting for
        the role.
      isArray: false
      name: roleSessionDuration
      required: false
      secret: false
    deprecated: false
    description: Returns the configuration information of the Lambda function and
      a presigned URL link to the .zip file you uploaded with CreateFunction so you
      can download the .zip file. Note that the URL is valid for up to 10 minutes.
      The configuration information is the same information you provided as parameters
      when uploading the function.  Use the Qualifier parameter to retrieve a published
      version of the function. Otherwise, returns the unpublished version ($LATEST
      ).
    execution: false
    name: aws-lambda-get-function
    outputs:
    - contextPath: AWS.Lambda.Functions.Configuration.FunctionName
      description: The name of the function.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.FunctionArn
      description: The function's Amazon Resource Name.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Runtime
      description: The runtime environment for the Lambda function.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Role
      description: The function's execution role.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Handler
      description: The function Lambda calls to begin executing your function.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.CodeSize
      description: The size of the function's deployment package in bytes.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Description
      description: The function's description.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Timeout
      description: The amount of time that Lambda allows a function to run before
        terminating it.
      type: number
    - contextPath: AWS.Lambda.Functions.Configuration.MemorySize
      description: The memory allocated to the function
      type: number
    - contextPath: 'AWS.Lambda.Functions.Configuration.LastModified '
      description: The date and time that the function was last updated, in ISO-8601
        format (YYYY-MM-DDThh:mm:ss.sTZD).
      type: date
    - contextPath: AWS.Lambda.Functions.Configuration.CodeSha256
      description: The SHA256 hash of the function's deployment package.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Version
      description: The version of the Lambda function.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.VpcConfig.SubnetIds
      description: A list of VPC subnet IDs.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.VpcConfig.SecurityGroupIds
      description: A list of VPC security groups IDs.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.VpcConfig.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.DeadLetterConfig.TargetArn
      description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon
        SNS topic.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Environment.Variables
      description: Environment variable key-value pairs
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Environment.Error.ErrorCode
      description: Error messages for environment variables that could not be applied.
        The error code.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Environment.
      description: Error messages for environment variables that could not be applied.
        The error message.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.KMSKeyArn
      description: The KMS key used to encrypt the function's environment variables.
        Only returned if you've configured a customer managed CMK.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.TracingConfig.Mode
      description: The function's AWS X-Ray tracing configuration. The tracing mode.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.MasterArn
      description: The ARN of the master function.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.RevisionId
      description: Represents the latest updated revision of the function or alias.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Layers.Arn
      description: The Amazon Resource Name (ARN) of the function layer.
      type: string
    - contextPath: AWS.Lambda.Functions.Configuration.Layers.CodeSize
      description: The size of the layer archive in bytes.
      type: number
    - contextPath: AWS.Lambda.Functions.Code.RepositoryType
      description: The repository from which you can download the function.
      type: string
    - contextPath: AWS.Lambda.Functions.Code.Location
      description: The presigned URL you can use to download the function's .zip file
        that you previously uploaded. The URL is valid for up to 10 minutes.
      type: string
    - contextPath: AWS.Lambda.Functions.Tags
      description: list of tags associated with the function.
      type: string
    - contextPath: AWS.Lambda.Functions.Concurrency.ReservedConcurrentExecutions
      description: The number of concurrent executions reserved for this function.
      type: string
  - arguments:
    - default: false
      auto: PREDEFINED
      description: The AWS Region, if not specified the default region will be used
      isArray: false
      name: region
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-central-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - sa-east-1
      - eu-north-1
      - eu-west-3
      required: false
      secret: false
    - default: false
      description: The Amazon Resource Name (ARN) of the role to assume
      isArray: false
      name: roleArn
      required: false
      secret: false
    - default: false
      description: An identifier for the assumed role session.
      isArray: false
      name: roleSessionName
      required: false
      secret: false
    - default: false
      description: The duration, in seconds, of the role session. The value can range
        from 900 seconds (15 minutes) up to the maximum session duration setting for
        the role.
      isArray: false
      name: roleSessionDuration
      required: false
      secret: false
    deprecated: false
    description: Returns a list of your Lambda functions. For each function, the response
      includes the function configuration information. You must use GetFunction to
      retrieve the code for your function.
    execution: false
    name: aws-lambda-list-functions
    outputs:
    - contextPath: AWS.Lambda.Functions.FunctionName
      description: The name of the function.
      type: string
    - contextPath: AWS.Lambda.Functions.FunctionArn
      description: The function's Amazon Resource Name.
      type: string
    - contextPath: AWS.Lambda.Functions.Runtime
      description: The runtime environment for the Lambda function.
      type: string
    - contextPath: AWS.Lambda.Functions.Role
      description: The function's execution role.
      type: string
    - contextPath: AWS.Lambda.Functions.Handler
      description: The function Lambda calls to begin executing your function.
      type: string
    - contextPath: AWS.Lambda.Functions.CodeSize
      description: The size of the function's deployment package in bytes.
      type: number
    - contextPath: AWS.Lambda.Functions.Description
      description: The function's description.
      type: string
    - contextPath: AWS.Lambda.Functions.Timeout
      description: The amount of time that Lambda allows a function to run before
        terminating it.
      type: number
    - contextPath: AWS.Lambda.Functions.MemorySize
      description: The memory allocated to the function.
      type: number
    - contextPath: AWS.Lambda.Functions.LastModified
      description: The date and time that the function was last updated, in ISO-8601
        format (YYYY-MM-DDThh:mm:ss.sTZD).
      type: date
    - contextPath: AWS.Lambda.Functions.CodeSha256
      description: The SHA256 hash of the function's deployment package.
      type: string
    - contextPath: AWS.Lambda.Functions.Version
      description: The version of the Lambda function.
      type: string
    - contextPath: AWS.Lambda.Functions.VpcConfig.SubnetIds
      description: A list of VPC subnet IDs.
      type: string
    - contextPath: AWS.Lambda.Functions.VpcConfig.SecurityGroupIds
      description: A list of VPC security groups IDs.
      type: string
    - contextPath: AWS.Lambda.Functions.VpcConfig.VpcId
      description: The ID of the VPC.
      type: string
    - contextPath: AWS.Lambda.Functions.DeadLetterConfig.TargetArn
      description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon
        SNS topic.
      type: string
    - contextPath: AWS.Lambda.Functions.Environment.Variables
      description: Environment variable key-value pairs.
      type: string
    - contextPath: AWS.Lambda.Functions.Environment.Error.ErrorCode
      description: Error messages for environment variables that could not be applied.
        The error code.
      type: string
    - contextPath: AWS.Lambda.Functions.Environment.Error.Message
      description: Error messages for environment variables that could not be applied.
        The error message.
      type: string
    - contextPath: AWS.Lambda.Functions.KMSKeyArn
      description: The KMS key used to encrypt the function's environment variables.
        Only returned if you've configured a customer managed CMK.
      type: string
    - contextPath: AWS.Lambda.Functions.TracingConfig.Mode
      description: The function's AWS X-Ray tracing configuration. The tracing mode.
      type: string
    - contextPath: AWS.Lambda.Functions.MasterArn
      description: The ARN of the master function.
      type: string
    - contextPath: AWS.Lambda.Functions.RevisionId
      description: Represents the latest updated revision of the function or alias.
      type: string
    - contextPath: AWS.Lambda.Functions.Layers.Arn
      description: The Amazon Resource Name (ARN) of the function layer.
      type: string
    - contextPath: AWS.Lambda.Functions.Layers.CodeSize
      description: The size of the layer archive in bytes.
      type: string
  - arguments:
    - default: false
      description: The name of the lambda function.
      isArray: false
      name: functionName
      required: true
      secret: false
    - default: false
      description: If you specify this optional parameter, the API returns only the
        aliases that are pointing to the specific Lambda function version, otherwise
        the API returns all of the aliases created for the Lambda function.
      isArray: false
      name: functionVersion
      required: false
      secret: false
    - default: false
      auto: PREDEFINED
      description: The AWS Region, if not specified the default region will be used
      isArray: false
      name: region
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-central-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - sa-east-1
      - eu-north-1
      - eu-west-3
      required: false
      secret: false
    - default: false
      description: The Amazon Resource Name (ARN) of the role to assume
      isArray: false
      name: roleArn
      required: false
      secret: false
    - default: false
      description: An identifier for the assumed role session.
      isArray: false
      name: roleSessionName
      required: false
      secret: false
    - default: false
      description: The duration, in seconds, of the role session. The value can range
        from 900 seconds (15 minutes) up to the maximum session duration setting for
        the role.
      isArray: false
      name: roleSessionDuration
      required: false
      secret: false
    deprecated: false
    description: Returns list of aliases created for a Lambda function. For each alias,
      the response includes information such as the alias ARN, description, alias
      name, and the function version to which it points.
    execution: false
    name: aws-lambda-list-aliases
    outputs:
    - contextPath: AWS.Lambda.Aliases.AliasArn
      description: 'Lambda function ARN that is qualified using the alias name as
        the suffix. '
      type: string
    - contextPath: AWS.Lambda.Aliases.Name
      description: Alias name.
      type: string
    - contextPath: AWS.Lambda.Aliases.FunctionVersion
      description: Function version to which the alias points.
      type: string
    - contextPath: AWS.Lambda.Aliases.Description
      description: Alias description.
      type: string
    - contextPath: AWS.Lambda.Aliases.RoutingConfig.AdditionalVersionWeights
      description: The name of the second alias, and the percentage of traffic that
        is routed to it.
      type: string
    - contextPath: AWS.Lambda.Aliases.RevisionId
      description: Represents the latest updated revision of the function or alias.
      type: string
  - arguments:
    - default: false
      description: The name of the Lambda function.
      isArray: false
      name: functionName
      required: true
      secret: false
    - auto: PREDEFINED
      default: false
      description: Choose from the following options.  RequestResponse (default) -
        Invoke the function synchronously. Keep the connection open until the function
        returns a response or times out. Event - Invoke the function asynchronously.
        Send events that fail multiple times to the function's dead-letter queue (if
        configured). DryRun - Validate parameter values and verify that the user or
        role has permission to invoke the function.
      isArray: false
      name: invocationType
      predefined:
      - Event
      - RequestResponse
      - DryRun
      required: false
      secret: false
    - auto: PREDEFINED
      default: false
      description: You can set this optional parameter to Tail in the request only
        if you specify the InvocationType parameter with value RequestResponse . In
        this case, AWS Lambda returns the base64-encoded last 4 KB of log data produced
        by your Lambda function in the x-amz-log-result header.
      isArray: false
      name: logType
      predefined:
      - None
      - Tail
      required: false
      secret: false
    - default: false
      description: 'Using the ClientContext you can pass client-specific information
        to the Lambda function you are invoking. '
      isArray: false
      name: clientContext
      required: false
      secret: false
    - default: false
      description: JSON that you want to provide to your Lambda function as input.
      isArray: false
      name: payload
      required: false
      secret: false
    - default: false
      description: Specify a version or alias to invoke a published version of the
        function.
      isArray: false
      name: qualifier
      required: false
      secret: false
    - default: false
      auto: PREDEFINED
      description: The AWS Region, if not specified the default region will be used
      isArray: false
      name: region
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-central-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - sa-east-1
      - eu-north-1
      - eu-west-3
      required: false
      secret: false
    - default: false
      description: The Amazon Resource Name (ARN) of the role to assume
      isArray: false
      name: roleArn
      required: false
      secret: false
    - default: false
      description: An identifier for the assumed role session.
      isArray: false
      name: roleSessionName
      required: false
      secret: false
    - default: false
      description: The duration, in seconds, of the role session. The value can range
        from 900 seconds (15 minutes) up to the maximum session duration setting for
        the role.
      isArray: false
      name: roleSessionDuration
      required: false
      secret: false
    - default: false
      description: The maximum retry attempts when connection or throttling errors
        are encountered. Set to 0 to disable retries. If not, specified will use the
        instances configured default timeout.
      isArray: false
      name: retries
      required: false
      secret: false
    - default: false
      description: The time in seconds till a timeout exception is reached. You can
        specify just the read timeout (for example 60) or also the connect timeout
        followed after a comma (for example 60,10). If not specified, will use the
        instances configured default timeout.
      isArray: false
      name: timeout
      required: false
      secret: false
    deprecated: false
    description: Invokes a Lambda function. Specify just a function name to invoke
      the latest version of the function. To invoke a published version, use the Qualifier
      parameter to specify a version or alias .  If you use the RequestResponse (synchronous)
      invocation option, note that the function may be invoked multiple times if a
      timeout is reached. For functions with a long timeout, your client may be disconnected
      during synchronous invocation while it waits for a response. Use the "timeout"
      and "retries" args to control this behavior. If you use the Event (asynchronous)
      invocation option, the function will be invoked at least once in response to
      an event and the function must be idempotent to handle this.
    execution: true
    name: aws-lambda-invoke
    outputs:
    - contextPath: AWS.Lambda.InvokedFunctions.FunctionName
      description: The name of the Lambda function.
      type: string
    - contextPath: AWS.Lambda.InvokedFunctions.FunctionError
      description: Indicates whether an error occurred while executing the Lambda
        function. If an error occurred this field will have one of two values; Handled
        or Unhandled . Handled errors are errors that are reported by the function
        while the Unhandled errors are those detected and reported by AWS Lambda.
        Unhandled errors include out of memory errors and function timeouts.
      type: string
    - contextPath: AWS.Lambda.InvokedFunctions.LogResult
      description: logs for the Lambda function invocation. This is present only if
        the invocation type is RequestResponse and the logs were requested.
      type: string
    - contextPath: AWS.Lambda.InvokedFunctions.Payload
      description: It is the JSON representation of the object returned by the Lambda
        function. This is present only if the invocation type is RequestResponse.
      type: string
    - contextPath: AWS.Lambda.InvokedFunctions.ExecutedVersion
      description: The function version that has been executed. This value is returned
        only if the invocation type is RequestResponse.
      type: string
    - contextPath: AWS.Lambda.InvokedFunctions.Region
      description: The AWS Region.
      type: string
  - arguments:
    - default: false
      description: The AWS Region, if not specified the default region will be used
      isArray: false
      auto: PREDEFINED
      name: region
      predefined:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-central-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - sa-east-1
      - eu-north-1
      - eu-west-3
      required: false
      secret: false
    - default: false
      description: The Amazon Resource Name (ARN) of the role to assume
      isArray: false
      name: roleArn
      required: false
      secret: false
    - default: false
      description: An identifier for the assumed role session.
      isArray: false
      name: roleSessionName
      required: false
      secret: false
    - default: false
      description: The duration, in seconds, of the role session. The value can range
        from 900 seconds (15 minutes) up to the maximum session duration setting for
        the role.
      isArray: false
      name: roleSessionDuration
      required: false
      secret: false
    deprecated: false
    description: Retrieves details about your account's limits and usage in an AWS
      Region.
    execution: false
    name: aws-lambda-get-account-settings
    outputs:
    - contextPath: AWS.Lambda.AccountLimit.TotalCodeSize
      description: The amount of storage space that you can use for all deployment
        packages and layer archives.
      type: number
    - contextPath: AWS.Lambda.AccountLimit.CodeSizeUnzipped
      description: The maximum size of your function's code and layers when they're
        extracted.
      type: number
    - contextPath: AWS.Lambda.AccountLimit.CodeSizeZipped
      description: The maximum size of a deployment package when it's uploaded directly
        to AWS Lambda. Use Amazon S3 for larger files.
      type: number
    - contextPath: AWS.Lambda.AccountLimit.ConcurrentExecutions
      description: The maximum number of simultaneous function executions.
      type: number
    - contextPath: AWS.Lambda.AccountLimit.UnreservedConcurrentExecutions
      description: The maximum number of simultaneous function executions, minus the
        capacity that's reserved for individual functions with PutFunctionConcurrency
        .
      type: number
    - contextPath: AWS.Lambda.AccountUsage.TotalCodeSize
      description: The amount of storage space, in bytes, that's being used by deployment
        packages and layer archives.
      type: number
    - contextPath: AWS.Lambda.AccountUsage. FunctionCount
      description: The number of Lambda functions.
      type: number
  dockerimage: demisto/boto3py3:1.0.0.20516
  isfetch: false
  runonce: false
  subtype: python3
  script: ''
  type: python
tests:
- AWS-Lambda-Test (Read-Only)
fromversion: 5.0.0
