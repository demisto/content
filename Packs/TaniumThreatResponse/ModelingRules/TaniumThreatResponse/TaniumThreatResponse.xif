[MODEL: dataset = tanium_threat_response_raw]
alter
        payload = to_json_string(arrayindex(regextract(json_extract_scalar(_raw_log, "$.Other Parameters"), "payload=(.*)"), 0))
| alter
        platform = lowercase(json_extract_scalar(payload, "$.finding.system_info.os"))
| alter
        xdm.source.host.hostname = json_extract_scalar(_raw_log, "$.Computer Name"),
        xdm.source.ipv4 =  arrayindex(regextract(json_extract_scalar(_raw_log, "$.Computer IP"), "(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0),
        xdm.source.ipv6 =  arrayindex(regextract(json_extract_scalar(_raw_log, "$.Computer IP"), "([a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5}[a-fA-F0-9\:]{1,5})"),0),
        xdm.event.id = json_extract_scalar(_raw_log, "$.Event Id"),
        xdm.alert.severity = json_extract_scalar(_raw_log, "$.Severity"),
        xdm.event.type = json_extract_scalar(_raw_log, "$.Event Name"),
        xdm.source.user.identifier = if(json_extract_scalar(_raw_log, "$.User Id") != "", json_extract_scalar(_raw_log, "$.User Id"), null),
        xdm.source.user.username = if(json_extract_scalar(_raw_log, "$.User Name") != "", json_extract_scalar(_raw_log, "$.User Name"), null),
        xdm.source.user.domain = if(json_extract_scalar(_raw_log, "$.User Domain") != "", json_extract_scalar(_raw_log, "$.User Domain"), null),
        xdm.source.host.os = json_extract_scalar(payload, "$.finding.system_info.os")
        xdm.source.host.os_family = if(platform contains "windows", XDM_CONST.OS_FAMILY_WINDOWS, platform contains "mac", XDM_CONST.OS_FAMILY_MACOS, platform contains "linux", XDM_CONST.OS_FAMILY_LINUX, platform contains "android", XDM_CONST.OS_FAMILY_ANDROID, platform contains "ios", XDM_CONST.OS_FAMILY_IOS, platform contains "ubuntu", XDM_CONST.OS_FAMILY_UBUNTU, platform contains "debian", XDM_CONST.OS_FAMILY_DEBIAN, platform contains "fedora", XDM_CONST.OS_FAMILY_FEDORA, platform contains "centos", XDM_CONST.OS_FAMILY_CENTOS, platform contains "chrome", XDM_CONST.OS_FAMILY_CHROMEOS, platform contains "solaris", XDM_CONST.OS_FAMILY_SOLARIS, platform contains "scada", XDM_CONST.OS_FAMILY_SCADA, to_string(platform)),