[MODEL: dataset=fireeye_hx_raw]
alter
        // addressNotificationEvent fields
        addressNotificationEvent_address = json_extract_scalar(event_values, "$['addressNotificationEvent/address']"),
        // dnsLookupEvent fields
        dnsLookupEvent_hostname = json_extract_scalar(event_values, "$['dnsLookupEvent/hostname']"),
        dnsLookupEvent_pid = json_extract_scalar(event_values, "$['dnsLookupEvent/pid']"),
        dnsLookupEvent_ppath = json_extract_scalar(event_values, "$['dnsLookupEvent/ppath']"),
        dnsLookupEvent_process = json_extract_scalar(event_values, "$['dnsLookupEvent/process']"),
        dnsLookupEvent_processPath = json_extract_scalar(event_values, "$['dnsLookupEvent/processPath']"),
        dnsLookupEvent_username = json_extract_scalar(event_values, "$['dnsLookupEvent/username']"),
        // fileWriteEvent fields
        fileWriteEvent_eventReason = json_extract_scalar(event_values, "$['fileWriteEvent/eventReason']"),
        fileWriteEvent_fileExtension = json_extract_scalar(event_values, "$['fileWriteEvent/fileExtension']"),
        fileWriteEvent_fileName = json_extract_scalar(event_values, "$['fileWriteEvent/fileName']"),
        fileWriteEvent_filePath = json_extract_scalar(event_values, "$['fileWriteEvent/filePath']"),
        fileWriteEvent_parentPid = json_extract_scalar(event_values, "$['fileWriteEvent/parentPid']"),
        fileWriteEvent_size = json_extract_scalar(event_values, "$['fileWriteEvent/size']"),
        fileWriteEvent_pid = json_extract_scalar(event_values, "$['fileWriteEvent/pid']"),
        fileWriteEvent_username = json_extract_scalar(event_values, "$['fileWriteEvent/username']"),
        fileWriteEvent_md5 = json_extract_scalar(event_values, "$['fileWriteEvent/md5']"),
        fileWriteEvent_process = json_extract_scalar(event_values, "$['fileWriteEvent/process']"),
        fileWriteEvent_processPath = json_extract_scalar(event_values, "$['fileWriteEvent/processPath']"),
        fileWriteEvent_devicePath = json_extract_scalar(event_values, "$['fileWriteEvent/devicePath']"),
        fileWriteEvent_ppath = json_extract_scalar(event_values, "$['fileWriteEvent/ppath']"),
        // imageLoadEvent fields
        imageLoadEvent_fileExtension = json_extract_scalar(event_values, "$['imageLoadEvent/fileExtension']"),
        imageLoadEvent_filename = json_extract_scalar(event_values, "$['imageLoadEvent/filename']"),
        imageLoadEvent_filePath = json_extract_scalar(event_values, "$['imageLoadEvent/filePath']"),
        imageLoadEvent_fullPath = json_extract_scalar(event_values, "$['imageLoadEvent/fullPath']"),
        imageLoadEvent_devicePath = json_extract_scalar(event_values, "$['imageLoadEvent/devicePath']"),
        imageLoadEvent_ppath = json_extract_scalar(event_values, "$['imageLoadEvent/ppath']"),
        imageLoadEvent_processPath = json_extract_scalar(event_values, "$['imageLoadEvent/processPath']"),
        imageLoadEvent_process = json_extract_scalar(event_values, "$['imageLoadEvent/process']"),
        imageLoadEvent_username = json_extract_scalar(event_values, "$['imageLoadEvent/username']"),
        imageLoadEvent_pid = json_extract_scalar(event_values, "$['imageLoadEvent/pid']"),
        // networkEvent fields
        networkEvent_localIP = json_extract_scalar(event_values, "$['networkEvent/localIP']"),
        networkEvent_protocol = json_extract_scalar(event_values, "$['networkEvent/protocol']"),
        networkEvent_remoteIP = json_extract_scalar(event_values, "$['networkEvent/remoteIP']"),
        networkEvent_pid = json_extract_scalar(event_values, "$['networkEvent/pid']"),
        networkEvent_remotePort = json_extract_scalar(event_values, "$['networkEvent/remotePort']"),
        networkEvent_localPort = json_extract_scalar(event_values, "$['networkEvent/localPort']"),
        networkEvent_ppath = json_extract_scalar(event_values, "$['networkEvent/ppath']"),
        networkEvent_processPath = json_extract_scalar(event_values, "$['networkEvent/processPath']"),
        networkEvent_process = json_extract_scalar(event_values, "$['networkEvent/process']"),
        // urlMonitorEvent fields
        urlMonitorEvent_requestUrl = json_extract_scalar(event_values, "$['urlMonitorEvent/requestUrl']"),
        urlMonitorEvent_urlMethod = json_extract_scalar(event_values, "$['urlMonitorEvent/urlMethod']"),
        urlMonitorEvent_userAgent = json_extract_scalar(event_values, "$['urlMonitorEvent/userAgent']"),
        urlMonitorEvent_pid = json_extract_scalar(event_values, "$['urlMonitorEvent/pid']"),
        urlMonitorEvent_username = json_extract_scalar(event_values, "$['urlMonitorEvent/username']"),
        urlMonitorEvent_process = json_extract_scalar(event_values, "$['urlMonitorEvent/process']"),
        urlMonitorEvent_processPath = json_extract_scalar(event_values, "$['urlMonitorEvent/processPath']"),
        urlMonitorEvent_ppath = json_extract_scalar(event_values, "$['urlMonitorEvent/ppath']"),
        urlMonitorEvent_localPort = json_extract_scalar(event_values, "$['urlMonitorEvent/localPort']"),
        urlMonitorEvent_remotePort = json_extract_scalar(event_values, "$['urlMonitorEvent/remotePort']"),
        // processEvent fields
        processEvent_pid = json_extract_scalar(event_values, "$['urlMonitorEvent/pid']"),
        processEvent_ppath = json_extract_scalar(event_values, "$['urlMonitorEvent/ppath']"),
        processEvent_process = json_extract_scalar(event_values, "$['urlMonitorEvent/process']"),
        // processEvent fields
        registryEvent_pid = json_extract_scalar(event_values, "$['registryEvent/pid']"),
        registryEvent_process = json_extract_scalar(event_values, "$['registryEvent/process']"),
        registryEvent_processPath = json_extract_scalar(event_values, "$['registryEvent/processPath']"),
        registryEvent_ppath = json_extract_scalar(event_values, "$['registryEvent/ppath']")
| alter
        xdm.event.type = coalesce(event_type, json_extract_scalar(condition, "$.event_type")),
        xdm.observer.unique_identifier = json_extract_scalar(appliance, "$._id"),
        xdm.alert.name = coalesce(json_extract_scalar(indicator, "$.display_name"), json_extract_scalar(indicator, "$.name")),
        xdm.alert.subcategory = json_extract_scalar(indicator, "$.category"),
        xdm.alert.original_alert_id = to_string(event_id),
        xdm.intermediate.host.ipv4_addresses = arraycreate(addressNotificationEvent_address),
        xdm.intermediate.host.ipv6_addresses = arraycreate(addressNotificationEvent_address),
        xdm.network.dns.dns_question.name = dnsLookupEvent_hostname,
        xdm.source.process.pid = dnsLookupEvent_pid,
        xdm.source.process.executable.path = dnsLookupEvent_ppath,
        xdm.source.process.name = dnsLookupEvent_process,
        xdm.source.process.executable.directory = dnsLookupEvent_processPath,
        xdm.source.user.username = coalesce(dnsLookupEvent_username,imageLoadEvent_username,urlMonitorEvent_username,fileWriteEvent_username),
        xdm.event.outcome_reason = fileWriteEvent_eventReason,
        xdm.target.file.extension = fileWriteEvent_fileExtension,
        xdm.target.file.filename = fileWriteEvent_fileName,
        xdm.target.file.path = fileWriteEvent_filePath,
        xdm.target.file.directory = fileWriteEvent_filePath,
        xdm.target.process.parent_id = fileWriteEvent_parentPid,
        xdm.target.process.pid = to_number(coalesce(networkEvent_pid,processEvent_pid,registryEvent_pid,urlMonitorEvent_pid,imageLoadEvent_pid,fileWriteEvent_pid)),
        xdm.target.process.name = coalesce(fileWriteEvent_process,imageLoadEvent_process,networkEvent_process, processEvent_process,registryEvent_process,urlMonitorEvent_process),
        xdm.target.process.executable.size = to_number(fileWriteEvent_size),
        xdm.target.module.extension = imageLoadEvent_fileExtension,
        xdm.target.module.filename = imageLoadEvent_filename,
        xdm.target.module.path = imageLoadEvent_filePath,
        xdm.target.module.directory = imageLoadEvent_fullPath,
        xdm.target.process.executable.directory = coalesce(fileWriteEvent_processPath,imageLoadEvent_processPath,networkEvent_processPath,registryEvent_processPath,urlMonitorEvent_processPath),
        xdm.target.process.executable.path = coalesce(fileWriteEvent_ppath,imageLoadEvent_ppath,networkEvent_ppath,processEvent_ppath,registryEvent_ppath,urlMonitorEvent_ppath),
        xdm.target.host.fqdn = coalesce(fileWriteEvent_devicePath,imageLoadEvent_devicePath),
        xdm.source.ipv4 = networkEvent_localIP,
        xdm.source.ipv6 = networkEvent_localIP,
        xdm.source.port = to_number(coalesce(networkEvent_localPort,urlMonitorEvent_localPort)),
        xdm.network.ip_protocol = networkEvent_protocol,
        xdm.target.ipv4 = networkEvent_remoteIP,
        xdm.target.ipv6 = networkEvent_remoteIP,
        xdm.target.port = to_number(coalesce(networkEvent_remotePort,urlMonitorEvent_remotePort)),
        xdm.target.url = urlMonitorEvent_requestUrl,
        xdm.network.http.method = urlMonitorEvent_urlMethod,
        xdm.source.user_agent = urlMonitorEvent_userAgent,
        xdm.observer.name = source,
        xdm.observer.type = subtype,
        xdm.event.outcome = resolution,
        xdm.target.file.md5 = coalesce(md5values,fileWriteEvent_md5);

[MODEL: dataset=fireeye_hx_raw]
