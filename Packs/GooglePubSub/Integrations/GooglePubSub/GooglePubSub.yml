category: Messaging and Conferencing
sectionOrder:
- Connect
- Collect
commonfields:
  id: GooglePubSub
  version: -1
configuration:
- display: Fetch incidents
  name: isFetch
  type: 8
  section: Collect
  required: false
- display: Incident type
  name: incidentType
  type: 13
  section: Connect
  required: false
- display: Service account private key file contents (JSON).
  additionalinfo: See the Help tab for details on creating a Service Account file.
  name: service_account_json
  type: 4
  section: Connect
  hidden: true
  required: false
- name: credentials
  type: 9
  section: Connect
  displaypassword: Service account private key file contents (JSON).
  hiddenusername: true
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
- additionalinfo: ID of the project to use by default when no project ID is provided.
  display: Default project ID.
  name: default_project
  required: true
  type: 0
  section: Connect
- additionalinfo: Subscription ID from which to fetch incidents.
  display: Fetch incidents using the subscription ID.
  name: default_subscription
  type: 0
  section: Collect
  required: false
- additionalinfo: Maximum number of incidents created per fetch.
  display: Maximum number of incidents per fetch.
  name: default_max_msgs
  type: 0
  section: Collect
  defaultvalue: '50'
  required: false
- additionalinfo: Acknowledge fetched incidents. (When toggled off, will not acknowledge fetched messages).
  display: Acknowledge incidents.
  name: ack_incidents
  type: 8
  section: Collect
  advanced: true
  required: false
- additionalinfo: First fetch timestamp (<number> <time unit>. E.g., 12 hours, 7 days).
  defaultvalue: 3 days
  display: First fetch time.
  name: first_fetch_time
  section: Collect
  type: 0
  required: false
description: Google Cloud Pub/Sub is a fully-managed real-time messaging service that enables you to send and receive messages between independent applications.
display: Google Cloud Pub/Sub
name: GooglePubSub
script:
  commands:
  - arguments:
    - description: ID of the project to look in.
      name: project_id
    - description: Maximum amount of entries to fetch.
      name: page_size
    - description: Next page token as returned from the "gcp-pubsub-topics-list" command.
      name: page_token
    description: Get a list of the topics of the project.
    name: gcp-pubsub-topics-list
    outputs:
    - contextPath: GoogleCloudPubSubTopics.name
      description: Name of the topic.
      type: String
    - contextPath: GoogleCloudPubSub.Topics.nextPageToken
      description: If not empty, indicates that there may be more topics that match the request.
      type: String
  - arguments:
    - description: ID of the topic. E.g., "projects/{project_id}/topics/topic_id".
      name: topic_id
      required: true
    - description: The message data field. If this field is empty, the message must contain at least one attribute.
      name: data
    - description: 'Attributes for this message. If this field is empty, the message must contain non-empty data. The input format is "key=val" pairs separated by commas.'
      name: attributes
    - description: Project ID.
      name: project_id
    - description: Set delimiter of attributes split
      name: delim_char_attributes
      defaultValue: ','
      type: unknown
    description: Publish a message in a topic.
    name: gcp-pubsub-topic-publish-message
    outputs:
    - contextPath: GoogleCloudPubSubPublishedMessages.messageId
      description: ID of the published message.
      type: String
    - contextPath: GoogleCloudPubSubPublishedMessages.topic
      description: Topic of the published message.
      type: String
    - contextPath: GoogleCloudPubSubPublishedMessages.data
      description: Text data of the published message.
      type: String
    - contextPath: GoogleCloudPubSubPublishedMessages.attributes
      description: The message attributes.
      type: Unknown
  - arguments:
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: ID of the subscription, without a project/topic prefix.
      name: subscription_id
      required: true
    description: Get subscription details by the subscription ID.
    name: gcp-pubsub-topic-subscription-get-by-name
    outputs:
    - contextPath: GoogleCloudPubSubSubscriptions.ackDeadlineSeconds
      description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      type: Number
    - contextPath: GoogleCloudPubSubSubscriptions.expirationPolicy.ttl
      description: The "time-to-live" duration for the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.messageRetentionDuration
      description: How long to retain unacknowledged messages in the subscription's backlog.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.name
      description: Name of the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.topic
      description: Name of the topic from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.deliveryType
      description: Delivery type of the message - pull or push.
      type: Unknown
  - arguments:
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: ID of the topic from which the subscription is receiving messages.
      name: topic_id
    - description: Maximum number of results.
      name: page_size
    - description: Next page token as returned from the API.
      name: page_token
    description: Get a list of subscriptions by project ID or topic ID.
    name: gcp-pubsub-topic-subscriptions-list
    outputs:
    - contextPath: GoogleCloudPubSubSubscriptions.ackDeadlineSeconds
      description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      type: Number
    - contextPath: GoogleCloudPubSubSubscriptions.expirationPolicy.ttl
      description: The "time-to-live" duration for the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.messageRetentionDuration
      description: How long to retain unacknowledged messages in the subscription's backlog.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.name
      description: Name of the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.topic
      description: Name of the topic from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.pushConfig.pushEndpoint
      description: A URL indicating the endpoint to which messages should be pushed.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.deliveryType
      description: Delivery type of the message - pull or push.
      type: String
  - arguments:
    - description: Project ID to pull messages from.
      name: project_id
    - description: Subscription ID to pull messages from.
      name: subscription_id
      required: true
    - defaultValue: '1'
      description: The maximum number of messages to return for this request. Must be a positive integer.
      name: max_messages
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Acknowledge the messages pulled.
      name: ack
      predefined:
      - 'false'
      - 'true'
    description: Pull messages that were published.
    name: gcp-pubsub-topic-messages-pull
    outputs:
    - contextPath: GoogleCloudPubSubPulledMessages.data
      description: Text data of the pulled message.
      type: String
    - contextPath: GoogleCloudPubSubPulledMessages.messageId
      description: ID of the message.
      type: String
    - contextPath: GoogleCloudPubSubPulledMessages.publishTime
      description: The time the message was published.
      type: Date
    - contextPath: GoogleCloudPubSubPulledMessages.attributes
      description: The message attributes.
      type: Unknown
    - contextPath: GoogleCloudPubSubPulledMessages.ackId
      description: Acknowledge ID of the message. Used to acknowledge a message.
      type: String
  - arguments:
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: ID of the created subscription.
      name: subscription_id
      required: true
    - description: ID of the topic from which the subscription is receiving messages.
      name: topic_id
      required: true
    - description: A URL indicating the endpoint to which messages should be pushed.
      name: push_endpoint
    - description: 'Endpoint configuration attributes that can be used to control the message delivery, such as "x-goog-version", that you can use to change the format of the pushed message. The input format is "key=val" pairs separated by commas.'
      name: push_attributes
    - description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      name: ack_deadline_seconds
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Indicates whether to retain acknowledged messages.
      name: retain_acked_messages
      predefined:
      - 'false'
      - 'true'
    - description: The amount of time to retain unacknowledged messages in the subscription's backlog. The duration time is in seconds. E.g., "4.2s"
      name: message_retention_duration
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: The "time-to-live" duration for the subscription.
      name: expiration_ttl
    description: Create a pull or push subscription.
    name: gcp-pubsub-topic-subscription-create
    outputs:
    - contextPath: GoogleCloudPubSubSubscriptions.ackDeadlineSeconds
      description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      type: Number
    - contextPath: GoogleCloudPubSubSubscriptions.expirationPolicy.ttl
      description: The "time-to-live" duration for the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.messageRetentionDuration
      description: The amount of time to retain unacknowledged messages in the subscription's backlog.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.name
      description: Name of the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.topic
      description: Name of the topic from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.projectName
      description: Name of the project from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.subscriptionName
      description: Name of the newly created subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.labels
      description: 'An object containing a list of "key=value" pairs.'
      type: String
  - arguments:
    - description: ID of the project the topic will belong to.
      name: project_id
    - description: ID of the newly created topic.
      name: topic_id
      required: true
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: |-
        A comma-separated list of IDs of GCP regions where messages that are published to the topic may be persisted in storage. E.g., "us-east4,asia-1".
        https://cloud.google.com/compute/docs/regions-zones#locations.
      isArray: true
      name: allowed_persistence_regions
    - description: |-
        The full name of the Cloud KMS CryptoKey to be used to restrict access to messages published on this topic.
        The full name format is: projects/*/locations/*/keyRings/*/cryptoKeys/*.
      name: kms_key_name
    description: Create a topic.
    name: gcp-pubsub-topic-create
    outputs:
    - contextPath: GoogleCloudPubSubTopics.name
      description: Name of the topic.
      type: String
    - contextPath: GoogleCloudPubSubTopics.labels
      description: 'An object containing a list of "key": value pairs.'
      type: Unknown
    - contextPath: GoogleCloudPubSubTopics.messageStoragePolicy.allowedPersistenceRegions
      description: A list of IDs of GCP regions where messages that are published to the topic may be persisted in storage.
      type: Unknown
    - contextPath: GoogleCloudPubSubTopics.kmsKeyName
      description: The resource name of the Cloud KMS CryptoKey to be used to restrict access.
      type: String
  - arguments:
    - description: ID of the project the topic will belong to.
      name: project_id
    - description: ID of the newly created topic.
      name: topic_id
      required: true
    description: Delete a topic.
    name: gcp-pubsub-topic-delete
  - arguments:
    - description: ID of the project the topic belongs to.
      name: project_id
    - description: ID of the topic.
      name: topic_id
      required: true
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: |-
        A comma-separated list of IDs of GCP regions where messages that are published to the topic may be persisted in storage. E.g., "us-east4,asia-1".
        https://cloud.google.com/compute/docs/regions-zones#locations.
      isArray: true
      name: allowed_persistence_regions
    - description: |-
        The full name of the Cloud KMS CryptoKey to be used to restrict access to messages published on this topic.
        The full name format is: projects/*/locations/*/keyRings/*/cryptoKeys/*.
      name: kms_key_name
    - description: |-
        A comma-separated list of fields that indicates which fields in the provided topic to update.
        E.g., "labels,messageStoragePolicy".
      name: update_mask
      required: true
    description: Updates a topic.
    name: gcp-pubsub-topic-update
    outputs:
    - contextPath: GoogleCloudPubSubTopics.name
      description: Name of the topic.
      type: String
    - contextPath: GoogleCloudPubSubTopics.labels
      description: 'An object containing a list of "key": value pairs.'
      type: Unknown
    - contextPath: GoogleCloudPubSubTopics.messageStoragePolicy.allowedPersistenceRegions
      description: A list of IDs of GCP regions where messages that are published to the topic may be persisted in storage.
      type: Unknown
    - contextPath: GoogleCloudPubSubTopics.kmsKeyName
      description: The resource name of the Cloud KMS CryptoKey to be used to restrict access.
      type: String
  - arguments:
    - description: |-
        A comma-separated list of fully qualified names of fields that indicates which fields in the provided subscription to update.
        E.g., "pushConfig.pushEndpoint,ackDeadlineSeconds".
      name: update_mask
      required: true
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: ID of the updated subscription.
      name: subscription_id
      required: true
    - description: ID of the topic from which the subscription is receiving messages.
      name: topic_id
      required: true
    - description: A URL indicating the endpoint to which messages should be pushed.
      name: push_endpoint
    - description: 'Endpoint configuration attributes that can be used to control the message delivery. The input format is "key=val" pairs separated by commas.'
      name: push_attributes
    - description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      name: ack_deadline_seconds
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Indicates whether to retain acknowledged messages.
      name: retain_acked_messages
      predefined:
      - 'false'
      - 'true'
    - description: How long to retain unacknowledged messages in the subscription's backlog. The duration time is in seconds. E.g., "4.2s"
      name: message_retention_duration
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: The "time-to-live" duration for the subscription.
      name: expiration_ttl
    description: Update a subscription.
    name: gcp-pubsub-topic-subscription-update
    outputs:
    - contextPath: GoogleCloudPubSubSubscriptions.ackDeadlineSeconds
      description: The amount of time Pub/Sub waits for the subscriber to acknowledge receipt before resending the message.
      type: Number
    - contextPath: GoogleCloudPubSubSubscriptions.expirationPolicy.ttl
      description: The "time-to-live" duration for the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.messageRetentionDuration
      description: The amount of time to retain unacknowledged messages in the subscription's backlog.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.name
      description: Name of the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.topic
      description: Name of the topic from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.projectName
      description: Name of the project from which the subscription is receiving messages.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.subscriptionName
      description: Name of the subscription.
      type: String
    - contextPath: GoogleCloudPubSubSubscriptions.labels
      description: 'An object containing a list of "key": value pairs.'
      type: String
  - arguments:
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: ID of the subscription, without a project/topic prefix.
      name: subscription_id
      required: true
    - description: 'A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".'
      name: time_string
    - description: The snapshot to seek to.
      name: snapshot
    description: Seeks a subscription to a given point in time or to a given snapshot.
    name: gcp-pubsub-topic-messages-seek
  - arguments:
    - description: The ID of the project from which this snapshot is retaining messages.
      name: project_id
    - description: The ID of the topic from which this snapshot is retaining messages.
      name: topic_id
    - description: Maximum number of results.
      name: page_size
    - description: Next page token as returned from the API.
      name: page_token
    description: Get a list of snapshots by project ID and topic ID.
    name: gcp-pubsub-topic-snapshots-list
    outputs:
    - contextPath: GoogleCloudPubSubSnapshots.name
      description: The name of the snapshot.
      type: String
    - contextPath: GoogleCloudPubSubSnapshots.topic
      description: The name of the topic from which this snapshot is retaining messages.
      type: Unknown
    - contextPath: GoogleCloudPubSubSnapshots.expireTime
      description: The snapshot is guaranteed to exist up until this time.
      type: Date
    - contextPath: GoogleCloudPubSubSnapshots.labels
      description: 'An object containing a list of "key": value pairs.'
      type: Unknown
    - contextPath: GoogleCloudPubSub.Snapshots.nextPageToken
      description: If not empty, indicates that there may be more snapshots that match the request.
      type: String
  - arguments:
    - description: ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: The subscription whose backlog the snapshot retains.
      name: subscription_id
      required: true
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: The ID of the snapshot.
      name: snapshot_id
      required: true
    description: Creates a snapshot from the requested subscription. Snapshots are used in the gcp-pubsub-topic-messages-seek command.
    name: gcp-pubsub-topic-snapshot-create
    outputs:
    - contextPath: GoogleCloudPubSubSnapshots.name
      description: The name of the snapshot.
      type: String
    - contextPath: GoogleCloudPubSubSnapshots.topic
      description: The name of the topic from which this snapshot is retaining messages.
      type: Unknown
    - contextPath: GoogleCloudPubSubSnapshots.expireTime
      description: The snapshot is guaranteed to exist up until this time.
      type: Date
    - contextPath: GoogleCloudPubSubSnapshots.labels
      description: 'An object containing a list of "key": value pairs.'
      type: Unknown
  - arguments:
    - description: The ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: |-
        The snapshot is guaranteed to exist up until this time. A newly-created snapshot expires no later than 7 days from the time of its creation.
        The timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2020-04-01T08:01:23.045678910Z"
      name: expire_time
    - description: 'The input format is "key=val" pairs separated by commas.'
      name: labels
    - description: The ID of the snapshot.
      name: snapshot_id
      required: true
    - description: |-
        A comma-separated list of fields that indicates which fields in the provided snapshot to update.
        Example: "labels,topic,expireTime".
      name: update_mask
      required: true
    - description: The ID of the topic from which this snapshot is retaining messages.
      name: topic_id
      required: true
    description: Updates an existing snapshot. Snapshots are used in gcp-pubsub-topic-messages-seek command.
    name: gcp-pubsub-topic-snapshot-update
    outputs:
    - contextPath: GoogleCloudPubSubSnapshots.name
      description: The name of the snapshot.
      type: String
    - contextPath: GoogleCloudPubSubSnapshots.topic
      description: The name of the topic from which this snapshot is retaining messages.
      type: Unknown
    - contextPath: GoogleCloudPubSubSnapshots.expireTime
      description: The snapshot is guaranteed to exist up until this time.
      type: Date
    - contextPath: GoogleCloudPubSubSnapshots.labels
      description: 'An object containing a list of "key": value pairs.'
      type: Unknown
  - arguments:
    - description: The ID of the project from which the subscription is receiving messages.
      name: project_id
    - description: The ID of the snapshot.
      name: snapshot_id
      required: true
    description: Removes an existing snapshot.
    name: gcp-pubsub-topic-snapshot-delete
  - arguments:
    - description: The project ID that the messages were pulled from.
      name: project_id
    - description: The subscription that will have the messages acknowledged.
      name: subscription_id
      required: true
    - description: A comma-separated list of IDs to acknowledge, as received from "gcp-pubsub-topic-messages-pull" or from "fetch-incidents".
      isArray: true
      name: ack_ids
      required: true
    description: Acknowledge previously pulled message or messages.
    name: gcp-pubsub-topic-ack-messages
  dockerimage: demisto/googleapi-python3:1.0.0.71902
  isfetch: true
  runonce: false
  script: '-'
  subtype: python3
  type: python
fromversion: 5.0.0
tests:
- No tests (auto formatted)
