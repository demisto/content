id: Port Scan - Generic
version: -1
name: Port Scan - Generic
description: "Investigates a port scan incident. The incident may originate from outside\
  \ or within the network. The playbook:\n- Enriches the hostname and IP address of\
  \ the attacking endpoint\n- Escalates the incident in case a critical asset\
  \ is involved\n- Hunts malware associated with the alerts across the organization\n\
  - Blocks detected malware associated with the incident\n- Blocks IP addresses associated\
  \ with the malware, if a malicious file was involved\n- Pivots from the attacking\
  \ IP to detect and block malicious domains hosted on the IP (for external scan)\n\
  - Isolates the attacking endpoint (for internal scan)\n- Allows manual blocking\
  \ of ports through an email communication task\n\nIf you're using one or more of\
  \ the following products, make sure to configure their corresponding playbook inputs,\
  \ respectively:\nSplunk - \"Splunk Indicator Hunting\"\nQRadar - \"QRadar Indicator\
  \ Hunting v2\"\nPalo Alto Networks Cortex Data Lake/Panorma/Autofocus/Analytics\
  \ - \"PANW - Hunting and threat detection by indicator type V2\""
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: c40bf39c-629a-4d8f-8966-940072b61d4e
    type: start
    task:
      id: c40bf39c-629a-4d8f-8966-940072b61d4e
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '108'
      - '116'
      - '120'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 20\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '63':
    id: '63'
    taskid: f49ea1b5-839b-48a9-8524-91bfda10c15b
    type: regular
    task:
      id: f49ea1b5-839b-48a9-8524-91bfda10c15b
      version: -1
      name: Escalate incident to higher tier
      description: Assigns the incident to a random user who has the role configured
        in the RoleForEscalation playbook input.
      scriptName: AssignAnalystToIncident
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '105'
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      roles:
        complex:
          root: inputs.RoleForEscalation
      username: {}
    reputationcalc: 1
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 60,\n    \"y\": 2875\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '64':
    id: '64'
    taskid: 6784b795-2168-4cdd-89f0-5312d6575165
    type: condition
    task:
      id: 6784b795-2168-4cdd-89f0-5312d6575165
      version: -1
      name: Can the incident be auto-escalated to a higher tier?
      description: Checks whether a role from which analysts can be assigned to the
        incident was configured in the RoleForEscalation playbook input.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '65'
      yes:
      - '63'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.RoleForEscalation
            iscontext: true
    view: "{\n  \"position\": {\n    \"x\": 60,\n    \"y\": 2700\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '65':
    id: '65'
    taskid: 283724c2-2162-4869-84ee-29d53607376e
    type: regular
    task:
      id: 283724c2-2162-4869-84ee-29d53607376e
      version: -1
      name: Manually escalate incident
      description: Manually assign the incident to an analyst of a higher tier.
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '105'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": -360,\n    \"y\": 2875\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '86':
    id: '86'
    taskid: 547bb430-031e-4d73-8ec8-727ff9341387
    type: condition
    task:
      id: 547bb430-031e-4d73-8ec8-727ff9341387
      version: -1
      name: Is the severity critical?
      description: Checks whether the severity of the incident is critical.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '94'
      yes:
      - '64'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isEqualNumber
          left:
            value:
              complex:
                root: incident
                accessor: severity
            iscontext: true
          right:
            value:
              simple: '4'
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 2470\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '94':
    id: '94'
    taskid: e0ec2761-02d5-45c1-80d8-1dcd6431d33a
    type: regular
    task:
      id: e0ec2761-02d5-45c1-80d8-1dcd6431d33a
      version: -1
      name: Update NIST stage - Recovery
      description: Updates the NIST stage to Recovery.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '109'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      additionalcommunicatinghosts: {}
      additionalcommunicatingips: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associateddomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationhostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage:
        simple: Recovery
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 3260\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '96':
    id: '96'
    taskid: b1c79092-88d5-4cf7-8e02-f05daf25e766
    type: title
    task:
      id: b1c79092-88d5-4cf7-8e02-f05daf25e766
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 3760\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '97':
    id: '97'
    taskid: f954e63e-be10-4278-8813-a9cb69b075b4
    type: title
    task:
      id: f954e63e-be10-4278-8813-a9cb69b075b4
      version: -1
      name: Severity Assessment
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '86'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 2330\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '98':
    id: '98'
    taskid: 61aebfe4-1307-439b-8f56-cd8befceefa3
    type: playbook
    task:
      id: 61aebfe4-1307-439b-8f56-cd8befceefa3
      version: -1
      name: IP Enrichment - Generic v2
      description: "Enrich IP addresses using one or more integrations.\n\n- Resolve\
        \ IP addresses to hostnames (DNS)\n- Provide threat information\n- Separate\
        \ internal and external IP addresses\n- For internal IP addresses, get host\
        \ information"
      playbookName: IP Enrichment - Generic v2
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '99'
    scriptarguments:
      IP:
        complex:
          root: inputs.SourceIPs
          transformers:
          - operator: uniq
      InternalRange:
        complex:
          root: inputs.InternalRange
          transformers:
          - operator: uniq
      ResolveIP:
        simple: 'True'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 330\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '99':
    id: '99'
    taskid: b051a552-d488-4492-81bf-b510a2ca72e3
    type: condition
    task:
      id: b051a552-d488-4492-81bf-b510a2ca72e3
      version: -1
      name: Is the source IP internal or external?
      description: Checks whether the source IP of the port scan is internal or external.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      External:
      - '101'
      Internal:
      - '123'
    separatecontext: false
    conditions:
    - label: Internal
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: IP
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: IP.InRange
                      iscontext: true
                    right:
                      value:
                        simple: yes
                    ignorecase: true
                - - operator: isEqualString
                    left:
                      value:
                        simple: IP.Address
                      iscontext: true
                    right:
                      value:
                        simple: inputs.SourceIPs
                      iscontext: true
                accessor: Address
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SourceHostnames
            iscontext: true
    - label: External
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: IP
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: IP.InRange
                      iscontext: true
                    right:
                      value:
                        simple: no
                    ignorecase: true
                - - operator: isEqualString
                    left:
                      value:
                        simple: IP.Address
                      iscontext: true
                    right:
                      value:
                        simple: inputs.SourceIPs
                      iscontext: true
                accessor: Address
            iscontext: true
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 510\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '100':
    id: '100'
    taskid: 6de91900-7ee9-487b-8806-b214ba5dbd03
    type: playbook
    task:
      id: 6de91900-7ee9-487b-8806-b214ba5dbd03
      version: -1
      name: Port Scan - Internal Source
      description: Remediates port scans originating within the network.
      playbookName: Port Scan - Internal Source
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '110'
    scriptarguments:
      BlockAttackerIP:
        simple: 'False'
      BlockMaliciousFiles:
        simple: 'False'
      InternalSourceIPs:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.Address
                iscontext: true
              right:
                value:
                  simple: inputs.SourceIPs
                iscontext: true
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: yes
              ignorecase: true
          - - operator: isNotEmpty
              left:
                value:
                  simple: IP.Address
                iscontext: true
          accessor: Address
          transformers:
          - operator: uniq
      InvolvedFileMD5:
        complex:
          root: inputs.InvolvedFileMD5
          transformers:
          - operator: uniq
      InvolvedFileSHA1:
        complex:
          root: inputs.InvolvedFileSHA1
          transformers:
          - operator: uniq
      InvolvedFileSHA256:
        complex:
          root: inputs.InvolvedFileSHA256
          transformers:
          - operator: uniq
      IsolateEndpointIfCriticalIncident:
        simple: 'False'
      RoleForEscalation:
        complex:
          root: inputs.RoleForEscalation
      SourceHostnames:
        complex:
          root: inputs.SourceHostnames
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: Endpoint.Hostname
                iscontext: true
          - operator: uniq
      SourceUsernames:
        complex:
          root: inputs.SourceUsernames
          transformers:
          - operator: uniq
      WhitelistedHostnames:
        complex:
          root: inputs.WhitelistedHostnames
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: "{\n  \"position\": {\n    \"x\": 700,\n    \"y\": 920\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '101':
    id: '101'
    taskid: abf22fdc-9a18-4e90-80de-687b6dffd22d
    type: playbook
    task:
      id: abf22fdc-9a18-4e90-80de-687b6dffd22d
      version: -1
      name: Port Scan - External Source
      playbookName: Port Scan - External Source
      type: playbook
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '110'
    scriptarguments:
      BlockAttackerIP:
        simple: 'False'
      BlockMaliciousDomains:
        simple: 'False'
      SourceExternalIPs:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: no
              ignorecase: true
          - - operator: isNotEmpty
              left:
                value:
                  simple: IP.Address
                iscontext: true
          accessor: Address
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: "{\n  \"position\": {\n    \"x\": 170,\n    \"y\": 750\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '105':
    id: '105'
    taskid: 45115f54-2c88-4923-85a4-9b91d0ae6a5f
    type: regular
    task:
      id: 45115f54-2c88-4923-85a4-9b91d0ae6a5f
      version: -1
      name: Ensure incident was remediated
      description: Make sure that the incident was fully remediated. Take additional
        steps as necessary to complete the investigation and containment, and then
        proceed.
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '94'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": -130,\n    \"y\": 3070\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '106':
    id: '106'
    taskid: 4dc48d79-ffe0-433c-80da-e8c27c3798e8
    type: regular
    task:
      id: 4dc48d79-ffe0-433c-80da-e8c27c3798e8
      version: -1
      name: Close the investigation
      description: Closes the current incident.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '96'
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    reputationcalc: 1
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 3590\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '108':
    id: '108'
    taskid: 89a8a6f0-3ce3-40c9-8fdc-70e9be424956
    type: regular
    task:
      id: 89a8a6f0-3ce3-40c9-8fdc-70e9be424956
      version: -1
      name: Update NIST stage - Analysis
      description: Updates the NIST stage to Analysis.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '98'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      additionalcommunicatinghosts: {}
      additionalcommunicatingips: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associateddomains: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage:
        simple: Analysis
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 160\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '109':
    id: '109'
    taskid: d7f2f52c-4668-4868-89ed-e445821a994e
    type: regular
    task:
      id: d7f2f52c-4668-4868-89ed-e445821a994e
      version: -1
      name: Recover from the incident
      description: "Take steps to recover from the incident:\n- Take hosts out of\
        \ isolation\n- Unblock IPs\n- Unblock ports"
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '106'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 420,\n    \"y\": 3410\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '110':
    id: '110'
    taskid: 8448f01d-1d0e-494e-8169-ffb0dc81d85f
    type: title
    task:
      id: 8448f01d-1d0e-494e-8169-ffb0dc81d85f
      version: -1
      name: Port Blocking
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '115'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 430,\n    \"y\": 1100\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '112':
    id: '112'
    taskid: b97cc715-2aa6-4023-85a3-a8433cdae7a2
    type: condition
    task:
      id: b97cc715-2aa6-4023-85a3-a8433cdae7a2
      version: -1
      name: Is the severity already high or critical?
      description: Checks whether the incident severity is currently high or critical.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '114'
      yes:
      - '113'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: greaterThanOrEqual
          left:
            value:
              simple: incident.severity
            iscontext: true
          right:
            value:
              simple: '3'
    view: "{\n  \"position\": {\n    \"x\": 880,\n    \"y\": 1420\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '113':
    id: '113'
    taskid: b7ef3d4e-e864-43dd-8bb3-4b4a8b3210a4
    type: condition
    task:
      id: b7ef3d4e-e864-43dd-8bb3-4b4a8b3210a4
      version: -1
      name: Ask the firewall approver to block connections using the unncessary open ports
      description: Sends an email to the address configured in the FirewallApproverEmail
        playbook input, asking them to confirm that they created a rule to block
        the necessary ports in the firewall.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      Confirm:
      - '121'
      Reject:
      - '117'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 880,\n    \"y\": 1810\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
        complex:
          root: inputs.FirewallApproverEmail
      subject:
        simple: Port Scan Incident - Action Needed
      body:
        simple: 'Ports were scanned on the network, and some of them were not denied/dropped.
          The IP that performed the scan was ${inputs.SourceIPs}, and it scanned ${inputs.DestinationIPs}
          across the following unique ports: ${UniquePorts}. Please confirm that you
          have created a firewall rule to block the necessary ports. If for any reason
          you are not able to create such rules, click Reject.'
      methods:
      - email
      format: ''
      bcc:
      cc:
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
      replyOptions:
      - Confirm
      - Reject
  '114':
    id: '114'
    taskid: 89bfc612-4497-4b70-8169-15fd85289e01
    type: regular
    task:
      id: 89bfc612-4497-4b70-8169-15fd85289e01
      version: -1
      name: Set incident severity to high
      description: Sets the incident severity to high.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '113'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      severity:
        simple: '3'
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 1160,\n    \"y\": 1620\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '115':
    id: '115'
    taskid: c78de867-49ed-445c-849e-99f5229bf3f8
    type: condition
    task:
      id: c78de867-49ed-445c-849e-99f5229bf3f8
      version: -1
      name: Is the necessary information for port blocking available?
      description: Checks whether the base events composing the port scan alert are
        available, whether the email of the person approving firewall port blocking
        is available, and whether any of the scanned ports was not blocked by the
        firewall.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '117'
      yes:
      - '112'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Event.SourceIP
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Event.DestinationIP
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Event.DestinationPort
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Event.Action
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.FirewallApproverEmail
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: Event
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: Event.Action
                      iscontext: true
                    right:
                      value:
                        simple: Allow
                    ignorecase: true
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: UniquePorts
            iscontext: true
    view: "{\n  \"position\": {\n    \"x\": 430,\n    \"y\": 1230\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '116':
    id: '116'
    taskid: 160e8729-489c-4aa3-8406-b7ef2325588c
    type: regular
    task:
      id: 160e8729-489c-4aa3-8406-b7ef2325588c
      version: -1
      name: Save base events
      description: Saves the base events to local context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '110'
    scriptarguments:
      append: {}
      key:
        simple: Event
      stringify: {}
      value:
        complex:
          root: inputs.Event
    reputationcalc: 1
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": -620,\n    \"y\": 180\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '117':
    id: '117'
    taskid: b88900e9-f589-4f67-8958-6645b63908e5
    type: regular
    task:
      id: b88900e9-f589-4f67-8958-6645b63908e5
      version: -1
      name: Determine whether ports should be blocked - and block them
      description: "Visit the logs or events related to the incident and determine\
        \ whether the  malicious behavior was allowed or blocked,  and whether the\
        \ ports scanned on the endpoint provided a positive reply to the scan.\nThe\
        \ result of a scan on a port is usually generalized into one of three categories:\n\
        Open or Accepted - the host sent a reply indicating that a service is listening\
        \ on the port.\nClosed or Denied or Not Listening - the host sent a reply\
        \ indicating that connections will be denied to the port.\nFiltered, Dropped\
        \ or Blocked - There was no reply from the host.\n\nManually block the port/s\
        \ on which the host is listening. Pay extra attention to vulnerable ports\
        \ that may have been, or could be used in the future, for exploitation on the\
        \ host. Also make sure the host does not accept connections on ports that\
        \ it’s not supposed to. If such ports exist, you should create a rule in the\
        \ firewall to block the relevant connections. When creating the rule, you must\
        \ determine the scope in which the port will be blocked - is it a local issue\
        \ with the specific endpoint that is listening on a port it shouldn’t, or\
        \ should the port be blocked organization-wide?\n"
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '97'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 190,\n    \"y\": 2030\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
  '120':
    id: '120'
    taskid: 895f104e-6ec3-48bb-830d-9ecf0de8c346
    type: regular
    task:
      id: 895f104e-6ec3-48bb-830d-9ecf0de8c346
      version: -1
      name: Save incident information to incident fields.
      description: Saves information about the source IP, destination IP, source username,
        file hash, file name, amount of scanned ports, amount of scanned unique ports
        and the port numbers in incident fields.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '110'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationport: {}
      destinationports: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      numberofports: {}
      numberofuniqueports: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portsblocked: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scannedports: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": -1040,\n    \"y\": 180\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Number of Ports
      output:
        complex:
          root: inputs.DestinationPorts
          transformers:
          - operator: count
    - incidentfield: Number of Unique Ports
      output:
        complex:
          root: inputs.DestinationPorts
          transformers:
          - operator: uniq
          - operator: count
    - incidentfield: Source IP
      output:
        complex:
          root: inputs.SourceIPs
          transformers:
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
    - incidentfield: Destination IP
      output:
        complex:
          root: inputs.DestinationIPs
          transformers:
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
    - incidentfield: Destination Ports
      output:
        complex:
          root: inputs.DestinationPorts
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
    - incidentfield: Source Username
      output:
        complex:
          root: inputs.SourceUsernames
          transformers:
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
    - incidentfield: File Hash
      output:
        complex:
          root: inputs.InvolvedFileName
          transformers:
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
    - incidentfield: File Name
      output:
        complex:
          root: inputs.InvolvedFileMD5
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: inputs.InvolvedFileSHA1
                iscontext: true
          - operator: append
            args:
              item:
                value:
                  simple: inputs.InvolvedFileSHA256
                iscontext: true
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
  '121':
    id: '121'
    taskid: 11c7359a-276a-44cb-8c9f-8329dc617462
    type: regular
    task:
      id: 11c7359a-276a-44cb-8c9f-8329dc617462
      version: -1
      name: Update ports blocked incident field
      description: Updates the Ports Blocked incident field to True.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '97'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      numberofports: {}
      numberofuniqueports: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portsblocked: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scannedports: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 880,\n    \"y\": 2030\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Ports Blocked
      output:
        simple: 'True'
  '123':
    id: '123'
    taskid: 90924c7d-485b-427b-8ddb-0ab957272880
    type: regular
    task:
      id: 90924c7d-485b-427b-8ddb-0ab957272880
      version: -1
      name: Save hostname to incident field
      description: Saves the hostname that was resolved from the internal IP to an
        incident field.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - '100'
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationport: {}
      destinationports: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      numberofports: {}
      numberofuniqueports: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portsblocked: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      samaccountname: {}
      sansstage: {}
      scannedports: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 700,\n    \"y\": 750\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Source Hostname
      output:
        complex:
          root: Endpoint
          accessor: Hostname
view: "{\n  \"linkLabelsPosition\": {\n    \"112_113_yes\": 0.36,\n    \"113_117_Reject\"\
  : 0.41,\n    \"113_121_Confirm\": 0.58,\n    \"115_117_#default#\": 0.15,\n    \"\
  64_63_yes\": 0.44,\n    \"86_64_yes\": 0.41,\n    \"86_94_#default#\": 0.8\n  },\n\
  \  \"paper\": {\n    \"dimensions\": {\n      \"height\": 3805,\n      \"width\"\
  : 2580,\n      \"x\": -1040,\n      \"y\": 20\n    }\n  }\n}"
inputs:
- key: BlockAttackerIP
  value:
    simple: 'False'
  required: true
  description: Whether attacking IPs should be automatically blocked using firewalls.
- key: WhitelistedHostnames
  value: {}
  required: false
  description: A list of hostnames that should not be isolated even if used in an
    attack.
- key: IsolateEndpointIfCriticalIncident
  value:
    simple: 'False'
  required: true
  description: Whether to automatically isolate endpoints if the incident severity
    is critical and the endpoint is not on the WhitelistedHostnames input, or opt
    for manual user approval. True means isolation will be done automatically when the conditions are met.
- key: InternalIPRanges
  value: {}
  required: false
  description: 'A list of IP ranges to check the IP against. The list should be provided
    in CIDR notation, separated by commas. An example of a list of ranges would be:
    "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes). If a list is not provided,
    will use default list provided in the IsIPInRanges script (the known IPv4 private
    address ranges).'
- key: RoleForEscalation
  value: {}
  required: false
  description: The name of the Cortex XSOAR role of the users that the incident can be
    escalated to in case the severity is determined to be critical.
- key: BlockMaliciousFiles
  value:
    simple: 'False'
  required: true
  description: Whether to automatically block malicious files involved with the incident
    across all endpoints in the organization.
- key: SourceIPs
  value: {}
  required: false
  description: The source IP address(es) that performed the port scan. If the source
    is an external IP, this input is mandatory for a proper incident response. If
    the source is an internal IP, then either this or the SourceHostnames input must
    be filled. The value must be unique.
- key: SourceHostnames
  value: {}
  required: false
  description: The source hostname(s) that performed the port scan. If the source is
    an external IP, this input can remain empty. If the source was internal, then
    either this or the SourceIPs input must be filled. The value must be unique.
- key: SourceUsernames
  value: {}
  required: false
  description: The Active Directory username(s) that were used in the port scan attack.
- key: InvolvedFileMD5
  value: {}
  required: false
  description: MD5 hashes of files that were involved in the port scan incident.
- key: InvolvedFileSHA1
  value: {}
  required: false
  description: SHA1 hashes of files that were involved in the port scan incident.
- key: InvolvedFileSHA256
  value: {}
  required: false
  description: SHA256 hashes of files that were involved in the port scan incident.
- key: Event
  value: {}
  required: false
  description: The base events that contain the actual data from the port scan requests.
    The events should be a list of dictionaries that contain the action taken by the
    firewall (Event.Action which could be Allowed for example), the source IP (Events.SourceIP),
    destination IP (Event.DestinationIP) and destination port (Event.DestinationPort).
    The events are necessary to be able to block the necessary ports.
- key: FirewallApproverEmail
  value: {}
  required: false
  description: The email address of the person that will be contacted if blocking
    certain ports is necessary. That person is expected to reply once they create
    the necessary firewall rule/s.
- key: DestinationIPs
  value: {}
  required: false
  description: The destination IP addresses that were scanned. The value must be unique.
- key: DestinationPorts
  value: {}
  required: false
  description: All the destination ports that were scanned (non-unique).
- key: InvolvedFileName
  value: {}
  required: false
  description: Names of files that were involved in the port scan incident.
outputs: []
sourceplaybookid: Port Scan - Generic
fromversion: 5.0.0
tests:
  - no test
