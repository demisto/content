id: PCAP File Carving Test
version: -1
fromversion: 5.0.0
name: PCAP File Carving Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 38ed73b1-a63e-478a-8bea-d6f60ffc3599
    type: start
    task:
      id: 38ed73b1-a63e-478a-8bea-d6f60ffc3599
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 50ac5260-1f02-4a15-8b6a-2bfa7c11e959
    type: regular
    task:
      id: 50ac5260-1f02-4a15-8b6a-2bfa7c11e959
      version: -1
      name: Get PCAP
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      body: {}
      filename:
        simple: nb6-http.pcap
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/Packs/PcapAnalysis/Scripts/PcapMinerV2/TestData/nb6-http.pcap
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: a687e2a5-5044-4a77-8950-2c0749e07d7f
    type: playbook
    task:
      id: a687e2a5-5044-4a77-8950-2c0749e07d7f
      version: -1
      name: PCAP File Carving
      description: This playbook is used to carve (extract) files from within PCAP
        files and perform enrichment and detonation of the extracted files. Supported
        PCAP file types are pcap, cap, pcapng. The playbook can handle one PCAP file
        per incident. Additional inputs allow the user to provide the WPA password
        for decrypting 802.11 (wireless) traffic and adding an RSA certificate to
        decrypt SSL traffic. To display the results within the relevant incident fields,
        the playbook needs to run in a PCAP Analysis incident type. For handling of
        PCAP files larger than 30 MB, refer to the PcapMinerV2 documentation.
      playbookName: PCAP File Carving
      type: playbook
      iscommand: false
      brand: ""
    scriptarguments:
      ExtractedFilesLimit:
        simple: "1"
      FileExtensionFilter: {}
      FileTypeFilter: {}
      FilterType:
        simple: inclusive
      PcapFileEntryID:
        complex:
          root: File
          filters:
          - - operator: inList
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: incident.pcapfile.name
                iscontext: true
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pcap
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: cap
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pcapng
          accessor: EntryID
      PcapFilter: {}
      RsaDecryptKeyEntryID:
        complex:
          root: File
          filters:
          - - operator: inList
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: incident.pcapencryptionkey.name
                iscontext: true
            - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: key
          accessor: EntryID
      WpaPassword: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 555,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
