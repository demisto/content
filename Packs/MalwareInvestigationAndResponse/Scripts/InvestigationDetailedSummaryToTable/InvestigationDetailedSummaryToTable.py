from CommonServerPython import *

TACTIC = 'Tactic'
STATUS = 'Status'
BOOL_TO_DESCRIPTION = {True: 'ðŸ”´  Detected', False: 'ðŸŸ¢  Not Detected'}


def table_command(context: dict) -> CommandResults:
    if not context:
        return CommandResults(
            readable_output='### Waiting on entries\n'
                            'When `InvestigationDetailedSummaryParse` is finished, its results will appear here.'
        )
    table_values: list[dict] = []
    for tactic, techniques in context.items():
        table_values.append({TACTIC: f'**{tactic.upper()}**', STATUS: ''})

        for technique, found in techniques.items():
            table_values.append({TACTIC: technique, STATUS: BOOL_TO_DESCRIPTION[found]})
    return CommandResults(readable_output=tableToMarkdown('', table_values, headers=[TACTIC, STATUS]))


def main():
    try:
        context = json.loads(
            demisto.incident().get('CustomFields', {}).get('malwaredetailedinvestigationsummary') or '{}')
        return_results(table_command(context))
    except Exception as ex:
        demisto.error(traceback.format_exc())  # print the traceback
        return_error(f'Failed to execute InvestigationDetailedSummaryToTable. Error: {str(ex)}')


if __name__ in ('__main__', '__builtin__', 'builtins'):
    main()
