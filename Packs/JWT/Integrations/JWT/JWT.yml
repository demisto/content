category: Authentication & Identity Management
commonfields:
  id: JWT
  version: -1
configuration:
- additionalinfo: The authentication server URL
  defaultvalue: https://example.com/
  display: Your server URL
  name: url
  required: true
  type: 0
- additionalinfo: The secret key to sign the authentication token.
  display: Secret Key
  name: key
  required: true
  type: 4
- additionalinfo: Token Signing Algorithm.
  defaultvalue: HS256
  display: Algorithm
  name: algorithm
  type: 0
  required: false
- additionalinfo: The “iss” (issuer) claim identifies the principal that issued the JWT.
  display: Issuer
  name: iss
  type: 0
  required: false
- additionalinfo: The “aud” (audience) claim identifies the recipients that the JWT is intended for.
  display: Audience
  name: aud
  type: 0
  required: false
- additionalinfo: The "jti" (JWT ID) claim provides a unique identifier for the JWT token.
  display: Token ID
  name: jti
  type: 0
  required: false
- additionalinfo: The "sub" (subject) claim identifies the principal that is the subject of the JWT.
  display: Subject
  name: sub
  type: 0
  required: false
- additionalinfo: The "scp" (scope) claim is described in OAuth 2.0 Token Exchange as an array of strings, each of which represents an OAuth Scope granted for the issued security token.
  display: Scope
  name: scp
  type: 0
  required: false
- additionalinfo: The "iat" (issued at) claim identifies the time at which the JWT was issued.
  display: Issued At
  name: iat
  type: 0
  required: false
- additionalinfo: The "exp" (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
  display: Expiration Time
  name: exp
  type: 0
  required: false
- additionalinfo: The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.
  display: Not Before
  name: nbf
  type: 0
  required: false
- additionalinfo: Additional claims to include in the request.
  display: Additional Claims
  name: additionalClaims
  type: 12
  required: false
- additionalinfo: Token Timeout in Seconds
  defaultvalue: '300'
  display: Token Timeout
  name: tokenTimeout
  type: 0
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  required: false
description: JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. This Integration can be used to Generate New JWT Tokens, Encode and Decode Existing Ones.
display: JWT
name: JWT
script:
  commands:
  - arguments:
    - description: The "jti" (JWT ID) claim provides a unique identifier for the JWT token.
      name: jti
    - description: The "iss" (issuer) claim identifies the principal that issued the JWT.
      name: iss
    - description: The "aud" (audience) claim identifies the recipients that the JWT is intended for.
      name: aud
    - description: The "sub" (subject) claim identifies the principal that is the subject of the JWT.
      name: sub
    - description: The "scp" (scope) claim is described in OAuth 2.0 Token Exchange as an array of strings, each of which represents an OAuth Scope granted for the issued security token.
      name: scp
    - description: The "iat" (issued at) claim identifies the time at which the JWT was issued.
      name: iat
    - description: The "exp" (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
      name: exp
    - description: The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.
      name: nbf
    - description: Additional claims to include in the request.
      name: additionalClaims
    - default: true
      defaultValue: '300'
      description: Token Timeout in Seconds
      name: tokenTimeout
    - defaultValue: HS256
      description: Token Signing Algorithm
      name: algorithm
    description: Generates a JWT authorization token with an optional scope and queries the API for an access token and then returns the received API access token
    name: jwt-generate-access-token
    outputs:
    - contextPath: JWT.Token.ID
      description: The JWT Token ID
      type: String
    - contextPath: JWT.Token.AccessToken
      description: The JWT Access Token Value
      type: String
    - contextPath: JWT.Token.AuthenticationToken
      description: JWT Authentication Token
      type: String
  - arguments:
    - description: The "jti" (JWT ID) claim provides a unique identifier for the JWT token.
      name: jti
    - description: The "iss" (issuer) claim identifies the principal that issued the JWT.
      name: iss
    - description: The "aud" (audience) claim identifies the recipients that the JWT is intended for.
      name: aud
    - description: The "sub" (subject) claim identifies the principal that is the subject of the JWT.
      name: sub
    - description: The "scp" (scope) claim is described in OAuth 2.0 Token Exchange as an array of strings, each of which represents an OAuth Scope granted for the issued security token.
      name: scp
    - description: The "iat" (issued at) claim identifies the time at which the JWT was issued.
      name: iat
    - description: 'The "exp" (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing. '
      name: exp
    - description: The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.
      name: nbf
    - description: Additional claims to include in the request.
      name: additionalClaims
    - default: true
      defaultValue: '300'
      description: Token Timeout in Seconds
      name: tokenTimeout
    - defaultValue: HS256
      description: Token Signing Algorithm
      name: algorithm
    description: Generates a JWT authorization request payload by encoding the provided claims.
    name: jwt-generate-authentication-payload
    outputs:
    - contextPath: JWT.Token.ID
      description: The JWT Token ID
      type: String
    - contextPath: JWT.Token.AuthenticationToken
      description: The JWT Authentication Token Value
      type: String
  - arguments:
    - description: The token to decode
      name: token
      required: true
    - description: The secret to validate the token signature
      name: secret
    description: A command to decode JWT tokens
    name: jwt-decode-token
  dockerimage: demisto/pyjwt3:1.0.0.48806
  runonce: false
  script: '-'
  subtype: python3
  type: python
tests:
- No tests (auto formatted)
fromversion: 5.5.0
