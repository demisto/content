id: Infocyte-Test
name: Infocyte-Test
description: 'Test Playbook for Infocyte commands'
version: -1
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: '0'
    type: start
    task:
      id: '0'
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '1'
    separatecontext: false
    view: '{"position": {"x": 50, "y": 50}}'
    note: false
    timertriggers: []
    ignoreworker: false
  '1':
    id: 1
    taskid: '1'
    type: regular
    task:
      id: '1'
      version: -1
      name: DeleteContext
      description: ''
      script: DeleteContext
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '2'
    scriptarguments:
      all:
        simple: yes
    separatecontext: false
    view: '{"position": {"x": 50, "y": 200}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '2':
    id: 2
    taskid: '2'
    type: regular
    task:
      id: '2'
      version: -1
      name: infocyte-scan-host
      description: Kicks off a Scan (forensic collection) against an endpoint
      script: '|||infocyte-scan-host'
      type: regular
      iscommand: true
      brand: Infocyte
    nexttasks:
      '#none#':
      - '3'
    scriptarguments:
      target:
        simple: ${incident.sourcehostname}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 400}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '3':
    id: '3'
    taskid: '3'
    type: condition
    task:
      id: '3'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '4'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.userTaskId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.type
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.target
            iscontext: true
    view: '{"position": {"x": 50, "y": 600}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '4':
    id: 4
    taskid: '4'
    type: regular
    task:
      id: '4'
      version: -1
      name: infocyte-get-taskstatus
      description: Gets status of an Infocyte task (scan, response action, etc.)
      script: '|||infocyte-get-taskstatus'
      type: regular
      iscommand: true
      brand: Infocyte
    nexttasks:
      '#none#':
      - '5'
    scriptarguments:
      userTaskId:
        simple: ${Infocyte.Task.userTaskId}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 800}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '5':
    id: '5'
    taskid: '5'
    type: condition
    task:
      id: '5'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '6'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.userTaskId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.scanId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.type
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.progress
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.message
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.status
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Task.timeElapsed
            iscontext: true
    view: '{"position": {"x": 50, "y": 1000}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '6':
    id: 6
    taskid: '6'
    type: regular
    task:
      id: '6'
      version: -1
      name: infocyte-get-hostscanresult
      description: Retrieve results for a scan on a target host
      script: '|||infocyte-get-hostscanresult'
      type: regular
      iscommand: true
      brand: Infocyte
    nexttasks:
      '#none#':
      - '7'
    scriptarguments:
      scanId:
        simple: ${Infocyte.Scan.scanId}
      target:
        simple: ${Infocyte.Task.target}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 1200}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '7':
    id: '7'
    taskid: '7'
    type: condition
    task:
      id: '7'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '12'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.scanId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.hostId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.os
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.compromised
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.alerts
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.alertCount
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.hostname
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.ip
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.compromisedObjects
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Scan.objectCount
            iscontext: true
    view: '{"position": {"x": 50, "y": 1400}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '12':
    id: 12
    taskid: '12'
    type: regular
    task:
      id: '12'
      version: -1
      name: infocyte-get-alerts
      description: ''
      script: '|||infocyte-get-alerts'
      type: regular
      iscommand: true
      brand: Infocyte
    nexttasks:
      '#none#':
      - '13'
    scriptarguments: {}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 2400}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '13':
    id: '13'
    taskid: '13'
    type: condition
    task:
      id: '13'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '14'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.id
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.scanId
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.name
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.type
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.threatName
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.hasAvScan
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.threatScore
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.avPositive
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.avTotal
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.synapse
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.size
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.flagname
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.flagWeight
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.createdOn
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.hostname
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.sha1
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.signed
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Infocyte.Alert.managed
            iscontext: true
    view: '{"position": {"x": 50, "y": 2800}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '14':
    id: '14'
    taskid: '14'
    type: title
    task:
      id: '14'
      version: -1
      name: Test Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: '{"position": {"x": 50, "y": 3000}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
view: '{"linkLabelsPosition": {}, "paper": {"dimensions": {"height": 200, "width":
  380, "x": 50, "y": 50}}}'
inputs: []
outputs: []
fromversion: 5.5.0
