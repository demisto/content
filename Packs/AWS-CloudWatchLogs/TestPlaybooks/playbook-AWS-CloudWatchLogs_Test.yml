id: AWS - CloudWatchLogs Test Playbook
version: -1
name: AWS - CloudWatchLogs Test Playbook
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 5ed045bb-7326-46e4-86fd-836a6c494c1b
    type: start
    task:
      id: 5ed045bb-7326-46e4-86fd-836a6c494c1b
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "8":
    id: "8"
    taskid: d24be249-1a30-4085-8c97-9ee708b9d0d8
    type: regular
    task:
      id: d24be249-1a30-4085-8c97-9ee708b9d0d8
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.LogGroupName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "14":
    id: "14"
    taskid: fdefc79c-145a-49dc-88c7-62dc2599e0a0
    type: regular
    task:
      id: fdefc79c-145a-49dc-88c7-62dc2599e0a0
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.CreationTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: 0484c7cc-a29b-4853-8e20-54f874c7faa4
    type: regular
    task:
      id: 0484c7cc-a29b-4853-8e20-54f874c7faa4
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: 2c968e3b-22ef-4789-8692-9e9ba779f98b
    type: regular
    task:
      id: 2c968e3b-22ef-4789-8692-9e9ba779f98b
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "45"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "25":
    id: "25"
    taskid: 303b78bc-2e29-4600-8618-f984f1d00a2d
    type: title
    task:
      id: 303b78bc-2e29-4600-8618-f984f1d00a2d
      version: -1
      name: End of Playbook
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "26":
    id: "26"
    taskid: 22d667bc-b630-4540-83e5-188482cfeeb4
    type: regular
    task:
      id: 22d667bc-b630-4540-83e5-188482cfeeb4
      version: -1
      name: aws-logs-create-log-group
      description: Creates a log group with the specified name.
      script: AWS - CloudWatchLogs|||aws-logs-create-log-group
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "38"
    scriptarguments:
      kmsKeyId: {}
      logGroupName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "28":
    id: "28"
    taskid: 2877e0f8-37ec-44a5-8382-3949fb1c215a
    type: regular
    task:
      id: 2877e0f8-37ec-44a5-8382-3949fb1c215a
      version: -1
      name: aws-logs-put-log-events
      description: Uploads a batch of log events to the specified log stream. You
        must include the sequence token obtained from the response of the previous
        call. An upload in a newly created log stream does not require a sequence
        token. You can also get the sequence token using DescribeLogStreams . If you
        call PutLogEvents twice within a narrow time period using the same value for
        sequenceToken , both calls may be successful, or one may be rejected.
      script: AWS - CloudWatchLogs|||aws-logs-put-log-events
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      logStreamName:
        simple: ${GeneratedUUID}
      message:
        simple: testing test
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      sequenceToken: {}
      timestamp:
        simple: ${timeTimeNowUnix}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "29":
    id: "29"
    taskid: 40c0505e-ee4f-43b9-861a-02c9d2b9cf94
    type: regular
    task:
      id: 40c0505e-ee4f-43b9-861a-02c9d2b9cf94
      version: -1
      name: aws-logs-put-metric-filter
      description: Creates or updates a metric filter and associates it with the specified
        log group. Metric filters allow you to configure rules to extract metric data
        from log events ingested through PutLogEvents .
      script: AWS - CloudWatchLogs|||aws-logs-put-metric-filter
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      filterName:
        simple: ${GeneratedUUID}
      filterPattern:
        simple: '"ERROR"'
      logGroupName:
        simple: ${GeneratedUUID}
      metricName:
        simple: test
      metricNamespace:
        simple: test
      metricValue:
        simple: "1"
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "30":
    id: "30"
    taskid: 8488b652-97cc-4c19-8003-66adcaea9a3b
    type: regular
    task:
      id: 8488b652-97cc-4c19-8003-66adcaea9a3b
      version: -1
      name: aws-logs-delete-metric-filter
      description: Deletes the specified metric filter.
      script: AWS - CloudWatchLogs|||aws-logs-delete-metric-filter
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      filterName:
        simple: ${GeneratedUUID}
      logGroupName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "31":
    id: "31"
    taskid: 78ba711f-f2ad-44d5-8187-9d4d79b5a6bf
    type: regular
    task:
      id: 78ba711f-f2ad-44d5-8187-9d4d79b5a6bf
      version: -1
      name: aws-logs-describe-metric-filters
      description: Lists the specified metric filters. You can list all the metric
        filters or filter the results by log name, prefix, metric name, or metric
        namespace.
      script: AWS - CloudWatchLogs|||aws-logs-describe-metric-filters
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "44"
      - "43"
      - "42"
    scriptarguments:
      filterNamePrefix: {}
      logGroupName:
        simple: ${GeneratedUUID}
      metricName: {}
      metricNamespace: {}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2110
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "32":
    id: "32"
    taskid: a9522c33-a656-4301-800c-cd6c8bd28355
    type: regular
    task:
      id: a9522c33-a656-4301-800c-cd6c8bd28355
      version: -1
      name: aws-logs-describe-log-groups
      description: Lists the specified log groups. You can list all your log groups
        or filter the results by prefix. The results are ASCII-sorted by log group
        name.
      script: AWS - CloudWatchLogs|||aws-logs-describe-log-groups
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "14"
      - "8"
      - "15"
    scriptarguments:
      limit: {}
      logGroupNamePrefix: {}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "33":
    id: "33"
    taskid: 5051a158-d349-4081-8022-b0b4936b69b3
    type: regular
    task:
      id: 5051a158-d349-4081-8022-b0b4936b69b3
      version: -1
      name: aws-logs-describe-log-streams
      description: Lists the log streams for the specified log group. You can list
        all the log streams or filter the results by prefix. You can also control
        how the results are ordered.
      script: AWS - CloudWatchLogs|||aws-logs-describe-log-streams
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "39"
      - "40"
      - "41"
    scriptarguments:
      limit: {}
      logGroupName:
        simple: ${GeneratedUUID}
      logStreamNamePrefix: {}
      orderBy: {}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: 0e731928-412e-4f66-8a28-806c373c265a
    type: regular
    task:
      id: 0e731928-412e-4f66-8a28-806c373c265a
      version: -1
      name: aws-logs-put-retention-policy
      description: Sets the retention of the specified log group. A retention policy
        allows you to configure the number of days for which to retain log events
        in the specified log group.
      script: AWS - CloudWatchLogs|||aws-logs-put-retention-policy
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "35"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      retentionInDays:
        simple: "5"
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "35":
    id: "35"
    taskid: 89691f8d-b68f-4346-889d-b267e17af6f4
    type: regular
    task:
      id: 89691f8d-b68f-4346-889d-b267e17af6f4
      version: -1
      name: aws-logs-delete-retention-policy
      description: Deletes the specified retention policy.  Log events do not expire
        if they belong to log groups without a retention policy.
      script: AWS - CloudWatchLogs|||aws-logs-delete-retention-policy
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "36":
    id: "36"
    taskid: 8a3b00c6-a7ca-4a22-8e1b-879c2a86cee2
    type: regular
    task:
      id: 8a3b00c6-a7ca-4a22-8e1b-879c2a86cee2
      version: -1
      name: aws-logs-delete-log-group
      description: Deletes the specified log group and permanently deletes all the
        archived log events associated with the log group.
      script: AWS - CloudWatchLogs|||aws-logs-delete-log-group
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "37":
    id: "37"
    taskid: e15a92f7-a100-4d9c-8c10-931c16f93af9
    type: regular
    task:
      id: e15a92f7-a100-4d9c-8c10-931c16f93af9
      version: -1
      name: aws-logs-delete-log-stream
      description: Deletes the specified log stream and permanently deletes all the
        archived log events associated with the log stream.
      script: AWS - CloudWatchLogs|||aws-logs-delete-log-stream
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "36"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      logStreamName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "38":
    id: "38"
    taskid: 7822500f-14cc-4178-88ce-d3510ea1eb32
    type: regular
    task:
      id: 7822500f-14cc-4178-88ce-d3510ea1eb32
      version: -1
      name: aws-logs-create-log-stream
      description: Creates a log stream for the specified log group.
      script: AWS - CloudWatchLogs|||aws-logs-create-log-stream
      type: regular
      iscommand: true
      brand: AWS - CloudWatchLogs
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      logGroupName:
        simple: ${GeneratedUUID}
      logStreamName:
        simple: ${GeneratedUUID}
      region:
        simple: ${inputs.region}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "39":
    id: "39"
    taskid: cb00ecfa-2604-4eae-83a0-7de886a98da1
    type: regular
    task:
      id: cb00ecfa-2604-4eae-83a0-7de886a98da1
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.LogStreams.CreationTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "40":
    id: "40"
    taskid: 1795122d-fe3c-4d21-8842-39aacb1cc736
    type: regular
    task:
      id: 1795122d-fe3c-4d21-8842-39aacb1cc736
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.LogStreams.LogStreamName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "41":
    id: "41"
    taskid: 6f7f3ea6-a795-4b18-8378-243d120ff1fa
    type: regular
    task:
      id: 6f7f3ea6-a795-4b18-8378-243d120ff1fa
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.LogGroups.LogStreams.LogGroupName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "42":
    id: "42"
    taskid: f2b2bb53-fd44-46bb-8a91-dea4f8aa3a1d
    type: regular
    task:
      id: f2b2bb53-fd44-46bb-8a91-dea4f8aa3a1d
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.MetricFilters.creationTime
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "43":
    id: "43"
    taskid: 6ed06fe9-9022-4d61-8c07-797d086987b9
    type: regular
    task:
      id: 6ed06fe9-9022-4d61-8c07-797d086987b9
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.MetricFilters.filterPattern
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "44":
    id: "44"
    taskid: 621141a6-0d14-4353-8b48-de27c6c54652
    type: regular
    task:
      id: 621141a6-0d14-4353-8b48-de27c6c54652
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.CloudWatchLogs.MetricFilters.filterName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "45":
    id: "45"
    taskid: aef8f5ae-12ce-40fc-819d-494a6af86788
    type: regular
    task:
      id: aef8f5ae-12ce-40fc-819d-494a6af86788
      version: -1
      name: GetTime
      description: |
        Retrieves the current date and time.
      scriptName: GetTime
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "46"
    scriptarguments:
      contextKey:
        simple: time
      date: {}
      dateFormat:
        simple: UTC
      hoursAgo: {}
      minutesAgo: {}
      monthsAgo: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "46":
    id: "46"
    taskid: 12e37c5e-3025-4a86-8802-e585b48317eb
    type: regular
    task:
      id: 12e37c5e-3025-4a86-8802-e585b48317eb
      version: -1
      name: GenerateUUID
      description: Generates random UUID
      scriptName: GenerateUUID
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
system: true
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3360,
        "width": 1240,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: region
  value:
    simple: eu-central-1
  required: false
  description: ''
outputs: []
fromversion: 5.0.0
description: ''
