id: QRadarFullSearch
version: -1
name: QRadarFullSearch
description: This playbook runs a QRadar query and return its results to the context.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: ea863b7b-8773-444d-8ee8-0d0ce9fba6b1
    type: start
    task:
      id: ea863b7b-8773-444d-8ee8-0d0ce9fba6b1
      version: -1
      name: ""
      description: Start of playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 170,
          "y": -100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: c4bad30a-41e8-42dc-893d-b83ef87e28e6
    type: regular
    task:
      id: c4bad30a-41e8-42dc-893d-b83ef87e28e6
      version: -1
      name: Run QRadar search
      description: Creates a search in QRadar using the search query
      script: '|||qradar-searches'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      query_expression:
        simple: ${inputs.query_expression}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -37.5,
          "y": 205
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: ba498a12-5e29-4d65-8973-4056466f58ed
    type: regular
    task:
      id: ba498a12-5e29-4d65-8973-4056466f58ed
      version: -1
      name: Get QRadar search
      description: Gets search object to initialize polling playbook
      script: '|||qradar-get-search'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      search_id:
        simple: ${QRadar.Search.ID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -37.5,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 49187a43-5b02-492d-8823-6b80ab1b9046
    type: playbook
    task:
      id: 49187a43-5b02-492d-8823-6b80ab1b9046
      version: -1
      name: GenericPolling
      description: Generic polling of qradar-get-search
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      Ids:
        simple: ${QRadar.Search.ID}
      Interval:
        simple: ${inputs.interval}
      PollingCommandArgName:
        simple: search_id
      PollingCommandName:
        simple: qradar-get-search
      Timeout:
        simple: ${inputs.timeout}
      dt:
        simple: QRadar.Search(val.Status!=='COMPLETED' ).ID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": -150,
          "y": 730
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: a8af7d6b-87e5-4f16-847a-038e2b15ac2c
    type: regular
    task:
      id: a8af7d6b-87e5-4f16-847a-038e2b15ac2c
      version: -1
      name: Get QRadar search results
      description: executes qradar-get-search-results to get the search results
      tags:
      - SIEMResults
      script: '|||qradar-get-search-results'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      range:
        simple: ${inputs.range}
      search_id:
        simple: ${QRadar.Search.ID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -37.5,
          "y": 905
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 7160734d-90ad-4d48-8fa6-d8c7aa68bc61
    type: title
    task:
      id: 7160734d-90ad-4d48-8fa6-d8c7aa68bc61
      version: -1
      name: Done
      description: Playbook is done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 170,
          "y": 1080
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 5c1ca4d3-629a-4526-8749-dd1ef6d8f3b6
    type: condition
    task:
      id: 5c1ca4d3-629a-4526-8749-dd1ef6d8f3b6
      version: -1
      name: Is search completed?
      description: Checks whether the search is completed
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: QRadar.Search.Status
            iscontext: true
          right:
            value:
              simple: COMPLETED
    view: |-
      {
        "position": {
          "x": -37.5,
          "y": 555
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 58fd7e65-aa1d-4619-86e2-01b38d4974c9
    type: condition
    task:
      id: 58fd7e65-aa1d-4619-86e2-01b38d4974c9
      version: -1
      name: Is QRadar enabled?
      description: Returns 'yes' if integration brand is available. Otherwise returns
        'no'
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: inList
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: QRadar,QRadar_v2,QRadar v3
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    view: |-
      {
        "position": {
          "x": 170,
          "y": 35
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1245,
        "width": 700,
        "x": -150,
        "y": -100
      }
    }
  }
inputs:
- key: timeout
  value:
    simple: "600"
  required: false
  description: How much time to wait before a timeout occurs (minutes)
  playbookInputQuery:
- key: interval
  value:
    simple: "1"
  required: false
  description: Polling frequency - how often the polling command should run (minutes)
  playbookInputQuery:
- key: query_expression
  value: {}
  required: true
  description: The query expressions in AQL
  playbookInputQuery:
- key: range
  value: {}
  required: false
  description: Range of results to return (e.g. 0-20)
  playbookInputQuery:
- key: headers
  value: {}
  required: false
  description: Table headers
  playbookInputQuery:
outputs:
- contextPath: QRadar.Search.Result
  description: The result of the search
tests:
- No tests (auto formatted)
fromversion: 5.0.0
