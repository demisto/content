id: Calculate Severity - Generic v2
version: -1
fromversion: 4.5.0
name: Calculate Severity - Generic v2
description: |-
  Calculate and assign the incident severity based on the highest returned severity level from the following calculations:

  - DBotScores of indicators
  - Critical assets
  - Email authenticity
  - Current incident severity
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 3eded69b-617e-4212-86b7-2537474285f3
    type: start
    task:
      id: 3eded69b-617e-4212-86b7-2537474285f3
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
      - "19"
      - "18"
      - "24"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 30
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 016add21-2f55-4108-8a61-18fc346d5bfd
    type: regular
    task:
      id: 016add21-2f55-4108-8a61-18fc346d5bfd
      version: -1
      name: Set incident severity to "Low"
      description: Sets the incident severity to "Low".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arcsightcaseid: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      blah: {}
      booltest: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailbodyhtmlraw: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailfromdisplayname: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderdomain: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailsubjectlanguage: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      isthedatasubjecttodpia: {}
      killchain: {}
      labels: {}
      likelyimpact: {}
      lob: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      queues: {}
      relateddomain: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      severity:
        simple: low
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      team: {}
      telephoneno: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdr: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 62,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 7c197cbc-c107-49e4-8744-4907a39ee6c5
    type: regular
    task:
      id: 7c197cbc-c107-49e4-8744-4907a39ee6c5
      version: -1
      name: Set incident severity to "Medium"
      description: Sets the incident severity to "Medium".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arcsightcaseid: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      blah: {}
      booltest: {}
      bugtraq: {}
      campaigntargetcount: {}
      campaigntargets: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailbodyhtmlraw: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailfromdisplayname: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderdomain: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailsubjectlanguage: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      isthedatasubjecttodpia: {}
      killchain: {}
      labels: {}
      likelyimpact: {}
      lob: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      queues: {}
      relateddomain: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      severity:
        simple: medium
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      team: {}
      telephoneno: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdr: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 483,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: 9bca9c1e-ea09-4015-8e64-f40b4c3e2fa2
    type: regular
    task:
      id: 9bca9c1e-ea09-4015-8e64-f40b4c3e2fa2
      version: -1
      name: Set incident severity to "High"
      description: Sets the incident severity to "High".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arcsightcaseid: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      blah: {}
      booltest: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      duration: {}
      emailaddress: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailbodyhtmlraw: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailfromdisplayname: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderdomain: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailsubjectlanguage: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      isthedatasubjecttodpia: {}
      killchain: {}
      labels: {}
      likelyimpact: {}
      lob: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      queues: {}
      relateddomain: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      severity:
        simple: high
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      team: {}
      telephoneno: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdr: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1333,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "10":
    id: "10"
    taskid: 483350d5-ab17-44cd-87b3-0e2360ce3577
    type: title
    task:
      id: 483350d5-ab17-44cd-87b3-0e2360ce3577
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1050
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: 8a3a57a3-6b38-44e5-8d33-3b4dfc0965ab
    type: regular
    task:
      id: 8a3a57a3-6b38-44e5-8d33-3b4dfc0965ab
      version: -1
      name: Set incident severity to "Critical"
      description: Sets the incident severity to "Critical".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arcsightcaseid: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      blah: {}
      booltest: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      duration: {}
      emailaddress: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailbodyhtmlraw: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailfromdisplayname: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderdomain: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailsubjectlanguage: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      isthedatasubjecttodpia: {}
      labels: {}
      likelyimpact: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      relateddomain: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      severity:
        simple: critical
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      team: {}
      telephoneno: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdr: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: f0d6dc7b-0638-4a10-82eb-8e81360a0062
    type: condition
    task:
      id: f0d6dc7b-0638-4a10-82eb-8e81360a0062
      version: -1
      name: Determine incident severity
      description: Determines the severity level based on the highest result of all
        severity calculations.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "25"
      Critical:
      - "11"
      High:
      - "6"
      Low:
      - "4"
      Medium:
      - "5"
    separatecontext: false
    conditions:
    - label: Critical
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Severities
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.DBotScoreSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Critical
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.CriticalAssetsSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Critical
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.EmailAuthenticitySeverity
                      iscontext: true
                    right:
                      value:
                        simple: Critical
                    ignorecase: true
                  - operator: isEqualString
                    left:
                      value:
                        simple: Severities.IncidentSeverity
                      iscontext: true
                    right:
                      value:
                        simple: "4"
                    ignorecase: true
            iscontext: true
    - label: High
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Severities
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.DBotScoreSeverity
                      iscontext: true
                    right:
                      value:
                        simple: High
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.CriticalAssetsSeverity
                      iscontext: true
                    right:
                      value:
                        simple: High
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.EmailAuthenticitySeverity
                      iscontext: true
                    right:
                      value:
                        simple: High
                    ignorecase: true
                  - operator: isEqualString
                    left:
                      value:
                        simple: Severities.IncidentSeverity
                      iscontext: true
                    right:
                      value:
                        simple: "3"
                    ignorecase: true
            iscontext: true
    - label: Medium
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Severities
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.DBotScoreSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Medium
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.CriticalAssetsSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Medium
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.EmailAuthenticitySeverity
                      iscontext: true
                    right:
                      value:
                        simple: Medium
                  - operator: isEqualString
                    left:
                      value:
                        simple: Severities.IncidentSeverity
                      iscontext: true
                    right:
                      value:
                        simple: "2"
                    ignorecase: true
            iscontext: true
          ignorecase: true
    - label: Low
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Severities
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.DBotScoreSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Low
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.CriticalAssetsSeverity
                      iscontext: true
                    right:
                      value:
                        simple: Low
                    ignorecase: true
                  - operator: containsGeneral
                    left:
                      value:
                        simple: Severities.EmailAuthenticitySeverity
                      iscontext: true
                    right:
                      value:
                        simple: Low
                    ignorecase: true
                  - operator: isEqualString
                    left:
                      value:
                        simple: Severities.IncidentSeverity
                      iscontext: true
                    right:
                      value:
                        simple: "1"
                    ignorecase: true
            iscontext: true
    view: |-
      {
        "position": {
          "x": 910,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 69f21366-2cbf-4803-8090-ec97bc904a2f
    type: regular
    task:
      id: 69f21366-2cbf-4803-8090-ec97bc904a2f
      version: -1
      name: Get current incident severity
      description: Sets the current severity of the incident in the context.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Severities.IncidentSeverity
      value:
        complex:
          root: incident
          accessor: severity
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 774bb421-1d10-4c1e-8228-8e1d33544fd2
    type: playbook
    task:
      id: 774bb421-1d10-4c1e-8228-8e1d33544fd2
      version: -1
      name: Calculate Severity - Critical Assets v2
      description: "Determines if a critical assest is associated with the invesigation.
        The playbook returns a severity level of \"Critical\" if a critical asset
        is associated with the investigation.\n\nThis playbook verifies if a user
        account or an endpoint is part of a critical list or a critical AD group. "
      playbookName: Calculate Severity - Critical Assets v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      Account:
        complex:
          root: inputs.Account
          transformers:
          - operator: uniq
      CriticalEndpoints:
        complex:
          root: inputs.CriticalEndpoints
          transformers:
          - operator: uniq
      CriticalGroups:
        complex:
          root: inputs.CriticalGroups
          transformers:
          - operator: uniq
      CriticalUsers:
        complex:
          root: inputs.CriticalUsers
          transformers:
          - operator: uniq
      Endpoint:
        complex:
          root: inputs.Endpoint
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 700,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "19":
    id: "19"
    taskid: d1938384-3c5b-4620-88a2-f559f1e720f4
    type: playbook
    task:
      id: d1938384-3c5b-4620-88a2-f559f1e720f4
      version: -1
      name: Calculate Severity -  DBotScore v2
      description: Calculates the incident severity level according to the highest
        indicator DBotScore.
      playbookName: Calculate Severity By Highest DBotScore
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      DBotScore:
        complex:
          root: inputs.DBotScore
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 1533,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: f5cdef97-77e2-438b-898e-a4f0a22e343b
    type: playbook
    task:
      id: f5cdef97-77e2-438b-898e-a4f0a22e343b
      version: -1
      name: Calculate Severity - Email Authenticity
      description: Calculates a severity score according to the verdict coming from
        the CheckEmailAuthenticity script.
      playbookName: Calculate Severity By Email Authenticity
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      EmailAuthenticityCheck:
        complex:
          root: inputs.EmailAuthenticityCheck
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 280,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "25":
    id: "25"
    taskid: 429d77e2-31e3-4796-8b53-655951abeedf
    type: regular
    task:
      id: 429d77e2-31e3-4796-8b53-655951abeedf
      version: -1
      name: Set incident severity level to "Unknown"
      description: Sets the incident severity to "Unknown".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentitem: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      backupowner: {}
      bugtraq: {}
      campaigntargetcount: {}
      campaigntargets: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailbodyhtmlraw: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailfromdisplayname: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderdomain: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailsubjectlanguage: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      id: {}
      important: {}
      importantfield: {}
      isthedatasubjecttodpia: {}
      labels: {}
      likelyimpact: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      myfield: {}
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      relateddomain: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      severity:
        simple: unknown
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      src: {}
      srcntdomain: {}
      srcuser: {}
      systems: {}
      telephoneno: {}
      test: {}
      test2: {}
      testfield: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      type: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdr: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 865
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "15_11_Critical": 0.9,
      "15_25_#default#": 0.59,
      "15_4_Low": 0.9,
      "15_5_Medium": 0.81,
      "15_6_High": 0.82
    },
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 2068,
        "x": 62,
        "y": 30
      }
    }
  }
inputs:
- key: DBotScore
  value:
    complex:
      root: DBotScore
  required: false
  description: 'Array of all indicators associated with the incident. '
- key: CriticalUsers
  value:
    simple: admin,administrator
  required: false
  description: CSV of usernames of critical users.
- key: CriticalEndpoints
  value:
    simple: admin
  required: false
  description: CSV of hostnames of critical endpoints.
- key: CriticalGroups
  value:
    simple: admins,administrators
  required: false
  description: CSV of DN names of critical AD groups.
- key: Account
  value:
    complex:
      root: Account
      transformers:
      - operator: uniq
  required: false
  description: User accounts to check against the critical lists.
- key: Endpoint
  value:
    complex:
      root: Endpoint
      transformers:
      - operator: uniq
  required: false
  description: Endpoints to check against the CriticalEndpoints list.
- key: EmailAuthenticityCheck
  value:
    complex:
      root: Email
      accessor: AuthenticityCheck
      transformers:
      - operator: uniq
  required: false
  description: 'Indicates the email authenticity resulting from the EmailAuthenticityCheck
    script. Possible values are: Pass, Fail, Suspicious, and Undetermined.'
outputs:
- contextPath: CriticalAssets
  description: All critical assets involved in the incident.
  type: unknown
- contextPath: CriticalAssets.CriticalEndpoints
  description: Critical endpoints involved in the incident.
  type: unknown
- contextPath: CriticalAssets.CriticalEndpointGroups
  description: Critical endpoint-groups involved in the incident.
  type: unknown
- contextPath: CriticalAssets.CriticalUsers
  description: Critical users involved in the incident.
  type: unknown
- contextPath: CriticalAssets.CriticalUserGroups
  description: Critical user-groups involved in the incident.
  type: unknown
tests:
  - Calculate Severity - Generic v2 - Test
