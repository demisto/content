id: Traps Scan Endpoint
version: -1
name: Traps Scan Endpoint
fromversion: ""
description: Use this playbook to initiate an endpoint scan and retrieve the scan results.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: f12d335f-9a8b-4c06-8b0e-d9fe3eefd8e1
    type: start
    task:
      id: f12d335f-9a8b-4c06-8b0e-d9fe3eefd8e1
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: c97a4413-cb98-4672-8157-d440d7f872f2
    type: regular
    task:
      id: c97a4413-cb98-4672-8157-d440d7f872f2
      version: -1
      name: traps-endpoint-scan
      description: Perform a scan operation on the specified endpoint.
      script: '|||traps-endpoint-scan'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      endpoint_id:
        simple: ${inputs.endpoint_id}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: be62fa74-f969-499a-87d9-deb6451fbd84
    type: playbook
    task:
      id: be62fa74-f969-499a-87d9-deb6451fbd84
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:
        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${Traps.ScanResult.OperationID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: operation_id
      PollingCommandName:
        simple: traps-endpoint-scan-result
      Timeout:
        simple: "10"
      dt:
        simple: Traps.ScanResult(val.Status == 'pending' || val.Status == 'in progress').OperationID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: d6e3caa9-e39b-4f37-897b-a8c873f95ff8
    type: regular
    task:
      id: d6e3caa9-e39b-4f37-897b-a8c873f95ff8
      version: -1
      name: traps-endpoint-scan-result
      description: Get results of an endpoint scan operation.
      script: '|||traps-endpoint-scan-result'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      operation_id:
        simple: ${Traps.Scan.OperationID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: d8b4ca86-3e62-4e03-806c-f3e4b4888ec8
    type: regular
    task:
      id: d8b4ca86-3e62-4e03-806c-f3e4b4888ec8
      version: -1
      name: traps-endpoint-scan-result
      description: Get results of an endpoint scan operation.
      script: '|||traps-endpoint-scan-result'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      operation_id:
        simple: ${Traps.Scan.OperationID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 765,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: endpoint_id
  value: {}
  required: true
  description: The ID of the endpoint.
outputs: []
tests:
  - No test - Is be tested in Traps test playbook
