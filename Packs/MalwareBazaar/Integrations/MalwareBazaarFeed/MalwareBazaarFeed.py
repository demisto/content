from typing import Dict
from CommonServerPython import *
from CommonServerUserPython import *
from JSONFeedApiModule import *
INTEGRATION_NAME = "MalwareBazaar Feed"


def custom_build_relationships(feed_config: Dict, _mapping: Dict, indicator_data: Dict) -> List[dict]:
    if indicator_data.get(feed_config.get('relation_entity_b')):
        relationships_lst = EntityRelationship(
            name=feed_config.get('relation_name'),
            entity_a=indicator_data.get('value'),
            entity_a_type=indicator_data.get('type'),
            entity_b=indicator_data.get(feed_config.get('relation_entity_b')),
            entity_b_type=feed_config.get('relation_entity_b_type'),
            reverse_name=feed_config.get('reverse_relationship_name')
        )
        return [relationships_lst.to_indicator()]
    return []


def main() -> None:
    params = {k: v for k, v in demisto.params().items() if v is not None}
    params['indicator_type'] = FeedIndicatorType.File
    params['feed_name_to_config'] = {
        'File': {
            'url': f'{params.get("url")}/api/v1/',
            'extractor': "data",
            'indicator': 'sha256_hash',
            'indicator_type': FeedIndicatorType.File,
            'relation_name': EntityRelationship.Relationships.INDICATOR_OF,
            'reverse_relationship_name': EntityRelationship.Relationships.INDICATED_BY,
            'relation_entity_b': 'signature',
            'relation_entity_b_type': 'Malware',
            'create_relations_function': custom_build_relationships,
            'mapping': {
                'sha256_hash': 'sha256',
                'sha1_hash': 'sha1',
                'md5_hash': 'md5',
                'first_seen': 'first_seen_by_source',
                'last_seen': 'last_seen_by_source',
                'file_name': 'Associated File Names',
                'file_size': 'size',
                'file_type': 'filetype',
                'reporter': 'reported_by',
                'imphash': 'imphash',
                'ssdeep': 'ssdeep',
                'tags': 'tags'
            }
        }
    }
    params['data'] = {'query': 'get_recent',
                      'selector': 'time'}  # query params to get only the recent changes for the incremental feed
    feed_main(params, 'MalwareBazaar Feed', 'malwarebazzar')


if __name__ in ('__main__', '__builtin__', 'builtins'):
    main()
