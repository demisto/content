id: process_email_-_generic
version: -1
name: Process Email - Generic
description: Add email details to the relevant context entities and handle the case
  where original emails are attached.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 9af6c609-2579-4ae4-878b-77bfc5dde29d
    type: start
    task:
      id: 9af6c609-2579-4ae4-878b-77bfc5dde29d
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": -280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 55f82687-423e-4f6c-8d33-efe882d82296
    type: condition
    task:
      id: 55f82687-423e-4f6c-8d33-efe882d82296
      version: -1
      name: Do we have original emails attached?
      description: Identify whether the incident includes an email message attached
        as an eml or msg file and return the answer to playbook. Also saves the identified
        entry ID to context for use for later. Commonly used in automated playbooks
        that handle phishing reports sent to a special phishing mailbox set up by
        the security team.
      scriptName: IdentifyAttachedEmail
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "16"
      "yes":
      - "3"
    scriptarguments:
      entryid:
        simple: ${inputs.File.EntryID}
    reputationcalc: 1
    results:
    - reportedemailentryid
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": -65
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 74921e43-3b87-474c-8875-62192dc01e49
    type: regular
    task:
      id: 74921e43-3b87-474c-8875-62192dc01e49
      version: -1
      name: Add original email details to context
      description: ""
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      append: {}
      key:
        simple: Email
      value:
        simple: '${inputs={To: val[''Email''], CC: val[''Email/cc''], From: val[''Email/from''],
          Subject: val[''Email/subject''], Text: val[''Email/text''], HTML: val[''Email/html''],
          Headers: val[''Email/headers''], Format: val[''Email/format'']}}'
    reputationcalc: 2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -60,
          "y": 820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: 1a13fbe8-b3da-4f0e-828c-b73348c373c5
    type: regular
    task:
      id: 1a13fbe8-b3da-4f0e-828c-b73348c373c5
      version: -1
      name: Add original email attachments to context
      description: Parses an email from an EML or MSG file and populates all relevant
        context data to investigate the email. Also extracts indicators from the email
        messages.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      entryid:
        simple: ${reportedemailentryid}
      max_depth: {}
      parse_only_headers: {}
    reputationcalc: 2
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 630,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: 8f3935d7-2637-41d0-82aa-0458d4607adf
    type: condition
    task:
      id: 8f3935d7-2637-41d0-82aa-0458d4607adf
      version: -1
      name: Can an image of the email be rendered?
      description: Checks whether the email is HTML-formatted, and whether the Rasterize
        integration is enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Email
                accessor: HTML
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Email.HTML
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: brand
                      iscontext: true
                    right:
                      value:
                        simple: Rasterize
                - - operator: isEqualString
                    left:
                      value:
                        simple: state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: aff18291-3cae-4efb-848e-53f356c76361
    type: regular
    task:
      id: aff18291-3cae-4efb-848e-53f356c76361
      version: -1
      name: Render HTML to an image
      description: Rasterize an email body into an image
      tags:
      - email_html_image
      script: '|||rasterize-email'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      height: {}
      htmlBody:
        complex:
          root: Email
          accessor: HTML
      offline:
        simple: "true"
      type: {}
      width: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 100,
          "y": 1440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "6":
    id: "6"
    taskid: 7db302b1-a2bf-4277-8ef9-f5da76699839
    type: title
    task:
      id: 7db302b1-a2bf-4277-8ef9-f5da76699839
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "11":
    id: "11"
    taskid: e7cb8be0-4f69-4c4d-8e85-a29311e5d90c
    type: title
    task:
      id: e7cb8be0-4f69-4c4d-8e85-a29311e5d90c
      version: -1
      name: Advance features
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: de571e55-c518-4cb8-86b8-5e854ebd5285
    type: regular
    task:
      id: de571e55-c518-4cb8-86b8-5e854ebd5285
      version: -1
      name: Set incident with the Email object data
      description: Updates Demisto incident fields using data from the email object.
        Also extracts indicators from the email message.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      1longtexttest: {}
      aaaa: {}
      addLabels: {}
      adgroupname: {}
      alertlevel: {}
      amarkdownsection: {}
      anothernumberpleasejusttomakesure: {}
      app: {}
      arcsightcaseid: {}
      assetid: {}
      attach: {}
      attachamenthash: {}
      attachmentcount:
        complex:
          root: Email
          accessor: |
            Attachment.Count
      attachmentextension:
        complex:
          root: Email
          accessor: Attachment.Extension
      attachmenthash:
        complex:
          root: Email
          accessor: Attachment.Hash
      attachmentid:
        complex:
          root: Email
          accessor: Attachment.ID
      attachmentitem:
        complex:
          root: Email
          accessor: Attachment.Item
      attachmentname:
        complex:
          root: Email
          accessor: Attachment.Name
      attachmentsize:
        complex:
          root: Email
          accessor: Attachment.Size
      attachmenttype:
        complex:
          root: Email
          accessor: Attachment.Type
      awsinstancename: {}
      backupowner: {}
      bbb: {}
      blah: {}
      bool1: {}
      bool2: {}
      booleansummary: {}
      booleantest: {}
      boolfield: {}
      booltest: {}
      bugtraq: {}
      casenumber: {}
      ccc: {}
      ccipaddress: {}
      cleanname: {}
      compliance: {}
      constvalue: {}
      customFields: {}
      customfield: {}
      cve: {}
      cvss: {}
      date2: {}
      datepicker: {}
      daysbetweenreportcreation: {}
      deleteEmptyField:
        simple: "True"
      department: {}
      departmentadmin: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      dstip: {}
      duration: {}
      emailbcc:
        complex:
          root: Email
          accessor: BCC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          root: Email
          accessor: Text
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          root: Email
          accessor: BodyFormat
      emailbodyhtml:
        complex:
          root: Email
          accessor: HTML
          transformers:
          - operator: Stringify
      emailcc:
        complex:
          root: Email
          accessor: CC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclientname:
        complex:
          root: Email
          accessor: ClientName
      emailfrom:
        complex:
          root: Email
          accessor: From
          transformers:
          - operator: uniq
          - operator: Stringify
      emailimage:
        complex:
          root: Email
          accessor: Image
      emailinreplyto:
        complex:
          root: Email
          accessor: InReplyTo
      emailkeywords:
        complex:
          root: Email
          accessor: Keywords
      emailmessageid:
        complex:
          root: Email
          accessor: ID
      emailreceived:
        complex:
          root: Email
          accessor: Received
      emailreplyto:
        complex:
          root: Email
          accessor: ReplyTo
      emailreturnpath:
        complex:
          root: Email
          accessor: ReturnPath
      emailsenderip:
        complex:
          root: Email
          accessor: SenderIP
      emailsize:
        complex:
          root: Email
          accessor: Size
      emailsource:
        complex:
          root: Email
          accessor: Source
      emailsubject:
        complex:
          root: Email
          accessor: Subject
          transformers:
          - operator: uniq
          - operator: Stringify
      emailto:
        complex:
          root: Email
          accessor: To
          transformers:
          - operator: uniq
          - operator: join
            args:
              separator:
                value:
                  simple: ','
      emailtocount:
        complex:
          root: Email
          accessor: To
          transformers:
          - operator: uniq
          - operator: count
      emailurlclicked:
        complex:
          root: EmailUrlClicked
      enisacategory: {}
      escalationdate: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      field1: {}
      field2: {}
      field3: {}
      field4: {}
      filehash: {}
      filename: {}
      filepath: {}
      fwlogs: {}
      gatenumber: {}
      hash: {}
      hjhj: {}
      host: {}
      htmlimage: {}
      htmlrenderedimage: {}
      htmltypefield: {}
      id: {}
      important: {}
      importantfield: {}
      infectedhost: {}
      intelblockcomment: {}
      intelblockurl: {}
      internalemail: {}
      internalusage: {}
      itaytestfield: {}
      jiraticketid: {}
      killchain: {}
      labels: {}
      lob: {}
      longtextone: {}
      longtexttoo: {}
      mailbody: {}
      malwarefamily: {}
      mdtest: {}
      mitigated: {}
      mttd: {}
      multilinetext: {}
      mydate: {}
      myfield: {}
      myname: {}
      myseverity: {}
      name: {}
      newmarkdownfield: {}
      newtextfield: {}
      noatext: {}
      numberplease: {}
      objecttype: {}
      occurred: {}
      originalhtml: {}
      oriwithspace: {}
      owner: {}
      phase: {}
      phishingsender: {}
      phishingsenderdomain: {}
      priority: {}
      qradaroffenceid: {}
      queues: {}
      relatedincidentssummary: {}
      replacePlaybook: {}
      reporteduser: {}
      riskmitigationactionrequirements: {}
      riskscore: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      sender: {}
      sensitive: {}
      severity: {}
      shift: {}
      shiftnotes: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      source: {}
      sourceip: {}
      sourceip1: {}
      src: {}
      srcip: {}
      srcntdomain: {}
      srcuser: {}
      subcat: {}
      subcategory: {}
      summary: {}
      systems: {}
      targethostname: {}
      team: {}
      telefield: {}
      teleselect: {}
      test: {}
      test2: {}
      test111: {}
      testassociationdumpme: {}
      testfield: {}
      testguy: {}
      testhtml: {}
      thisismysuperlongfield: {}
      tier2owner: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      timetomitigate: {}
      timetotriage: {}
      tldr: {}
      tlp: {}
      tttttt: {}
      type: {}
      uniquefiled: {}
      user: {}
      useremail: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      vvvv: {}
      zattachmentsgeneric: {}
      zmaltegoimage: {}
      zvtfirstseen: {}
      zvtother: {}
      zvtvendorcount: {}
    reputationcalc: 2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 350,
          "y": 820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: 3aa70465-c71b-491a-8a92-929c2f594b51
    type: condition
    task:
      id: 3aa70465-c71b-491a-8a92-929c2f594b51
      version: -1
      name: Should retrieve the original email?
      description: If True, retrieve the original email in the thread
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "17"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.GetOriginalEmail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 110,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: 9a089a24-39d3-4306-8597-4fb83d9bcf32
    type: playbook
    task:
      id: 9a089a24-39d3-4306-8597-4fb83d9bcf32
      version: -1
      name: Get Original Email - Generic
      description: |-
        Use this playbook to retrieve the original email in the thread, including headers and attahcments, when the reporting user forwarded the original email not as an attachment.

        You must have the necessary permissions in your email service to execute global search.

        - EWS: eDiscovery
        - Gmail: Google Apps Domain-Wide Delegation of Authority
      playbookName: Get Original Email - Generic
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": 340,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: e335658f-4613-46f0-8b4c-19be03907ab1
    type: condition
    task:
      id: e335658f-4613-46f0-8b4c-19be03907ab1
      version: -1
      name: Was the original email retrieved?
      description: Is there an email object in the context?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Email
            iscontext: true
    view: |-
      {
        "position": {
          "x": 340,
          "y": 620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: 24c8c1f3-1190-480c-8790-6e2de793066b
    type: regular
    task:
      id: 24c8c1f3-1190-480c-8790-6e2de793066b
      version: -1
      name: Set incident with the Email object data
      description: Updates Demisto incident fields using data from the email object.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      1longtexttest: {}
      aaaa: {}
      addLabels: {}
      adgroupname: {}
      alertlevel: {}
      amarkdownsection: {}
      anothernumberpleasejusttomakesure: {}
      app: {}
      arcsightcaseid: {}
      assetid: {}
      attach: {}
      attachamenthash: {}
      attachmentcount:
        complex:
          root: Email
          accessor: |
            Attachment.Count
      attachmentextension:
        complex:
          root: Email
          accessor: Attachment.Extension
      attachmenthash:
        complex:
          root: Email
          accessor: Attachment.Hash
      attachmentid:
        complex:
          root: Email
          accessor: Attachment.ID
      attachmentitem:
        complex:
          root: Email
          accessor: Attachment.Item
      attachmentname:
        complex:
          root: Email
          accessor: Attachment.Name
      attachmentsize:
        complex:
          root: Email
          accessor: Attachment.Size
      attachmenttype:
        complex:
          root: Email
          accessor: Attachment.Type
      awsinstancename: {}
      backupowner: {}
      bbb: {}
      blah: {}
      bool1: {}
      bool2: {}
      booleansummary: {}
      booleantest: {}
      boolfield: {}
      booltest: {}
      bugtraq: {}
      casenumber: {}
      ccc: {}
      ccipaddress: {}
      cleanname: {}
      closeNotes: {}
      closeReason: {}
      compliance: {}
      constvalue: {}
      customFields: {}
      customfield: {}
      cve: {}
      cvss: {}
      date2: {}
      datepicker: {}
      daysbetweenreportcreation: {}
      deleteEmptyField:
        simple: "True"
      department: {}
      departmentadmin: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      dstip: {}
      duration: {}
      emailbcc:
        complex:
          root: Email
          accessor: HeadersMap.BCC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          root: Email
          accessor: Text
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          root: Email
          accessor: BodyFormat
      emailbodyhtml:
        complex:
          root: Email
          accessor: HTML
          transformers:
          - operator: Stringify
      emailbodyhtmlraw: {}
      emailcc:
        complex:
          root: Email
          accessor: CC
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclientname:
        complex:
          root: Email
          accessor: ClientName
      emailfrom:
        complex:
          root: Email
          accessor: From
          transformers:
          - operator: uniq
          - operator: Stringify
      emailfromdisplayname: {}
      emailheaders: {}
      emailhtml:
        complex:
          root: Email
          accessor: HTML
          transformers:
          - operator: uniq
      emailimage:
        complex:
          root: Email
          accessor: Image
      emailinreplyto:
        complex:
          root: Email
          accessor: InReplyTo
      emailkeywords:
        complex:
          root: Email
          accessor: Keywords
      emailmessageid:
        complex:
          root: Email
          accessor: HeadersMap.Message-ID
          transformers:
          - operator: uniq
      emailreceived: {}
      emailreplyto:
        complex:
          root: Email
          accessor: HeadersMap.Reply-To
          transformers:
          - operator: uniq
      emailreturnpath:
        complex:
          root: Email
          accessor: HeadersMap.Return-Path
          transformers:
          - operator: uniq
      emailsenderdomain: {}
      emailsenderip:
        complex:
          root: Email
          accessor: SenderIP
          transformers:
          - operator: uniq
      emailsize:
        complex:
          root: Email
          accessor: Size
          transformers:
          - operator: uniq
      emailsource:
        complex:
          root: Email
          accessor: Source
          transformers:
          - operator: uniq
      emailsubject:
        complex:
          root: Email
          accessor: Subject
          transformers:
          - operator: uniq
          - operator: Stringify
      emailsubjectlanguage: {}
      emailto:
        complex:
          root: Email
          accessor: To
          transformers:
          - operator: uniq
      emailtocount:
        complex:
          root: Email
          accessor: To
          transformers:
          - operator: uniq
          - operator: count
      emailurlclicked:
        complex:
          root: EmailUrlClicked
      enisacategory: {}
      escalationdate: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      field1: {}
      field2: {}
      field3: {}
      field4: {}
      filehash: {}
      filename: {}
      filepath: {}
      fwlogs: {}
      gatenumber: {}
      hash: {}
      hjhj: {}
      host: {}
      htmlimage: {}
      htmlrenderedimage: {}
      htmltypefield: {}
      id: {}
      important: {}
      importantfield: {}
      infectedhost: {}
      intelblockcomment: {}
      intelblockurl: {}
      internalemail: {}
      internalusage: {}
      itaytestfield: {}
      jiraticketid: {}
      killchain: {}
      labels: {}
      lob: {}
      longtextone: {}
      longtexttoo: {}
      mailbody: {}
      malwarefamily: {}
      mdtest: {}
      mitigated: {}
      mttd: {}
      multilinetext: {}
      mydate: {}
      myfield: {}
      myname: {}
      myseverity: {}
      name: {}
      newmarkdownfield: {}
      newtextfield: {}
      noatext: {}
      numberplease: {}
      objecttype: {}
      occurred: {}
      originalhtml: {}
      oriwithspace: {}
      owner: {}
      phase: {}
      phishingsender: {}
      phishingsenderdomain: {}
      priority: {}
      qradaroffenceid: {}
      queues: {}
      relatedincidentssummary: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      riskmitigationactionrequirements: {}
      riskscore: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      sender: {}
      sensitive: {}
      severity: {}
      shift: {}
      shiftnotes: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      slaField: {}
      source: {}
      sourceip: {}
      sourceip1: {}
      src: {}
      srcip: {}
      srcntdomain: {}
      srcuser: {}
      subcat: {}
      subcategory: {}
      summary: {}
      systems: {}
      targethostname: {}
      team: {}
      telefield: {}
      teleselect: {}
      test: {}
      test2: {}
      test111: {}
      testassociationdumpme: {}
      testfield: {}
      testguy: {}
      testhtml: {}
      thisismysuperlongfield: {}
      tier2owner: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      timetomitigate: {}
      timetotriage: {}
      tldr: {}
      tlp: {}
      tttttt: {}
      type: {}
      uniquefiled: {}
      user: {}
      useremail: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      vvvv: {}
      zattachmentsgeneric: {}
      zmaltegoimage: {}
      zvtfirstseen: {}
      zvtother: {}
      zvtvendorcount: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 870,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
system: true
view: |-
  {
    "linkLabelsPosition": {
      "16_2_#default#": 0.73,
      "18_13_yes": 0.72,
      "18_2_#default#": 0.47,
      "4_5_yes": 0.57
    },
    "paper": {
      "dimensions": {
        "height": 2015,
        "width": 1310,
        "x": -60,
        "y": -280
      }
    }
  }
inputs:
- key: File
  value:
    complex:
      root: File
  required: false
  description: An EML or MSG file with
  playbookInputQuery:
- key: Email
  value:
    complex:
      root: incident
      accessor: labels.Email
  required: false
  description: The receiving email address
  playbookInputQuery:
- key: Email/cc
  value:
    complex:
      root: incident
      accessor: labels.CC
  required: false
  description: CC addresses
  playbookInputQuery:
- key: Email/from
  value:
    complex:
      root: incident
      accessor: labels.Email/from
  required: false
  description: The originator of the email
  playbookInputQuery:
- key: Email/subject
  value:
    complex:
      root: incident
      accessor: labels.Email/subject
  required: false
  description: The email’s subject
  playbookInputQuery:
- key: Email/text
  value:
    complex:
      root: incident
      accessor: labels.Email/text
  required: false
  description: The email’s text
  playbookInputQuery:
- key: Email/html
  value:
    complex:
      root: incident
      accessor: labels.Email/html
  required: false
  description: The emai’sl html
  playbookInputQuery:
- key: Email/headers
  value:
    complex:
      root: incident
      accessor: labels.Email/headers
  required: false
  description: The email’s headers
  playbookInputQuery:
- key: Email/format
  value:
    complex:
      root: incident
      accessor: labels.Email/format
  required: false
  description: The email’s format
  playbookInputQuery:
- key: GetOriginalEmail
  value:
    simple: "False"
  required: false
  description: |-
    Retrieve the original email in the thread. Default is "False".

    You must have the necessary permissions in your email service to execute global search.

    - EWS: eDiscovery
    - Gmail: Google Apps Domain-Wide Delegation of Authority
  playbookInputQuery:
outputs:
- contextPath: Email.HTML
  description: Email 'html' body if exists
  type: string
- contextPath: Email
  description: Email object
  type: unknown
- contextPath: Email.CC
  description: Email 'cc' addresses
  type: string
- contextPath: Email.From
  description: Email 'from' sender
  type: string
- contextPath: Email.Subject
  description: Email subject
  type: string
- contextPath: Email.To
  description: Email 'to' addresses
  type: string
- contextPath: Email.Text
  description: Email 'text' body if exists
  type: string
- contextPath: Email.Headers
  description: The full email headers as a single string
  type: string
- contextPath: Email.Attachments
  description: The list of attachment names in the email
  type: string
- contextPath: Email.Format
  description: The format of the email if available
  type: string
- contextPath: File
  description: The File object
  type: unknown
fromversion: 5.0.0
tests:
- process_email_-_generic_-_test
