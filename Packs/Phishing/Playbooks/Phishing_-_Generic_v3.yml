id: Phishing - Generic v3
version: -1
name: Phishing - Generic v3
description: "This playbook investigates and remediates a potential phishing incident.\
  \ It engages with the user that triggered the incident while investigating the incident\
  \ itself.\nNote: Final remediation tasks are always decided by a human analyst. "
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 664506b8-2e32-418e-8366-975615da1945
    type: start
    task:
      id: 664506b8-2e32-418e-8366-975615da1945
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "39"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 33c75a16-88d7-444b-8d04-8ab0af2bbe4d
    type: regular
    task:
      id: 33c75a16-88d7-444b-8d04-8ab0af2bbe4d
      version: -1
      name: Assign to analyst
      description: Assigns the incident to an analyst based on the analyst's organizational
        role.
      scriptName: AssignAnalystToIncident
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      onCall:
        complex:
          root: inputs.OnCall
          transformers:
          - operator: toLowerCase
      roles:
        complex:
          root: inputs.Role
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2560
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: eb780ec7-557a-46ae-869d-582ca2547e62
    type: regular
    task:
      id: eb780ec7-557a-46ae-869d-582ca2547e62
      version: -1
      name: Manually review the incident
      description: Reviews the incident to determine if the email that the user reported
        is malicious.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 3055
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: ab61f1da-1a47-456b-85b8-ba23a7df2f38
    type: regular
    task:
      id: ab61f1da-1a47-456b-85b8-ba23a7df2f38
      version: -1
      name: Close investigation
      description: Closes the investigation.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "29"
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 5360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: d3bc5192-aeef-474d-8c51-25102d6ed901
    type: title
    task:
      id: d3bc5192-aeef-474d-8c51-25102d6ed901
      version: -1
      name: Triage
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: 0773d4ad-fe7a-451a-821e-805434cdc5e6
    type: regular
    task:
      id: 0773d4ad-fe7a-451a-821e-805434cdc5e6
      version: -1
      name: Store the email address of the reporting user
      description: Stores the email address of the user that reported the incident.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "85"
    scriptarguments:
      key:
        simple: ReporterAddress
      value:
        complex:
          root: ExtractedIndicators.Email
          accessor: '[0]'
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -75
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: 1f37541b-cd13-4a37-8f9e-169b63825248
    type: regular
    task:
      id: 1f37541b-cd13-4a37-8f9e-169b63825248
      version: -1
      name: Acknowledge incident was received
      description: |
        Sends an auto-response to the user reporting the incident that the incident was received and is being handled.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "56"
    scriptarguments:
      body:
        simple: "Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress;\
          \ var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc)\
          \ { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email)\
          \ && acc.Email.indexOf(reporter) > -1) }); return account && account[0]\
          \ && account[0].DisplayName[0] || reporter || ''; }(val)},\nWe've received\
          \ your email and are investigating.\nPlease do not touch the email until\
          \ further notice.\n\nCordially, \n  Your friendly neighborhood security\
          \ team"
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        complex:
          root: ReporterAddress
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 942.5,
          "y": 630
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: 4f4a45c7-24f0-47d7-8443-d5b5b6230baf
    type: condition
    task:
      id: 4f4a45c7-24f0-47d7-8443-d5b5b6230baf
      version: -1
      name: Is the email malicious?
      description: Determines if the email is malicious based on the calculated severity.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "31"
      Malicious:
      - "30"
    separatecontext: false
    conditions:
    - label: Malicious
      condition:
      - - operator: greaterThanOrEqual
          left:
            value:
              simple: incident.severity
            iscontext: true
          right:
            value:
              simple: "2"
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2735
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "16":
    id: "16"
    taskid: 84262d62-b6b4-48b5-8c98-eac47e0e29cb
    type: regular
    task:
      id: 84262d62-b6b4-48b5-8c98-eac47e0e29cb
      version: -1
      name: Update the user that the reported email is safe
      description: Sends an email to the user explaining that the email they reported
        is safe.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is safe. In case you think the verdict is not accurate and the email is suspicious, please contact our SOC team.
          Thank you for your alertness and your participation in keeping our organization secure.

          Cordially,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 3610
        }
      }
    note: false
    timertriggers:
    - fieldname: detectionsla
      action: stop
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 22acf235-b57c-4f78-8786-892dda955719
    type: title
    task:
      id: 22acf235-b57c-4f78-8786-892dda955719
      version: -1
      name: Engage with User
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "53"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 940,
          "y": 300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "22":
    id: "22"
    taskid: 4ffd4fc5-c549-406b-8d6d-7f6a613a6c80
    type: playbook
    task:
      id: 4ffd4fc5-c549-406b-8d6d-7f6a613a6c80
      version: -1
      name: Detonate File - Generic
      playbookName: Detonate File - Generic
      type: playbook
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "52"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": 197.5,
          "y": 615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: 8d7ff93d-ca48-47c3-8b16-71dee9c58297
    type: playbook
    task:
      id: 8d7ff93d-ca48-47c3-8b16-71dee9c58297
      version: -1
      name: Process Email - Generic v2
      description: |
        This playbook adds email details to the relevant context entities and handles original email attachments.

        The v2 playbook enables parsing email artifacts more efficiently, including:
        - Using incident fields and not incident labels.
        - Providing separate paths to "Phishing Alerts".
        - Using the new "Get Original Email - Generic v2" playbook to retrieve original emails as EML files from the following integrations:
          * EWS v2
          * Microsoft Graph Mail integration
          * Gmail
          * FireEye EX and FireEye CM
          * Proofpoint Protection Server
          * Agari Phishing Defense (EWS v2, MSGraph Mail, Gmail)
          * Mimecast
      playbookName: Process Email - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "55"
      - "22"
      - "88"
      - "137"
    scriptarguments:
      Email:
        complex:
          root: incident
          accessor: emailto
      EmailCC:
        complex:
          root: incident
          accessor: emailcc
      EmailFormat:
        complex:
          root: incident
          accessor: emailformat
      EmailFrom:
        complex:
          root: incident
          accessor: emailfrom
      EmailHeaders:
        complex:
          root: incident
          accessor: phishingreporteremailheaders
      EmailHtml:
        complex:
          root: incident
          accessor: emailhtml
      EmailSubject:
        complex:
          root: incident
          accessor: emailsubject
      EmailText:
        complex:
          root: incident
          accessor: emailbody
      File:
        complex:
          root: File
      GetOriginalEmail:
        complex:
          root: inputs.GetOriginalEmail
      UserID:
        complex:
          root: ReporterAddress
      EmailFileToExtract:
        complex:
          root: inputs.EmailFileToExtract
      MessageID:
        complex:
          root: incident
          accessor: emailmessageid
      Thread-Topic:
        complex:
          root: incident
          accessor: emailsubject
    separatecontext: true
    loop:
      iscommand: false
      scriptArguments:
        UserID:
          complex:
            root: incident
            accessor: emaifrom
            transformers:
            - operator: replaceMatch
              args:
                regex:
                  value:
                    simple: (?i).*<([A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,})>
                replaceWith:
                  value:
                    simple: $1
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "27":
    id: "27"
    taskid: 4905affa-7530-4f62-869d-d5066f89c54b
    type: title
    task:
      id: 4905affa-7530-4f62-869d-d5066f89c54b
      version: -1
      name: Remediation
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "97"
      - "98"
      - "99"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 3850
        }
      }
    note: false
    timertriggers:
    - fieldname: remediationsla
      action: start
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: 3437bc3e-7d13-4698-897f-0da0f1093f63
    type: playbook
    task:
      id: 3437bc3e-7d13-4698-897f-0da0f1093f63
      version: -1
      name: Search And Delete Emails - Generic v2
      description: 'This playbook searches and deletes emails with similar attributes
        of a malicious email using one of the following integrations: * EWS * Office
        365 * Gmail * Agari Phishing Defense'
      playbookName: Search And Delete Emails - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      AttachmentName:
        complex:
          root: incident
          accessor: attachmentname
      From:
        complex:
          root: PhishingSender
      ? |
        O365AllowNotFoundExchangeLocations
      : simple: "false"
      O365DeleteType:
        complex:
          root: inputs.O365DeleteType
      O365Description:
        simple: Search for potential phishing
      O365ExchangeLocation:
        simple: All
      O365ExchangeLocationExclusion:
        complex:
          root: inputs.O365ExchangeLocationExclusion
      O365KQL:
        simple: from:${incident.emailfrom} AND subject:${incident.emailsubject}
      SearchAndDeleteIntegration:
        complex:
          root: inputs.SearchAndDeleteIntegration
      Subject:
        complex:
          root: incident
          accessor: emailsubject
      To:
        complex:
          root: incident
          accessor: emailto
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: 828b23a9-1c88-44ed-85ee-6fdcb892496a
    type: title
    task:
      id: 828b23a9-1c88-44ed-85ee-6fdcb892496a
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 5545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "30":
    id: "30"
    taskid: 2b844949-4f2a-4663-8152-8c11b41c290a
    type: title
    task:
      id: 2b844949-4f2a-4663-8152-8c11b41c290a
      version: -1
      name: Email Is Malicious
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "149"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "31":
    id: "31"
    taskid: 0e005247-eb1b-4512-8674-7717c90104dd
    type: title
    task:
      id: 0e005247-eb1b-4512-8674-7717c90104dd
      version: -1
      name: Undetermined
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 2910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "33":
    id: "33"
    taskid: 1f049b2b-ba22-45c2-8330-93acbd3850ef
    type: condition
    task:
      id: 1f049b2b-ba22-45c2-8330-93acbd3850ef
      version: -1
      name: Is the email malicious?
      description: Is the email that the user reported malicious?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "No":
      - "151"
      "yes":
      - "149"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 3220
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "34":
    id: "34"
    taskid: 3be84614-c9e3-436c-8d1e-96920a53e250
    type: regular
    task:
      id: 3be84614-c9e3-436c-8d1e-96920a53e250
      version: -1
      name: Manually remediate  the incident
      description: "To manually remediate a phishing incident you need to:\n1. Search\
        \ for and delete similar emails.\n2. Inform the organization about the threat.\n\
        3. Hunt relevant IOCs.\n4. Update proxies and firewalls as necessary.\n5.\
        \ Block the malicious sender/domain in the mail-gateway. "
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -277.5,
          "y": 4180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "36":
    id: "36"
    taskid: f0762650-4a77-49d2-8030-64061db72ac0
    type: condition
    task:
      id: f0762650-4a77-49d2-8030-64061db72ac0
      version: -1
      name: Should emails be searched and deleted?
      description: Checks whether the **SearchAndDelete** playbook input is set to
        True.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "43"
      "Yes":
      - "152"
    separatecontext: false
    conditions:
    - label: "Yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.SearchAndDelete
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "37":
    id: "37"
    taskid: e7a7fd40-2e9e-4560-85c9-f67161231e82
    type: condition
    task:
      id: e7a7fd40-2e9e-4560-85c9-f67161231e82
      version: -1
      name: Should indicators be blocked automatically?
      description: Checks whether the **BlockIndicators** playbook input is set to
        True.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "43"
      "yes":
      - "91"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.BlockIndicators
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: inputs.BlockIndicators
                      iscontext: true
                    right:
                      value:
                        simple: "True"
                    ignorecase: true
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "39":
    id: "39"
    taskid: 7f572705-6406-4e7f-8eca-be825d5205b8
    type: title
    task:
      id: 7f572705-6406-4e7f-8eca-be825d5205b8
      version: -1
      name: Start Detection Timer
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "147"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -550
        }
      }
    note: false
    timertriggers:
    - fieldname: detectionsla
      action: start
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "43":
    id: "43"
    taskid: 7e8e9dd5-d8bf-49b1-8f93-23dc2d35b8eb
    type: title
    task:
      id: 7e8e9dd5-d8bf-49b1-8f93-23dc2d35b8eb
      version: -1
      name: Stop Remediation Timer
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 690,
          "y": 5210
        }
      }
    note: false
    timertriggers:
    - fieldname: remediationsla
      action: stop
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "52":
    id: "52"
    taskid: 389b4de3-6d86-4e74-897c-3fcf2df5463d
    type: title
    task:
      id: 389b4de3-6d86-4e74-897c-3fcf2df5463d
      version: -1
      name: Indicator Enrichment
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "92"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "53":
    id: "53"
    taskid: 163f0f23-d373-4f5d-8da6-a5ad86598576
    type: playbook
    task:
      id: 163f0f23-d373-4f5d-8da6-a5ad86598576
      version: -1
      name: Email Address Enrichment - Generic v2.1
      description: |-
        This playbook enriches email addresses by:
        - Getting information from Active Directory for internal addresses.
        - Getting the domain-squatting reputation for external addresses.
      playbookName: Email Address Enrichment - Generic v2.1
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      Domain:
        simple: ' '
      Email:
        complex:
          root: ReporterAddress
          transformers:
          - operator: uniq
      InternalDomains:
        complex:
          root: inputs.InternalDomains
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 942.5,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "55":
    id: "55"
    taskid: 6b30366b-980c-4529-8823-dd21e6d4dfff
    type: playbook
    task:
      id: 6b30366b-980c-4529-8823-dd21e6d4dfff
      version: -1
      name: Extract Indicators From File - Generic v2
      description: |-
        This playbook extracts indicators from a file.
        Supported file types:
        - CSV
        - PDF
        - TXT
        - HTM, HTML
        - DOC, DOCX
        - PPT
        - PPTX
        - RTF
        - XLS
        - XLSX
        - XML
      playbookName: Extract Indicators From File - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "52"
      - "143"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": -727.5,
          "y": 615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "56":
    id: "56"
    taskid: 13e831d2-431e-4927-814f-b4fa631f51cf
    type: title
    task:
      id: 13e831d2-431e-4927-814f-b4fa631f51cf
      version: -1
      name: Investigation
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "101"
      - "80"
      - "131"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "79":
    id: "79"
    taskid: 991adce8-f301-48b8-8fce-460c9e0756f6
    type: condition
    task:
      id: 991adce8-f301-48b8-8fce-460c9e0756f6
      version: -1
      name: Should the email be authenticated?
      description: Checks whether the email should be authenticated using DKIM, SPF,
        and DMARC. This checks if "AuthenticateEmail" output is set to "True" and
        if there are headers from an email to authenticate.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "82"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.AuthenticateEmail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isExists
          left:
            value:
              complex:
                root: Email
                accessor: HeadersMap
            iscontext: true
    view: |-
      {
        "position": {
          "x": 390,
          "y": 1765
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "80":
    id: "80"
    taskid: d4e9aa9c-3bfc-4e4f-8a75-8e8a112f0b93
    type: title
    task:
      id: d4e9aa9c-3bfc-4e4f-8a75-8e8a112f0b93
      version: -1
      name: Email Authenticity Check
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "79"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 390,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "82":
    id: "82"
    taskid: 442a2d4c-6537-4098-8a36-76d8783c6c25
    type: regular
    task:
      id: 442a2d4c-6537-4098-8a36-76d8783c6c25
      version: -1
      name: Authenticate email
      description: Checks the authenticity of an email based on the email's SPF, DMARC,
        and DKIM.
      scriptName: CheckEmailAuthenticity
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "83"
    scriptarguments:
      headers:
        complex:
          root: Email
          accessor: Headers
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 392.5,
          "y": 1950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "83":
    id: "83"
    taskid: 95d0d3be-5770-442e-884c-8f5c6ca4394f
    type: regular
    task:
      id: 95d0d3be-5770-442e-884c-8f5c6ca4394f
      version: -1
      name: Save authenticity check result to incident field
      description: Saves the email authenticity verdict in an incident field.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "84"
    scriptarguments:
      emailauthenticitycheck:
        complex:
          root: Email
          accessor: AuthenticityCheck
          transformers:
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: Undetermined
              toReplace:
                value:
                  simple: undetermined
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: Pass
              toReplace:
                value:
                  simple: pass
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: Fail
              toReplace:
                value:
                  simple: fail
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: Suspicious
              toReplace:
                value:
                  simple: suspicious
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 392.5,
          "y": 2145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "84":
    id: "84"
    taskid: 941a16db-d34e-4100-8083-66d74c83e595
    type: playbook
    task:
      id: 941a16db-d34e-4100-8083-66d74c83e595
      version: -1
      name: Calculate Severity - Generic v2
      playbookName: Calculate Severity - Generic v2
      type: playbook
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "2"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2350
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "85":
    id: "85"
    taskid: 9b218556-45e5-42a2-855c-54c5e63e82a6
    type: regular
    task:
      id: 9b218556-45e5-42a2-855c-54c5e63e82a6
      version: -1
      name: Save reporter email address in field
      description: Saves the email address of the email reporter in an incident field.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "18"
      - "11"
    scriptarguments:
      reporteremailaddress:
        complex:
          root: ReporterAddress
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "87":
    id: "87"
    taskid: bd41a165-d0e6-4798-8e02-c0a530b274d9
    type: regular
    task:
      id: bd41a165-d0e6-4798-8e02-c0a530b274d9
      version: -1
      name: Predict phishing type using pre-trained phishing model
      description: Predicts the specific phishing mail type using a pre-trained machine
        learning model, and highlights the most important words used in the classification
        decision.
      scriptName: DBotPredictPhishingWords
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "90"
    scriptarguments:
      emailBody:
        complex:
          root: Email
          accessor: Text
          transformers:
          - operator: uniq
      emailBodyHTML:
        complex:
          root: Email
          accessor: HTML
          transformers:
          - operator: uniq
      emailSubject:
        complex:
          root: Email
          accessor: Subject
          transformers:
          - operator: uniq
      modelName:
        complex:
          root: inputs.PhishingModelName
      returnError:
        simple: "false"
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 1005
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "88":
    id: "88"
    taskid: b12d61c1-f30b-49d8-8e25-07a83ffb06d6
    type: title
    task:
      id: b12d61c1-f30b-49d8-8e25-07a83ffb06d6
      version: -1
      name: Machine Learning
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "142"
      - "143"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1522.5,
          "y": 615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "89":
    id: "89"
    taskid: d906c498-607e-47c1-87ee-dc15f246665d
    type: regular
    task:
      id: d906c498-607e-47c1-87ee-dc15f246665d
      version: -1
      name: Update incident with predictions
      description: Updates incident fields with the machine learning phishing model
        predictions.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "84"
    scriptarguments:
      dbotprediction:
        complex:
          root: DBotPredictPhishingWords
          accessor: Label
          transformers:
          - operator: uniq
      dbotpredictionprobability:
        complex:
          root: DBotPredictPhishingWords
          accessor: Probability
          transformers:
          - operator: uniq
      dbottextsuggestionhighlighted:
        complex:
          root: DBotPredictPhishingWords
          accessor: TextTokensHighlighted
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1572.5,
          "y": 1465
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "90":
    id: "90"
    taskid: 945447ab-cc25-42b8-844c-a0d30c09834e
    type: condition
    task:
      id: 945447ab-cc25-42b8-844c-a0d30c09834e
      version: -1
      name: Did the model predict the phishing type?
      description: Checks whether the model predicted the phishing type.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "89"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: DBotPredictPhishingWords
                accessor: Label
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: DBotPredictPhishingWords
                accessor: Probability
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: DBotPredictPhishingWords
                accessor: TextTokensHighlighted
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 1235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "91":
    id: "91"
    taskid: 7cd06dea-8fac-47cc-809b-427c05e21ce1
    type: playbook
    task:
      id: 7cd06dea-8fac-47cc-809b-427c05e21ce1
      version: -1
      name: Block Indicators - Generic v2
      description: |+
        This playbook blocks malicious indicators using all enabled integrations, with the following sub-playbooks:

        - Block URL - Generic
        - Block Account - Generic
        - Block IP - Generic v2
        - Block File - Generic v2

      playbookName: Block Indicators - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      AutoCommit:
        simple: "No"
      CustomBlockRule:
        simple: "True"
      EmailToBlock:
        complex:
          root: DBotScore
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: email
              ignorecase: true
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: Indicator
          transformers:
          - operator: uniq
      IP:
        complex:
          root: DBotScore
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: ip
              ignorecase: true
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: Indicator
          transformers:
          - operator: uniq
      MD5:
        complex:
          root: DBotScore
          filters:
          - - operator: stringHasLength
              left:
                value:
                  simple: DBotScore.Indicator
                iscontext: true
              right:
                value:
                  simple: "32"
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: file
              ignorecase: true
            - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: hash
              ignorecase: true
          accessor: Indicator
          transformers:
          - operator: uniq
      SHA256:
        complex:
          root: DBotScore
          filters:
          - - operator: stringHasLength
              left:
                value:
                  simple: DBotScore.Indicator
                iscontext: true
              right:
                value:
                  simple: "64"
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: file
              ignorecase: true
            - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: hash
              ignorecase: true
          accessor: Indicator
          transformers:
          - operator: uniq
      URL:
        complex:
          root: DBotScore
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: url
              ignorecase: true
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: Indicator
          transformers:
          - operator: uniq
      Username:
        complex:
          root: DBotScore
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: DBotScore.Type
                iscontext: true
              right:
                value:
                  simple: username
              ignorecase: true
          - - operator: greaterThanOrEqual
              left:
                value:
                  simple: DBotScore.Score
                iscontext: true
              right:
                value:
                  simple: "3"
          accessor: Indicator
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "92":
    id: "92"
    taskid: 769ef3cd-03f6-4a45-8759-74d100294283
    type: playbook
    task:
      id: 769ef3cd-03f6-4a45-8759-74d100294283
      version: -1
      name: Entity Enrichment - Phishing v2
      description: Enrich entities using one or more integrations
      playbookName: Entity Enrichment - Phishing v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "56"
    scriptarguments:
      Domain:
        complex:
          root: Domain
          accessor: Name
          transformers:
          - operator: uniq
      Email:
        complex:
          root: Account.Email.Address
          filters:
          - - operator: isNotEqualString
              left:
                value:
                  simple: Account.Email.Address
                iscontext: true
              right:
                value:
                  simple: incident.reporteremailaddress
                iscontext: true
          transformers:
          - operator: uniq
      Hostname:
        complex:
          root: Endpoint
          accessor: Hostname
          transformers:
          - operator: uniq
      IP:
        complex:
          root: IP
          accessor: Address
          transformers:
          - operator: uniq
      InternalDomains:
        complex:
          root: inputs.InternalDomains
      InternalRange:
        complex:
          root: inputs.InternalRange
      MD5:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: uniq
      ResolveIP:
        simple: "False"
      SHA1:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: uniq
      SHA256:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: uniq
      URL:
        complex:
          root: URL
          accessor: Data
          transformers:
          - operator: uniq
      Username:
        complex:
          root: Account
          accessor: Username
          transformers:
          - operator: uniq
    separatecontext: false
    loop:
      iscommand: false
      scriptArguments:
        Email:
          complex:
            root: Account.Email.Address
            filters:
            - - operator: isNotEqualString
                left:
                  value:
                    simple: Account.Email.Address
                  iscontext: true
                right:
                  value:
                    simple: ReporterAddress
                  iscontext: true
            transformers:
            - operator: uniq
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "97":
    id: "97"
    taskid: 8990d67e-e453-42cc-8920-031efeaef405
    type: title
    task:
      id: 8990d67e-e453-42cc-8920-031efeaef405
      version: -1
      name: Block Indicators
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "37"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4040
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "98":
    id: "98"
    taskid: da2a3bb1-52b6-42bd-8d39-00572dc998ff
    type: title
    task:
      id: da2a3bb1-52b6-42bd-8d39-00572dc998ff
      version: -1
      name: Search & Delete Email
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4040
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "99":
    id: "99"
    taskid: 31f66049-7772-4d2e-858b-a3fa59232296
    type: title
    task:
      id: 31f66049-7772-4d2e-858b-a3fa59232296
      version: -1
      name: Manual Remediation
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "34"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -277.5,
          "y": 4040
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "101":
    id: "101"
    taskid: 0c94b64e-114d-4804-83ad-2d8f1b471e85
    type: title
    task:
      id: 0c94b64e-114d-4804-83ad-2d8f1b471e85
      version: -1
      name: Email Campaign Search
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "126"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "126":
    id: "126"
    taskid: 26f3e34a-0db6-4961-854f-78a5b566ae72
    type: playbook
    task:
      id: 26f3e34a-0db6-4961-854f-78a5b566ae72
      version: -1
      name: Detect & Manage Phishing Campaigns
      description: |-
        This playbook is used to find, create, and manage phishing campaigns. When a number of similar phishing incidents exist in the system, the playbook can be used to:
        1. Find and tie together incidents that are related to the same phishing attack (a phishing campaign).
        2. Search for an existing Phishing Campaign incident or create a new one for the tied phishing incidents.
        3. Link all detected phishing incidents to the Phishing Campaign incident that was found or created previously.
        4. Update the Phishing Campaign incident with the latest data about the campaign, and update all related phishing incidents to indicate that they are part of the campaign.
      playbookName: Detect & Manage Phishing Campaigns
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "84"
    scriptarguments:
      AutomaticallyLinkIncidents:
        simple: "True"
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1755
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "131":
    id: "131"
    taskid: 15ef4fbb-00ea-4712-8bd5-f271ca9adbe7
    type: title
    task:
      id: 15ef4fbb-00ea-4712-8bd5-f271ca9adbe7
      version: -1
      name: Microsoft's Headers Check
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "132"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "132":
    id: "132"
    taskid: 374e403a-75c8-456c-8ebf-e76f33c3d501
    type: condition
    task:
      id: 374e403a-75c8-456c-8ebf-e76f33c3d501
      version: -1
      name: Check Microsoft's Headers?
      description: "Whether to check Microsoft's proprietary email headers."
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "133"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.CheckMicrosoftHeaders
            iscontext: true
          right:
            value:
              simple: "True"
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1755
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "133":
    id: "133"
    taskid: 3851c221-dae8-4730-8740-fbb041c24fa5
    type: playbook
    task:
      id: 3851c221-dae8-4730-8740-fbb041c24fa5
      version: -1
      name: Process Microsoft's Anti-Spam Headers
      description: "This playbook stores the SCL, BCL, and PCL scores if they exist\
        \ to the associated incident fields (Phishing SCL Score, Phishing PCL Score,\
        \ and Phishing BCL Score).\nIt also does the following:\n1) Sets the email\
        \ classification to \"spam\" if the SCL score is equal to or greater than\
        \ 5.\n2) Sets the incident severity according to the playbook inputs (default\
        \ is: PCL/BCL - Medium, SCL - Low). The severity of the incident is set only\
        \ when one (or more) of the following occurs:\n  - PCL (Phishing Confidence\
        \ Level) score between and including 4-8: The message content is likely to\
        \ be phishing.\n  - [BCL](https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/bulk-complaint-level-values?view=o365-worldwide)\
        \ (Bulk Complaint Level) score between and including 4-7: The message is from\
        \ a bulk sender that generates a mixed number of complaints. \n    For a score\
        \ between and including 8-9: The message is from a bulk sender that generates\
        \ a high number of complaints.\n  - [SCL](https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/spam-confidence-levels?view=o365-worldwide)\
        \ (Spam Confidence Level) score between and including 5-6: Spam filtering\
        \ marks the message as spam. \n    For a score of 9: Spam filtering marks\
        \ the message as high confidence spam. See [anti-spam stamps](https://docs.microsoft.com/en-us/exchange/antispam-and-antimalware/antispam-protection/antispam-stamps?view=exchserver-2019)."
      playbookName: Process Microsoft's Anti-Spam Headers
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "84"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "134":
    id: "134"
    taskid: 57d8a1cb-52c1-42ca-86fd-580c8662b71b
    type: regular
    task:
      id: 57d8a1cb-52c1-42ca-86fd-580c8662b71b
      version: -1
      name: Extract the email address of the reporting user
      description: commands.local.cmd.extract.indicators
      script: Builtin|||extractIndicators
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      text:
        complex:
          root: incident
          accessor: emailfrom
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "135":
    id: "135"
    taskid: f87bb538-66f8-4c41-88df-55459d9ab5bc
    type: playbook
    task:
      id: f87bb538-66f8-4c41-88df-55459d9ab5bc
      version: -1
      name: Detonate URL - Generic
      description: This playbook detonates URLs using active integrations that support
        URL detonation.
      playbookName: Detonate URL - Generic
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "52"
    scriptarguments:
      URL:
        complex:
          root: URL
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": -260,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "137":
    id: "137"
    taskid: 80e1c4c2-b760-493f-8038-a5e7f9201cb2
    type: condition
    task:
      id: 80e1c4c2-b760-493f-8038-a5e7f9201cb2
      version: -1
      name: Detonate URL?
      description: "Whether to detonate URLs in supported sandboxes."
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "52"
      "yes":
      - "135"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.DetonateURL
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": -260,
          "y": 615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "138":
    id: "138"
    taskid: 09acaeac-b9a5-4dee-8941-d635cfca3df6
    type: regular
    task:
      id: 09acaeac-b9a5-4dee-8941-d635cfca3df6
      version: -1
      name: Extract the original email sender address
      description: commands.local.cmd.extract.indicators
      script: Builtin|||extractIndicators
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "139"
    scriptarguments:
      text:
        complex:
          root: incident
          accessor: emailfrom
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "139":
    id: "139"
    taskid: 7bce4445-b8ca-4034-810b-bb554f91064f
    type: regular
    task:
      id: 7bce4445-b8ca-4034-810b-bb554f91064f
      version: -1
      name: Store the email address of the reporting user
      description: Stores the email address of the user that reported the incident.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      key:
        simple: PhishingSender
      value:
        complex:
          root: ExtractedIndicators.Email
          accessor: '[0]'
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4760
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "140":
    id: "140"
    taskid: 8e768c46-611a-4178-8768-50cba9c5e4cc
    type: regular
    task:
      id: 8e768c46-611a-4178-8768-50cba9c5e4cc
      version: -1
      name: Predict Phishing URLs
      description: Predicts phishing URLs using a pre-trained model.
      type: regular
      iscommand: false
      brand: ""
      script: DBotPredictURLPhishing
    nexttasks:
      '#none#':
      - "84"
    scriptarguments:
      emailHTML:
        complex:
          root: incident
          accessor: emailhtml
      maxNumberOfURL:
        complex:
          root: inputs.DBotPredictURLPhishingURLsNumber
      urls:
        complex:
          root: ExtractedURLsFromFiles
    reputationcalc: 2
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 1005
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "142":
    id: "142"
    taskid: 31191222-cab2-4a7f-8d17-ea36e1ff3e63
    type: title
    task:
      id: 31191222-cab2-4a7f-8d17-ea36e1ff3e63
      version: -1
      name: Predict Phishing Type
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "87"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "143":
    id: "143"
    taskid: 75bfc22a-3f9b-470d-8428-6f3a6e75404b
    type: title
    task:
      id: 75bfc22a-3f9b-470d-8428-6f3a6e75404b
      version: -1
      name: Predict Phishing URLs
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "140"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 795
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "144":
    id: "144"
    taskid: 0170cf97-120f-4f84-8bc6-f9f503b7ff6d
    type: title
    task:
      id: 0170cf97-120f-4f84-8bc6-f9f503b7ff6d
      version: -1
      name: Incident Created Manually
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "145"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 172.5,
          "y": -225
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "145":
    id: "145"
    taskid: eb43d263-9ede-4c65-8a30-a6e16820e5fa
    type: condition
    task:
      id: eb43d263-9ede-4c65-8a30-a6e16820e5fa
      version: -1
      name: Was the reporter of the phishing email specified?
      description: Checks whether the email address of the phishing email reporter
        was specified on incident creation, so that an acknowledgement email can be
        sent to them.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "11"
      "yes":
      - "146"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: incident
                accessor: reporteremailaddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 172.5,
          "y": -85
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "146":
    id: "146"
    taskid: 20fe15ef-3a66-4fb1-8e2f-5475a1438239
    type: regular
    task:
      id: 20fe15ef-3a66-4fb1-8e2f-5475a1438239
      version: -1
      name: Store the email address of the reporting user
      description: Stores the email address of the user that reported the incident.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
      - "11"
    scriptarguments:
      key:
        simple: ReporterAddress
      value:
        complex:
          root: incident
          accessor: reporteremailaddress
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "147":
    id: "147"
    taskid: d3602e32-d12d-45b9-885b-0afaf411a2d4
    type: condition
    task:
      id: d3602e32-d12d-45b9-885b-0afaf411a2d4
      version: -1
      name: How was the incident created?
      description: Checks whether the incident came from a mail listener integration,
        or was created manually by the user.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "134"
      Manually:
      - "144"
    separatecontext: false
    conditions:
    - label: Manually
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: incident
                accessor: sourceBrand
            iscontext: true
          right:
            value:
              simple: Manual
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "148":
    id: "148"
    taskid: 738f6593-7302-41a7-8740-f6dce8c4dd9e
    type: regular
    task:
      id: 738f6593-7302-41a7-8740-f6dce8c4dd9e
      version: -1
      name: Update the user that the reported email is malicious
      description: Sends an email to the user explaining that the email they reported
        is malicious.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is malicious. No further action is required on your part. Good job on detecting and forwarding it to us!

          All the best,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 110,
          "y": 3620
        }
      }
    note: false
    timertriggers:
    - fieldname: detectionsla
      action: stop
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "149":
    id: "149"
    taskid: 849aa599-081e-4b5c-80b3-e6098463f7be
    type: condition
    task:
      id: 849aa599-081e-4b5c-80b3-e6098463f7be
      version: -1
      name: Can the user be informed about the verdict?
      description: Checks whether the user can be informed about the verdict of the
        incident.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "27"
      yes - phishing:
      - "148"
      yes - phishing campaign:
      - "150"
    separatecontext: false
    conditions:
    - label: yes - phishing campaign
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: PartOfCampaign
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: ReporterAddress
            iscontext: true
    - label: yes - phishing
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: ReporterAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 3410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "150":
    id: "150"
    taskid: b9f96cd5-1144-4436-8293-2053e587d698
    type: regular
    task:
      id: b9f96cd5-1144-4436-8293-2053e587d698
      version: -1
      name: Update the user that the email is a malicious campaign
      description: Sends an email to the user explaining that the email they reported
        is malicious.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is part of a bigger phishing campaign that targeted our company. No further action is required on your part. Good job on detecting and forwarding it to us!

          All the best,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 580,
          "y": 3620
        }
      }
    note: false
    timertriggers:
    - fieldname: detectionsla
      action: stop
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "151":
    id: "151"
    taskid: 029871a7-8d95-409c-80d7-6ccef105a1ba
    type: condition
    task:
      id: 029871a7-8d95-409c-80d7-6ccef105a1ba
      version: -1
      name: Can the user be informed about the verdict?
      description: Checks whether the user can be informed about the verdict of the
        incident.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "Yes":
      - "16"
    separatecontext: false
    conditions:
    - label: "Yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: ReporterAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 3410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "152":
    id: "152"
    taskid: 2df11a6c-171a-4837-8bdf-c2bb88d2174f
    type: regular
    task:
      id: 2df11a6c-171a-4837-8bdf-c2bb88d2174f
      version: -1
      name: Clear previously extracted emails
      description: Clears the previously extracted reporter email address from the
        context, so that the phishing sender can be extracted and stored in the same
        key.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "138"
    scriptarguments:
      all:
        simple: "no"
      key:
        simple: ExtractedIndicators
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "137_135_yes": 0.54,
      "145_11_#default#": 0.15,
      "147_144_Manually": 0.52,
      "149_148_yes - phishing": 0.66,
      "149_27_#default#": 0.21,
      "151_8_#default#": 0.11,
      "15_31_#default#": 0.6,
      "33_149_yes": 0.18,
      "36_43_#default#": 0.27,
      "37_43_#default#": 0.12,
      "37_91_yes": 0.57,
      "79_84_#default#": 0.3,
      "90_84_#default#": 0.39,
      "90_89_yes": 0.48
    },
    "paper": {
      "dimensions": {
        "height": 6300,
        "width": 3212.5,
        "x": -1832.5,
        "y": -690
      }
    }
  }
inputs:
- key: Role
  value:
    simple: Administrator
  required: true
  description: The default role to assign the incident to.
  playbookInputQuery:
- key: SearchAndDelete
  value:
    simple: "False"
  required: false
  description: |-
    Enables the Search and Delete capability.
    For a malicious email, the "Search and Delete" sub-playbook looks for other instances of the email and deletes them pending analyst approval.
  playbookInputQuery:
- key: BlockIndicators
  value:
    simple: "False"
  required: false
  description: |-
    Enables the Block Indicators capability.
    For a malicious email, the "Block Indicators" sub-playbook blocks all malicious indicators in the relevant integrations.
  playbookInputQuery:
- key: AuthenticateEmail
  value:
    simple: "True"
  required: false
  description: Determines whether the authenticity of the email should be verified
    using SPF, DKIM, and DMARC.
  playbookInputQuery:
- key: OnCall
  value:
    simple: "False"
  required: false
  description: Set to True to assign only the user that is currently on shift.
  playbookInputQuery:
- key: SearchAndDeleteIntegration
  value:
    simple: EWS
  required: false
  description: |-
    Determines which product and playbook is used to search and delete the phishing email from user inboxes.
      - Set this to "O365" to use the "O365 - Security And Compliance - Search And Delete" playbook.
      - Set this to "EWS" to use the "Search And Delete Emails - EWS" playbook.
      - Set this to "Gmail" to use the "Search And Delete - Gmail" playbook.
  playbookInputQuery:
- key: O365DeleteType
  value:
    simple: Soft
  required: false
  description: |-
    Sets the method to delete emails in the "O365 - Security And Compliance - Search And Delete" playbook. Can be "Soft" (recoverable), or "Hard" (unrecoverable). Leave empty to decide manually for each email incident.
    This is only applicable if the SearchAndDeleteIntegration input is set to "O365".
  playbookInputQuery:
- key: O365ExchangeLocation
  value:
    complex:
      root: incident
      accessor: emailto
  required: false
  description: The exchange location. Determines from where to search and delete emails
    using O365 playbooks. Use the value "All" to search all mailboxes, or use ${incident.emailto}
    to search and delete the email only from the recipient's inbox. Note - Searching
    all mailboxes may take a significant amount of time. - This input is used only
    when searching and deleting emails in O365 and only applies if the SearchAndDeleteIntegration
    input is set to O365.
  playbookInputQuery:
- key: O365AllowNotFoundSearchLocations
  value:
    simple: "False"
  required: false
  description: Used only when searching and deleting emails in O365. Determines whether
    to include mailboxes other than regular user mailboxes in the compliance search.
  playbookInputQuery:
- key: O365ExchangeLocationExclusion
  value: {}
  required: false
  description: Used only when searching and deleting emails in O365. A comma-separated
    list of mailboxes/distribution groups to exclude when you use the value "All"
    for the O365ExchangeLocation input.
  playbookInputQuery:
- key: CheckMicrosoftHeaders
  value:
    simple: "True"
  required: false
  description: Whether to check Microsoft headers for BCL/PCL/SCL scores and set the
    "Severity" and "Email Classification" accordingly.
  playbookInputQuery:
- key: InternalDomains
  value: {}
  required: false
  description: A CSV list of internal domains. The list is used to determine whether
    an email address is internal or external.
  playbookInputQuery:
- key: DetonateURL
  value:
    simple: "False"
  required: false
  description: Determines whether to use the "URL Detonation" playbook. Detonating
    a URL may take a few minutes.
  playbookInputQuery:
- key: InternalRange
  value: {}
  required: false
  description: |-
    This input is used in the "Entity Enrichment - Phishing v2" playbook.
    A list of internal IP ranges to check IP addresses against. The list should be provided in CIDR notation, separated by commas. An example of a list of ranges is: "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes). If a list is not provided, uses the default list provided in the IsIPInRanges script (the known IPv4 private address ranges).
  playbookInputQuery:
- key: PhishingModelName
  value:
    simple: phishing_model
  required: false
  description: Optional - the name of a pre-trained phishing model to predict phishing
    type using machine learning.
  playbookInputQuery:
- key: GetOriginalEmail
  value: {}
  required: false
  description: |-
    For forwarded emails. When "True", retrieves the original email in the thread.

    You must have the necessary permissions in your email service to execute global search.

    - For EWS: eDiscovery
    - For Gmail: Google Apps Domain-Wide Delegation of Authority
    - For MSGraph: As described in these links
    https://docs.microsoft.com/en-us/graph/api/message-get
    https://docs.microsoft.com/en-us/graph/api/user-list-messages
  playbookInputQuery:
- key: DBotPredictURLPhishingURLsNumber
  value:
    simple: "3"
  required: false
  description: |-
    The number of URLs to extract from the email HTML and analyze in the "DBotPredictURLPhishing" automation.
    This automation runs several checks to determine the score of the URLs found in the email, sets a verdict for URLs found as "Suspicious" or "Malicious", and adds these URLs as indicators. Based on the verdict, the incident severity is set (Medium for "Suspicious" and High for "Malicious").
    Note:
    - You need to install the "Phishing URL" pack to use this automation.
    - False/True positives are possible.
    - This automation may take a few minutes to run.
    - To increase result accuracy, it is recommended to install and enable the "Whois" pack (optional).
  playbookInputQuery:
- key: EmailFileToExtract
  value:
    simple: Inner file
  required: false
  description: |-
    Reported emails and emails retrieved during playbook execution can contain multiple nested email files. For example, an EML nested inside another EML file.
    If multiple level files are detected, this field determines which file represents the phishing email.
    
    For example:
    User1 receives an email from Attacker. User1 attaches the email as an EML file and sends the email to User2.
    User2 also attaches that email as a file, and reports it as phishing. In this case, the phishing email would be the "inner file" (as opposed to "outer file").
    
    Possible values are: Inner file, Outer file, All files.
    Inner file: The file at the deepest level is parsed. If there is only one file, that file is parsed.
    Outer file: The file at the first level is parsed.
    All files: All files are parsed. Do not use this option in the phishing playbook, as there should only be one phishing email per playbook run.
  playbookInputQuery:
outputs: []
tests:
- Phishing v2 - Test - Incident Starter
fromversion: 6.1.0
contentitemexportablefields:
  contentitemfields: {}
system: true
