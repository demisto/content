commonfields:
  id: ContextGetIps
  version: -1
name: ContextGetIps
script: >+
  var excludedIps;

  if (args.excludedIps) {
      excludedIps = args.excludedIps.split(',');
  }

  var flat = {};

  var res = [];

  var currentValue;

  flattenFields(invContext,undefined,flat);

  keysArr = Object.keys(flat);

  for (var i = 0; i < keysArr.length; i++) {
      currentValue=flat[keysArr[i]];
      if (ipRegex.test(currentValue) && res.indexOf(currentValue) === -1) {
          if (excludedIps) {
              if (excludedIps.indexOf(currentValue) === -1) {
                  res.push(currentValue);
              }
          } else {
              res.push(currentValue);
          }
      }
  }


  var md = '### IP addresses in context\n';

  for (var i = 0; i<res.length; i++) {
      md += '- ' + res[i] + '\n';
  }

  return {
          Type: entryTypes.note,
          Contents: res,
          ContentsFormat: formats.json,
          HumanReadable: md
          };

type: javascript
tags: []
comment: Gets all IP addresses in context, excluding ones given.
enabled: true
args:
- name: excludedIps
  description: IP addresses to exclude (separated by commas)
scripttarget: 0
fromversion: 5.0.0
