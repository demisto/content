commonfields:
  id: WhereFieldEquals
  version: -1
name: WhereFieldEquals
toversion: 5.4.9
script: >+
  var value = args.value;

  var field = args.field;

  var equalTo = args.equalTo;

  var getField = args.getField;


  if (!Array.isArray(value)) {
      value = [value];
  }


  var res = value.filter(function(item) {
     return item && item[field] == equalTo; // using '==' and not '===' to handle number equality better
  });


  if (getField) {
      if (typeof getField !== 'string') {
          logInfo('WhereFieldEquals - got invalid getField [' + getField + ']. Ignoring');
      } else {
           res = res.map(function(item) { return item[getField]});
      }
  }


  return res;

type: javascript
tags:
- transformer
- general
- entirelist
comment: "Return all items from the list where their given 'field' attribute is equal to 'equalTo' argument\n\nE.g. !WhereFieldEquals with the following arguments:\n - value=[{ name: '192.1,0.82', type: 'IP' }, {  name: 'myFile.txt, type: 'File'  }, { name: '172.0.0.2', type: 'IP' }]\n - field='type'\n - equalTo='IP'\n - getField='name' \n\nWill return all items names where field 'type' equals 'IP' - ['192.1,0.82', '172.0.0.2']"
enabled: true
args:
- name: value
  required: true
  default: true
  description: List to apply the transformer on
- name: field
  required: true
  description: Attribute in the collection's items check equality against 'equalTo'
- name: equalTo
  required: true
  description: Value to filter all items in the collection
- name: getField
  description: Optional - field to extract from each item
scripttarget: 0
runonce: false
fromversion: 5.0.0
