{"scripts":[{"id":"AddDBotScoreToContext","version":6,"name":"AddDBotScoreToContext","type":"python","tags":[],"contextKeys":[],"comment":"Add DBot score to context for indicators with custom vendor, score, reliability, and type.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.20070","modified":"2021-09-07T09:21:43.713076+03:00","scriptTarget":0,"arguments":[{"name":"indicator","required":true,"deprecated":false,"default":false,"secret":false,"description":"The indicator value (ex 1.1.1.1)"},{"name":"indicatorType","required":true,"deprecated":false,"default":false,"secret":false,"description":"The indicator type (ex ip, url, email, domain)"},{"name":"score","required":true,"deprecated":false,"default":false,"secret":false,"description":"The indicator score"},{"name":"vendor","required":true,"deprecated":false,"default":false,"secret":false,"description":"The vendor to assign to this DBotScoreEntry"},{"name":"reliability","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["A+ - 3rd party enrichment","A - Completely reliable","B - Usually reliable","C - Fairly reliable","D - Not usually reliable","E - Unreliable","F - Reliability cannot be judged"],"description":"The reputation reliability"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"AddEvidence","version":7,"name":"AddEvidence","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Adds provided entries to the incident Evidence Board. In playbook, can be positioned after a task to add the previous task's entries to Evidence Board automatically (with no need to provide arguments)\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717091+03:00","scriptTarget":0,"arguments":[{"name":"entryIDs","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry IDs to add its output to Evidence Board","defaultValue":"${lastCompletedTaskEntries}"},{"name":"desc","required":false,"deprecated":true,"default":false,"secret":false,"description":"Description to add to Evidence Board"},{"name":"description","required":false,"deprecated":false,"default":false,"secret":false,"description":"Description to add to Evidence Board"},{"name":"occurred","required":false,"deprecated":false,"default":false,"secret":false,"description":"Occurred time of the evidence (time format: 2008-01-02T15:04:05)"},{"name":"tags","required":false,"deprecated":false,"default":false,"secret":false,"description":"Evidence tags"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"AddKeyToList","version":7,"name":"AddKeyToList","type":"python","tags":[],"contextKeys":[],"comment":"Adds/Replaces a key in key/value store backed by an XSOAR list.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.71531+03:00","scriptTarget":0,"arguments":[{"name":"listName","required":true,"deprecated":false,"default":false,"secret":false,"description":"List name."},{"name":"keyName","required":true,"deprecated":false,"default":false,"secret":false,"description":"Key."},{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Key Value."},{"name":"append","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Append to key.","defaultValue":"false"},{"name":"allowDups","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Allow duplicates in array keys.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ADGetUser","version":4,"name":"ADGetUser","type":"python","tags":["active directory","enhancement","username"],"contextKeys":[],"comment":"Use Active Directory to retrieve detailed information about a user account. The user can be specified by name, email or as an Active Directory Distinguished Name (DN).\nIf no filter is provided, the result will show all users.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.027242+03:00","scriptTarget":0,"arguments":[{"name":"dn","required":false,"deprecated":false,"default":true,"secret":false,"description":"Active Directory Distinguished Name for the desired user"},{"name":"name","required":false,"deprecated":false,"default":false,"secret":false,"description":"Name of the desired user"},{"name":"attributes","required":false,"deprecated":false,"default":false,"secret":false,"description":"Include these AD attributes of the resulting objects in addition to the default ones"},{"name":"customFieldType","required":false,"deprecated":false,"default":false,"secret":false,"description":"Search user by this custom field type"},{"name":"customFieldData","required":false,"deprecated":false,"default":false,"secret":false,"description":"Search user by this custom field data (relevant only if `customFieldType` is provided)"},{"name":"headers","required":false,"deprecated":false,"default":false,"secret":false,"description":"The columns headers to show by order"},{"name":"nestedSearch","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":" Enter 'true' to allow nested groups search as well"},{"name":"username","required":false,"deprecated":false,"default":false,"secret":false,"description":"samAccountName of the desire user"},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of objects to return (default is 20)"},{"name":"email","required":false,"deprecated":false,"default":false,"secret":false,"description":"mail attribute of desire user"},{"name":"userAccountControlOut","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Include verbose translation for UserAccountControl flags"},{"name":"using","required":false,"deprecated":false,"default":false,"secret":false,"description":"Select instance name"}],"dependsOn":{"must":["activedir|||ad-search"]},"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Account","description":"Active Directory Account","type":""},{"contentPath":"","contextPath":"Account.Type","description":"Type of the Account entity","type":"string"},{"contentPath":"","contextPath":"Account.ID","description":"The unique Account DN (Distinguished Name)","type":"string"},{"contentPath":"","contextPath":"Account.Username","description":"The Account username","type":"string"},{"contentPath":"","contextPath":"Account.Email","description":"The email object associated with the Account","type":""},{"contentPath":"","contextPath":"Account.Groups","description":"The groups the Account is part of","type":"string"},{"contentPath":"","contextPath":"Account.DisplayName","description":"The Account display name","type":"string"},{"contentPath":"","contextPath":"Account.Manager","description":"The Account's manager","type":"string"},{"contentPath":"","contextPath":"Account.Email.Address","description":"The email address object associated with the Account","type":"string"},{"contentPath":"","contextPath":"DBotScore.Indicator","description":"The indicator value","type":"string"},{"contentPath":"","contextPath":"DBotScore.Type","description":"The indicator's type","type":"string"},{"contentPath":"","contextPath":"DBotScore.Vendor","description":"The indicator's vendor","type":"string"},{"contentPath":"","contextPath":"DBotScore.Score","description":"The indicator's score","type":"number"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"AfterRelativeDate","version":7,"name":"AfterRelativeDate","type":"python","tags":["date","filter","Condition"],"contextKeys":[],"comment":"Checks the given datetime has occured after the provided relative time.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.12176","modified":"2021-09-07T09:21:43.718591+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"Date value to check - Can be any non-timezone aware time format. ex. \"2020-01-01T00:00:00\""},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"Relative time ex. \"6 months ago\""}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"AreValuesEqual","version":7,"name":"AreValuesEqual","type":"javascript","tags":["Utility","Condition"],"contextKeys":["AreValuesEqual"],"comment":"Check whether the values provided in arguments are equal. If either of the arguments are missing, no is returned.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713424+03:00","scriptTarget":0,"arguments":[{"name":"left","required":false,"deprecated":false,"default":true,"secret":false,"description":"First value for comparison"},{"name":"right","required":false,"deprecated":false,"default":false,"secret":false,"description":"Second value for comparison"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if left is equal to right","type":""},{"contentPath":"","contextPath":"no","description":"if left is not equal to right","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"AssignAnalystToIncident","version":7,"name":"AssignAnalystToIncident","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Assign analyst to incident.\nBy default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).\nOtherwise, the analyst will be picked according to the 'assignBy' arguments.\nmachine-learning: DBot will calculated and decide who is the best analyst for the job.\ntop-user: The user that is most commonly owns this type of incident\nless-busy-user: The less busy analyst will be picked to be the incident owner.\nonline: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).\ncurrent: The user that executed the command","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71281+03:00","scriptTarget":0,"arguments":[{"name":"roles","required":false,"deprecated":false,"default":true,"secret":false,"description":"The optional list of roles we want to assign users from. Can accept arrays or comma separated list. Leave empty to fetch all users."},{"name":"assignBy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["random","machine-learning","top-user","less-busy-user","online","current"],"description":"(default: random) You can pick how to assign the owner - by random, online, current, machine-learning, top-user or less-busy-user."},{"name":"username","required":false,"deprecated":false,"default":false,"secret":false,"description":"When specified, the provided user will be assigned as the incident owner (optional)."},{"name":"email","required":false,"deprecated":false,"default":false,"secret":false,"description":"When specified, the user of provided email will be assigned as the incident owner (optional)"},{"name":"onCall","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Set to true to assign only user that is currently on shift. Requires Cortex XSOAR v5.5 or later.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"Base64Decode","version":7,"name":"Base64Decode","type":"python","tags":["Utility","transformer","string"],"contextKeys":[],"comment":"Decodes an input in Base64 format.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.712+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The value to decode in Base64 format."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Base64.decoded","description":"The decoded output in Base64 format.","type":"string"},{"contentPath":"","contextPath":"Base64.originalValue","description":"The passed value that was decoded.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Base64Encode","version":7,"name":"Base64Encode","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Will encode an input using Base64 format.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714498+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":true,"secret":false,"description":"to encode in Base64 format"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Base64.encoded","description":"input encoded as Base64 format","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Base64EncodeV2","version":7,"name":"Base64EncodeV2","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Encodes an input to Base64 format.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.15759","modified":"2021-09-07T09:21:43.720099+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input to encode using Base64 format."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Base64.encoded","description":"The input encoded as Base64 format.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Base64ListToFile","version":7,"name":"Base64ListToFile","type":"python","tags":["list","Utility"],"contextKeys":[],"comment":"Converts Base64 file in a list to a binary file and upload to warroom","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.713799+03:00","scriptTarget":0,"arguments":[{"name":"listname","required":true,"deprecated":false,"default":false,"secret":false,"description":"List Name of Base64 item (need to be a single file in list)"},{"name":"filename","required":false,"deprecated":false,"default":false,"secret":false,"description":"Optional Warroom Output Filename (default filename is list name)"},{"name":"isZipFile","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Is data compressed (zip format)?","defaultValue":"no"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"File.Name","description":"Filename (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.Type","description":"File type e.g. \"PE\" (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.Size","description":"File size (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.MD5","description":"MD5 hash of the file (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.SHA1","description":"SHA1 hash of the file (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.SHA256","description":"SHA256 hash of the file (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.EntryID","description":"EntryID of the file (only in case of report type=json)","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"BetweenDates","version":7,"name":"BetweenDates","type":"python","tags":["transformer","date"],"contextKeys":[],"comment":"Whether value is within a date range.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.2.6981","modified":"2021-09-07T09:21:43.710752+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Value to check"},{"name":"begin_date","required":true,"deprecated":false,"default":false,"secret":false,"description":"Lower date range"},{"name":"end_date","required":true,"deprecated":false,"default":false,"secret":false,"description":"Upper date range"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"BetweenHours","version":7,"name":"BetweenHours","type":"python","tags":["transformer","date"],"contextKeys":[],"comment":"Checks whether the given value is within the specified time (hour) range.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.2.6981","modified":"2021-09-07T09:21:43.713391+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to check."},{"name":"begin_time","required":true,"deprecated":false,"default":false,"secret":false,"description":"The start time range in the format HH:MM:SS."},{"name":"end_time","required":true,"deprecated":false,"default":false,"secret":false,"description":"The end time range in the format HH:MM:SS."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"BinarySearchPy","version":7,"name":"BinarySearchPy","type":"python","tags":["hash","server","endpoint","carbon-black"],"contextKeys":[],"comment":"Search for a binary on an endpoint using Carbon Black","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711369+03:00","scriptTarget":0,"arguments":null,"dependsOn":{"must":["cb-process"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CalculateEntropy","version":7,"name":"CalculateEntropy","type":"python","tags":["entropy"],"contextKeys":[],"comment":"Calculates the entropy for the given data.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.9324","modified":"2021-09-07T09:21:43.719034+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The data for which to calculate entropy."},{"name":"minimum_entropy","required":false,"deprecated":false,"default":false,"secret":false,"description":"The minimum entropy value. Default is 0.","defaultValue":"0"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"EntropyResult.checked_value","description":"The given value (data).","type":"String"},{"contentPath":"","contextPath":"EntropyResult.entropy","description":"The entropy score.","type":"Number"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CalculateTimeDifference","version":7,"name":"CalculateTimeDifference","type":"python","tags":["Utilities"],"contextKeys":[],"comment":"Calculate the time difference, in minutes","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712396+03:00","scriptTarget":0,"arguments":[{"name":"start_time","required":true,"deprecated":false,"default":false,"secret":false,"description":"The time at which travel started."},{"name":"end_time","required":true,"deprecated":false,"default":false,"secret":false,"description":"The time at which travel ended."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Time.Difference","description":"Calculated time difference in minutes.","type":""},{"contentPath":"","contextPath":"Time.Start","description":"Start time.","type":""},{"contentPath":"","contextPath":"Time.End","description":"End time.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CEFParser","version":7,"name":"CEFParser","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Parse CEF data into the context. Please notice that outputs will display only the 7 mandatory fields even if the CEF event includes many other custom or extended fields.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713246+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The data that contains the CEF rows"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"CEFEvent.cefVersion","description":"The CEF version","type":""},{"contentPath":"","contextPath":"CEFEvent.vendor","description":"The product vendor","type":""},{"contentPath":"","contextPath":"CEFEvent.product","description":"The product name","type":""},{"contentPath":"","contextPath":"CEFEvent.version","description":"The product version","type":""},{"contentPath":"","contextPath":"CEFEvent.signatureID","description":"The signature ID for the alert, if relevant","type":""},{"contentPath":"","contextPath":"CEFEvent.name","description":"The alert name","type":""},{"contentPath":"","contextPath":"CEFEvent.severity","description":"The alert severity","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ChangeContext","version":7,"name":"ChangeContext","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Enables changing context in two ways. The first is to capitalize the first letter of each key in following level of the context key entered. The second is to change context keys to new values. ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.2.6981","modified":"2021-09-07T09:21:43.717736+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context to change (i.e., ${Context.Key})."},{"name":"inplace","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If \"True\" replaces the existing key. The default is \"True\".","defaultValue":"True"},{"name":"replace_dict","required":false,"deprecated":false,"default":false,"secret":false,"description":"A list of key-values to replace key for value in the following format: {\"old_key1\":\"new_key1\", \"old_key2\":\"new_key2\"}"},{"name":"capitalize","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If \"True\" capitalizes the first letter of the context key.","defaultValue":"False"},{"name":"output_key","required":true,"deprecated":false,"default":false,"secret":false,"description":"The context path in which to output the results. Should be in the format of Context.Key."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ChangeRemediationSLAOnSevChange","version":7,"name":"ChangeRemediationSLAOnSevChange","type":"python","tags":["field-change-triggered","example"],"contextKeys":[],"comment":"Changes the remediation SLA once a change in incident severity occurs.\nThis is done automatically and the changes can be configured to your needs.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711584+03:00","scriptTarget":0,"arguments":[{"name":"old","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Low","Medium","High","Critical"],"description":"The old value of the field that was changed."},{"name":"new","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Low","Medium","High","Critical"],"description":"The new value of the field that was changed."}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CheckContextValue","version":7,"name":"CheckContextValue","type":"python","tags":["evaluation","polling"],"contextKeys":[],"comment":"This script checks that a context key exists (and contains data), and optionally checks the value of the context key for a match against an input value. If a regex is not supplied, the script checks that the key is not empty. This script can be used with the \"GenericPolling\" playbook to poll for field population or that a field contains a specific value. This scripts does not support a context key which holds a list of values.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.15759","modified":"2021-09-07T09:21:43.712769+03:00","scriptTarget":0,"arguments":[{"name":"key","required":true,"deprecated":false,"default":false,"secret":false,"description":"The context key to check (can contain \".\", e.g: My.Context.Path)"},{"name":"regex","required":false,"deprecated":false,"default":false,"secret":false,"description":"The regex pattern to check the field for (optional)."},{"name":"ignore_case","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether character matching will be case-insensitive.","defaultValue":"False"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"CheckContextKey.name","description":"Key Name","type":"string"},{"contentPath":"","contextPath":"CheckContextKey.exists","description":"Whether the Key Exists.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CheckDockerImageAvailable","version":6,"name":"CheckDockerImageAvailable","type":"python","tags":[],"contextKeys":[],"comment":"Check if a docker image is available for performing docker pull. Script simulates the docker pull flow but doesn't actually pull the image. Returns an entry with 'ok' if all is good otherwise will return an error.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.028201+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"Docker image full name with version: For example: demisto/python:2.7.15.155"},{"name":"use_system_proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Use system proxy settings","defaultValue":"yes"},{"name":"trust_any_certificate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Trust any certificate (not secure)","defaultValue":"no"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CheckEmailAuthenticity","version":3,"name":"CheckEmailAuthenticity","type":"python","tags":["phishing","ews","email"],"contextKeys":[],"comment":"Checks the authenticity of an email based on the email's SPF, DMARC, and DKIM.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-28T19:58:23.722297+03:00","scriptTarget":0,"arguments":[{"name":"headers","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["admin"],"description":"A list of dictionaries of headers in the form of \"Header name\":\"Header value\".","isArray":true},{"name":"SPF_override_none","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=None."},{"name":"SPF_override_neutral","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=neutral."},{"name":"SPF_override_pass","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=pass."},{"name":"SPF_override_fail","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Suspicious","Undetermined","Pass"],"description":"Override value for SPF=fail."},{"name":"SPF_override_softfail","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=softfail."},{"name":"SPF_override_temperror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=temperror."},{"name":"SPF_override_permerror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for SPF=permerror. "},{"name":"DKIM_override_none","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=none."},{"name":"DKIM_override_pass","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=pass."},{"name":"DKIM_override_fail","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=fail."},{"name":"DKIM_override_policy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=policy."},{"name":"DKIM_override_neutral","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=neutral."},{"name":"DKIM_override_temperror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=temperror."},{"name":"DKIM_override_permerror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DKIM=permerror."},{"name":"DMARC_override_none","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DMARC=none."},{"name":"DMARC_override_pass","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DMARC=pass."},{"name":"DMARC_override_fail","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DMARC=fail."},{"name":"DMARC_override_temperror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DMARC=temperror."},{"name":"DMARC_override_permerror","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Fail","Suspicious","Undetermined","Pass"],"description":"Override value for DMARC=permerror."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Email.SPF.MessageID","description":"SPF ID","type":"String"},{"contentPath":"","contextPath":"Email.SPF.Validation-Result","description":"Validation Result. Possible values are \"None\", \"Neutral\", \"Pass\", \"Fail\", \"SoftFail\", \"TempError\", and \"PermError\". ","type":"String"},{"contentPath":"","contextPath":"Email.SPF.Reason","description":"Reason for the SPF result, which is located in the headers of the email.","type":"String"},{"contentPath":"","contextPath":"Email.SPF.Sender-IP","description":"Email sender IP address.","type":"String"},{"contentPath":"","contextPath":"Email.DKIM.Message-ID","description":"DKIM ID.","type":"String"},{"contentPath":"","contextPath":"Email.DKIM.Reason","description":"DKIM reason (if found).","type":"String"},{"contentPath":"","contextPath":"Email.DMARC.Message-ID","description":"DMARC ID.","type":"String"},{"contentPath":"","contextPath":"Email.DMARC.Validation-Result","description":"DMARC reason. Possible values are \"None\", \"Pass\", \"Fail\", \"Temperror\", and \"Permerror\".","type":"String"},{"contentPath":"","contextPath":"Email.DMARC.Tags","description":"DMARC Tags (if found)","type":"String"},{"contentPath":"","contextPath":"Email.DMARC.From-Domain","description":"Sender's Domain","type":"String"},{"contentPath":"","contextPath":"Email.DKIM.Signing-Domain","description":"Sender's Domain","type":"String"},{"contentPath":"","contextPath":"Email.AuthenticityCheck","description":"Possible values are be: Fail / Suspicious / Undetermined / Pass","type":"Unknown"},{"contentPath":"","contextPath":"Email.DKIM","description":"DKIM information extracted from the email.","type":"Unknown"},{"contentPath":"","contextPath":"Email.SPF","description":"SPF information extracted from the email.","type":"Unknown"},{"contentPath":"","contextPath":"Email.DMARC","description":"DMARC information extracted from the email.","type":"Unknown"},{"contentPath":"","contextPath":"Email.DKIM.Validation-Result","description":"Validation result. Possible values are \"None\", \"Pass\", \"Fail\", \"Policy\", \"Neutral\", \"Temperror\", and \"Permerror\".","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CheckFieldValue","version":7,"name":"CheckFieldValue","type":"python","tags":["evaluation","polling"],"contextKeys":[],"comment":"This script checks that a field exists (and contains data), and optionally checks the value of the field for a match against an input value. If a regex is not supplied, the script checks that the field is not empty. This script can be used with the \"GenericPolling\" playbook to poll for field population or that a field contains a specific value.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.15759","modified":"2021-09-07T09:21:43.711189+03:00","scriptTarget":0,"arguments":[{"name":"field","required":true,"deprecated":false,"default":false,"secret":false,"description":"The field to check"},{"name":"regex","required":false,"deprecated":false,"default":false,"secret":false,"description":"The regex pattern to check the field for (optional)."},{"name":"ignore_case","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether character matching will be case-insensitive. Default is \"False\".","defaultValue":"False"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"CheckFieldValue.name","description":"Field Name","type":"string"},{"contentPath":"","contextPath":"CheckFieldValue.exists","description":"Whether the field Exists.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CheckSenderDomainDistance","version":7,"name":"CheckSenderDomainDistance","type":"python","tags":["server","phishing","Condition"],"contextKeys":[],"comment":"Get the string distance for the sender from our domain","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711436+03:00","scriptTarget":0,"arguments":[{"name":"domain","required":true,"deprecated":false,"default":true,"secret":false,"description":"The domain to be measured against the domain in the sender's email address.Usually the domain used by the company for email, e.g. acme.com when users are assigned jane@acme.com (could be multiple domains with a comma separator)"},{"name":"sender","required":true,"deprecated":false,"default":false,"secret":false,"description":"Sender email address"},{"name":"distance","required":false,"deprecated":false,"default":false,"secret":false,"description":"Distance that is considered close","defaultValue":"3"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"LevenshteinDistance","description":"The closeness of the sender domain to our configured domains","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"checkValue","version":7,"name":"checkValue","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Gets a value and return it. This is to be used in playbook conditional tasks - get a value from incident field, label or context, and act accordingly. \nIf an array is returned. the first value will be the decision making value.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.720345+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":true,"secret":false,"description":"Value to check"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CloseInvestigationAsDuplicate","version":7,"name":"CloseInvestigationAsDuplicate","type":"python","tags":["dedup"],"contextKeys":[],"comment":"Close the current investigation as duplicate to other investigation.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.718168+03:00","scriptTarget":0,"arguments":[{"name":"duplicateId","required":true,"deprecated":false,"default":false,"secret":false,"description":"Duplicate incident id"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"commentsToContext","version":7,"name":"commentsToContext","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Takes the comments of a given entry ID and stores them in the incident context, under a provided context key. \nFor accessing the last executed task's comments, provide ${lastCompletedTaskEntries.[0]} as the value for the entryId input parameter.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715445+03:00","scriptTarget":0,"arguments":[{"name":"entryId","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID to get the comments from"},{"name":"contextKey","required":true,"deprecated":false,"default":false,"secret":false,"description":"Context key to store comments into"},{"name":"listSeperator","required":false,"deprecated":false,"default":false,"secret":false,"description":"If value is list - provide list seperator"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonServer","version":6,"name":"CommonServer","type":"javascript","tags":["infra","server"],"contextKeys":[],"comment":"Common code that will be merged into each server script when it runs","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-05T10:48:02.696287+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonServerPowerShell","version":6,"name":"CommonServerPowerShell","type":"powershell","tags":["infra","server"],"contextKeys":[],"comment":"Common code that will be merged into each PowerShell script/integration when it runs","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/powershell:7.1.3.22028","modified":"2021-09-05T10:48:02.696231+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonServerPython","version":6,"name":"CommonServerPython","type":"python","tags":["infra","server"],"contextKeys":[],"comment":"Common code that will be merged into each server script when it runs.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.24019","modified":"2021-09-05T10:48:02.696104+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonServerUserPowerShell","version":1,"name":"CommonServerUserPowerShell","type":"powershell","tags":["infra","server"],"contextKeys":[],"comment":"Common user defined code that will be merged into each server script when it runs","enabled":false,"system":false,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T18:47:05.770876+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonServerUserPython","version":1,"name":"CommonServerUserPython","type":"python","tags":["infra","server"],"contextKeys":[],"comment":"Common user defined code that will be merged into each server script when it runs","enabled":false,"system":false,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T18:47:05.562509+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CommonUserServer","version":1,"name":"CommonUserServer","type":"javascript","tags":["infra","server"],"contextKeys":[],"comment":"Common user defined code that will be merged into each server script when it runs","enabled":false,"system":false,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T18:47:05.32735+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CompareIncidentsLabels","version":7,"name":"CompareIncidentsLabels","type":"python","tags":["incidents"],"contextKeys":[],"comment":"Compares the labels of two incidents. Returns the labels that are unique to each incident.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.710855+03:00","scriptTarget":0,"arguments":[{"name":"incident_id_1","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident ID of the first incident."},{"name":"incident_id_2","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident ID of the second incident."}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CompareLists","version":7,"name":"CompareLists","type":"python","tags":[],"contextKeys":[],"comment":"Compare  two lists and put the differences in context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.8715","modified":"2021-09-07T09:21:43.719586+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"Left list","isArray":true},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"Right list","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ListCompare.LeftOnly","description":"Items only found within the list in the left argument","type":""},{"contentPath":"","contextPath":"ListCompare.RightOnly","description":"Items only found within the list in the right argument","type":""},{"contentPath":"","contextPath":"ListCompare.Both","description":"Common items that were found in both lists","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ContainsCreditCardInfo","version":7,"name":"ContainsCreditCardInfo","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Check if a given value is true. Will return 'no' otherwise","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713913+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The data to check for credit card info in, type string","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if value is True (either has object or string True/true)","type":""},{"contentPath":"","contextPath":"no","description":"if  value is not True (either has object or string True/true)","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextContains","version":7,"name":"ContextContains","type":"python","tags":[],"contextKeys":[],"comment":"This script searches for a value in a context path.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711089+03:00","scriptTarget":0,"arguments":[{"name":"path","required":false,"deprecated":false,"default":false,"secret":false,"description":"Path in the context"},{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Value to search"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextFilter","version":7,"name":"ContextFilter","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Filter context keys by applying one of the various available manipulations and storing in a new context key. Please notice that the resulting context key will not be available automatically as an option but you can still specify it.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711473+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The data to apply the filter on","isArray":true},{"name":"filterType","required":true,"deprecated":false,"default":false,"secret":false,"description":"The type of filter to apply. Available filters are upper, lower, join, split, index, substr, trim, regex, replace"},{"name":"filter","required":false,"deprecated":false,"default":false,"secret":false,"description":"The data for the filter. join - the join string between elements (optional, default is ','). split - the string on which to split (optional, default is ','). index - the index of the array to return (optional, default 0). substr - the from (inclusive) and length (optional, default is to end of string). regex - the regular expression to match. replace - a regular expression to replace and with what."},{"name":"out","required":true,"deprecated":false,"default":false,"secret":false,"description":"The name of the context output parameter we should write to"},{"name":"additional","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional arguments to add to filter. flags for regex. flags, replace string for replace. length for substr."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextGetEmails","version":7,"name":"ContextGetEmails","type":"javascript","tags":[],"contextKeys":[],"comment":"Gets all email addresses in context, excluding ones given.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711299+03:00","scriptTarget":0,"arguments":[{"name":"excludedEmails","required":false,"deprecated":false,"default":false,"secret":false,"description":"Email addresses to exclude (separated by commas)","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextGetHashes","version":7,"name":"ContextGetHashes","type":"javascript","tags":[],"contextKeys":[],"comment":"Gets hashes (MD5,SHA1,SHA256) from context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714806+03:00","scriptTarget":0,"arguments":[{"name":"hash","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["MD5","SHA1","SHA256","all"],"description":"Type of hash to get (MD5,SHA1,SHA256,all)","defaultValue":"all"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextGetIps","version":7,"name":"ContextGetIps","type":"javascript","tags":[],"contextKeys":[],"comment":"Gets all IP addresses in context, excluding ones given.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714936+03:00","scriptTarget":0,"arguments":[{"name":"excludedIps","required":false,"deprecated":false,"default":false,"secret":false,"description":"IP addresses to exclude (separated by commas)"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextGetPathForString","version":7,"name":"ContextGetPathForString","type":"javascript","tags":[],"contextKeys":[],"comment":"Searches for string in context and returns context path, returns null if not found.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715684+03:00","scriptTarget":0,"arguments":[{"name":"path","required":false,"deprecated":false,"default":false,"secret":false,"description":"Path in context to search the string in. If path is not given, search will be in the whole context."},{"name":"str","required":true,"deprecated":false,"default":false,"secret":false,"description":"String to search for in context"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ContextSearchForString","version":7,"name":"ContextSearchForString","type":"javascript","tags":[],"contextKeys":[],"comment":"Searches for string in a path in context. If path is null, string will be searched in full context.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.720485+03:00","scriptTarget":0,"arguments":[{"name":"path","required":false,"deprecated":false,"default":false,"secret":false,"description":"Path in context to search the string in"},{"name":"str","required":true,"deprecated":false,"default":false,"secret":false,"description":"String to search for in context"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"true","description":"if given string exists in context","type":""},{"contentPath":"","contextPath":"false","description":"if given string does not exist in context","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertAllExcept","version":7,"name":"ConvertAllExcept","type":"python","tags":["transformer"],"contextKeys":[],"comment":"Convert all chosen values but exceptions.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4328","modified":"2021-09-07T09:21:43.720414+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Value to convert."},{"name":"convertTo","required":true,"deprecated":false,"default":false,"secret":false,"description":"String to convert to."},{"name":"except","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma separated list of exceptions.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertDatetoUTC","version":7,"name":"ConvertDatetoUTC","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Converts a date from a different timezone to UTC timezone.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.716191+03:00","scriptTarget":0,"arguments":[{"name":"date","required":true,"deprecated":false,"default":false,"secret":false,"description":"Date to convert to UTC"},{"name":"date_format","required":false,"deprecated":false,"default":false,"secret":false,"description":"Default is \"%Y-%m-%dT%H:%M:%S\"","defaultValue":"%Y-%m-%dT%H:%M:%S"},{"name":"timezone","required":false,"deprecated":false,"default":true,"secret":false,"description":"Timezone accepted by pytz. Default is America/Los_Angeles ","defaultValue":"America/Los_Angeles"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"UTCDate","description":"Converted Date in UTC timezone","type":"Unknown"},{"contentPath":"","contextPath":"UTCDateEpoch","description":"Date in Epoch (Unix time)","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertFile","version":7,"name":"ConvertFile","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Converts a file from one format to a different format by using the convert-to function of Libre Office. For a list of supported input/output formats see:  https://wiki.openoffice.org/wiki/Framework/Article/Filter/FilterList_OOo_3_0","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/office-utils:2.0.0.5456","modified":"2021-09-07T09:21:43.713498+03:00","scriptTarget":0,"arguments":[{"name":"entry_id","required":true,"deprecated":false,"default":true,"secret":false,"description":"The War Room entryID of the file to convert."},{"name":"format","required":false,"deprecated":false,"default":false,"secret":false,"description":"Output format to which to convert. Can specify only file extension, such as: \"pdf\" or \u003cext:writer\u003e such  as  \"txt:Text (Encoded)\". Default is \"pdf\".","defaultValue":"pdf"},{"name":"all_files","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"If \"yes\", will return all generated files. If \"no\", will return only the main file. Relevant for formats that might generate multiple files, such as html (which will generate image files additionally to the main html file). Default is \"no\".","defaultValue":"no"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"File.Name","description":"The name of the output file.","type":"String"},{"contentPath":"","contextPath":"File.Extension","description":"The extension of the file.","type":"String"},{"contentPath":"","contextPath":"File.EntryID","description":"The entry ID of the file.","type":"String"},{"contentPath":"","contextPath":"File.Info","description":"Additional information about the file.","type":"String"},{"contentPath":"","contextPath":"File.Type","description":"The file type.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertKeysToTableFieldFormat","version":7,"name":"ConvertKeysToTableFieldFormat","type":"javascript","tags":["transformer"],"contextKeys":[],"comment":"Convert object keys to match table keys.\nUse when mapping object/collection to table (grid) field.\n(Array of objects/collections is also supported).\nExample:\nInput: { \"Engine\": \"val1\", \"Max Results\": 13892378, \"Key_With^Special   (characters)\": true }\nOutput: { \"engine\": \"val1\", \"maxresults\": 13892378, \"keywithspecialcharacters\": true }","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717605+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Object to convert"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertTableToHTML","version":7,"name":"ConvertTableToHTML","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Converts a given array to an HTML table","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.718202+03:00","scriptTarget":0,"arguments":[{"name":"table","required":false,"deprecated":false,"default":true,"secret":false,"description":"The table to convert to HTML","isArray":true},{"name":"title","required":false,"deprecated":false,"default":false,"secret":false,"description":"The optional title for the table"},{"name":"headers","required":false,"deprecated":false,"default":false,"secret":false,"description":"The headers for the HTML table.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"HTMLTable","description":"The HTML table we created from the array","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertToSingleElementArray","version":7,"name":"ConvertToSingleElementArray","type":"python","tags":["transformer","entirelist"],"contextKeys":[],"comment":"Converts a single string to an array of that string.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-07T09:21:43.713111+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":true,"secret":false,"description":"The string to convert to an array of that string.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertXmlFileToJson","version":7,"name":"ConvertXmlFileToJson","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Converts XML file entry to JSON format","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.710708+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID of a valid xml file to convert to json format."},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context key to push json result to."},{"name":"verbose","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Print json result to warrom.","defaultValue":"True"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ConvertXmlToJson","version":7,"name":"ConvertXmlToJson","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Converts XML string to JSON format","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713724+03:00","scriptTarget":0,"arguments":[{"name":"xml","required":true,"deprecated":false,"default":true,"secret":false,"description":"The valid xml to convert to json format."},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context Key to push json result to."},{"name":"verbose","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Print json result to warrom.","defaultValue":"True"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CopyContextToField","version":7,"name":"CopyContextToField","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Copy a context key to an incident field of multiple incidents, based on an incident query.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.713686+03:00","scriptTarget":0,"arguments":[{"name":"sourceContextKey","required":true,"deprecated":false,"default":false,"secret":false,"description":"The context key from which to get the value."},{"name":"targetIncidentField","required":true,"deprecated":false,"default":false,"secret":false,"description":"The incident field to set with the value."},{"name":"incidentsQuery","required":true,"deprecated":false,"default":false,"secret":false,"description":"The incidents query on which to apply the copy process. For example, to apply this to all incidents of type \"Phishing\", use the query: \"type:Phishing\"."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to edit. Default is 1,000.","defaultValue":"1000"},{"name":"listSeparator","required":false,"deprecated":false,"default":false,"secret":false,"description":"Concatenates list values.","defaultValue":" "}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CopyNotesToIncident","version":7,"name":"CopyNotesToIncident","type":"python","tags":[],"contextKeys":[],"comment":"Copy all entries marked as notes from current incident to another incident.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.714312+03:00","scriptTarget":0,"arguments":[{"name":"target_incident","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to copy notes to."},{"name":"tags","required":false,"deprecated":false,"default":false,"secret":false,"description":"Replicate only notes with these tags (array or comma separated).","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CountArraySize","version":7,"name":"CountArraySize","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Count an array size","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.716573+03:00","scriptTarget":0,"arguments":[{"name":"array","required":true,"deprecated":false,"default":true,"secret":false,"description":"The array to count it's size","isArray":true},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The Context key to place result in, default is ArraySize"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ArraySize","description":"Array size","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CreateArray","version":7,"name":"CreateArray","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Will create an array object in context from given string input ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714345+03:00","scriptTarget":0,"arguments":[{"name":"arrayData","required":false,"deprecated":false,"default":true,"secret":false,"description":"This is the array data to create array from, should be in the format of comma separator by default: val1,val2,val3"},{"name":"separator","required":false,"deprecated":false,"default":false,"secret":false,"description":"Separator to use to split arrayData, by default will be comma ',' ."},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The key to place result array in context, by default will be \"array\"."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CreateEmailHtmlBody","version":7,"name":"CreateEmailHtmlBody","type":"javascript","tags":["email","communication"],"contextKeys":[],"comment":"This script allows sending an HTML email, using a template stored as a list item under Lists (Settings -\u003e Advanced -\u003e Lists).\nPlaceholders are marked in DT format (i.e. ${incident.id} for incident ID).\nAvailable placeholders for example:\n- ${incident.labels.Email/from}\n- ${incident.name}\n- ${object.value}\nSee incident Context Data menu for available placeholders\n\nNote: Sending emails require an active  Mail Sender integration instance.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.719862+03:00","scriptTarget":0,"arguments":[{"name":"listTemplate","required":true,"deprecated":false,"default":true,"secret":false,"description":"The list where the template is stored."},{"name":"key","required":true,"deprecated":false,"default":false,"secret":false,"description":"Context key to store the HTML body."},{"name":"object","required":false,"deprecated":false,"default":false,"secret":false,"description":"Values object provided as stringified JSON.","isArray":true},{"name":"removeNotFound","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"If true, replace path not found with empty string.","defaultValue":"no"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"htmlBody","description":"HTML Body.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"CreateIndicatorRelationship","version":5,"name":"CreateIndicatorRelationship","type":"python","tags":["basescript"],"contextKeys":[],"comment":"This automation creates a relationship between indicator objects.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-05T10:48:03.028358+03:00","scriptTarget":0,"arguments":[{"name":"entity_a","required":true,"deprecated":false,"default":false,"secret":false,"description":"The source of the relationship, for example 1.1.1.1. Only a single value is acceptable."},{"name":"entity_a_type","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["IP","Domain","URL","CVE","DomainGlob","Email","File","Host","CIDR","IPv6","IPv6CIDR","Registry Key","ssdeep","accountRep","CIDR","Attack Pattern","Malware","Report","Threat Actor","Tool","Campaign","Course of Action","Infrastructure","Intrusion Set"],"description":"The source type of the relationship, for example IP. The value must be an accepted indicator type. Only a single value is acceptable."},{"name":"entity_b","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of destinations or second entity values, for example 3.3.3.3,2.2.2.2. This argument must be used with the entity_b_type argument and cannot be used in conjunction with the entity_b_query argument.","isArray":true},{"name":"entity_b_type","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["IP","Domain","URL","CVE","DomainGlob","Email","File","Host","CIDR","IPv6","IPv6CIDR","Registry Key","ssdeep","accountRep","CIDR","Attack Pattern","Malware","Report","Threat Actor","Tool","Campaign","Course of Action","Infrastructure","Intrusion Set"],"description":"The destination type of the relationship, for example IP. Only a single value is acceptable. This argument must be used with the entity_b argument and cannot be used in conjunction with the entity_b_query argument."},{"name":"entity_b_query","required":false,"deprecated":false,"default":false,"secret":false,"description":"The indicator query for all the entity_b results. The indicators that are the results of the query will be used as the destination of the relationship. For example type:ip AND tags:mytag. For more query examples, see https://docs.paloaltonetworks.com/cortex/cortex-xsoar/6-0/cortex-xsoar-admin/manage-indicators/understand-indicators/indicators-page.html. This argument cannot be used in conjunction with the entity_b argument or the entity_b_type argument."},{"name":"relationship","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["applied","attachment-of","attaches","attribute-of","attributed-by","attributed-to","authored-by","beacons-to","bundled-in","bundles","communicated-with","communicated-by","communicates-with","compromises","contains","controls","created-by","creates","delivered-by","delivers","downloads","downloads-from","dropped-by","drops","duplicate-of","embedded-in","embeds","executed","executed-by","exfiltrates-to","exploits","has","hosted-on","hosts","impersonates","indicated-by","indicator-of","injected-from","injects-into","investigates","is-also","mitigated-by","mitigates","originated-from","owned-by","owns","part-of","related-to","remediates","resolved-by","resolved-from","resolves-to","seen-on","sent","sent-by","sent-from","sent-to","similar-to","sub-domain-of","supra-domain-of","subtechnique-of","parent-technique-of","targeted-by","targets","Types","uploaded-to","used-by","used-on","uses","variant-of"],"description":"The name of relationship to be created.","defaultValue":"related-to"},{"name":"reverse_relationship","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["applied","attachment-of","attaches","attribute-of","attributed-by","attributed-to","authored-by","beacons-to","bundled-in","bundles","communicated-with","communicated-by","communicates-with","compromises","contains","controls","created-by","creates","delivered-by","delivers","downloads","downloads-from","dropped-by","drops","duplicate-of","embedded-in","embeds","executed","executed-by","exfiltrates-to","exploits","has","hosted-on","hosts","impersonates","indicated-by","indicator-of","injected-from","injects-into","investigates","is-also","mitigated-by","mitigates","originated-from","owned-by","owns","part-of","related-to","remediates","resolved-by","resolved-from","resolves-to","seen-on","sent","sent-by","sent-from","sent-to","similar-to","sub-domain-of","supra-domain-of","subtechnique-of","parent-technique-of","targeted-by","targets","Types","uploaded-to","used-by","used-on","uses","variant-of"],"description":"The reverse name of relationship to be created. If the argument isn't provided by the user, the default reverse relation will be created."},{"name":"source_reliability","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["A - Completely reliable","B - Usually reliable","C - Fairly reliable","D - Not usually reliable","E - Unreliable","F - Reliability cannot be judged"],"description":"Reliability of the source providing the intelligence data.","defaultValue":"A - Completely reliable"},{"name":"description","required":false,"deprecated":false,"default":false,"secret":false,"description":"Free text description to add to the relationship."},{"name":"first_seen","required":false,"deprecated":false,"default":false,"secret":false,"description":"The time the relationship was seen. If left empty, the default value will be the time the relationship was created. Format (YYYY-MM-DDTHH:MM:SSZ). For example: 2020-02-02T19:00:00Z"},{"name":"create_indicator","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"True, if the non-existing indicators will be created according to the specified entities and their types. Default is false.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"CreateIndicatorsFromSTIX","version":7,"name":"CreateIndicatorsFromSTIX","type":"python","tags":["stix","ioc"],"contextKeys":[],"comment":"Creates indicators from the submitted STIX file. Supports STIX 1.0 and STIX 2.0.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.1.5734","modified":"2021-09-07T09:21:43.718287+03:00","scriptTarget":0,"arguments":[{"name":"entry_id","required":true,"deprecated":false,"default":false,"secret":false,"description":"The entry ID of the STIX file."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"Cut","version":7,"name":"Cut","type":"python","tags":["transformer","string"],"contextKeys":[],"comment":"Cut a string by delimiter and return specific fields.\nExample\n=================\ninput: \"A-B-C-D-E\"\ndelimiter: \"-\"\nfields: \"1,5\"\n\nreturn: \"A-E\"\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715079+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Value to split"},{"name":"delimiter","required":true,"deprecated":false,"default":false,"secret":false,"description":"Delimiter to cut the string by. Pass '' to set delimiter to be empty string"},{"name":"fields","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma separated field numbers (e.g.: 1,5,7)","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DateStringToISOFormat","version":7,"name":"DateStringToISOFormat","type":"python","tags":["transformer","date"],"contextKeys":[],"comment":"This is a thin wrapper around the `dateutil.parser.parse` function. It will parse a string containing a date/time stamp and return it in ISO 8601 format.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.716767+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Date value to convert."},{"name":"dayfirst","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to interpret the first value in an ambiguous 3-integer date (e.g. 01/05/09) as the day (``True``) or month (``False``). If ``yearfirst`` is set to ``True``, this distinguishes between YDM and YMD.","defaultValue":"true"},{"name":"yearfirst","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to interpret the first value in an ambiguous 3-integer date (e.g. 01/05/09) as the year. If ``True``, the first number is taken to be the year, otherwise the last number is taken to be the year.","defaultValue":"false"},{"name":"fuzzy","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to allow fuzzy parsing, allowing for string like \"Today is January 1, 2047 at 8:21:00AM\".","defaultValue":"true"},{"name":"add_utc_timezone","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to add UTC timezone to the date string returned in case offset-naive date was provided as input.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotAverageScore","version":7,"name":"DBotAverageScore","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Calculates average score for each indicator from context","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.720004+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DBotAvgScore.Indicator","description":"The indicator we calculate average score for","type":""},{"contentPath":"","contextPath":"DBotAvgScore.Score","description":"The average score per indicator","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotBuildPhishingClassifier","version":6,"name":"DBotBuildPhishingClassifier","type":"python","tags":["ml"],"contextKeys":[],"comment":"Create a phishing classifier using machine learning technique, based on email content.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.0273+03:00","scriptTarget":0,"arguments":[{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional text by which to query incidents."},{"name":"incidentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident types by which to filter.","defaultValue":"Phishing"},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to filter incidents. Date format will be the same as in the incidents query page (valid strings example: \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")"},{"name":"toDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date by which to filter incidents. Date format will be the same as in the incidents query page (valid strings example: \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")"},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to fetch.","defaultValue":"3000"},{"name":"includeContext","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to query and fetch incident context.","defaultValue":"false"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["created","modified"],"description":"The incident field (created or modified) to specify for the date range.","defaultValue":"created"},{"name":"tagField","required":true,"deprecated":false,"default":false,"secret":false,"description":"The field name with the label. Supports a comma-separated list, the first non-empty value will be taken."},{"name":"removeShortTextThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Sample text of which the total number of words are less than or equal to this number will be ignored.","defaultValue":"15"},{"name":"dedupThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Remove emails with similarity greater than this threshold, range 0-1, where 1 is completly identical.","defaultValue":"0.99"},{"name":"hashSeed","required":false,"deprecated":false,"default":false,"secret":false,"description":"If non-empty, hash every word with this seed."},{"name":"modelName","required":false,"deprecated":false,"default":false,"secret":false,"description":"The model name to store in the system."},{"name":"phishingLabels","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of email tags values and mapping. The script considers only the tags specified in this field. You can map a label to another value by using this format: LABEL:MAPPED_LABEL. For example, for 4 values in email tag: malicious, credentials harvesting, inner communitcation, external legit email, unclassified. While training, we want to ignore \"unclassified\" tag, and refer to \"credentials harvesting\" as \"malicious\" too. Also, we want to merge \"inner communitcation\" and \"external legit email\" to one tag called \"non-malicious\". The input will be: malicious, credentials harvesting:malicious, inner communitcation:non-malicious, external legit email:non-malicious","defaultValue":"*"},{"name":"emailsubject","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident field name with the email subject.","defaultValue":"emailsubject"},{"name":"emailbody","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident field name with the email body (text).","defaultValue":"emailbody"},{"name":"emailbodyhtml","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident field name with the email body (html).","defaultValue":"emailbodyhtml"},{"name":"language","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Any","English","German","French","Spanish","Portuguese","Italian","Dutch","Other"],"description":"The language of the input text. Default is \"Any\". Can be \"Any\", \"English\", \"German\", \"French\", \"Spanish\", \"Portuguese\", \"Italian\", \"Dutch\", or \"Other\". If \"Any\"  or \"Other\" is selected, the script preprocess the entire input, no matter what its acutual language is. If a specific language is selected, the script filters out any other language from the output text.","defaultValue":"Any"},{"name":"trainingAlgorithm","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["auto","from_scratch","fine_tune"],"description":"The training algorithm to use for training the model. Default is \"auto\". If \"auto\" is selected, the training algorithm will be chosen automatically based on the number of incidents per each label. Use \"from_scratch\" to train a new model from scratch, based on your incidents only. In general, \"from_scratch\" will perform better where the number of incidents is high (500 incidents or more per each verdict). \"fine-tune\" trains a model based on the out-of-the-box model. \"fine-tune\" will perform better when the number of incidents is relatively low. It's possible to train multiple models using different algorithms options, and compare their results.","defaultValue":"auto"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotClosedIncidentsPercentage","version":7,"name":"DBotClosedIncidentsPercentage","type":"javascript","tags":["widget"],"contextKeys":[],"comment":"Data output script for populating dashboard pie graph widget with the percentage of incidents closed by DBot vs. incidents closed by analysts","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.712965+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotFindSimilarIncidents","version":6,"name":"DBotFindSimilarIncidents","type":"python","tags":null,"contextKeys":[],"comment":"Find past similar incidents based on incident fields' similarity. Includes an option to also display indicators similarity.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.027846+03:00","scriptTarget":0,"arguments":[{"name":"incidentId","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to get the prediction of. If empty, predicts the the current incident ID."},{"name":"similarTextField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of incident text fields to take into account when computing similarity. For example: commandline, URL"},{"name":"similarCategoricalField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of incident categorical fields to take into account whe computing similarity. For example: IP, URL"},{"name":"similarJsonField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of incident JSON fields to take into account whe computing similarity. For example: CustomFields"},{"name":"fieldsToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of additional incident fields to display, but which will not be taken into account when computing similarity."},{"name":"fieldExactMatch","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of incident fields that have to be equal to the current incident fields. This helps reduce the query size."},{"name":"useAllFields","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to use a predefined set of fields and custom fields to compute similarity. If \"True\", it will ignore values in similarTextField, similarCategoricalField, similarJsonField.","defaultValue":"False"},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to filter incidents. Date format will be the same as in the incidents query page, for example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\").","defaultValue":"1 months ago"},{"name":"toDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date by which to filter incidents. Date format will be the same as in the incidents query page, for example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Argument for the query. This helps reduce the query size."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to query.","defaultValue":"1500"},{"name":"aggreagateIncidentsDifferentDate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to aggregate duplicate incidents within diffrerent dates.","defaultValue":"False"},{"name":"showIncidentSimilarityForAllFields","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to display the similarity score for each of the incident fields.","defaultValue":"False"},{"name":"minimunIncidentSimilarity","required":false,"deprecated":false,"default":false,"secret":false,"description":"Retain incidents with similarity score that's higher than the MinimunIncidentSimilarity.","defaultValue":"0.2"},{"name":"maxIncidentsToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to display.","defaultValue":"100"},{"name":"showCurrentIncident","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to display the current incident.","defaultValue":"False"},{"name":"includeIndicatorsSimilarity","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to include similarity of indicators from DBotFindSimilarIncidentsByIndicators in the final score.","defaultValue":"False"},{"name":"minNumberOfIndicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"The minimum number of indicators required related to the incident before running the model. Relevant if includeIndicatorsSimilarity is \"True\"."},{"name":"indicatorsTypes","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","description":"Comma-separated list of indicator types to take into account. If empty, uses all indicators types. Relevant if includeIndicatorsSimilarity is \"True\"."},{"name":"maxIncidentsInIndicatorsForWhiteList","required":false,"deprecated":false,"default":false,"secret":false,"description":"Help to filter out indicators that appear in many incidents. Relevant if includeIndicatorsSimilarity is \"True\"."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotFindSimilarIncidentsByIndicators","version":6,"name":"DBotFindSimilarIncidentsByIndicators","type":"python","tags":null,"contextKeys":[],"comment":"Finds similar incidents based on indicators' similarity. Indicators' contribution to the final score is based on their scarcity.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.027924+03:00","scriptTarget":0,"arguments":[{"name":"incidentId","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"Incident ID to get the prediction of. If empty, predicts the current incident ID."},{"name":"maxIncidentsInIndicatorsForWhiteList","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents that an indicator can be associated with to be retained. This helps to filter out indicators that appear in many incidents ","defaultValue":"150"},{"name":"minNumberOfIndicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"The minimum number of indicators related to the incident required before running the model.","defaultValue":"1"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Threshold to similarity value which is between 0 and 1.","defaultValue":"0"},{"name":"indicatorsTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"Type of indicators to take into account. If empty, uses all indicators types."},{"name":"showActualIncident","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to show the incident you are investigating.","defaultValue":"False"},{"name":"maxIncidentsToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to display.","defaultValue":"50"},{"name":"fieldsIncidentToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"description":"Fields to add in the table of incident","defaultValue":"type, created, name"},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which we retrieve information on incidents.","defaultValue":"1 month ago"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotMLFetchData","version":6,"name":"DBotMLFetchData","type":"python","tags":["ml"],"contextKeys":[],"comment":"Deprecated. No available replacement. Collect telemetry data from the environment.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/fetch-data:1.0.0.22177","modified":"2021-09-05T10:48:03.027747+03:00","scriptTarget":0,"arguments":[{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional text by which to query incidents."},{"name":"incidentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separatetd list of incident types by which to filter.","defaultValue":"Phishing,*phish*"},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to filter incidents. Date format is the same as in the incidents query page. For example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"toDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date by which to filter incidents. Date format is the same as in the incidents query page. For example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to fetch. The default value is 3000.","defaultValue":"3000"},{"name":"includeContext","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to query and fetch incident context. Can be: \"true\" or \"false\". The default is \"false\".","defaultValue":"false"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["created","modified"],"description":"The incident field to specify for the date range. Can be: \"created\" or \"modified\". The default is \"created\".","defaultValue":"created"},{"name":"NonEmptyFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of non-empty value incident field names by which to filter incidents."},{"name":"populateFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of fields to populate in the object."},{"name":"tagField","required":false,"deprecated":false,"default":false,"secret":false,"description":"The field name with the label"},{"name":"emailSubject","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Subject of the email."],"description":"Subject of the email.","defaultValue":"emailsubject"},{"name":"emailBody","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"Body of the email.","defaultValue":"emailbody"},{"name":"emailBodyHTML","required":false,"deprecated":false,"default":false,"secret":false,"description":"HTML body of the email.","defaultValue":"emailbodyhtml"},{"name":"emailHeaders","required":false,"deprecated":false,"default":false,"secret":false,"description":"Headers of the email.","defaultValue":"emailheaders"},{"name":"emailAttachments","required":false,"deprecated":false,"default":false,"secret":false,"description":"Attachments of the email.","defaultValue":"attachment"},{"name":"compress","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to compress the fetched data. Default is True","defaultValue":"True"},{"name":"toFile","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Wheter to return a file entry. Default is \"False\".","defaultValue":"False"}],"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotPredictPhishingWords","version":6,"name":"DBotPredictPhishingWords","type":"python","tags":["ml","phishing"],"contextKeys":[],"comment":"Predict text label using a pre-trained machine learning phishing model, and get the most important words used in the classification decision.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.027518+03:00","scriptTarget":0,"arguments":[{"name":"modelName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The model name (or list name) in Demisto."},{"name":"hashSeed","required":false,"deprecated":false,"default":false,"secret":false,"description":"Seed for the hash function, at the pre-process stage."},{"name":"emailSubject","required":false,"deprecated":false,"default":false,"secret":false,"description":"Subject of the email.","isArray":true},{"name":"emailBody","required":false,"deprecated":false,"default":false,"secret":false,"description":"Body of the email.","isArray":true},{"name":"emailBodyHTML","required":false,"deprecated":false,"default":false,"secret":false,"description":"HTML body of the email. Only use this field if the emailBody argument is empty.","isArray":true},{"name":"topWordsLimit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of positive/negative words to return for the model decision. Default is 20.","defaultValue":"20"},{"name":"wordThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Threshold to determine word importance (range 0-1). Default is 0.05.","defaultValue":"0.05"},{"name":"modelStoreType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["list","mlModel"],"description":"How the model is stored in Demisto. Can be \"list\" or \"mlModel\". Default is \"list\".","defaultValue":"list"},{"name":"minTextLength","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of characters for the prediction.","defaultValue":"5"},{"name":"labelProbabilityThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"The label probability threshold. Default is 0.8.","defaultValue":"0.8"},{"name":"confidenceThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"The confidence threshold. The model will provide predictions only if their confidence is above this threshold."},{"name":"returnError","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to return an error when there is no prediction. Default is \"true\".","defaultValue":"false"},{"name":"setIncidentFields","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to set Demisto out-of-the-box DBot fields.","defaultValue":"false"},{"name":"language","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Any","English","German","French","Spanish","Portuguese","Italian","Dutch","Other"],"description":"The language of the input text. Default is \"Any\". Can be \"Any\", \"English\", \"German\", \"French\", \"Spanish\", \"Portuguese\", \"Italian\", \"Dutch\", or \"Other\". If \"Any\"  or \"Other\" is selected, the script preprocess the entire input, no matter what its acutual language is. If a specific language is selected, the script filters out any other language from the output text.","defaultValue":"Any"},{"name":"tokenizationMethod","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["tokenizer","byWords","byLetters"],"description":"Tokenization method for text. Only required when the language argument is set to \"Other\". Can be \"tokenizer\", \"byWords\", or \"byLetters\".","defaultValue":"tokenizer"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DBotPredictPhishingWords.Label","description":"The predicted label.","type":"String"},{"contentPath":"","contextPath":"DBotPredictPhishingWords.Probability","description":"The predicted probability (range 0-1).","type":"Number"},{"contentPath":"","contextPath":"DBotPredictPhishingWords.PositiveWords","description":"A list of words in the input text that supports the model decision.","type":"Unknown"},{"contentPath":"","contextPath":"DBotPredictPhishingWords.NegativeWords","description":"A list of words in the input text that do not support the model decision. These words better support a different classification class.","type":"Unknown"},{"contentPath":"","contextPath":"DBotPredictPhishingWords.TextTokensHighlighted","description":"The input text (after pre-processing) with the positive words that support the model decision.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotPreProcessTextData","version":6,"name":"DBotPreProcessTextData","type":"python","tags":["ml"],"contextKeys":[],"comment":"Pre-process text data for the machine learning text classifier.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.028093+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input file entry ID or the file content (as a string)."},{"name":"removeShortTextThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Sample text for which the total number words are less than or equal to this number will be ignored.","defaultValue":"15"},{"name":"dedupThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Remove emails with similarity greater than this threshold, range 0-1, where 1 is completly identical.","defaultValue":"0.99"},{"name":"textFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident field names with the text to process. You can also use \"|\" if you want to choose the first non-empty value from a list of fields.","defaultValue":"emailsubject|name,emailbody|emailbodyhtml"},{"name":"inputType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["json","pickle","csv","json_string","pickle_string","csv_string","json_b64_string","pickle_b64_string","csv_b64_string","string"],"description":"The input type.","defaultValue":"json"},{"name":"preProcessType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["nlp","none"],"description":"Text pre-processing type. The default is \"json\".","defaultValue":"nlp"},{"name":"cleanHTML","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to remove HTML tags. Default is \"true\".","defaultValue":"true"},{"name":"whitelistFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separate list of fields inside the JSON by which to filter."},{"name":"hashSeed","required":false,"deprecated":false,"default":false,"secret":false,"description":"If non-empty, hash every word with this seed."},{"name":"outputFormat","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["json","pickle"],"description":"The output file format.","defaultValue":"pickle"},{"name":"outputOriginalTextFields","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to add the original text fields to the output. Default is \"false\".","defaultValue":"false"},{"name":"language","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Any","English","German","French","Spanish","Portuguese","Italian","Dutch","Other"],"description":"The language of the input text. Default is \"Any\". Can be \"Any\", \"English\", \"German\", \"French\", \"Spanish\", \"Portuguese\", \"Italian\", \"Dutch\", or \"Other\". If \"Any\"  or \"Other\" is selected, the script preprocess the entire input, no matter what its acutual language is. If a specific language is selected, the script filters out any other language from the output text.","defaultValue":"Any"},{"name":"tokenizationMethod","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["tokenizer","byWords","byLetters"],"description":"Tokenization method for text. Only required when the language argument is set to \"Other\". Can be \"tokenizer\", \"byWords\", or \"byLetters\". Default is \"tokenizer\".","defaultValue":"tokenizer"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DBotPreProcessTextData.Filename","description":"The output file name.","type":"String"},{"contentPath":"","contextPath":"DBotPreProcessTextData.TextField","description":"The original text field inside the file.","type":"String"},{"contentPath":"","contextPath":"DBotPreProcessTextData.TextFieldProcessed","description":"The processed text field inside the JSON file.","type":"String"},{"contentPath":"","contextPath":"DBotPreProcessTextData.FileFormat","description":"The output file format.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotShowClusteringModelInfo","version":5,"name":"DBotShowClusteringModelInfo","type":"python","tags":["widget"],"contextKeys":[],"comment":"Show clustering model information - model summary and incidents in specific cluster.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-05T10:48:03.027803+03:00","scriptTarget":0,"arguments":[{"name":"modelName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The model name."},{"name":"searchQuery","required":false,"deprecated":false,"default":false,"secret":false,"description":"The input query from the dashboard."},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to filter incidents. Date format will be the same as in the incidents query page, for example: \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"fieldsToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of additional incident fields to display, but which will not be taken into account when computing similarity."},{"name":"returnType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["summary","incidents"],"description":"Return model summary or incidents in specific group according to the search query.","defaultValue":"summary"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotSuggestClassifierMapping","version":6,"name":"DBotSuggestClassifierMapping","type":"python","tags":["ml"],"contextKeys":[],"comment":"Deprecated. No available replacement. Suggests a classifier mapping based on an advanced name matching algorithm.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.027702+03:00","scriptTarget":0,"arguments":[{"name":"incidentSamples","required":true,"deprecated":false,"default":false,"secret":false,"description":"The incident samples (raw events)."},{"name":"incidentFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incidents fields to consider on matching."},{"name":"currentMapper","required":false,"deprecated":false,"default":false,"secret":false,"description":"The current mapper."},{"name":"incidentSamplesType","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"The type of the incident samples."}],"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotTrainClustering","version":5,"name":"DBotTrainClustering","type":"python","tags":["ml"],"contextKeys":[],"comment":"Train clustering model on any incident type.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/mlclustering:1.0.0.23151","modified":"2021-09-05T10:48:03.028462+03:00","scriptTarget":0,"arguments":[{"name":"fieldsForClustering","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of incident fields to take into account when training the clustering."},{"name":"fieldForClusterName","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident field that represents the family name for each cluster created. The model determines how many incidents in the cluster have the same value in the fieldForClusterName field. The largest numbers of incidents with the same value, determine the cluster name.","isArray":true},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"The start date by which to filter incidents. Date format will be the same as in the incidents query page, for example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\").","defaultValue":"1 month ago"},{"name":"toDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date by which to filter incidents. Date format will be the same as in the incidents query page, for example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to query.","defaultValue":"3000"},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Argument for the query."},{"name":"minNumberofIncidentPerCluster","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of incidents a cluster should contain for it to be retained.","defaultValue":"2"},{"name":"modelName","required":false,"deprecated":false,"default":false,"secret":false,"description":"Name of the model."},{"name":"storeModel","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to store the model in the system.","defaultValue":"False"},{"name":"minHomogeneityCluster","required":false,"deprecated":false,"default":false,"secret":false,"description":"Keep samples in the cluster when the family ratio is above this number. Will be effective only if fieldForClusterName is given.","defaultValue":"0.4"},{"name":"overrideExistingModel","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to override the existing model if a model with the same name exists. Default is \"False\"."},{"name":"type","required":false,"deprecated":false,"default":false,"secret":false,"description":"Type of incident to train the model on. If empty, will consider all types."},{"name":"maxRatioOfMissingValue","required":false,"deprecated":false,"default":false,"secret":false,"description":"If a field has a higher missing value than this ratio it will be removed.","defaultValue":"0.3"},{"name":"debug","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["False","True"],"description":"Whether to return more information about the clustering. Default is \"False\".","defaultValue":"False"},{"name":"forceRetrain","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to re-train the model in any cases. Default is \"False\".","defaultValue":"False"},{"name":"modelExpiration","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"Period of time (in hours) before retraining the model. Default is \"24\".","defaultValue":"24"},{"name":"modelHidden","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"Whether to hide the model in the ML page.","defaultValue":"True"},{"name":"searchQuery","required":false,"deprecated":false,"default":false,"secret":false,"description":"Search query input from the dashboard."},{"name":"fieldsToDisplay","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of additional incident fields to display, but which will not be taken into account when computing similarity."},{"name":"numberOfFeaturesPerField","required":false,"deprecated":false,"default":false,"secret":false,"description":"Number of features per field.","defaultValue":"500"},{"name":"analyzer","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["char","word"],"description":"Whether the feature should be made of word or character n-grams. Possible values: \"char\" and \"word\".","defaultValue":"char"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DBotTrainTextClassifierV2","version":6,"name":"DBotTrainTextClassifierV2","type":"python","tags":["ml"],"contextKeys":[],"comment":"Train a machine learning text classifier.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.027393+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input file entry ID or JSON string."},{"name":"modelName","required":false,"deprecated":false,"default":false,"secret":false,"description":"The model name to store in the system.","defaultValue":"phishing_model"},{"name":"storeModel","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to store the model in the system.","defaultValue":"true"},{"name":"overrideExistingModel","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to override the existing model if a model with the same name exists. Default is \"false\"."},{"name":"targetAccuracy","required":false,"deprecated":false,"default":false,"secret":false,"description":"The target accuracy, between 0 and 1. Default is 0.8.","defaultValue":"0.8"},{"name":"maxBelowThreshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum nubmer of samples below the threshold (for the target accuracy)."},{"name":"tagField","required":true,"deprecated":false,"default":false,"secret":false,"description":"The field name with the label. Supports a comma-separated list, the first non-empty value will be taken."},{"name":"textField","required":false,"deprecated":false,"default":false,"secret":false,"description":"The field name with the text to train.","defaultValue":"dbot_processed_text"},{"name":"phishingLabels","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of email tags values and mapping. The script considers only the tags specified in this field. You can map label to another value by using this format: LABEL:MAPPED_LABEL. For example, for 4 values in email tag: malicious, credentials harvesting, inner communitcation, external legit email, unclassified. While training, we want to ignore \"unclassified\" tag, and refer to \"credentials harvesting\" as \"malicious\" too. Also, we want to     merge \"inner communitcation\" and \"external legit email\" to one tag called \"non-malicious\". The input will be: malicious, credentials harvesting:malicious, inner communitcation:non-malicious, external legit email:non-malicious","defaultValue":"*"},{"name":"trainSetRatio","required":false,"deprecated":false,"default":false,"secret":false,"description":"The ratio of the training set to the entire data set, which is used for model evaluation.","defaultValue":"0.8"},{"name":"inputType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["json","json_string","json_b64_string","pickle","pickle_string","pickle_b64_string","pickle_filename","json_filename"],"description":"The input type.","defaultValue":"pickle_filename"},{"name":"keywordMinScore","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum score for a word to be considered as a keyword between 0 and 1.","defaultValue":"0.05"},{"name":"metric","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["micro avg","macro avg","weighted avgm"],"description":"The metric to use for evaluating the model.","defaultValue":"macro avg"},{"name":"findKeywords","required":false,"deprecated":false,"default":false,"secret":false,"predefined":["true","false"],"description":"Whether to extract keywords for the model. Can be \"true\" or \"false\". Default is \"true\".","defaultValue":"true"},{"name":"returnPredictionsOnTestSet","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to return a file that contains the model's predictions on the test set. Can be \"true\" or \"false\". Default is \"false\".","defaultValue":"false"},{"name":"originalTextFields","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"A comma-separated list of incident fields names with the unprocessed text.\nYou can also use \"|\" if you want to choose the first non-empty value from a list of fields.","defaultValue":"emailsubject|name,emailbody|emailbodyhtml"},{"name":"preProcessType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["nlp","none"],"description":"Text pre-processing type. The default is \"json\".","defaultValue":"nlp"},{"name":"trainingAlgorithm","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["auto","from_scratch","fine_tune"],"description":"The training algorithm to use for training the model. Default is \"auto\". If \"auto\" is selected, the training algorithm will be chosen automatically based on the number of incidents per each label.  Use \"from_scratch\" to train a new model from scratch, based on your incidents only. In general, \"from_scratch\" will perform better where the number of incidents is high (500 incidents or more per each verdict). \"fine-tune\" trains a model based on the out-of-the-box model. \"fine-tune\" will perform better when the number of incidents is relatively low. It's possible to train multiple models using different algorithms options, and compare their results.","defaultValue":"auto"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DBotPhishingClassifier.ModelName","description":"The model name.","type":"String"},{"contentPath":"","contextPath":"DBotPhishingClassifier.EvaluationScores","description":"The model evaluation scores (precision, coverage, etc.) for the found threshold.","type":"Unknown"},{"contentPath":"","contextPath":"DBotPhishingClassifier.ConfusionMatrix","description":"The model evaluation confusion matrix for the found threshold.","type":"Unknown"},{"contentPath":"","contextPath":"DBotPhishingClassifierNoThresh.EvaluationScores","description":"The model evaluation scores (precision, coverage, etc.) for threshold = 0.","type":"Unknown"},{"contentPath":"","contextPath":"DBotPhishingClassifierNoThresh.ConfusionMatrix","description":"The model evaluation confusion matrix for threshold = 0.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DecodeMimeHeader","version":7,"name":"DecodeMimeHeader","type":"python","tags":[],"contextKeys":[],"comment":"Decode MIME base64 headers.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.17.3066","modified":"2021-09-07T09:21:43.71975+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"The header value to decode."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DecodedMimeHeader","description":"The result of decoded value.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DeleteContext","version":7,"name":"DeleteContext","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Delete field from context","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713617+03:00","scriptTarget":0,"arguments":[{"name":"key","required":false,"deprecated":false,"default":true,"secret":false,"description":"The key to delete from the context"},{"name":"all","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"If you choose yes - all context will be deleted"},{"name":"subplaybook","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no","auto"],"description":"Specify \"yes\" if the context key is inside of a sub-playbook. Use **auto** to delete either from the sub-playbook context (if the playbook is called as a sub-playbook) or from the global context (if the playbook is the top playbook)."},{"name":"keysToKeep","required":false,"deprecated":false,"default":false,"secret":false,"description":"Context keys to keep when deleting all context. Supports comma separated values and nested objects, e.g. URL.Data,IP.Address"},{"name":"index","required":false,"deprecated":false,"default":false,"secret":false,"description":"index to delete in case 'key' argument was specified"}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DeleteIndicatorRelationships","version":5,"name":"DeleteIndicatorRelationships","type":"python","tags":["basescript"],"contextKeys":[],"comment":"This automation allows to delete a relationship between indicator objects based on the relationship id.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.4.19537","modified":"2021-09-05T10:48:03.028561+03:00","scriptTarget":0,"arguments":[{"name":"ids","required":true,"deprecated":false,"default":true,"secret":false,"description":"The IDs of the relationships to delete. Can accept a list of ID's.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoCreateList","version":2,"name":"DemistoCreateList","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Create a new list","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.054922+03:00","scriptTarget":0,"arguments":[{"name":"listName","required":true,"deprecated":false,"default":true,"secret":false,"description":"Name of list to create"},{"name":"listData","required":false,"deprecated":false,"default":false,"secret":false,"description":"Initial data of list"}],"dependsOn":{"must":["demisto-api-post"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoGetIncidentTasksByState","version":2,"name":"DemistoGetIncidentTasksByState","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Get all tasks for specific incident by the given state.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.054966+03:00","scriptTarget":0,"arguments":[{"name":"incidentId","required":true,"deprecated":false,"default":true,"secret":false,"description":"Incident ID to get tasks from"},{"name":"states","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma separated list of states. Possible values: New, InProgress, Completed, Waiting, Error, Skipped, Blocked (leave empty to get all tasks)"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Tasks","description":"The entire task object","type":""},{"contentPath":"","contextPath":"Tasks.id","description":"Task ID","type":"string"},{"contentPath":"","contextPath":"Tasks.name","description":"Task name","type":"string"},{"contentPath":"","contextPath":"Tasks.type","description":"The type of the task (regular, condition, title, playbook, start)","type":"string"},{"contentPath":"","contextPath":"Tasks.owner","description":"Task owner","type":"string"},{"contentPath":"","contextPath":"Tasks.state","description":"Task state (inprogress, Completed, WillNotBeExecuted, Error, Waiting, Blocked, and empty string for not started)","type":"string"},{"contentPath":"","contextPath":"Tasks.scriptId","description":"Task related script (empty if manual)","type":"string"},{"contentPath":"","contextPath":"Tasks.startDate","description":"Task start date","type":"unknown"},{"contentPath":"","contextPath":"Tasks.completedDate","description":"Task completed date","type":"unknown"},{"contentPath":"","contextPath":"Tasks.dueDate","description":"Task due date (SLA)","type":"unknown"},{"contentPath":"","contextPath":"Tasks.parentPlaybookID","description":"Task parent playbook ID (in case the task is part of sub-playbook)","type":"unknown"},{"contentPath":"","contextPath":"Tasks.completedBy","description":"Task completed by (username)","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoLeaveAllInvestigations","version":2,"name":"DemistoLeaveAllInvestigations","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Leaves all investigations that the user is part of (clears out the incidents in the left pane). Incidents that the user owns will remain in the left pane. Requires Demisto REST API integration to be configured for the server.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.055021+03:00","scriptTarget":0,"arguments":null,"dependsOn":{"must":["demisto-api-post"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoLinkIncidents","version":2,"name":"DemistoLinkIncidents","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Link two or more incidents","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.055062+03:00","scriptTarget":0,"arguments":[{"name":"masterID","required":true,"deprecated":false,"default":true,"secret":false,"description":"Incident ID used for linking to other incidents"},{"name":"otherIDs","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incidet IDs to link"},{"name":"unlink","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Unlink incidents (default 'no')","defaultValue":"no"}],"dependsOn":{"must":["demisto-api-post"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoLogsBundle","version":2,"name":"DemistoLogsBundle","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Gets Demisto Log Bundle to war room","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.055105+03:00","scriptTarget":0,"arguments":null,"dependsOn":{"must":["demisto-api-download"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoSendInvite","version":2,"name":"DemistoSendInvite","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Send invitation to join Demisto","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.055138+03:00","scriptTarget":0,"arguments":[{"name":"email","required":true,"deprecated":false,"default":true,"secret":false,"description":"Email of user being invited"},{"name":"roles","required":true,"deprecated":false,"default":false,"secret":false,"description":"Roles of invited user"}],"dependsOn":{"must":["demisto-api-post","demisto-api-get"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoUploadFile","version":2,"name":"DemistoUploadFile","type":"javascript","tags":["DemistoAPI"],"contextKeys":[],"comment":"Deprecated. Use DemistoUploadFileV2 instead.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-08-24T19:09:03.055171+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"description":"File entry ID"},{"name":"incidentID","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to upload the file to"},{"name":"body","required":false,"deprecated":false,"default":false,"secret":false,"description":"Request body"}],"dependsOn":{"must":["demisto-api-multipart"]},"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoUploadFileToIncident","version":2,"name":"DemistoUploadFileToIncident","type":"python","tags":["DemistoAPI"],"contextKeys":[],"comment":"Copies a file from this incident to the specified incident. The file is uploaded as an attachment to the specified incident’s Summary page, and recorded as an entry in the War Room.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-24T19:09:03.05523+03:00","scriptTarget":0,"arguments":[{"name":"incident_id","required":true,"deprecated":false,"default":false,"secret":false,"description":"ID of incident to upload to"},{"name":"entryID","required":false,"deprecated":false,"default":false,"secret":false,"description":"Entry ID of file to upload"},{"name":"body","required":false,"deprecated":false,"default":false,"secret":false,"description":"Request body"}],"dependsOn":{"must":["demisto-api-multipart"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoUploadFileV2","version":2,"name":"DemistoUploadFileV2","type":"python","tags":["DemistoAPI"],"contextKeys":[],"comment":"Copies a file from this incident to the specified incident. The file is recorded as an entry in the specified incident’s War Room.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-08-24T19:09:03.055279+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"File entry ID"},{"name":"incidentID","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to upload the file to"},{"name":"body","required":false,"deprecated":false,"default":false,"secret":false,"description":"Request body"}],"dependsOn":{"must":["demisto-api-multipart"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DemistoVersion","version":7,"name":"DemistoVersion","type":"python","tags":[],"contextKeys":[],"comment":"Return the Demisto server version.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4583","modified":"2021-09-07T09:21:43.719392+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DemistoVersion.version","description":"The version of the Demisto server.","type":"string"},{"contentPath":"","contextPath":"DemistoVersion.buildNumber","description":"The build number of the Demisto server.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"DisplayHTML","version":7,"name":"DisplayHTML","type":"python","tags":[],"contextKeys":[],"comment":"Display HTML in the War Room.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712326+03:00","scriptTarget":0,"arguments":[{"name":"html","required":true,"deprecated":false,"default":false,"secret":false,"description":"The HTML to display"},{"name":"markAsNote","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Should the entry be marked as a note?"},{"name":"header","required":false,"deprecated":false,"default":false,"secret":false,"description":"Add a header text to the output"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DockerHardeningCheck","version":7,"name":"DockerHardeningCheck","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Checks if the Docker container running this script has been hardened according to the recommended settings at: https://docs.paloaltonetworks.com/cortex/cortex-xsoar/6-0/cortex-xsoar-admin/docker/docker-hardening-guide.html","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.718774+03:00","scriptTarget":0,"arguments":[{"name":"memory","required":false,"deprecated":false,"default":false,"secret":false,"description":"The amount of memory to check. Can specify in bytes or append MB/GB for Mega/Giga bytes. Default is 1 GB.","defaultValue":"1GB"},{"name":"memory_check","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["cgroup","allocate"],"description":"The memory check type to perform: cgroup - check memory cgroup configuration, allocate - try allocating actual memory and verify that the allocation fails. Note the allocate test  on some configurations may cause the container to be killed by the linux memory manager and the whole test will then time out.","defaultValue":"cgroup"},{"name":"pids","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of PIDs to check.","defaultValue":"256"},{"name":"fds_soft","required":false,"deprecated":false,"default":false,"secret":false,"description":"The soft file descriptor limit to check.","defaultValue":"1024"},{"name":"fds_hard","required":false,"deprecated":false,"default":false,"secret":false,"description":"The hard file descriptor limit to check.","defaultValue":"8192"},{"name":"cpus","required":false,"deprecated":false,"default":false,"secret":false,"description":"The number of CPUs limit to check.","defaultValue":"1"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DomainReputation","version":7,"name":"DomainReputation","type":"python","tags":["enhancement"],"contextKeys":[],"comment":"A context script for Domain entities","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719363+03:00","scriptTarget":0,"arguments":[{"name":"domain","required":true,"deprecated":false,"default":true,"secret":false,"description":"Domain to look up"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DrawRelatedIncidentsCanvas","version":6,"name":"DrawRelatedIncidentsCanvas","type":"python","tags":null,"contextKeys":[],"comment":"Draw incidents and indicators on the canvas to map and visualize their connections.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sklearn:1.0.0.17983","modified":"2021-09-05T10:48:03.02762+03:00","scriptTarget":0,"arguments":[{"name":"incidentID","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident ID of the incident with which to update the canvas. If not specified, updates the current incident."},{"name":"relatedIncidentsIDs","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident IDs to draw on the canvas and relate to the main incident. The format can be a list of IDs or comma-separated values.","isArray":true},{"name":"indicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"Indicators to draw on the canvas. The format is a list of indicator objects.","isArray":true},{"name":"layout","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["multipartite","shell","spring","kamada_kawai","circular"],"description":"The canvas layout. Can be \"multipartite\", \"shell\", \"spring\", \"kamada_kawai\", or \"circular\".","defaultValue":"multipartite"},{"name":"overrideUserCanvas","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Override the canvas if it exists.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DT","version":7,"name":"DT","type":"python","tags":["transformer","general"],"contextKeys":[],"comment":"This automation allows the usage of DT scripts within playbooks transformers","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.71832+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Value to perform the transformation on."},{"name":"dt","required":true,"deprecated":false,"default":false,"secret":false,"description":"DT expression."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"DumpJSON","version":7,"name":"DumpJSON","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Dumps a json from context key input, and returns a json object string result","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.718527+03:00","scriptTarget":0,"arguments":[{"name":"key","required":true,"deprecated":false,"default":true,"secret":false,"description":"The context path to the json object."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"JsonStr","description":"The JSON object as string.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailAskUser","version":7,"name":"EmailAskUser","type":"javascript","tags":["email"],"contextKeys":[],"comment":"Ask a user a question via email and process the reply directly into the investigation.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714452+03:00","scriptTarget":0,"arguments":[{"name":"email","required":false,"deprecated":false,"default":true,"secret":false,"description":"The email of the user to ask"},{"name":"subject","required":true,"deprecated":false,"default":false,"secret":false,"description":"The subject for the email"},{"name":"message","required":true,"deprecated":false,"default":false,"secret":false,"description":"The message to the user to ask"},{"name":"option1","required":false,"deprecated":false,"default":false,"secret":false,"description":"First option for a user reply. \"yes\" is the default."},{"name":"option2","required":false,"deprecated":false,"default":false,"secret":false,"description":"Second option for the user reply. \"no\" is the default."},{"name":"additionalOptions","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma delimited list of additional options if you have more than 2"},{"name":"task","required":false,"deprecated":false,"default":false,"secret":false,"description":"Which task should we close with the reply. If none then no playbook tasks will be closed."},{"name":"roles","required":false,"deprecated":false,"default":false,"secret":false,"description":"Send mail to all users of these roles (csv list)"},{"name":"attachIds","required":false,"deprecated":false,"default":false,"secret":false,"description":"Attachments"},{"name":"bodyType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["text","html"],"description":"Type of email body to send - text ot HTML","defaultValue":"text"},{"name":"replyAddress","required":false,"deprecated":false,"default":false,"secret":false,"description":"Address of reply for html links"},{"name":"replyEntriesTag","required":false,"deprecated":false,"default":false,"secret":false,"description":"Tag to add on email reply entries"},{"name":"persistent","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Indicates whether to use one-time entitlement or a persistent one","defaultValue":"false"},{"name":"retries","required":false,"deprecated":false,"default":false,"secret":false,"description":"Indicates how many times to try and create an entitlement in case of failure","defaultValue":"10"},{"name":"cc","required":false,"deprecated":false,"default":false,"secret":false,"description":"The CC email address"},{"name":"bcc","required":false,"deprecated":false,"default":false,"secret":false,"description":"The BCC email address"},{"name":"playbookTaskID","required":false,"deprecated":false,"default":false,"secret":false,"description":"Subplaybook ID, use ${currentPlaybookID} to get it from context, `all` to complete all tasks from all plabooks","defaultValue":"${currentPlaybookID}"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailAskUserResponse","version":7,"name":"EmailAskUserResponse","type":"javascript","tags":["Condition"],"contextKeys":["EmailAskUserResponse"],"comment":"Extract user's response from EmailAskUser reply. Returns the first textual response line of the provided entry that contains the reply body. Use ${lastCompletedTaskEntries} to analyze the previous playbook task containing the user's reply.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715276+03:00","scriptTarget":0,"arguments":[{"name":"responseEntryId","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID where EmailAskUser will complete when user replies"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailDomainBlacklist","version":7,"name":"EmailDomainBlacklist","type":"python","tags":["transformer","general","entirelist"],"contextKeys":[],"comment":"Accepts an array of domains as a blacklist, and a list of email addresses. The script then filters out any email address whose domain is in the blacklist.  The filtered list will be returned as an array.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.977","modified":"2021-09-07T09:21:43.712493+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"An array of email addresses to be filtered by domain.","isArray":true},{"name":"domain_list","required":true,"deprecated":false,"default":false,"secret":false,"description":"An array of domains to blacklist.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailDomainSquattingReputation","version":7,"name":"EmailDomainSquattingReputation","type":"javascript","tags":["email","reputation"],"contextKeys":[],"comment":"Check if an email address's domain is trying to squat other domain using Levenshtein distance algorithm","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.710935+03:00","scriptTarget":0,"arguments":[{"name":"email","required":true,"deprecated":false,"default":true,"secret":false,"description":"The email address to check"},{"name":"domain","required":true,"deprecated":false,"default":false,"secret":false,"description":"The domain list to check against for squatting (comma separated)","isArray":true},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"The similarity threshold","defaultValue":"3"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Account","description":"A user account ","type":""},{"contentPath":"","contextPath":"Account.Email","description":"The account email object","type":""},{"contentPath":"","contextPath":"Account.Email.Username","description":"The account email username","type":"string"},{"contentPath":"","contextPath":"Account.Email.Address","description":"The account email address","type":"string"},{"contentPath":"","contextPath":"Account.Email.Domain","description":"The account email domain","type":"string"},{"contentPath":"","contextPath":"Account.Email.Distance","description":"The email address distance compare to the domains in query","type":"number"},{"contentPath":"","contextPath":"Account.Email.Distance.Domain","description":"The compared domain","type":"string"},{"contentPath":"","contextPath":"Account.Email.Distance.Value","description":"The distance between the email domain and the compared domain ","type":"number"},{"contentPath":"","contextPath":"DBotScore.Indicator","description":"The Indicator","type":"string"},{"contentPath":"","contextPath":"DBotScore.Type","description":"The Indicator Type","type":"string"},{"contentPath":"","contextPath":"DBotScore.Vendor","description":"The DBot score vendor","type":"string"},{"contentPath":"","contextPath":"DBotScore.Score","description":"The DBot score","type":"number"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailDomainWhitelist","version":7,"name":"EmailDomainWhitelist","type":"python","tags":["transformer","general","entirelist"],"contextKeys":[],"comment":"Accepts an array of domains as a whitelist, and a list of email addresses. The script then filters out any email address whose domain is not in the whitelist.  The filtered list will be returned as an array.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.977","modified":"2021-09-07T09:21:43.714236+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"An array of email addresses to be filtered by domain.","isArray":true},{"name":"domain_list","required":true,"deprecated":false,"default":false,"secret":false,"description":"An array of domains to whitelist.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"emailFieldTriggered","version":7,"name":"emailFieldTriggered","type":"javascript","tags":["field-change-triggered"],"contextKeys":[],"comment":"Sends email to incident owner when selected field is triggered.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.718926+03:00","scriptTarget":0,"arguments":null,"dependsOn":{"must":["send-mail"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"EmailReputation","version":7,"name":"EmailReputation","type":"python","tags":["enhancement"],"contextKeys":[],"comment":"A context script for Email entities","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717834+03:00","scriptTarget":0,"arguments":[{"name":"email","required":true,"deprecated":false,"default":true,"secret":false,"description":"Email address to look up"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"EncodeToAscii","version":7,"name":"EncodeToAscii","type":"python","tags":[],"contextKeys":[],"comment":"Input Text Data to Encode as ASCII (Ignores any chars that aren't interpreted as ASCII)","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715487+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":false,"secret":false,"description":"Data to be encoded"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"asciiencode.encoded","description":"Data encoded in ASCII","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"EPOFindSystem","version":1,"name":"EPOFindSystem","type":"python","tags":["epo"],"contextKeys":[],"comment":"Return system info","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-24T19:36:38.251927+03:00","scriptTarget":0,"arguments":[{"name":"searchText","required":true,"deprecated":false,"default":false,"secret":false,"description":"Free text to search on. could be the hostname, agent guid etc."}],"dependsOn":{"must":["epo-command"]},"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Endpoint.Hostname","description":"Hostname","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ExampleJSScript","version":7,"name":"ExampleJSScript","type":"javascript","tags":["example"],"contextKeys":[],"comment":"This is only an example script, to showcase how to use and write JavaScript scripts","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.716087+03:00","scriptTarget":0,"arguments":[{"name":"ArgumentExample","required":true,"deprecated":false,"default":false,"secret":false,"description":"An example argument that will be passed into and used by the script"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"Exists","version":7,"name":"Exists","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Check if a given value exists in the context. Will return 'no' for empty empty arrays. To be used mostly with DQ and selectors.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711696+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":true,"secret":false,"description":"The value to check if exists - can handle arrays as well","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if given value exists in context","type":""},{"contentPath":"","contextPath":"no","description":"if given value does not exist in context","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ExportToCSV","version":7,"name":"ExportToCSV","type":"javascript","tags":["Utility","csv"],"contextKeys":[],"comment":"Export given array to csv file","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713581+03:00","scriptTarget":0,"arguments":[{"name":"fileName","required":true,"deprecated":false,"default":true,"secret":false,"description":"output filename"},{"name":"csvArray","required":true,"deprecated":false,"default":false,"secret":false,"description":"Array to export","isArray":true},{"name":"headers","required":false,"deprecated":false,"default":false,"secret":false,"description":"Array to hold the file headers in order.  Also excepts a comma separated list.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExposeIncidentOwner","version":7,"name":"ExposeIncidentOwner","type":"javascript","tags":["Utility"],"contextKeys":["IncidentOwner"],"comment":"Expose the incident owner into IncidentOwner context key","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.718863+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"IncidentOwner.name","description":"Incident owner full name","type":""},{"contentPath":"","contextPath":"IncidentOwner.email","description":"Incident owner email address","type":""},{"contentPath":"","contextPath":"IncidentOwner.phone","description":"Incident owner phone number","type":""},{"contentPath":"","contextPath":"IncidentOwner.roles","description":"Incident owner roles","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractAttackPattern","version":6,"name":"ExtractAttackPattern","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Extract Attack Pattern Threat Intel Object. After auto extract extracts the Attack Pattern IDs, this script is executed and extracts the value (name) of the Attack Pattern.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-07T09:21:43.711872+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":true,"secret":false,"description":"A comma-separated list of Attack Pattern IDs.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractDomainAndFQDNFromUrlAndEmail","version":7,"name":"ExtractDomainAndFQDNFromUrlAndEmail","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Extracts domains and FQDNs from URLs and emails.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/tld:1.0.0.23423","modified":"2021-09-07T09:21:43.716808+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":true,"secret":false,"description":"The URLs or emails to process.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractDomainFromUrlAndEmail","version":7,"name":"ExtractDomainFromUrlAndEmail","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Extract Domain(s) from URL(s) and/or Email(s)","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/tld:1.0.0.23423","modified":"2021-09-07T09:21:43.712995+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"The URL(s) or Email(s) to process","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractEmailV2","version":6,"name":"ExtractEmailV2","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Verifies that an email address is valid and only returns the address if it is valid.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.24019","modified":"2021-09-07T09:21:43.717667+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":true,"secret":false,"description":"The Emails to process.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractFQDNFromUrlAndEmail","version":7,"name":"ExtractFQDNFromUrlAndEmail","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Extracts FQDNs from URLs and emails.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/tld:1.0.0.23423","modified":"2021-09-07T09:21:43.717536+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":true,"secret":false,"description":"The URLs or emails to process.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractHTMLTables","version":7,"name":"ExtractHTMLTables","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Find tables inside HTML and extract the contents into objects using the following logic:\n- If table has a single column, just create an array of strings from the values\n- If table has 2 columns and has no header row, treat the first column as key and second as value and create a table of key/value\n- If table has a header row, create a table of objects where attribute names are the headers\n- If table does not have a header row, create table of objects where attribute names are cell1, cell2, cell3...","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/bs4","modified":"2021-09-07T09:21:43.7177+03:00","scriptTarget":0,"arguments":[{"name":"html","required":true,"deprecated":false,"default":true,"secret":false,"description":"The HTML to extract tables from"},{"name":"indexes","required":false,"deprecated":false,"default":false,"secret":false,"description":"Extract only the tables with given indexes - 0 based"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"HTMLTables","description":"The extracted HTML tables","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractIndicatorsFromTextFile","version":7,"name":"ExtractIndicatorsFromTextFile","type":"python","tags":[],"contextKeys":[],"comment":"Extract indicators from a text-based file.\nIndicators that can be extracted:\n* IP\n* Domain\n* URL\n* File Hash\n* Email Address","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.720449+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"description":"War Room entryID of the file to read."},{"name":"maxFileSize","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximal file size to load, in bytes. Default is 1000000 (1MB)."}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"Domain.Name","description":"Extracted domains","type":"string"},{"contentPath":"","contextPath":"Account.Email.Address","description":"Extracted emails","type":"string"},{"contentPath":"","contextPath":"File.MD5","description":"Extracted MD5","type":"string"},{"contentPath":"","contextPath":"File.SHA1","description":"Extracted SHA1","type":"string"},{"contentPath":"","contextPath":"File.SHA256","description":"Extracted SHA256","type":"string"},{"contentPath":"","contextPath":"IP.Address","description":"Extracted IPs","type":"string"},{"contentPath":"","contextPath":"URL.Data","description":"Extracted URLs","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ExtractIndicatorsFromWordFile","version":7,"name":"ExtractIndicatorsFromWordFile","type":"python","tags":["parser","autoextract","doc","docx","word"],"contextKeys":[],"comment":"Used to extract indicators from Word files (DOC, DOCX).\nThe script does not extract data from macros (e.g., embedded code).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/office-utils:2.0.0.21435","modified":"2021-09-07T09:21:43.720281+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"description":"The entry ID of the word document to be parsed for indicators. The document can be either in DOC or DOCX format."}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FailedInstances","version":7,"name":"FailedInstances","type":"javascript","tags":[],"contextKeys":[],"comment":"Executes a test for all integration instances available and returns detailed information about succeeded and failed integration instances.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717379+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"FailedInstances.instance","description":"The name of the failed integration instance.","type":"string"},{"contentPath":"","contextPath":"FailedInstances.brand","description":"The brand name of the failed integration instance.","type":"string"},{"contentPath":"","contextPath":"FailedInstances.category","description":"The category of the failed integration instance.","type":"string"},{"contentPath":"","contextPath":"FailedInstances.information","description":"Error information about the failed integration instance.","type":"string"},{"contentPath":"","contextPath":"FailedInstances.status","description":"The status of the instance.","type":"string"},{"contentPath":"","contextPath":"InstancesCount.FailedCount","description":"The number of failed instances.","type":"string"},{"contentPath":"","contextPath":"InstancesCount.SuccessCount","description":"The number of working instances.","type":"string"},{"contentPath":"","contextPath":"InstancesCount.TotalCount","description":"The number of total enabled instances.","type":"string"},{"contentPath":"","contextPath":"SuccessInstances.brand","description":"The brand name of the successful integration instance.","type":"string"},{"contentPath":"","contextPath":"SuccessInstances.category","description":"The category of the successful integration instance.","type":"string"},{"contentPath":"","contextPath":"SuccessInstances.information","description":"Information that the integration instance was succesful.","type":"string"},{"contentPath":"","contextPath":"SuccessInstances.instance","description":"The name of the successful integration instance.","type":"string"},{"contentPath":"","contextPath":"SuccessInstances.status","description":"The status of the instance.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"FeedRelatedIndicatorsWidget","version":7,"name":"FeedRelatedIndicatorsWidget","type":"python","tags":["dynamic-indicator-section"],"contextKeys":[],"comment":"Widget script to view information about the relationship between an indicator, entity and other indicators and connect to indicators, if relevant.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.4.18682","modified":"2021-09-07T09:21:43.713326+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FileCreateAndUpload","version":7,"name":"FileCreateAndUpload","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Will create a file (using the given data input or entry ID) and upload it to current investigation war room.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717803+03:00","scriptTarget":0,"arguments":[{"name":"filename","required":true,"deprecated":false,"default":true,"secret":false,"description":"The name of the file to be created."},{"name":"data","required":false,"deprecated":false,"default":false,"secret":false,"description":"Input data to write to file."},{"name":"entryId","required":false,"deprecated":false,"default":false,"secret":false,"description":"Entry ID contents to write into file."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FileReputation","version":7,"name":"FileReputation","type":"python","tags":["enhancement"],"contextKeys":[],"comment":"A context script for hash entities","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712927+03:00","scriptTarget":0,"arguments":[{"name":"file","required":true,"deprecated":false,"default":true,"secret":false,"description":"File hash to look up - supports MD5, SHA1 and SHA256"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FileToBase64List","version":7,"name":"FileToBase64List","type":"python","tags":["Utility","list"],"contextKeys":[],"comment":"Encode a file as base64 and store it in a Demisto list.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.716348+03:00","scriptTarget":0,"arguments":[{"name":"entryId","required":true,"deprecated":false,"default":false,"secret":false,"description":"The file entry ID."},{"name":"listName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The list name in which to store the file. The list must exist in Demisto."},{"name":"zipFile","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to zip the file before storing it in the list.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FilterByList","version":7,"name":"FilterByList","type":"python","tags":["whitelist"],"contextKeys":[],"comment":"Checks whether the specified item is in a list. The default list is the Demisto Indicators Whitelist.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712528+03:00","scriptTarget":0,"arguments":[{"name":"values","required":false,"deprecated":false,"default":true,"secret":false,"description":"The item to look for in the list.","isArray":true},{"name":"listname","required":false,"deprecated":false,"default":false,"secret":false,"description":"Name of the list against which to check the value. The default is the Indicators Whitelist.","defaultValue":"Indicators Whitelist"},{"name":"ignorecase","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to ignore the case of the item for which you are searching. Default is \"No\".","defaultValue":"No"},{"name":"matchexact","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to match the exact item in the list, or look for any string that contains it. Default is \"No\".","defaultValue":"No"},{"name":"delimiter","required":false,"deprecated":false,"default":false,"secret":false,"description":"A one-character string used to delimit fields. For example, a comma \",\" should match the list separator configuration.","defaultValue":","}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"List.ListName","description":"The name of the list you compared with.","type":"string"},{"contentPath":"","contextPath":"List.In","description":"The list of items in the list.","type":"Unknown"},{"contentPath":"","contextPath":"List.NotIn","description":"The list of items not in the list.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"FindDuplicateEmailIncidents","version":3,"name":"FindDuplicateEmailIncidents","type":"python","tags":["ml","phishing"],"contextKeys":[],"comment":"Can be used to find duplicate emails for incidents of type Phishing, including  malicious, spam, and legitimate emails.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sklearn:1.0.0.23593","modified":"2021-08-28T19:58:23.722456+03:00","scriptTarget":0,"arguments":[{"name":"incidentTypeFieldName","required":false,"deprecated":false,"default":false,"secret":false,"description":"The name of the incident field where its type is stored. Default is \"type\". Change this arguement only in case you use a custom field for specifying incident type.","defaultValue":"type"},{"name":"incidentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separatetd list of incident types by which to filter. The default is the current incident type. Specify \"None\" to ignore incident type from deduplication logic."},{"name":"existingIncidentsLookback","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to search for duplicated existing incidents. Date format is the same as in the incidents query page. For example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\").","defaultValue":"30 days ago"},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional text by which to query incidents."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to fetch. The default value is 3000.","defaultValue":"3000"},{"name":"emailSubject","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Subject of the email."],"description":"Subject of the email.","defaultValue":"emailsubject"},{"name":"emailBody","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"Body of the email.","defaultValue":"emailbody"},{"name":"emailBodyHTML","required":false,"deprecated":false,"default":false,"secret":false,"description":"HTML body of the email.","defaultValue":"emailbodyhtml"},{"name":"emailFrom","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident fields contains the email from value. ","defaultValue":"emailfrom"},{"name":"fromPolicy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["TextOnly","Exact","Domain"],"description":"Whether to take into account the email from field for deduplication. \"TextOnly\" - incidents will be considered as duplicated based on test similarity only, ignoring the sender's adress. \"Exact\" - incidents will be considered as duplicated if their text is similar and their sender is the same. \"Domain\" -  incidents will be considered as duplicated if their text is similar and their senders' adress has the same domain. Default is \"Domain\".","defaultValue":"TextOnly"},{"name":"statusScope","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["All","ClosedOnly","NonClosedOnly"],"description":"Whether to compare the new incident to past closed or non closed incidents only. Default is \"All\".","defaultValue":"All"},{"name":"closeAsDuplicate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Wheter to close or not the current incident if duplicate incident found","defaultValue":"false"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Threshold to consider incident as duplication, number between 0-1","defaultValue":"0.99"},{"name":"maxIncidentsToReturn","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of duplicate incidents ids to return. Default is 20.","defaultValue":"20"},{"name":"populateFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident fields to poplulate."},{"name":"exsitingIncidentsLookback","required":false,"deprecated":false,"default":false,"secret":false,"description":"Deprecated, use the *existingIncidentsLookback* argument instead.","defaultValue":"30 days ago"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"duplicateIncident","description":"The oldest duplicate incident found with the highest simalirty to the current incdient.","type":"unknown"},{"contentPath":"","contextPath":"duplicateIncident.id","description":"Duplicate incident ID.","type":"string"},{"contentPath":"","contextPath":"duplicateIncident.rawId","description":"Duplicate incident ID.","type":"Unknown"},{"contentPath":"","contextPath":"duplicateIncident.name","description":"Duplicate incident name.","type":"Unknown"},{"contentPath":"","contextPath":"duplicateIncident.similarity","description":"Number in range 0-1 which describe the similarity between the existing incident and the new incident. ","type":"Unknown"},{"contentPath":"","contextPath":"isDuplicateIncidentFound","description":"Whether a duplicate incident was found (\"true\" or \"false\").","type":"boolean"},{"contentPath":"","contextPath":"allDuplicateIncidents","description":"All duplicate incidents found which their simalirty with the new incidnet exceeds the threshold.","type":"Unknown"},{"contentPath":"","contextPath":"allDuplicateIncidents.id","description":"A list of all duplicate incidents IDs found.","type":"Unknown"},{"contentPath":"","contextPath":"allDuplicateIncidents.rawId","description":"A list of all duplicate incidents IDs found.","type":"Unknown"},{"contentPath":"","contextPath":"allDuplicateIncidents.name","description":"A list of all duplicate incidents names found.","type":"Unknown"},{"contentPath":"","contextPath":"allDuplicateIncidents.similarity","description":"A list of the simlairty between duplicate incidents and new the incident of all duplicate incidents names found.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"findIncidentsWithIndicator","version":7,"name":"findIncidentsWithIndicator","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Lookup incidents with specified indicator. Use currentIncidentId to omit the existing incident from output","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715009+03:00","scriptTarget":0,"arguments":[{"name":"indicator","required":true,"deprecated":false,"default":true,"secret":false,"description":"Indicator to search for"}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"IncidentsWithIndicator.Indicator","description":"Indicator that was found in other incidents","type":""},{"contentPath":"","contextPath":"IncidentsWithIndicator.incidentIDs","description":"Incident IDs that the indicator was found in","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"FindSimilarIncidents","version":7,"name":"FindSimilarIncidents","type":"python","tags":["dedup","duplicate","incidents"],"contextKeys":[],"comment":"Finds similar incidents by common incident keys, labels, custom fields or context keys.\nIt's highly recommended to use incident keys if possible (e.g., \"type\" for the same incident type).\nFor best performance, it's recommended to avoid using context keys if possible (for example, if the value also appears in a label key, use label).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.18413","modified":"2021-09-07T09:21:43.719947+03:00","scriptTarget":0,"arguments":[{"name":"similarIncidentKeys","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of identical incident keys."},{"name":"similarLabelsKeys","required":false,"deprecated":true,"default":false,"secret":false,"description":"A comma-separated list of similar label keys. Comma separated value. Also supports allowing X different words between labels, within the following way: label_name:X, where X is the number of words. X can also be '*' for contains. For example: the value \"Email/subject:*\" will consider  email subject similar, if one is substring of the other."},{"name":"similarContextKeys","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of similar context keys. Also supports allowing X different words between values (see the labels description)."},{"name":"similarCustomFields","required":false,"deprecated":true,"default":false,"secret":false,"description":"A comma-separated list of Similar custom fields keys. Also supports allowing X different words between values (see the labels description)."},{"name":"ignoreClosedIncidents","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to ignore closed incidents as duplicate candidates. Can be \"yes\" (ignore) or \"no\" (don't ignore). The default value is \"yes\".","defaultValue":"yes"},{"name":"maxNumberOfIncidents","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of incidents to query.","defaultValue":"1000"},{"name":"hoursBack","required":false,"deprecated":false,"default":false,"secret":false,"description":"Query incidents in the last X hours. Supports float value.","defaultValue":"72"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["occurred","created","modified"],"description":"Filter incidents by this time field.","defaultValue":"created"},{"name":"maxResults","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of results to display.","defaultValue":"10"},{"name":"similarIncidentFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of similar incident fields keys. Also supports allowing X different words between values (see the labels description)."},{"name":"filterQuery","required":false,"deprecated":false,"default":false,"secret":false,"description":"Use this query condition when fetching duplicate incidents."},{"name":"incidentFieldsAppliedCondition","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["AND","OR"],"description":"The condition to apply between incident fields. Can be \"OR\" or \"AND\". This will apply only for fields with \"exact match\".","defaultValue":"AND"},{"name":"skipMissingValues","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to skip the incident if it does not have specific key. Can be \"yes\" (skip) or \"no\" (don't skip). The default value is \"yes\". WARNING: if no fields exist in the incident, random incidents might be returned as results due to the empty condition.","defaultValue":"yes"}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"similarIncident.rawId","description":"Similar incident ID.","type":"string"},{"contentPath":"","contextPath":"isSimilarIncidentFound","description":"Whether a similar incident was found (\"true\" or \"false\").","type":"boolean"},{"contentPath":"","contextPath":"similarIncident","description":"Similar incident.","type":"unknown"},{"contentPath":"","contextPath":"similarIncident.name","description":"Similar incident name.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"FindSimilarIncidentsByText","version":6,"name":"FindSimilarIncidentsByText","type":"python","tags":["ml","dedup","duplicate","incidents"],"contextKeys":[],"comment":"Find similar incidents by text comparison - the algorithm based on TF-IDF method.\nTo read more about this method: https://en.wikipedia.org/wiki/Tf%E2%80%93idf\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sklearn:1.0.0.19770","modified":"2021-09-05T10:48:03.028293+03:00","scriptTarget":0,"arguments":[{"name":"textFields","required":true,"deprecated":false,"default":false,"secret":false,"description":"Text fields to compare. Can be label name, incident fields or custom fields. Comma separated value. ","defaultValue":"name,details"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"TFIDF score threshold (to consider incident as similar).","defaultValue":"0.95"},{"name":"maximumNumberOfIncidents","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of incidents to check.","defaultValue":"1000"},{"name":"timeFrameHours","required":false,"deprecated":false,"default":false,"secret":false,"description":"Check incidents in this time frame.","defaultValue":"72"},{"name":"ignoreClosedIncidents","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Ignore close incidents.","defaultValue":"no"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["occurred","created","modified"],"description":"Time field to consider.","defaultValue":"occurred"},{"name":"maxResults","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of similar candidates.","defaultValue":"10"},{"name":"minTextLength","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum required text length to compare.","defaultValue":"50"},{"name":"preProcessText","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to pre-process text (removing HTML, normilize words)","defaultValue":"false"}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"similarIncident.rawId","description":"Similar incident ID.","type":"string"},{"contentPath":"","contextPath":"isSimilarIncidentFound","description":"Is similar incident found? (true\\false)","type":"boolean"},{"contentPath":"","contextPath":"similarIncident","description":"Similar incident.","type":"Unknown"},{"contentPath":"","contextPath":"similarIncident.name","description":"Similar incident name.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"FirstArrayElement","version":7,"name":"FirstArrayElement","type":"python","tags":["general","transformer","entirelist"],"contextKeys":[],"comment":"Returns the first element of an array.  If the value passed is not an array, it returns the original value that was passed.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.2728","modified":"2021-09-07T09:21:43.716446+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"An array for which to return the first element.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"FormattedDateToEpoch","version":7,"name":"FormattedDateToEpoch","type":"python","tags":["transformer","date"],"contextKeys":[],"comment":"Converts a custom-formatted timestamp to UNIX epoch time. Use it to convert custom time stamps to a Demisto date field.  Uses the python strptime format.  For more info, see: https://docs.python.org/3.7/library/datetime.html#strftime-and-strptime-behavior","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.3.286","modified":"2021-09-07T09:21:43.71243+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Time stamp to convert"},{"name":"formatter","required":true,"deprecated":false,"default":false,"secret":false,"description":"Python 'strptime' formatter string","defaultValue":"%Y-%m-%dT%H:%M:%S"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GenerateInvestigationSummaryReport","version":7,"name":"GenerateInvestigationSummaryReport","type":"javascript","tags":["post-processing"],"contextKeys":[],"comment":"A script to generate investigation summary report in an automated way\nCan be used in post-processing flow as well.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.716497+03:00","scriptTarget":0,"arguments":[{"name":"name","required":false,"deprecated":false,"default":true,"secret":false,"description":"Report name to generate (should correspond with report type)","defaultValue":"Investigation Summary"},{"name":"type","required":false,"deprecated":false,"default":false,"secret":false,"description":"Report type to generate (should correspond with report name)","defaultValue":"pdf"},{"name":"incidentId","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to generate report for"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Report.Name","description":"Report file name","type":"string"},{"contentPath":"","contextPath":"Report.FileID","description":"File ID of the report","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GeneratePassword","version":7,"name":"GeneratePassword","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"This function generates a password and allows various parameters to customize the properties of the password depending on the use case (e.g. password complexity requirements).  The default behavior is to generate a password of  *random length* including all four character classes (upper, lower, digits, symbols) with at least five and at most ten characters per class. \n\nThe min_* values all default to 0. This means that if the command is executed in this way:\n!GeneratePassword max_lcase=10\nIt is possible that a password of length zero could be generated. It is therefore recommended to always include a min_* parameter that matches. \n\nThe debug parameter will print certain properties of the command into the WarRoom for easy diagnostics.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.718039+03:00","scriptTarget":0,"arguments":[{"name":"min_lcase","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of lower case characters to include in password.","defaultValue":"0"},{"name":"max_lcase","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of lower case characters to include in password.","defaultValue":"10"},{"name":"min_ucase","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of upper case characters to include in password.","defaultValue":"0"},{"name":"max_ucase","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of upper case characters to include in password.","defaultValue":"10"},{"name":"min_digits","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of digits to include in password.","defaultValue":"0"},{"name":"max_digits","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of digits to include in password.","defaultValue":"10"},{"name":"min_symbols","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of symbols to include in password.","defaultValue":"0"},{"name":"max_symbols","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of symbols to include in password.","defaultValue":"10"},{"name":"debug","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Enable to see various values as they pass through the function.","defaultValue":"false"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"NEW_PASSWORD","description":"The new password generated for the user.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GenerateRandomString","version":7,"name":"GenerateRandomString","type":"python","tags":[],"contextKeys":[],"comment":"Generates random string","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.720134+03:00","scriptTarget":0,"arguments":[{"name":"Length","required":true,"deprecated":false,"default":false,"secret":false,"description":"Length of the string"},{"name":"Punctuation","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If the string will include punctuation."},{"name":"Lowercase","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If the string will include letters."},{"name":"Uppercase","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"if uppercase should be included"},{"name":"Digits","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If digits should be included"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"RandomString","description":"The generated string.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GenerateRandomUUID","version":7,"name":"GenerateRandomUUID","type":"python","tags":[],"contextKeys":[],"comment":"Generates a random UUID (UUID 4).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.716614+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"GeneratedUUID","description":"The generated UUID.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GenerateSummaryReports","version":7,"name":"GenerateSummaryReports","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Generate report summaries for the passed incidents.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714019+03:00","scriptTarget":0,"arguments":[{"name":"name","required":false,"deprecated":false,"default":false,"secret":false,"description":"Template name of the generated report in the incident.","defaultValue":"Investigation Summary"},{"name":"type","required":false,"deprecated":false,"default":false,"secret":false,"description":"Report type to generate.","defaultValue":"pdf"},{"name":"ids","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident IDs for which to generate.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"SummaryReports.IncidentID","description":"Incident ID of each generated report.","type":"number"},{"contentPath":"","contextPath":"SummaryReports.ReportName","description":"The report name.","type":"string"},{"contentPath":"","contextPath":"SummaryReports.File","description":"File name of the report file.","type":"string"},{"contentPath":"","contextPath":"SummaryReports.FileID","description":"File ID of the generated report.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GenericPollingScheduledTask","version":7,"name":"GenericPollingScheduledTask","type":"javascript","tags":[],"contextKeys":[],"comment":"Runs the polling command repeatedly, completes a blocking manual task when polling is done.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71824+03:00","scriptTarget":0,"arguments":[{"name":"ids","required":true,"deprecated":false,"default":false,"secret":false,"description":"List of IDs to poll","isArray":true},{"name":"pendingIds","required":false,"deprecated":false,"default":false,"secret":false,"description":"IDs with pending status"},{"name":"pollingCommand","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the polling command to run"},{"name":"pollingCommandArgName","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the argument of the polling command","defaultValue":"ids"},{"name":"interval","required":true,"deprecated":false,"default":false,"secret":false,"description":"Polling frequency - how often the polling command should run (minutes)"},{"name":"timeout","required":true,"deprecated":false,"default":false,"secret":false,"description":"How much time to poll before declaring a timeout and resuming the playbook (minutes)"},{"name":"playbookId","required":false,"deprecated":false,"default":false,"secret":false,"description":"The ID of the playbook that contains the manual task which will be completed once the polling is done."},{"name":"tag","required":true,"deprecated":false,"default":false,"secret":false,"description":"The tag of the blocking manual task (\"Wait For Polling Task To Finish\")","defaultValue":"polling"},{"name":"additionalPollingCommandArgNames","required":false,"deprecated":false,"default":false,"secret":false,"description":"Names of additional arguments for the polling command (e.g. arg1,arg2,...)","isArray":true},{"name":"additionalPollingCommandArgValues","required":false,"deprecated":false,"default":false,"secret":false,"description":"Commas separated arguments values of the polling command","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetByIncidentId","version":7,"name":"GetByIncidentId","type":"python","tags":[],"contextKeys":[],"comment":"Gets a value from the specified incident's context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.1900","modified":"2021-09-07T09:21:43.718111+03:00","scriptTarget":0,"arguments":[{"name":"incident_id","required":false,"deprecated":false,"default":true,"secret":false,"description":"The ID of the incident from which to get context values. The default is the current incident."},{"name":"get_key","required":true,"deprecated":false,"default":false,"secret":false,"description":"The key to get"},{"name":"set_key","required":false,"deprecated":false,"default":false,"secret":false,"description":"The key to set. The default is \"get_key\"."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetDockerImageLatestTag","version":7,"name":"GetDockerImageLatestTag","type":"python","tags":[],"contextKeys":[],"comment":"Gets docker image latest tag. Script simulates the docker pull flow but doesn't actually pull the image. Returns an entry with the docker image latest tag if all is good, otherwise will return an error.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715165+03:00","scriptTarget":0,"arguments":[{"name":"docker_image","required":true,"deprecated":false,"default":false,"secret":false,"description":"Docker image full name with version: For example: demisto/python"},{"name":"use_system_proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Use system proxy settings","defaultValue":"yes"},{"name":"trust_any_certificate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Trust any certificate (not secure)","defaultValue":"no"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetDomainDNSDetails","version":7,"name":"GetDomainDNSDetails","type":"python","tags":[],"contextKeys":[],"comment":"Returns DNS details for a domain","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/dnspython:1.0.0.12410","modified":"2021-09-07T09:21:43.7159+03:00","scriptTarget":0,"arguments":[{"name":"domain","required":true,"deprecated":false,"default":false,"secret":false,"description":"The domain to query"},{"name":"server","required":false,"deprecated":false,"default":false,"secret":false,"description":"IP of the DNS Server to use (default: system settings)"},{"name":"use_tcp","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Use TCP for the query (default: false)","defaultValue":"false"},{"name":"qtype","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma separated list of query types (default: CNAME,NS,A,AAAA)","defaultValue":"CNAME,NS,A,AAAA"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DomainDNSDetails.A","description":"Domain A records.","type":"String"},{"contentPath":"","contextPath":"DomainDNSDetails.AAAA","description":"Domain AAAA records.","type":"String"},{"contentPath":"","contextPath":"DomainDNSDetails.CNAME","description":"Domain CNAME records.","type":"String"},{"contentPath":"","contextPath":"DomainDNSDetails.NS","description":"Domain NS records.","type":"String"},{"contentPath":"","contextPath":"DomainDNSDetails.domain","description":"Domain name used in the query.","type":"String"},{"contentPath":"","contextPath":"DomainDNSDetails.server","description":"Name server that returned the result.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetDuplicatesMlv2","version":7,"name":"GetDuplicatesMlv2","type":"python","tags":["dedup","incidents","ml","duplicate"],"contextKeys":[],"comment":"Deprecated. Use the \"PhishingDedupPreprocessingRule\" script instead.\nFind duplicate incidents candidates.\nUsing machine learning techniques with pre-defined data (can also use data from the local environment), this script takes into consideration different features such as: labels comparison, email labels (relevant for phishing), incident time difference and shared indicators, which can be customized by the arguments.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/machine-learning:1.0.0.22015","modified":"2021-09-07T09:21:43.717442+03:00","scriptTarget":0,"arguments":[{"name":"maxNumberOfIncidents","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of incidents (to fetch from the database) to consider for machine-learning calculation.","defaultValue":"1000"},{"name":"timeFrameHours","required":false,"deprecated":false,"default":false,"secret":false,"description":"Check candidates for duplication in this time frame of number of days from\\after.","defaultValue":"72"},{"name":"ignoreClosedIncidents","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Ignore closed incidents as potential candidates.","defaultValue":"yes"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Threshold to consider incident as duplication, number between 0-1","defaultValue":"0.5"},{"name":"compareIndicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"Indicators to consider for duplicate calculation, from the following options: Email, IP, Domain, File SHA256, File MD5, URL. Comma separated values","defaultValue":"Email, IP, Domain, File SHA256, File MD5, URL"},{"name":"compareEmailLabels","required":false,"deprecated":false,"default":false,"secret":false,"description":"Email labels to consider for duplicate calculation, from the following options: Email/headers/From, Email/headers/Subject, Email/text, Email/html, Email/attachments. Comma separated values. If your labels are different from the default, please specify your labels as follows: LABEL_NAME:YOUR_LABEL_NAME. For example, email/from:email_sender.","defaultValue":"Email/headers/From, Email/headers/Subject, Email/text, Email/html, Email/attachments"},{"name":"compareOtherLabels","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"If yes - take into account all labels keys.","defaultValue":"yes"},{"name":"compareIncidentTimeDiff","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"If yes - take into account incident time differences.","defaultValue":"yes"},{"name":"UseLocalEnvDuplicatesInLastDays","required":false,"deprecated":false,"default":false,"secret":false,"description":"Consider duplicate incident examples from the local environment within the last \"X\" days. Default is 0, which means do not use.","defaultValue":"0"},{"name":"ipComparisonSubnetMask","required":false,"deprecated":false,"default":false,"secret":false,"description":"Consider the equity of the IP base on this subnet mask (a valid value is a number between 0 - 32). Default is 32 which means an exact match of the IP addresses.","defaultValue":"32"},{"name":"maxResults","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of candidates in the output (in incidents candidate list).","defaultValue":"10"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["occurred","created","modified"],"description":"Time field to consider.","defaultValue":"created"}],"deprecated":true,"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"similarIncident","description":"Similar incident.","type":"unknown"},{"contentPath":"","contextPath":"isSimilarIncidentFound","description":"Found any duplicate?","type":"boolean"},{"contentPath":"","contextPath":"similarIncidentList","description":"Similar incident candidates list.","type":""},{"contentPath":"","contextPath":"similarIncident.rawId","description":"Similar incident ID.","type":"string"},{"contentPath":"","contextPath":"similarIncident.name","description":"Similar incident name.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetFieldsByIncidentType","version":7,"name":"GetFieldsByIncidentType","type":"python","tags":[],"contextKeys":[],"comment":"Returns the incident field names associated to the specified incident type.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4583","modified":"2021-09-07T09:21:43.713034+03:00","scriptTarget":0,"arguments":[{"name":"incident_type","required":true,"deprecated":false,"default":false,"secret":false,"description":"The incident type for which to return incident field names."},{"name":"short_names","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to shorten the incident field names. If \"true\", will cause output to use shortened field names. The default value is \"false\".","defaultValue":"false"},{"name":"exclude_system","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to only return non-system fields. If \"true\", will only output non-system fields. The default value is \"false\".","defaultValue":"false"},{"name":"explicit_only","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to only include fields that are explicitly associated to the incident type. If \"true\", only fields which are explicitly associated to the incident type will be included (i.e., excludes fields for which the \"associate to any\" checkbox is selected). The default value is \"false\".","defaultValue":"false"},{"name":"pprint","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Pretty-prints the output.","defaultValue":"true"}],"dependsOn":{"must":["|||demisto-api-get"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetIncidentsByQuery","version":6,"name":"GetIncidentsByQuery","type":"python","tags":["ml"],"contextKeys":[],"comment":"Gets a list of incident objects and the associated incident outputs that match the specified query and filters. The results are returned in a structured data file.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-05T10:48:03.028159+03:00","scriptTarget":0,"arguments":[{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional text by which to query incidents."},{"name":"incidentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separatetd list of incident types by which to filter."},{"name":"fromDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to filter incidents. Date format will be the same as in the incidents query page, for example: \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"toDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date by which to filter incidents. Date format will be the same as in the incidents query page, for example: \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\")."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to fetch. The default value is 3000.","defaultValue":"3000"},{"name":"includeContext","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to query and fetch incident context. Can be \"true\" or \"false\". The default is \"false\".","defaultValue":"false"},{"name":"timeField","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["created","modified"],"description":"The incident field to specify for the date range. Can be \"created\" or \"modified\". The default is \"created\". Due to performance considerations, you should only use \"modified\" if you have a large number of incidents.","defaultValue":"created"},{"name":"NonEmptyFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of non-empty value incident field names by which to filter incidents."},{"name":"outputFormat","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["json","pickle"],"description":"The output file format.","defaultValue":"pickle"},{"name":"populateFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of fields in the object to poplulate."},{"name":"pageSize","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incidents query batch size","defaultValue":"500"}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"GetIncidentsByQuery.Filename","description":"The output file name.","type":"String"},{"contentPath":"","contextPath":"GetIncidentsByQuery.FileFormat","description":"The output file format.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetIndicatorDBotScore","version":7,"name":"GetIndicatorDBotScore","type":"python","tags":["DBot","Enrichment"],"contextKeys":[],"comment":"Add into the incident's context the system internal DBot score for the input indicator.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.714733+03:00","scriptTarget":0,"arguments":[{"name":"indicator","required":true,"deprecated":false,"default":true,"secret":false,"description":"The indicator to get the reputation of. Only system indicator types are supported.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DBotScore.Indicator","description":"The indicator.","type":"string"},{"contentPath":"","contextPath":"DBotScore.Type","description":"The indicator type.","type":"string"},{"contentPath":"","contextPath":"DBotScore.Vendor","description":"The DBot score vendor.","type":"string"},{"contentPath":"","contextPath":"DBotScore.Score","description":"The DBot score.","type":"number"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetIndicatorDBotScoreFromCache","version":6,"name":"GetIndicatorDBotScoreFromCache","type":"python","tags":[],"contextKeys":[],"comment":"Get the overall score for the indicator as calculated by DBot.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.24019","modified":"2021-09-07T09:21:43.718708+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The single indicator value to check"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetIndicatorsByQuery","version":6,"name":"GetIndicatorsByQuery","type":"python","tags":["ml"],"contextKeys":[],"comment":"Gets a list of indicator objects and the associated indicator outputs that match the specified query and filters. The results are returned in a structured data file.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.4.18682","modified":"2021-09-05T10:48:03.02804+03:00","scriptTarget":0,"arguments":[{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"The indicators query."},{"name":"dontPopulateFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of fields in the object to ignore."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of indicators to fetch.","defaultValue":"10000"},{"name":"offset","required":false,"deprecated":false,"default":false,"secret":false,"description":"The results offset page. Only change when the number of the results exceed the limit.","defaultValue":"0"},{"name":"addRandomSalt","required":false,"deprecated":false,"default":false,"secret":true,"description":"Salt for the hash function."},{"name":"fieldsToHash","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of fields to hash. Supports wildcard \"*\"."},{"name":"populateFields","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of fields in the object to poplulate. Defaults are id, score, and investigationIDs.","defaultValue":"id,score,investigationIDs"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetLargestInputsAndOuputsInIncidents","version":3,"name":"GetLargestInputsAndOuputsInIncidents","type":"python","tags":["widget"],"contextKeys":[],"comment":"Returns inputs and outputs larger than 1 MB from all Cortex XSOAR investigations.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.15759","modified":"2021-09-07T09:21:43.720567+03:00","scriptTarget":0,"arguments":[{"name":"to","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date for fetching incidents in ISO format. Incidents will be fetched until the last day of the specified month. For example, if you specify 2020-08-14, incidents created on the specified \"from\" date until  2020-08-31 will be returned."},{"name":"from","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date for fetching incidents in ISO format. Incidents will be fetched starting from the first day of the specified month. For example, if you specify 2020-08-14, incidents created on 2020-08-01 will be returned."},{"name":"table_result","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Change to true to return a result suitable for a table widget. By default the return will be in Markdown.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetLargestInvestigations","version":3,"name":"GetLargestInvestigations","type":"python","tags":["widget"],"contextKeys":[],"comment":"Returns all investigations larger than 1 MB from all Cortex XSOAR.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.12176","modified":"2021-09-07T09:21:43.720606+03:00","scriptTarget":0,"arguments":[{"name":"to","required":false,"deprecated":false,"default":false,"secret":false,"description":"The end date for fetching incidents in ISO format. Incidents will be fetched until the last day of the specified month. For example, if you specify 2020-08-14, incidents created on the specified \"from\" date until  2020-08-31 will be returned."},{"name":"from","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date for fetching incidents in ISO format. Incidents will be fetched starting from the first day of the specified month. For example, if you specify 2020-08-14, incidents created on 2020-08-01 will be returned."},{"name":"table_result","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Change to true to return a result suitable for a table widget. By default the return will be in Markdown.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GetListRow","version":7,"name":"GetListRow","type":"python","tags":null,"contextKeys":[],"comment":"Parses a list by header and value.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-07T09:21:43.714881+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"Value to search for. If you supply a value, you need to supply the \"header\" argument also."},{"name":"header","required":false,"deprecated":false,"default":false,"secret":false,"description":"Header to filter lines by. If you supply a header, you need to supply the \"value\" argument."},{"name":"list_name","required":true,"deprecated":false,"default":false,"secret":false,"description":"The list name in which to search."},{"name":"parse_all","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["True","False"],"description":"If \"True\", parses the entire list into the context. Can be \"True\" or \"False\". Default is \"False\".","defaultValue":"False"},{"name":"list_separator","required":false,"deprecated":false,"default":false,"secret":false,"description":"Separator to split the list by.","defaultValue":","}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"GetListRow.Header","description":"Header in which the search was performed.","type":"String"},{"contentPath":"","contextPath":"GetListRow.Value","description":"Value to search for.","type":"String"},{"contentPath":"","contextPath":"GetListRow.ListName","description":"The name of the list that was searched..","type":"String"},{"contentPath":"","contextPath":"GetListRow.ParseAll","description":"If \"True\", the entire list was parsed into the context.","type":"String"},{"contentPath":"","contextPath":"GetListRow.Results","description":"All parse results of the list.","type":"UnKnown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetMLModelEvaluation","version":6,"name":"GetMLModelEvaluation","type":"python","tags":["ml"],"contextKeys":[],"comment":"Finds a threshold for ML model, and performs an evaluation based on it","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ml:1.0.0.23334","modified":"2021-09-05T10:48:03.028523+03:00","scriptTarget":0,"arguments":[{"name":"yTrue","required":true,"deprecated":false,"default":false,"secret":false,"description":"A list of labels of the test set","isArray":true},{"name":"yPred","required":true,"deprecated":false,"default":false,"secret":false,"description":"A list of dictionaries contain probability predictions for all classes","isArray":true},{"name":"targetPrecision","required":false,"deprecated":false,"default":false,"secret":false,"description":"minimum precision of all classes, ranges 0-1","defaultValue":"0.5"},{"name":"targetRecall","required":false,"deprecated":false,"default":false,"secret":false,"description":"minimum recall of all classes, ranges 0-1","isArray":true,"defaultValue":"0.0"},{"name":"detailedOutput","required":false,"deprecated":false,"default":false,"secret":false,"predefined":["true","false"],"description":"if set to 'true', the output will include a full exaplanation of the confidence threshold meaning","isArray":true,"defaultValue":"true"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"GetMLModelEvaluation.Threshold","description":"The found thresholds which meets the conditions of precision and recall","type":"String"},{"contentPath":"","contextPath":"GetMLModelEvaluation.ConfusionMatrixAtThreshold","description":"The model evaluation confusion matrix for mails above the threhsold.","type":"Unknown"},{"contentPath":"","contextPath":"GetMLModelEvaluation.Metrics","description":"Metrics per each class (includes precision, true positive, coverage, etc.)","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetStringsDistance","version":7,"name":"GetStringsDistance","type":"python","tags":["server","phishing","Condition"],"contextKeys":[],"comment":"Get the string distance between inputString and compareString (could be a comma separated list) based on Levenshtein Distance algorithm.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719107+03:00","scriptTarget":0,"arguments":[{"name":"compareString","required":true,"deprecated":false,"default":true,"secret":false,"description":"The string(s) to compare with the input string. (could be multiple strings with a comma separator)"},{"name":"inputString","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input string to compare"},{"name":"distance","required":false,"deprecated":false,"default":false,"secret":false,"description":"Distance that is considered close","defaultValue":"3"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"LevenshteinDistance","description":"The closeness of the sender domain to our configured domains","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetTime","version":7,"name":"GetTime","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Retrieves the current date and time.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715391+03:00","scriptTarget":0,"arguments":[{"name":"date","required":false,"deprecated":false,"default":true,"secret":false,"description":"The date to use in the object"},{"name":"dateFormat","required":false,"deprecated":false,"default":false,"secret":false,"description":"The date format for the result, can be ISO/GMT/UTC/Locale/Date/Year/Month/Day/DayInWeek/Hours"},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"prefix the keys in the context for the results"},{"name":"minutesAgo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Will subtract minutesAgo minutes from current time"},{"name":"hoursAgo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Will subtract hoursAgo hours from current time"},{"name":"daysAgo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Will subtract daysAgo days from current time"},{"name":"monthsAgo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Will subtract monthsAgo months from current time"},{"name":"yearsAgo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Will subtract yearsAgo years from current time"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"TimeNowUnix","description":"number of milliseconds since 1970/01/01","type":""},{"contentPath":"","contextPath":"TimeNow","description":"current time in ISO format","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"GetValuesOfMultipleFields","version":7,"name":"GetValuesOfMultipleFields","type":"python","tags":["transformer"],"contextKeys":[],"comment":"The script receives a list of fields and a context key base path. For example, Key=demisto.result List=username,user and will get all of the values from demisto.result.username and demisto.result.user.\nThe Get field of the task must have the value ${.=[]}.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.5420","modified":"2021-09-07T09:21:43.720172+03:00","scriptTarget":0,"arguments":[{"name":"key","required":true,"deprecated":false,"default":false,"secret":false,"description":"The base context path under which to find the fields. For example Demisto.Results."},{"name":"list","required":true,"deprecated":false,"default":false,"secret":false,"description":"The list of fields to retrieve from context. The list can contain comma seperated values. For example key1,key1","isArray":true},{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"The value to set in context for the key."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"GreaterCidrNumAddresses","version":7,"name":"GreaterCidrNumAddresses","type":"python","tags":["filter"],"contextKeys":[],"comment":"Check if number of availble addresses in IPv4 or IPv6 CIDR is greater than given number.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.2245","modified":"2021-09-07T09:21:43.711905+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"IP/CIDR, e.g. 192.168.0.0/24"},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"The number of addresses to be greater from."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"HelloWorldScript","version":2,"name":"HelloWorldScript","type":"python","tags":["helloworld"],"contextKeys":[],"comment":"Hello World Script","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.12176","modified":"2021-08-24T19:09:03.055326+03:00","scriptTarget":0,"arguments":[{"name":"name","required":false,"deprecated":false,"default":false,"secret":false,"description":"Hello command - prints hello to anyone."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"HelloWorld.hello","description":"Should be Hello **something** here.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"hideFieldsOnNewIncident","version":7,"name":"hideFieldsOnNewIncident","type":"python","tags":["field-display"],"contextKeys":[],"comment":"When you apply this script to an incident field, that incident field is hidden for new incidents, and it displays in edit mode.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715717+03:00","scriptTarget":0,"arguments":[{"name":"incident","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident object"},{"name":"field","required":false,"deprecated":false,"default":false,"secret":false,"description":"Field definition object"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"HighlightWords","version":6,"name":"HighlightWords","type":"python","tags":[],"contextKeys":[],"comment":"Highlight words inside a given text.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.028419+03:00","scriptTarget":0,"arguments":[{"name":"text","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input text to hightlight the words in."},{"name":"terms","required":true,"deprecated":false,"default":false,"secret":false,"description":"Terms to hightlight in the text. Can be words or sentances (that does not includes comma). Notice that if you used a sentances and word, the word shouldn't be as part of a sentance, for example \"thank,thank you\" is invalid input. Comma-separated value."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"HTMLtoMD","version":7,"name":"HTMLtoMD","type":"python","tags":[],"contextKeys":[],"comment":"Converts HTML to Markdown.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/btfl-soup:1.0.1.6233","modified":"2021-09-07T09:21:43.710643+03:00","scriptTarget":0,"arguments":[{"name":"html","required":true,"deprecated":false,"default":true,"secret":false,"description":"HTML to convert to Markdown."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"HTMLtoMD.Original","description":"The original HTML that was converted to Markdown.","type":"String"},{"contentPath":"","contextPath":"HTMLtoMD.Result","description":"The Markdown that was converted from the passed HTML.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"http","version":7,"name":"http","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Sends http request. Returns the response as json.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.719707+03:00","scriptTarget":0,"arguments":[{"name":"method","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["GET","POST","DELETE","PUT"],"description":"The method for the http request"},{"name":"body","required":false,"deprecated":false,"default":false,"secret":false,"description":"The body for the http request"},{"name":"url","required":true,"deprecated":false,"default":false,"secret":false,"description":"The url for the http request"},{"name":"headers","required":false,"deprecated":false,"default":false,"secret":false,"description":"The headers for the http request, in the format of 'key1:value1,key2:value2, ...'"},{"name":"insecure","required":false,"deprecated":true,"default":false,"secret":false,"auto":"PREDEFINED","description":"Trust any certificate (not secure)"},{"name":"unsecure","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Trust any certificate (not secure)","defaultValue":"true"},{"name":"proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Use system proxy settings","defaultValue":"false"},{"name":"username","required":false,"deprecated":false,"default":false,"secret":false,"description":"The user for the http request"},{"name":"password","required":false,"deprecated":false,"default":false,"secret":true,"description":"The password for the http request"},{"name":"saveAsFile","required":false,"deprecated":false,"default":false,"secret":false,"description":"yes to save file, else no. Default is no","defaultValue":"no"},{"name":"filename","required":false,"deprecated":false,"default":false,"secret":false,"description":"Using filename from headers if filename is not given. Default is http-file"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"HttpRequest.Response","description":"The response for the http request","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"HTTPListRedirects","version":7,"name":"HTTPListRedirects","type":"python","tags":["Utility"],"contextKeys":[],"comment":"List the redirects for a given URL","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.713949+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"The URL to follow"},{"name":"useHead","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Should we use HEAD instead of GET. Safer but might not be the same response.","defaultValue":"true"},{"name":"use_system_proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Use system proxy settings","defaultValue":"false"},{"name":"trust_any_certificate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Trust any certificate (not secure)","defaultValue":"false"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"URL.Data","description":"The URL redirects from the given URL","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IAMInitADUser","version":4,"name":"IAMInitADUser","type":"python","tags":["IAM","active directory","Utility"],"contextKeys":[],"comment":"Generates password,\nSet an AD user account with this password.\nEnable the account.\nSend mail to the user with tha account information.\nThis script is running `send-mail` command, make sure there is a matching Integration configurated.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.20070","modified":"2021-09-05T10:48:03.02709+03:00","scriptTarget":0,"arguments":[{"name":"pwdGenerationScript","required":false,"deprecated":false,"default":false,"secret":false,"description":"The password generator script.","defaultValue":"GeneratePassword"},{"name":"sAMAccountName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The sAMAccountName of the employee."},{"name":"email","required":true,"deprecated":false,"default":false,"secret":false,"description":"The email of the employee."},{"name":"displayname","required":false,"deprecated":false,"default":false,"secret":false,"description":"The display name of the employee."},{"name":"to_email","required":true,"deprecated":false,"default":false,"secret":false,"description":"The email address that the password will send to."},{"name":"inc_id","required":false,"deprecated":false,"default":false,"secret":false,"description":"The incident ID."},{"name":"email_subject","required":false,"deprecated":false,"default":false,"secret":false,"description":"The subject of the email sent to IT."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"IAM.InitADUser.success","description":"True if the Active Directory user was successfully activated, false otherwise.","type":"Boolean"},{"contentPath":"","contextPath":"IAM.InitADUser.sentMail","description":"True if the mail containing the information about the user activation and its auto-generated password was successfully sent to IT, false otherwise.","type":"Boolean"},{"contentPath":"","contextPath":"IAM.InitADUser.errorDetails","description":"The error details, if exists.","type":"String"},{"contentPath":"","contextPath":"IAM.InitADUser.sendMailError","description":"The error received from send-mail command, if exists.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IdentifyAttachedEmail","version":7,"name":"IdentifyAttachedEmail","type":"python","tags":["phishing","email","Condition"],"contextKeys":["reportedemailentryid"],"comment":"Identify whether the incident includes an email message attached as an eml or msg file and return the answer to playbook. Also saves the identified entry ID to context for use for later. Commonly used in automated playbooks that handle phishing reports sent to a special phishing mailbox set up by the security team.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.714972+03:00","scriptTarget":0,"arguments":[{"name":"entryid","required":false,"deprecated":false,"default":false,"secret":false,"description":"Specific entryid to check if it is an email attachment. If not specified will check all entries of the incident.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"If incident contains an email attachment. Will also set reportedemailentryid with the entry id.","type":""},{"contentPath":"","contextPath":"no","description":"If incident does not contain an email attachment","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"If-Then-Else","version":7,"name":"If-Then-Else","type":"javascript","tags":["transformer","general"],"contextKeys":[],"comment":"A transformer for simple if-then-else logic.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717196+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"The value to evaluate"},{"name":"equals","required":false,"deprecated":false,"default":false,"secret":false,"description":"(Deprecated) If value equals this"},{"name":"then","required":false,"deprecated":false,"default":false,"secret":false,"description":"Return this value if 'condition' is true"},{"name":"else","required":false,"deprecated":false,"default":false,"secret":false,"description":"Return this value if 'condition' is false"},{"name":"condition","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["lhs===rhs","lhs!==rhs","lhs==rhs","lhs!=rhs","lhs\u003erhs","lhs\u003e=rhs","lhs\u003crhs","lhs\u003c=rhs","lhs=~rhs","lhs in list rhs","lhs not in list rhs","value===rhs","value!==rhs","value==rhs","value!=rhs","value\u003erhs","value\u003e=rhs","value\u003crhs","value\u003c=rhs","value=~rhs","value in list rhs","value not in list rhs"],"description":"The condition expression to evaluate such as lhs==rhs or lhs!=rhs. Will evaluate as value==rhs if left empty for backward compatibility."},{"name":"lhs","required":false,"deprecated":false,"default":false,"secret":false,"description":"The value to compare in the condition (left hand side)"},{"name":"rhs","required":false,"deprecated":false,"default":false,"secret":false,"description":"The value to compare in the condition (right hand side)"},{"name":"options","required":false,"deprecated":false,"default":false,"secret":false,"description":"Option flags (comma separated list): available options are `case_insensitive`, `regex_dot_all`, `regex_multiline`, `regex_full_match`, `input_data_type:then=\u003ctype\u003e`, `input_data_type:else=\u003ctype\u003e`, `input_data_type:lhs=\u003ctype\u003e` and `input_data_type:rhs=\u003ctype\u003e`. Choose `value`, `json` or `raw` for \u003ctype\u003e."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IncidentAddSystem","version":7,"name":"IncidentAddSystem","type":"javascript","tags":["management"],"contextKeys":[],"comment":"Add a remote system (such as a desktop under investigation) to an investigation (this will allow you to install and agent on the system)\n","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714122+03:00","scriptTarget":0,"arguments":[{"name":"name","required":false,"deprecated":false,"default":true,"secret":false,"description":"(default) a unique name that will be used in the investigation e.g. when installing an agent."},{"name":"username","required":false,"deprecated":false,"default":false,"secret":false,"description":"User name in the remote system."},{"name":"host","required":true,"deprecated":false,"default":false,"secret":false,"description":"(mandatory) Host IP address or network identifiable name."},{"name":"workgroup","required":false,"deprecated":false,"default":false,"secret":false,"description":"Workgroup or domain of the user."},{"name":"password","required":false,"deprecated":false,"default":false,"secret":true,"description":"User password used to log in to the remote system (by default you will be prompted to enter the password once you hit enter, however you can type the password in the command line too. If you choose the latter password will be shown)."},{"name":"credentialSet","required":false,"deprecated":false,"default":false,"secret":false,"description":"Choose credentials to apply to system (instead of username \u0026 password)."},{"name":"dmbPort","required":false,"deprecated":false,"default":false,"secret":false,"description":"Choose non-standard SMB port (seldom used)."},{"name":"sshPort","required":false,"deprecated":false,"default":false,"secret":false,"description":"Choose non-standard SSH port (default is 22)."},{"name":"os","required":false,"deprecated":false,"default":false,"secret":false,"description":"OS of the remote system (windows/linux/OSX)."},{"name":"arch","required":false,"deprecated":false,"default":false,"secret":false,"description":"Choose amd64 for 64bit systems and i386 for 32bit systems."},{"name":"engineName","required":false,"deprecated":false,"default":false,"secret":false,"description":"Engine to be used if required."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IncidentFields","version":7,"name":"IncidentFields","type":"python","tags":[],"contextKeys":[],"comment":"Returns a dict of all incident fields that exist in the system.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4583","modified":"2021-09-07T09:21:43.716842+03:00","scriptTarget":0,"arguments":[{"name":"exclude_system_fields","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to only return non-system fields. If \"true\", will only output non-system fields. The default value is \"false\".","defaultValue":"false"},{"name":"short_names","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to shorten the incident field names. If \"true\", will cause output to use shortened field names. The default value is \"true\".","defaultValue":"true"}],"dependsOn":{"must":["|||demisto-api-get"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IncreaseIncidentSeverity","version":7,"name":"IncreaseIncidentSeverity","type":"javascript","tags":[],"contextKeys":[],"comment":"Optionally increases the incident severity to the new value if it is greater than the existing severity.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711764+03:00","scriptTarget":0,"arguments":[{"name":"severity","required":true,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Unknown","Informational","Low","Medium","High","Critical","0","0.5","1","2","3","4"],"description":"The incident severity to increase the incident to. Can be \"Unknown\", \"Informational\", \"Low\", \"Medium\", \"High\", \"Critical\", \"0\", \"0.5\", \"1\", \"2\", \"3\", or \"4\"."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IndicatorMaliciousRatioCalculation","version":7,"name":"IndicatorMaliciousRatioCalculation","type":"python","tags":["ml"],"contextKeys":[],"comment":"Return indicators appears in resolved incidents, and resolved incident ids.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712853+03:00","scriptTarget":0,"arguments":[{"name":"maxIncidents","required":false,"deprecated":false,"default":false,"secret":false,"description":"Max number of incidents to query.","defaultValue":"100000"},{"name":"maxIndicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"Max number of indicators to query.","defaultValue":"100000"},{"name":"appearsInMinNumberOfIncidents","required":false,"deprecated":false,"default":false,"secret":false,"description":"Indicator appears in minimum number of incidents.","defaultValue":"3"},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"The query to fetch the indicators from incident which are \"bad\".","defaultValue":"incident.closeReason:Resolved"},{"name":"maxDisplayResults","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of results (indicators) to display as output.","defaultValue":"50"},{"name":"fileResult","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Generate file result","defaultValue":"no"}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"InRange","version":7,"name":"InRange","type":"python","tags":["filter","number"],"contextKeys":[],"comment":"checks if left side is in range of right side (from,to anotation)\ne.g. - InRange left=4right=1,8 will return true.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717342+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"Value to check if in range (e.g. 4)."},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"Range to check against with the form of from,to (e.g. 2,8)."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IPNetwork","version":7,"name":"IPNetwork","type":"python","tags":["ip"],"contextKeys":[],"comment":"Gather information regarding CIDR -\n    1. Broadcast_address\n    2. CIDR\n    3. First_address\n    4. Last address\n    5. Max prefix len\n    6. Num addresses\n    7. Private\n    8. Version\n","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.2245","modified":"2021-09-07T09:21:43.720208+03:00","scriptTarget":0,"arguments":[{"name":"cidr","required":true,"deprecated":false,"default":false,"secret":false,"description":"IP/CIDR, e.g. 192.168.0.0/24"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Network.CIDR","description":"Network CIDR.","type":"String"},{"contentPath":"","contextPath":"Network.Num_addresses","description":"Number of availble addresses in the CIDR.","type":"Number"},{"contentPath":"","contextPath":"Network.First_address","description":"First address in the network CIDR.","type":"String"},{"contentPath":"","contextPath":"Network.Last_address","description":"Last address in the network CIDR.","type":"String"},{"contentPath":"","contextPath":"Network.Version","description":"Version of IP.","type":"Number"},{"contentPath":"","contextPath":"Network.Private","description":"True if IP is private.","type":"Boolean"},{"contentPath":"","contextPath":"Network.Max_prefix_len","description":"Max prefix length of CIDR.","type":"Number"},{"contentPath":"","contextPath":"Network.Broadcast_address","description":"Broadcast address of CIDR.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IPReputation","version":7,"name":"IPReputation","type":"python","tags":["enhancement"],"contextKeys":[],"comment":"A context script for IP entities","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712107+03:00","scriptTarget":0,"arguments":[{"name":"ip","required":true,"deprecated":false,"default":true,"secret":false,"description":"IP address to look up"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IPToHost","version":7,"name":"IPToHost","type":"python","tags":[],"contextKeys":[],"comment":"Try to get the hostname correlated with the input IP.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719184+03:00","scriptTarget":0,"arguments":[{"name":"ip","required":true,"deprecated":false,"default":true,"secret":false,"description":"The IP to check"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Endpoint","description":"The endpoint object.","type":""},{"contentPath":"","contextPath":"Endpoint.Hostname","description":"The endpoint hostname.","type":"string"},{"contentPath":"","contextPath":"Endpoint.IP","description":"The endpoint IP.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IPv4Blacklist","version":7,"name":"IPv4Blacklist","type":"python","tags":["transformer","entirelist"],"contextKeys":[],"comment":"Transformer that returns a filtered list of IPv4 addresses, based on whether they do not match a comma-separated list of IPv4 ranges.  Useful for filtering out internal IP address space.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/netutils:1.0.0.23344","modified":"2021-09-07T09:21:43.719424+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Array or comma-separated list of IPv4 addresses to filter.","isArray":true},{"name":"cidr_ranges","required":true,"deprecated":false,"default":false,"secret":false,"description":"Array or comma-separated list of IPv4 ranges, in CIDR notation, against which to match the IPv4 addresses.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IPv4Whitelist","version":7,"name":"IPv4Whitelist","type":"python","tags":["transformer","entirelist"],"contextKeys":[],"comment":"Transformer that returns a filtered list of IPv4 addresses, based on whether they match a comma-separated list of IPv4 ranges.  Useful for filtering in internal IP address space.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/netutils:1.0.0.23344","modified":"2021-09-07T09:21:43.712603+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Array or comma-separated list of IPv4 Addresses to filter.","isArray":true},{"name":"cidr_ranges","required":true,"deprecated":false,"default":false,"secret":false,"description":"Array or comma-separated list of IPv4 ranges, in CIDR notation, against which to match the IPv4 addresses.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IronbankHandler","version":6,"name":"IronbankHandler","type":"python","tags":[],"contextKeys":[],"comment":"","enabled":true,"system":false,"detached":false,"locked":false,"user":"admin","dockerImage":"demisto/python3:3.9.6.24067","modified":"2021-09-09T10:04:03.688309+03:00","scriptTarget":0,"arguments":null,"dependsOn":{"must":["|||GitHub-create-comment","|||GitHub-search-issues","|||GitHub-create-issue","|||gitlab-issue-edit","|||gitlab-issue-create","|||gitlab-raw-file-get","|||gitlab-issues-list","|||gitlab-pipelines-list","|||gitlab-merge-request-get","|||gitlab-jobs-list","|||gitlab-group-projects-list","|||gitlab-merge-requests-list"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IsEmailAddressInternal","version":7,"name":"IsEmailAddressInternal","type":"python","tags":["email"],"contextKeys":[],"comment":"Checks if the email address is part of the internal domains","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719899+03:00","scriptTarget":0,"arguments":[{"name":"email","required":true,"deprecated":false,"default":true,"secret":false,"description":"The email address to check"},{"name":"domain","required":false,"deprecated":false,"default":false,"secret":false,"description":"List of internal domains to check, comma separated","isArray":true},{"name":"include_subdomains","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Include subdomains of the domain list?","defaultValue":"no"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Account.Email.Address","description":"The Email account full address","type":"string"},{"contentPath":"","contextPath":"Account.Email.Username","description":"The Email account username","type":"string"},{"contentPath":"","contextPath":"Account.Email.Domain","description":"The Email account domain","type":"string"},{"contentPath":"","contextPath":"Account.Email.NetworkType","description":"The Email account NetworkType (could be Internal/External)","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"isError","version":7,"name":"isError","type":"javascript","tags":["Condition","Utility"],"contextKeys":[],"comment":"Check whether given entry/entries returned an error. Use ${lastCompletedTaskEntries} to check the previous task entries. If array is provided, will return yes if one of the entries returned an error.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.716275+03:00","scriptTarget":0,"arguments":[{"name":"entryId","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry to check","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"If one or more entries is an error","type":""},{"contentPath":"","contextPath":"no","description":"If none of the entries is not an error","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsGreaterThan","version":7,"name":"IsGreaterThan","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Checks if one number(float) as bigger than the other(float)\nReturns yes: if first \u003e second\nReturns no: if first \u003c= second\nReturns exception if one of the inputs is not a number","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.719549+03:00","scriptTarget":0,"arguments":[{"name":"first","required":true,"deprecated":false,"default":true,"secret":false,"description":"First argument to compare."},{"name":"second","required":true,"deprecated":false,"default":false,"secret":false,"description":"Second argument to compare."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if first \u003e second","type":""},{"contentPath":"","contextPath":"no","description":"if first \u003c= second","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsInCidrRanges","version":7,"name":"IsInCidrRanges","type":"python","tags":["filter"],"contextKeys":[],"comment":"Determines whether an IPv4 address is contained in one or more comma-delimited CIDR ranges.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/netutils:1.0.0.23344","modified":"2021-09-07T09:21:43.714697+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"IPv4 address to filter."},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of IPv4 ranges in CIDR notation against which to match."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IsIntegrationAvailable","version":7,"name":"IsIntegrationAvailable","type":"python","tags":["infra","Condition"],"contextKeys":["brandInstances"],"comment":"Returns 'yes' if integration brand is available. Otherwise returns 'no'","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.716391+03:00","scriptTarget":0,"arguments":[{"name":"brandname","required":true,"deprecated":false,"default":true,"secret":false,"description":"Integration's brand name to query"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if integration is available","type":""},{"contentPath":"","contextPath":"no","description":"if there is no instance for the given brand","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsInternalDomainName","version":7,"name":"IsInternalDomainName","type":"python","tags":["Utility"],"contextKeys":[],"comment":"This script accepts multiple values for both arguments and will iterate through each of the domains to check if the specified subdomains are located in at least one of the specified main domains. If the tested subdomain is in one of the main domains, the result will be true. For example, if the domain_to_check values are apps.paloaltonetworks.com and apps.paloaltonetworks.bla and the domains_to_compare values are paloaltonetworks.com and demisto.com, the result for apps.paloaltonetworks.com will be true since it is a part of the paloaltonetworks.com domain. The result for apps.paloaltonetworks.bla will be false since it is not a part of the paloaltonetworks.com or demisto.com domain.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.12176","modified":"2021-09-07T09:21:43.712036+03:00","scriptTarget":0,"arguments":[{"name":"main_domains","required":true,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","description":"A comma-separated list of main domains. The subdomains will be compared to this list of main domains. For example, google.com.","isArray":true},{"name":"possible_sub_domains_to_test","required":true,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","description":"A comma-separated list of subdomains. These subdomains will be compared to the list of main domains.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"IsInternalDomain.DomainToTest","description":"The subdomain that was checked to see if it is part of the specified domains.","type":"String"},{"contentPath":"","contextPath":"IsInternalDomain.IsInternal","description":"True, if the subdomain is part of one of the specified domains. Otherwise, false.","type":"Boolean"},{"contentPath":"","contextPath":"IsInternalDomain.DomainToCompare","description":"The names of the main domains that were used to compare the subdomains to.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsInternalHostName","version":7,"name":"IsInternalHostName","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Checks if the supplied hostnames match either the organization's internal naming convention or the domain suffix.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-07T09:21:43.712251+03:00","scriptTarget":0,"arguments":[{"name":"hostName","required":true,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["",""],"description":"A comma-separated list of hostnames to check.","isArray":true},{"name":"internalRegex","required":false,"deprecated":false,"default":false,"secret":false,"description":"The regex pattern for the organization's hostname for example \\w\\w\\w\\d$|\\w\\w\\w$. for hosts that look like pcx1 or pcx."},{"name":"domainName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The domain name for the organization. For a single domain use this format: \"bla.com\". For multiple domains use this format: (bla.com|blabla.com), where the pipe and the brackets are the OR condition for regex."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Endpoint.Hostname","description":"The hostname.","type":"string"},{"contentPath":"","contextPath":"Endpoint.IsInternal","description":"Whether the supplied hostnames match the organization's naming convention. Can be \"true\" or \"false\".","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsIPInRanges","version":7,"name":"IsIPInRanges","type":"javascript","tags":["ip"],"contextKeys":[],"comment":"Returns yes if the IP is in one of the ranges provided, returns no otherwise.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.712139+03:00","scriptTarget":0,"arguments":[{"name":"ip","required":true,"deprecated":false,"default":true,"secret":false,"description":"IP to check in ranges"},{"name":"ipRanges","required":false,"deprecated":false,"default":false,"secret":false,"description":"A list of IP ranges to check the IP in. The list should be provided in CIDR notation, separated by commas. An example of a list of ranges would be: \"172.16.0.0/12,10.0.0.0/8,192.168.0.0/16\" (without quotes). If a list is not provided, will use default list provided in the IsIPInRanges script (the known IPv4 private address ranges)."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if given value is an IP range","type":""},{"contentPath":"","contextPath":"no","description":"if given value is not a IP range","type":""},{"contentPath":"","contextPath":"IP.Address","description":"The IP Address","type":""},{"contentPath":"","contextPath":"IP.InRange","description":"Is the IP is in the input ranges? (could be 'yes' or 'no)","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsListExist","version":7,"name":"IsListExist","type":"python","tags":["Condition"],"contextKeys":[],"comment":"Check if list exist in demisto lists.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711938+03:00","scriptTarget":0,"arguments":[{"name":"listName","required":false,"deprecated":false,"default":false,"secret":false,"description":"List name to check "}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IsMaliciousIndicatorFound","version":7,"name":"IsMaliciousIndicatorFound","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Checks if the investigation found any malicious indicators (file, URL, IP address, domain, or email). Returns \"yes\" if at least one malicious indicator is found.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.718659+03:00","scriptTarget":0,"arguments":[{"name":"includeSuspicious","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to check suspicious indicators. Default is \"no\".","defaultValue":"no"},{"name":"queryIndicators","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Query all indicators in an investigation (relevant if running in a sub-playbook).","defaultValue":"yes"},{"name":"maliciousQueryOverride","required":false,"deprecated":false,"default":false,"secret":false,"description":"Whether to override the default query for malicious indicators in Demisto (Indicators page)."},{"name":"includeManual","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Whether to check manually edited indicators. Default is \"yes\".","defaultValue":"yes"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"Whether any malicious indicators were found in the investigation.","type":""},{"contentPath":"","contextPath":"no","description":"Whether any malicious indicators were found in the investigation.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsNotInCidrRanges","version":7,"name":"IsNotInCidrRanges","type":"python","tags":["filter"],"contextKeys":[],"comment":"Checks whether an IPv4 address is not contained in one or more comma-delimited CIDR ranges.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/netutils:1.0.0.23344","modified":"2021-09-07T09:21:43.7118+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"IPv4 address to filter."},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of IPv4 ranges in CIDR notation against which to match."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IsRFC1918Address","version":7,"name":"IsRFC1918Address","type":"python","tags":["filter"],"contextKeys":[],"comment":"A filter that determines whether an IPv4 address is in the private RFC-1918 address space (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).  For more information, see https://en.wikipedia.org/wiki/Private_network","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/netutils:1.0.0.14492","modified":"2021-09-07T09:21:43.713461+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":true,"secret":false,"description":"The IPv4 address to check."},{"name":"left","required":false,"deprecated":false,"default":false,"secret":false,"description":"The IPv4 address to check (can be used instead of the value argument)."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"IsTrue","version":7,"name":"IsTrue","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Check if a given value is true. Will return 'no' otherwise","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.710982+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":true,"secret":false,"description":"The value to check if exists - can handle arrays as well","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"if value is True (either has object or string True/true)","type":""},{"contentPath":"","contextPath":"no","description":"if  value is not True (either has object or string True/true)","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsUrlPartOfDomain","version":7,"name":"IsUrlPartOfDomain","type":"python","tags":null,"contextKeys":[],"comment":"Checks if the supplied URLs are in the specified domains.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.9324","modified":"2021-09-07T09:21:43.712894+03:00","scriptTarget":0,"arguments":[{"name":"domains","required":true,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of domains.","isArray":true},{"name":"urls","required":true,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of URLs.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"IsUrlPartOfDomain.URL","description":"The path of the URLs.","type":"String"},{"contentPath":"","contextPath":"IsUrlPartOfDomain.Domain","description":"The domain checked with the URL.","type":"String"},{"contentPath":"","contextPath":"IsUrlPartOfDomain.IsInternal","description":"Whether the URL is in the domain.","type":"Boolean"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"IsValueInArray","version":7,"name":"IsValueInArray","type":"javascript","tags":["Condition"],"contextKeys":[],"comment":"Indicates whether a given value is a member of given array","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717308+03:00","scriptTarget":0,"arguments":[{"name":"array","required":false,"deprecated":false,"default":false,"secret":false,"description":"Array to look for the value","isArray":true},{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"Value to look for in the array"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"yes","description":"The list contains the value","type":""},{"contentPath":"","contextPath":"no","description":"The list does not contain the value","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"jmespath","version":7,"name":"jmespath","type":"python","tags":["transformer","general"],"contextKeys":[],"comment":"Performs a JMESPath search on an input JSON format, when using a transformer.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/jmespath:1.0.0.10854","modified":"2021-09-07T09:21:43.718738+03:00","scriptTarget":0,"arguments":[{"name":"expression","required":true,"deprecated":false,"default":false,"secret":false,"description":"Jmespath expression"},{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Original input value"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"JoinIfSingleElementOnly","version":7,"name":"JoinIfSingleElementOnly","type":"python","tags":["entirelist","transformer","general"],"contextKeys":[],"comment":"Return the single element in case the array has only 1 element in it, otherwise return the whole array","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711155+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The array to join if it has single element","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"JSONFileToCSV","version":7,"name":"JSONFileToCSV","type":"python","tags":[],"contextKeys":[],"comment":"Script to convert a JSON File waroom output to a CSV file.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.22912","modified":"2021-09-07T09:21:43.712289+03:00","scriptTarget":0,"arguments":[{"name":"entryid","required":true,"deprecated":false,"default":false,"secret":false,"description":"entry id of json"},{"name":"filename","required":true,"deprecated":false,"default":false,"secret":false,"description":"output csv filename"},{"name":"delimiter","required":false,"deprecated":false,"default":true,"secret":false,"description":"CSV Delimiter.","defaultValue":","}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"File.Name","description":"Filename (only in case of report type=json)","type":"Unknown"},{"contentPath":"","contextPath":"File.Type","description":"File type e.g. \"PE\" (only in case of report type=json)","type":"Unknown"},{"contentPath":"","contextPath":"File.Size","description":"File size (only in case of report type=json)","type":"Unknown"},{"contentPath":"","contextPath":"File.MD5","description":"MD5 hash of the file (only in case of report type=json)","type":"Unknown"},{"contentPath":"","contextPath":"File.SHA1","description":"SHA1 hash of the file (only in case of report type=json)","type":"Unknown"},{"contentPath":"","contextPath":"File.SHA256","description":"SHA256 hash of the file (only in case of report type=json)","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"JSONtoCSV","version":7,"name":"JSONtoCSV","type":"python","tags":[],"contextKeys":[],"comment":"Convert a JSON warroom output via EntryID to a CSV file.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.711332+03:00","scriptTarget":0,"arguments":[{"name":"entryid","required":true,"deprecated":false,"default":false,"secret":false,"description":"entry id of json","isArray":true},{"name":"delimiter","required":false,"deprecated":false,"default":true,"secret":false,"description":"CSV Delimiter.","defaultValue":"|"},{"name":"filename","required":false,"deprecated":false,"default":false,"secret":false,"description":"if provided will output CSV to file. Default output is to WarRoom."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"File.Name","description":"Filename (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.Type","description":"File type e.g. \"PE\" (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.Size","description":"File size (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.MD5","description":"MD5 hash of the file (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.SHA1","description":"SHA1 hash of the file (only in case of report type=json)","type":""},{"contentPath":"","contextPath":"File.SHA256","description":"SHA256 hash of the file (only in case of report type=json)","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"JsonToTable","version":6,"name":"JsonToTable","type":"python","tags":["transformer","entirelist","general"],"contextKeys":[],"comment":"Accepts a json object and returns a markdown.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.71808+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The json to transform to a markdown table."},{"name":"title","required":false,"deprecated":false,"default":false,"secret":false,"description":"The markdown title."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"LanguageDetect","version":7,"name":"LanguageDetect","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Language detection based on Google's language-detection.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/langdetect","modified":"2021-09-07T09:21:43.711055+03:00","scriptTarget":0,"arguments":[{"name":"text","required":true,"deprecated":false,"default":true,"secret":false,"description":"Text to analyse for language detection"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"langDetect.lang","description":"Language detection","type":""},{"contentPath":"","contextPath":"langDetect.probability","description":"Probability of language detection","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"LastArrayElement","version":7,"name":"LastArrayElement","type":"python","tags":["general","transformer","entirelist"],"contextKeys":[],"comment":"Returns the last element of an array. If the value passed is not an array, it returns the original value that was passed.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.2728","modified":"2021-09-07T09:21:43.711618+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"An array for which to return the last value.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"LessThanPercentage","version":7,"name":"LessThanPercentage","type":"javascript","tags":["Utility","Condition"],"contextKeys":[],"comment":"Checks if one percentage is less than another\nReturns less: if firstPercentage \u003c secondPercentage\nReturns more: if firstPercentage \u003e= secondPercentage\nReturns exception if one of the inputs is not a float","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71757+03:00","scriptTarget":0,"arguments":[{"name":"firstPercentage","required":true,"deprecated":false,"default":true,"secret":false,"description":"First percentage."},{"name":"secondPercentage","required":true,"deprecated":false,"default":false,"secret":false,"description":"Second percentage."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"less","description":"if firstPercentage \u003c secondPercentage","type":""},{"contentPath":"","contextPath":"more","description":"if firstPercentage \u003e= secondPercentage","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"LinkIncidentsWithRetry","version":7,"name":"LinkIncidentsWithRetry","type":"python","tags":[],"contextKeys":[],"comment":"Use this script to avoid DB version errors when simultaneously running multiple linked incidents.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.71477+03:00","scriptTarget":0,"arguments":[{"name":"linkedIncidentIDs","required":true,"deprecated":false,"default":false,"secret":false,"description":"A CSV list of related incident IDs."},{"name":"retryLimit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Number of retries to perform after a failure.","defaultValue":"5"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"LinkToPhishingCampaign","version":2,"name":"LinkToPhishingCampaign","type":"python","tags":["dynamic-section","phishing","campaign"],"contextKeys":[],"comment":"Links a Phishing incident to its related Phishing Campaign incident.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-08-28T19:58:23.722206+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"listExecutedCommands","version":7,"name":"listExecutedCommands","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Lists  executed commands in War Room","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71702+03:00","scriptTarget":0,"arguments":[{"name":"source","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["Manual","Playbook","All"],"description":"Source of commands to list - user, playbook or both","defaultValue":"All"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ListUnusedDockers","version":6,"name":"ListUnusedDockers","type":"python","tags":["basescript"],"contextKeys":[],"comment":"[Enter a description of the script, including what function it performs and any important information users need to know, for example required permissions.]","enabled":false,"system":false,"detached":false,"locked":false,"user":"admin","dockerImage":"demisto/python3:3.9.6.24067","modified":"2021-09-09T11:44:46.04419+03:00","scriptTarget":0,"arguments":[{"name":"dummy","required":true,"deprecated":false,"default":true,"secret":false,"description":"[Enter a description of the argument, including any important information users need to know, for example, default values.]","defaultValue":"100"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"BaseScript.Output","description":"[Enter a description of the data returned in this output.]","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ListUsedDockersImages","version":21,"name":"ListUsedDockersImages","type":"python","tags":["basescript"],"contextKeys":[],"comment":"List the used docker images by the installed integration","enabled":false,"system":false,"detached":false,"locked":false,"user":"admin","dockerImage":"demisto/python3:3.9.7.24076","modified":"2021-09-09T16:33:40.201929+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"BaseScript.Output","description":"Table of docker images that are used by the XSoar system","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"LoadJSON","version":7,"name":"LoadJSON","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Loads a json from string input, and returns a json object result","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.24019","modified":"2021-09-07T09:21:43.712736+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":true,"secret":false,"description":"Input string to transform to JSON object"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"JsonObject","description":"The JSON object loaded from input","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"LookupCSV","version":7,"name":"LookupCSV","type":"python","tags":["file","csv","Utility"],"contextKeys":[],"comment":"Parses a CSV and looks for a specific value in a specific column, returning a dict of the entire matching row. If no column value is specified, the entire CSV is read into the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.5.10845","modified":"2021-09-07T09:21:43.719295+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"description":"EntryID of CSV file."},{"name":"header_row","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"CSV file has a header row."},{"name":"column","required":false,"deprecated":false,"default":false,"secret":false,"description":"Column to search for value in, if not specified, entire CSV is parsed into the context."},{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"value to search for"},{"name":"add_header_row","required":false,"deprecated":false,"default":false,"secret":false,"description":"Extra row, in CSV format, to function as header if original does not contain headers"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"LookupCSV.result","description":"List of result objects; either a list of dicts (with header_row) or a list of lists (no header row)","type":""},{"contentPath":"","contextPath":"LookupCSV.FoundResult","description":"Boolean, for whether the result was found in the CSV or not.","type":""},{"contentPath":"","contextPath":"LookupCSV.SearchValue","description":"The value that was searched.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"LowerCidrNumAddresses","version":7,"name":"LowerCidrNumAddresses","type":"python","tags":["filter"],"contextKeys":[],"comment":"Check if number of availble addresses in IPv4 CIDR is lower than given number.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.2245","modified":"2021-09-07T09:21:43.711835+03:00","scriptTarget":0,"arguments":[{"name":"left","required":true,"deprecated":false,"default":false,"secret":false,"description":"IPv4/CIDR, e.g. 192.168.0.0/24"},{"name":"right","required":true,"deprecated":false,"default":false,"secret":false,"description":"The number of addresses to lower from."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MaliciousRatioReputation","version":7,"name":"MaliciousRatioReputation","type":"python","tags":["reputation"],"contextKeys":[],"comment":"Set indicator reputation to \"suspicious\" when malicious ratio is above threshold.\nMalicious ratio is the ration between number of \"bad\" incidents to total number of incidents the indicator appears in.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.71673+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"Value of the indicator."},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Malicious ratio threshold to set indicator as suspicious. ","defaultValue":"0.3"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MapValues","version":7,"name":"MapValues","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Map the given values to the translated values. If given values: a,b,c and translated: 1,2,3 then input is a will return 1","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715043+03:00","scriptTarget":0,"arguments":[{"name":"values","required":true,"deprecated":false,"default":true,"secret":false,"description":"The values we should translate"},{"name":"translated","required":true,"deprecated":false,"default":false,"secret":false,"description":"The translated values we will use to replace the values"},{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to compare and replace"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MapValuesTransformer","version":7,"name":"MapValuesTransformer","type":"python","tags":["transformer","string"],"contextKeys":[],"comment":"This script converts the input value into another value using two lists. The input value is searched in the first list (input_values). \nIf it exists, the value from the second list (mapped_values) at the same index is retutrned. If there is no match, the original value is returned.\nIf the original input is a dictionary, then the script will look for a \"stringified\" version of the key/:/value pair in the input_values and then map the result in the output_values into the original \"value\".\n\nExample 1:\n\ninput_values = \"1,2,3,4\"\nmapper_values = \"4,3,2,1\"\nvalue = 3\n\nOutput would be \"2\"\n\nExample 2:\n\ninput_values =\"firstkey: datahere,secondkey: datathere\"\nmapper_values = \"datathere,datahere\"\nvalue(dict)= {\n                                \"firstkey\": \"datahere\"\n                          }\n\nOutput would be:\n                          {\n                                \"firstkey\": \"datathere\"\n                           }\n\nThe reason for matching the key AND value pair in a dictionary is to allow the mappig of values that have a specific key name. In most cases, dictionaries will continan key-value pairs in which the values are the same. You might want to change the value of KeyA, but not the value of KeyB. This method gives control over which key is changed.\n\nWhen the input is a dict, str , int, or list, the output is ALWAYS returned as a string.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.9324","modified":"2021-09-07T09:21:43.713839+03:00","scriptTarget":0,"arguments":[{"name":"input_values","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated values to map from."},{"name":"mapped_values","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated values to map to."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MarkAsNoteByTag","version":7,"name":"MarkAsNoteByTag","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Mark entries as notes if they are tagged with given tag","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.71883+03:00","scriptTarget":0,"arguments":[{"name":"tag","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entries with the given tag will be marked as notes"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MarkRelatedIncidents","version":7,"name":"MarkRelatedIncidents","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Marks given incidents as related to current incident","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713879+03:00","scriptTarget":0,"arguments":[{"name":"related","required":true,"deprecated":false,"default":true,"secret":false,"description":"The list of related incident IDs we want to mark","isArray":true}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"MatchRegex","version":7,"name":"MatchRegex","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Deprecated. Use the **MatchRegexV2** script instead.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71907+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The text date from which to extract thee regex."},{"name":"regex","required":true,"deprecated":false,"default":false,"secret":false,"description":"The regex to match and extract."},{"name":"group","required":false,"deprecated":false,"default":false,"secret":false,"description":"The matching group to return (if not provided the full match will be returned), group value should start at 1"},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context key to populate with the result."},{"name":"flags","required":false,"deprecated":false,"default":false,"secret":false,"description":"The regex flags to match. Default is -gim."}],"deprecated":true,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"MatchRegex.results","description":"List of regex matches.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"MatchRegexV2","version":7,"name":"MatchRegexV2","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Extracts regex data from the provided text. The script support groups and looping.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.714272+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The text data from which to extract from."},{"name":"regex","required":true,"deprecated":false,"default":false,"secret":false,"description":"The regex to match and extract. Take into account that data taken from context data contains special characters which are not visible, such as \\n and \\b."},{"name":"group","required":false,"deprecated":false,"default":false,"secret":false,"description":"The matching group to return. If no group is provided the full match will be returned. The group value should start at 1."},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context key to populate with the result."},{"name":"flags","required":false,"deprecated":false,"default":false,"secret":false,"description":"The regex flags to match. Default is \"gim\".","defaultValue":"gim"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"MatchRegex.results","description":"List of regex matches.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"MathUtil","version":7,"name":"MathUtil","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Script will run the provided mathematical action on 2 provided values and produce a result.\nThe result can be stored on the context using the contextKey argument\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.712642+03:00","scriptTarget":0,"arguments":[{"name":"lh","required":true,"deprecated":false,"default":true,"secret":false,"description":"Left hand parameter."},{"name":"rh","required":true,"deprecated":false,"default":false,"secret":false,"description":"Right hand parameter."},{"name":"action","required":true,"deprecated":false,"default":false,"secret":false,"description":"Math expression (+, -, \u003e, \u003c, ==, *, /, %)."},{"name":"rhRegex","required":false,"deprecated":false,"default":false,"secret":false,"description":"Regex to filter only a specific part of the right hand argument."},{"name":"lhRegex","required":false,"deprecated":false,"default":false,"secret":false,"description":"Regex to filter only a specific part of the left hand argument."},{"name":"lhRadix","required":false,"deprecated":false,"default":false,"secret":false,"description":"Radix for left hand value, defaults to 10."},{"name":"rhRadix","required":false,"deprecated":false,"default":false,"secret":false,"description":"Radix for right hand value, defaults to 10."},{"name":"contextKey","required":false,"deprecated":false,"default":false,"secret":false,"description":"Path where to store result."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"MathResult","description":"The result of the *last* math action. Might be overriden by contextKey.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ModifyDateTime","version":7,"name":"ModifyDateTime","type":"python","tags":["transformer","date"],"contextKeys":[],"comment":"Takes a date or time input and adds or subtracts a determined amount of time. Returns a string in date or time in ISO Format.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.15759","modified":"2021-09-07T09:21:43.717055+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Input date or time in a format that is supported by the dateparser.parse() function as outlined here- https://dateparser.readthedocs.io/en/latest/#popular-formats. For example: '2020-01-01' or '1999/02/03 12:01:59'"},{"name":"variation","required":true,"deprecated":false,"default":false,"secret":false,"description":"Variation of time (for example: 'in 1 day', or '3 months ago'). Must be supported by the dateparser.parse() function here - https://dateparser.readthedocs.io/en/latest/#relative-dates"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"NotInContextVerification","version":7,"name":"NotInContextVerification","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Not in context verification is a script that executes the given command and verifies that the specified field is not in the context after execution. \n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71453+03:00","scriptTarget":0,"arguments":[{"name":"cmdToRun","required":true,"deprecated":false,"default":true,"secret":false,"description":"Command or Automation script to execute each while loop iteration."},{"name":"cmdArguments","required":true,"deprecated":false,"default":false,"secret":false,"description":"A comma separated list of command/automation arguments and values to run: key=val,key=val,key=val"},{"name":"keyToWatch","required":true,"deprecated":false,"default":false,"secret":false,"description":"Watch this key, if it is equal to value argument (${key}==value) then exit while loop, otherwise continue to next loop iteration (will run command again)."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"NumberOfPhishingAttemptPerUser","version":7,"name":"NumberOfPhishingAttemptPerUser","type":"python","tags":["dynamic-section"],"contextKeys":[],"comment":"Shows a bar chart of the number of incident the 'To' and 'From' email addresses. appeared on","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.714409+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"OnionURLReputation","version":7,"name":"OnionURLReputation","type":"python","tags":["reputation"],"contextKeys":[],"comment":"This script adds the reputation to Onion URL indicators. The script is automatically triggered when a Onion URL indicator is auto-extracted. For instance, if you run a Cortex XSOAR CLI on a valid Onion URL, the indicators are extracted automatically and this script is triggered for the extracted indicators.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.12176","modified":"2021-09-07T09:21:43.711402+03:00","scriptTarget":0,"arguments":[{"name":"input","required":true,"deprecated":false,"default":false,"secret":false,"description":"The indicators to which to add the reputation.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PadZeros","version":7,"name":"PadZeros","type":"python","tags":["transformer","string","number"],"contextKeys":[],"comment":"Adds zeros (0) to the beginning of the string, until the string reaches the specified length.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.1502","modified":"2021-09-07T09:21:43.719217+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"String to pad with zeros."},{"name":"length","required":true,"deprecated":false,"default":false,"secret":false,"description":"The desired length of the string. The value specified in the \"value\" argument will be padded with zeros until the string reaches this length.","defaultValue":"0"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseCSV","version":7,"name":"ParseCSV","type":"python","tags":["file","csv","Utility"],"contextKeys":[],"comment":"This script will parse a CSV file and place the unique IPs, Domains and Hashes into the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.710795+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":false,"deprecated":false,"default":true,"secret":false,"description":"The war room entryID of the file."},{"name":"file","required":false,"deprecated":true,"default":false,"secret":false,"description":"The name of the file. The file must be uploaded to the War Room."},{"name":"ips","required":false,"deprecated":false,"default":false,"secret":false,"description":"The column number that contains IP Addresses. (First column is column 0)"},{"name":"domains","required":false,"deprecated":false,"default":false,"secret":false,"description":"The column number that contains domains. (First column is column 0)"},{"name":"hashes","required":false,"deprecated":false,"default":false,"secret":false,"description":"The column number that contains file hashes. (First column is column 0)"},{"name":"parseAll","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Parses and converts all of the rows in the CSV into JSON and puts them into the context.","defaultValue":"yes"},{"name":"codec","required":false,"deprecated":false,"default":false,"secret":false,"description":"The codec type used to parse the file. (some character sets are not UTF-8 supported)","defaultValue":"utf-8"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"IP.Address","description":"IP address found in the parsed file.","type":"Unknown"},{"contentPath":"","contextPath":"Domain.Name","description":"Domain found in the parsed file.","type":"Unknown"},{"contentPath":"","contextPath":"File.MD5","description":"MD5 found in the parsed file.","type":"Unknown"},{"contentPath":"","contextPath":"File.SHA1","description":"SHA1 found in the parsed file.","type":"Unknown"},{"contentPath":"","contextPath":"File.SHA256","description":"SHA256 found in the parsed file.","type":"Unknown"},{"contentPath":"","contextPath":"ParseCSV.ParsedCSV","description":"Parsed csv in the form of JSON array.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseEmailFiles","version":7,"name":"ParseEmailFiles","type":"python","tags":["email","phishing","enhancement","file"],"contextKeys":["AttachmentName"],"comment":"Parse an email from an eml or msg file and populate all relevant context data to investigate the email. Also extracts inner attachments and returns them to the war room. The incident labels themselves are preserved and not modified - only the \"Label/x\" context items that originated from the labels, and the best practice is to rely on these for the remainder of the playbook.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.24066","modified":"2021-09-07T09:21:43.718417+03:00","scriptTarget":0,"arguments":[{"name":"entryid","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID with the Email as a file in msg or eml format"},{"name":"parse_only_headers","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Will parse only the headers and return headers table","defaultValue":"false"},{"name":"max_depth","required":false,"deprecated":false,"default":false,"secret":false,"description":"How many levels deep we should parse the attached emails (e.g. email contains an emails contains an email). Default depth level is 3. Minimum level is 1, if set to 1 the script will parse only the first level email","defaultValue":"3"},{"name":"forced_encoding","required":false,"deprecated":false,"default":false,"secret":false,"description":"Use only the force encoding when parsing the message, e.g 'iso-2022-jp'. Relevant to msg files only."},{"name":"default_encoding","required":false,"deprecated":false,"default":false,"secret":false,"description":"Use only the default encoding when parsing the message with the detected encoding fails, e.g 'utf-8'. Relevant to msg files only."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Email.To","description":"This shows to whom the message was addressed, but may not contain the recipient's address.","type":"string"},{"contentPath":"","contextPath":"Email.CC","description":"Email 'cc' addresses","type":"string"},{"contentPath":"","contextPath":"Email.From","description":"This displays who the message is from, however, this can be easily forged and can be the least reliable.","type":"string"},{"contentPath":"","contextPath":"Email.Subject","description":"Email subject","type":"string"},{"contentPath":"","contextPath":"Email.HTML","description":"Email 'html' body if exists","type":"string"},{"contentPath":"","contextPath":"Email.Text","description":"Email 'text' body if exists","type":"string"},{"contentPath":"","contextPath":"Email.Depth","description":"The depth of the email. Depth=0 for the first level email. If email1 contains email2 contains email3. Then email1 depth is 0, email2 depth is 1, email3 depth is 2","type":"number"},{"contentPath":"","contextPath":"Email.Headers","description":"Deprecated - use Email.HeadersMap output instead. The full email headers as a single string","type":"string"},{"contentPath":"","contextPath":"Email.HeadersMap","description":"The full email headers json","type":"Unknown"},{"contentPath":"","contextPath":"Email.HeadersMap.From","description":"This displays who the message is from, however, this can be easily forged and can be the least reliable.","type":"Unknown"},{"contentPath":"","contextPath":"Email.HeadersMap.To","description":"This shows to whom the message was addressed, but may not contain the recipient's address.","type":"Unknown"},{"contentPath":"","contextPath":"Email.HeadersMap.Subject","description":"Email subject","type":"String"},{"contentPath":"","contextPath":"Email.HeadersMap.Date","description":"The date and time the email message was composed","type":"Unknown"},{"contentPath":"","contextPath":"Email.HeadersMap.CC","description":"Email 'cc' addresses","type":"Unknown"},{"contentPath":"","contextPath":"Email.HeadersMap.Reply-To","description":"The email address for return mail","type":"String"},{"contentPath":"","contextPath":"Email.HeadersMap.Received","description":"List of all the servers/computers through which the message traveled","type":"String"},{"contentPath":"","contextPath":"Email.HeadersMap.Message-ID","description":"A unique string assigned by the mail system when the message is first created. These can easily be forged. (e.g. 5c530c1b.1c69fb81.bd826.0eff@mx.google.com)","type":"String"},{"contentPath":"","contextPath":"Email.AttachmentNames","description":"The list of attachment names in the email","type":"string"},{"contentPath":"","contextPath":"Email.Format","description":"The format of the email if available","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseExcel","version":7,"name":"ParseExcel","type":"python","tags":[],"contextKeys":[],"comment":"The automation takes Excel file (entryID) as an input and parses its content to the war room and context","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/xlrd","modified":"2021-09-07T09:21:43.717124+03:00","scriptTarget":0,"arguments":[{"name":"entryId","required":true,"deprecated":false,"default":false,"secret":false,"description":"The entry id of the excel file"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ParseExcel","description":"ParseExcel","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseHTMLIndicators","version":6,"name":"ParseHTMLIndicators","type":"python","tags":[],"contextKeys":[],"comment":"This script will extract indicators from given HTML and will handle bad top-level domains to avoid false positives caused by file extensions.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/bs4-tld:1.0.0.21999","modified":"2021-09-07T09:21:43.716879+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":false,"secret":false,"description":"The full URL of the blog"},{"name":"exclude_indicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"The indicators to be excluded from the results.","isArray":true},{"name":"exclude_TLD","required":false,"deprecated":false,"default":false,"secret":false,"description":"Top-Level-Domain to be excluded from domain indicators.","isArray":true,"defaultValue":"zip"},{"name":"unescape_domain","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["False","True"],"description":"Whether to remove brackets [] from the domain regex extraction. Can result in higher false positives for file extensions.","defaultValue":"False"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseJSON","version":7,"name":"ParseJSON","type":"javascript","tags":["transformer","string"],"contextKeys":[],"comment":"Parse a given JSON string \"value\" to a representative object. Example: \"{'a':'value'}\" =\u003e { a: \"value\"}.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711124+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The string value to convert to JSON."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ParseWordDoc","version":7,"name":"ParseWordDoc","type":"python","tags":["word","docx","doc","parser"],"contextKeys":[],"comment":"Takes an input docx file (entryID) as an input and saves an output text file (file entry) with the original file's contents.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/word-parser","modified":"2021-09-07T09:21:43.715637+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":true,"secret":false,"description":"Docx file to parse"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PcapHTTPExtractor","version":7,"name":"PcapHTTPExtractor","type":"python","tags":["pcap","http"],"contextKeys":[],"comment":"Allows to parse and extract http flows (requests \u0026 responses) from a pcap/pcapng file.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/pcap-http-extractor:1.0.0.20132","modified":"2021-09-07T09:21:43.713155+03:00","scriptTarget":0,"arguments":[{"name":"pcapFileName","required":false,"deprecated":false,"default":false,"secret":false,"description":"get file entry from file name"},{"name":"entryID","required":false,"deprecated":false,"default":true,"secret":false,"description":"File entry from the WarRoom"},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Limit the output of the capture file output's flows (starts from 0).","defaultValue":"50"},{"name":"start","required":false,"deprecated":false,"default":false,"secret":false,"description":"Index of where to output flows (starts from 0).","defaultValue":"0"},{"name":"limitData","required":false,"deprecated":false,"default":false,"secret":false,"description":"Limit the HttpFileData field (in bytes)\t\t","defaultValue":"512"},{"name":"allowedContentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"The allowed content types to display, separated with comma, uses startswith to find a match (ie text,image will display text\\html, and image\\png)."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"PcapHTTPFlows","description":"Flows extracted from the pcap file.","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.ResultIndex","description":"The index of the http packet in the pcap file.","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpContentType","description":"Http content type of the response.","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpResponseVersion","description":"Http version used in the response.","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpResponseCode","description":"Http response code from the server","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpDate","description":"Http date returned from the sever","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpRequestMethod","description":"Http request method used.","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpRequestUri","description":"Http request URI (path)","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpFileData","description":"Http content of the response","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpServer","description":"The server signature in the response","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpUserAgent","description":"Http user agent sent in the request","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.HttpAccept","description":"Http request accept type","type":"String"},{"contentPath":"","contextPath":"PcapHttpFlows.MetaSniffTimeStamp","description":"Time the packet was sniffed (unixtime).","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"PCAPMiner","version":7,"name":"PCAPMiner","type":"python","tags":["Utility","file","pcap"],"contextKeys":[],"comment":"Deprecated. Use PCAPMinerV2 instead. PCAPMiner is a tool to parse PCAP files and will return things like extracted files that are found, HTTP flows, and a variety of other information. It is uses a docker instance located on docker hub trorabaugh/dempcap:1.0.  To use simply upload a PCAP file and then run PCAPMiner entryId=\"\u003cyour_entry_id\u003e\". To get the entry id click on the link on the top right hand corner of a file attachment.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/dempcap:1.0.0.14059","modified":"2021-09-07T09:21:43.719251+03:00","scriptTarget":0,"arguments":[{"name":"entryId","required":true,"deprecated":false,"default":true,"secret":false,"description":"Enter the EntryID of the file"},{"name":"demistoLibLocation","required":false,"deprecated":false,"default":false,"secret":false,"description":"Demisto lib location, default is \"/var/lib/demisto/\"","defaultValue":"/var/lib/demisto/"}],"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PDFUnlocker","version":7,"name":"PDFUnlocker","type":"python","tags":[],"contextKeys":[],"comment":"Removing the password protection from a PDF file and adding a new file entry with the unlocked PDF.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/pypdf2","modified":"2021-09-07T09:21:43.718004+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID with PDF file"},{"name":"password","required":true,"deprecated":false,"default":false,"secret":true,"description":"Password of PDF file"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PhishingDedupPreprocessingRule","version":3,"name":"PhishingDedupPreprocessingRule","type":"python","tags":["ml","phishing"],"contextKeys":[],"comment":"Deprecated. Use the FindDuplicateEmailIncidents script instead.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sklearn:1.0.0.12410","modified":"2021-08-28T19:58:23.722123+03:00","scriptTarget":0,"arguments":[{"name":"incidentTypeFieldName","required":false,"deprecated":false,"default":false,"secret":false,"description":"The name of the incident field where its type is stored. Default is \"type\". Change this arguement only in case you use a custom field for specifying incident type.","defaultValue":"type"},{"name":"incidentTypes","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separatetd list of incident types by which to filter. The default is the current incident type. Specify \"None\" to ignore incident type from deduplication logic."},{"name":"exsitingIncidentsLookback","required":false,"deprecated":false,"default":false,"secret":false,"description":"The start date by which to search for duplicated existing incidents. Date format is the same as in the incidents query page. For example, \"3 days ago\", \"\"2019-01-01T00:00:00 +0200\").","defaultValue":"30 days ago"},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Additional text by which to query incidents."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The maximum number of incidents to fetch. The default value is 3000.","defaultValue":"3000"},{"name":"emailSubject","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Subject of the email."],"description":"Subject of the email.","defaultValue":"emailsubject"},{"name":"emailBody","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"Body of the email.","defaultValue":"emailbody"},{"name":"emailBodyHTML","required":false,"deprecated":false,"default":false,"secret":false,"description":"HTML body of the email.","defaultValue":"emailbodyhtml"},{"name":"emailFrom","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident fields contains the email from value. ","defaultValue":"emailfrom"},{"name":"fromPolicy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["TextOnly","Exact","Domain"],"description":"Whether to take into account the email from field for deduplication. \"TextOnly\" - incidents will be considered as duplicated based on test similarity only, ignoring the sender's adress. \"Exact\" - incidents will be considered as duplicated if their text is similar and their sender is the same. \"Domain\" -  incidents will be considered as duplicated if their text is similar and their senders' adress has the same domain. Default is \"Domain\".","defaultValue":"TextOnly"},{"name":"statusScope","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["All","ClosedOnly","NonClosedOnly"],"description":"Whether to compare the new incident to past closed or non closed incidents only. Default is \"All\".","defaultValue":"All"},{"name":"closeAsDuplicate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Wheter to close or not the current incident if duplicate incident found","defaultValue":"false"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Threshold to consider incident as duplication, number between 0-1","defaultValue":"0.99"}],"deprecated":true,"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"similarIncident.id","description":"Similar incident ID.","type":"string"},{"contentPath":"","contextPath":"isSimilarIncidentFound","description":"Whether a similar incident was found (\"true\" or \"false\").","type":"boolean"},{"contentPath":"","contextPath":"similarIncident","description":"Similar incident.","type":"unknown"},{"contentPath":"","contextPath":"similarIncident.name","description":"Similar incident name.","type":"string"},{"contentPath":"","contextPath":"similarIncident.rawId","description":"Similar incident ID.","type":"Unknown"},{"contentPath":"","contextPath":"similarIncident.similarity","description":"Number in range 0-1 which describe the similairty between the existing incident and the new incident. ","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Ping","version":7,"name":"Ping","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Pings an IP or url address, to verify it's up","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/iputils:1.0.0.4663","modified":"2021-09-07T09:21:43.716918+03:00","scriptTarget":0,"arguments":[{"name":"address","required":true,"deprecated":false,"default":true,"secret":false,"description":"Address to ping"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Ping.ret_code","description":"Ping return code","type":"number"},{"contentPath":"","contextPath":"Ping.destination","description":"Ping destination address","type":"string"},{"contentPath":"","contextPath":"Ping.max_rtt","description":"Ping max round trip time","type":"number"},{"contentPath":"","contextPath":"Ping.avg_rtt","description":"Ping average round trip time","type":"number"},{"contentPath":"","contextPath":"Ping.min_rtt","description":"Ping minimum round trip time","type":"number"},{"contentPath":"","contextPath":"Ping.destination_ip","description":"Ping destination IP","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"PopulateCriticalAssets","version":7,"name":"PopulateCriticalAssets","type":"python","tags":[],"contextKeys":[],"comment":"Populates critical assets in a grid field that has the section headers \"Asset Type\" and \"Asset Name\".","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-07T09:21:43.714566+03:00","scriptTarget":0,"arguments":[{"name":"critical_assets","required":true,"deprecated":false,"default":false,"secret":false,"description":"A list of all critical assets. Received as output from \"Calculate Severity - Critical Assets v2\" playbook.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PortListenCheck","version":7,"name":"PortListenCheck","type":"python","tags":[],"contextKeys":[],"comment":"Checks whether a port was open on given host.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712461+03:00","scriptTarget":0,"arguments":[{"name":"host","required":true,"deprecated":false,"default":false,"secret":false,"description":"Hostname to check."},{"name":"port","required":false,"deprecated":false,"default":false,"secret":false,"description":"Port to check."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"portOpen","description":"Returns true if given port on host was open.","type":"boolean"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"PositiveDetectionsVSDetectionEngines","version":7,"name":"PositiveDetectionsVSDetectionEngines","type":"python","tags":["dynamic-indicator-section"],"contextKeys":[],"comment":"Shows a bar chart of the number of Positive Detections out of overall detections","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.3.286","modified":"2021-09-07T09:21:43.717239+03:00","scriptTarget":0,"arguments":[{"name":"indicator","required":true,"deprecated":false,"default":false,"secret":false,"description":"Indicator with detections custom fields"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PrettyPrint","version":7,"name":"PrettyPrint","type":"python","tags":[],"contextKeys":[],"comment":"Pretty-print data using Python's pprint library.  This is useful for seeing the structure of incident and context data.  Here's how to use it:\n\n!PrettyPrint value=${incident}","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4583","modified":"2021-09-07T09:21:43.718623+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The value to pretty-print."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"Print","version":7,"name":"Print","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Prints text to war room (Markdown supported)","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714377+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The value to print to war room, if you want to print a value stored in context, value should be in format ${key}, where key is the name of context key"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PrintContext","version":7,"name":"PrintContext","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Pretty-print the contents of the playbook context","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719829+03:00","scriptTarget":0,"arguments":[{"name":"outputformat","required":false,"deprecated":false,"default":true,"secret":false,"description":"Output format - table, json or markdown. If omitted, default is markdown."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PrintErrorEntry","version":7,"name":"PrintErrorEntry","type":"python","tags":[],"contextKeys":[],"comment":"Prints an error entry with a given message","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.720069+03:00","scriptTarget":0,"arguments":[{"name":"message","required":true,"deprecated":false,"default":true,"secret":false,"description":"The error message to be printed."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PrintRaw","version":7,"name":"PrintRaw","type":"python","tags":[],"contextKeys":[],"comment":"Prints a raw representation of a string or object, visualising things likes tabs and newlines.  For instance, '\\n' will be displayed instead of a newline character, or a Windows CR will be displayed as '\\r\\n'.  This is useful for debugging issues where things aren't behaving as expected, such as when parsing a string with a regular expression.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.9324","modified":"2021-09-07T09:21:43.711731+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to be represented."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ProductJoin","version":7,"name":"ProductJoin","type":"python","tags":["transformer","general","entirelist"],"contextKeys":[],"comment":"Returns the product of two lists, joined by a separator, as a list of strings.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-07T09:21:43.712073+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The first list (or CSV string).","isArray":true},{"name":"list2","required":true,"deprecated":false,"default":false,"secret":false,"description":"The second list (or CSV string).","isArray":true},{"name":"join","required":true,"deprecated":false,"default":false,"secret":false,"description":"Separator","defaultValue":"="}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ProvidesCommand","version":7,"name":"ProvidesCommand","type":"python","tags":["general"],"contextKeys":[],"comment":"Finds which integrations implement a specific Demisto command.  The results will be returned as comma-separated values (CSV).  The \"Demisto REST API\" integration must first be enabled.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.977","modified":"2021-09-07T09:21:43.712178+03:00","scriptTarget":0,"arguments":[{"name":"command","required":true,"deprecated":false,"default":false,"secret":false,"description":"The integration command to find"},{"name":"enabled","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Filters results to integrations that are enabled or disabled.  'true' or 'false'.  Will return both types by default.  False means that an integration instance is either not defined or not enabled.  True means that an integration instance is both defined and enabled."}],"dependsOn":{"must":["Demisto REST API|||demisto-api-post","Demisto REST API|||demisto-api-get"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"PublishEntriesToContext","version":7,"name":"PublishEntriesToContext","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Publish entries to incident's context","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.712361+03:00","scriptTarget":0,"arguments":[{"name":"ids","required":true,"deprecated":false,"default":true,"secret":false,"description":"The entry IDs we want to publish. Accepts comma separated IDs or a list of strings."},{"name":"out","required":false,"deprecated":false,"default":false,"secret":false,"description":"The name of the context key. Default is \"entries\"."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"entries","description":"The entries published to context if out key was not provided","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ReadFile","version":7,"name":"ReadFile","type":"python","tags":["Utility","ingestion"],"contextKeys":[],"comment":"Load the contents of a file into context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.713542+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":true,"secret":false,"description":"War room entryID of the file to read."},{"name":"maxFileSize","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximal file size to load, in bytes. Default is 1MB."},{"name":"encoding","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["utf-8","utf-16","ascii"],"description":"The character encoding of the file"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"FileData","description":"Data read from war room file","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ReadPDFFileV2","version":7,"name":"ReadPDFFileV2","type":"python","tags":["Utility","ingestion"],"contextKeys":[],"comment":"Load a PDF file's content and metadata into context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/readpdf:1.0.0.19258","modified":"2021-09-07T09:21:43.718974+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":true,"secret":false,"description":"War Room entryID of the file to read."},{"name":"userPassword","required":false,"deprecated":false,"default":false,"secret":false,"description":"Password for the file, if encrypted."},{"name":"maxImages","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of images to extract from the PDF file.","defaultValue":"20"}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"URL.Data","description":"A list of URLs that were extracted from the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Text","description":"The text that was extracted from the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Producer","description":"The producer of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Title","description":"The title of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Author","description":"The author of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.ModDate","description":"The ModDate of the PDF file.","type":"Date"},{"contentPath":"","contextPath":"File.CreationDate","description":"The CreationDate of the PDF file.","type":"Date"},{"contentPath":"","contextPath":"File.Pages","description":"Number of pages in the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Size","description":"The file size in bytes.","type":"Number"},{"contentPath":"","contextPath":"File.Form","description":"PDF form type.","type":"String"},{"contentPath":"","contextPath":"File.Encrypted","description":"Is the file is encrypted.","type":"String"},{"contentPath":"","contextPath":"File.FileSize","description":"The file size in bytes.","type":"String"},{"contentPath":"","contextPath":"File.SHA1","description":"SHA1 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.PageRot","description":"Page rotation of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Optimized","description":"Has the page has been optimzed.","type":"String"},{"contentPath":"","contextPath":"File.SHA256","description":"SHA256 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.PDFVersion","description":"The PDF version.","type":"String"},{"contentPath":"","contextPath":"File.Name","description":"The name of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Creator","description":"The creator of the PDF file.","type":"String"},{"contentPath":"","contextPath":"File.Tagged","description":"Does the file have tagged meta-information.","type":"String"},{"contentPath":"","contextPath":"File.SSDeep","description":"SSDeep hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.EntryID","description":"The Entry ID of the file.","type":"String"},{"contentPath":"","contextPath":"File.JavaScript","description":"Is the file in JavaScript.","type":"String"},{"contentPath":"","contextPath":"File.Info","description":"Additional information about the file.","type":"String"},{"contentPath":"","contextPath":"File.PageSize","description":"The PDF file page size.","type":"String"},{"contentPath":"","contextPath":"File.Type","description":"The file type.","type":"String"},{"contentPath":"","contextPath":"File.Suspects","description":"Indicating the presence of tag suspects.","type":"String"},{"contentPath":"","contextPath":"File.MD5","description":"MD5 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.UserProperties","description":"Indicating the presence of structure elements that contain user properties attributes.","type":"String"},{"contentPath":"","contextPath":"File.Extension","description":"The file's extension.","type":"String"},{"contentPath":"","contextPath":"Account.Email","description":"The email address of the account.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"RegexExtractAll","version":7,"name":"RegexExtractAll","type":"python","tags":["transformer","string"],"contextKeys":[],"comment":"Extraction of all matches from a specified regular expression pattern from a provided string.  Returns an array of results.  This differs from RegexGroups in several ways:\n\n* It returns all matches of the specified pattern, not just specific groups.  This is useful for extracting things using a pattern where the content of the source string is indeterminate, such as extracting all email addresses.\n* Some \"convenience\" arguments have been added to enhance usability: multi-line, ignore_case, period_matches_newline\n* Added a new argument, \"error_if_no_match\".  The script will not ordinarily throw an error if a match is not found but if not using as a transformer within a playbook, it may, in certain limited circumstances, be desirable to throw an error if the expression doesn't match.\n* It uses the 'regex'  library, which supports more some more advanced regex functionality than the standard 're' library.  For more info, see https://pypi.org/project/regex/.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.4583","modified":"2021-09-07T09:21:43.7146+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Text to match against, e.g., The quick brown fox."},{"name":"regex","required":true,"deprecated":false,"default":false,"secret":false,"description":"Regex pattern to search (in Python), e.g., (The)\\s(quick).*(fox)."},{"name":"multi_line","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Process value in multiline mode.  See more information on re.MULTILINE, see https://docs.python.org/3/library/re.html.","defaultValue":"false"},{"name":"ignore_case","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Whether character matching will be case-insensitive. Default is \"false\".","defaultValue":"false"},{"name":"period_matches_newline","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Whether to make the '.' character also match a new line. Default is \"false\".","defaultValue":"false"},{"name":"error_if_no_match","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Only set to 'true' if using in a playbook task and you want a failure. to return an error","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RegexGroups","version":7,"name":"RegexGroups","type":"python","tags":["transformer","string"],"contextKeys":[],"comment":"Extraction of elements which are contained in all the subgroups of the match to the pattern.\nFor example, extracting from the string \"The quick brown fox\" the object `{\"article\":\"The\",\"noun\":quick\"}`\n(See arguments descriptions for more details) ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.5.3066","modified":"2021-09-07T09:21:43.717972+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Text to match against, e.g., The quick brown fox."},{"name":"regex","required":true,"deprecated":false,"default":false,"secret":false,"description":"Regex pattern to search (in Python), e.g., (The)\\s(quick).*(fox)."},{"name":"groups","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separate list of capture groups to return, given in integers. If not provided, all capture groups will be returned."},{"name":"keys","required":false,"deprecated":false,"default":false,"secret":false,"description":"Key names to map to capture group items, ordered by capture groups. Number of keys should be the same as number of groups (Comma-separated values supported) e.g., article,noun."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RemoteExec","version":7,"name":"RemoteExec","type":"javascript","tags":["endpoint"],"contextKeys":[],"comment":"Execute a command on a remote machine (without installing a D2 agent)","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713209+03:00","scriptTarget":0,"arguments":[{"name":"system","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of system on which to run the command"},{"name":"cmd","required":true,"deprecated":false,"default":false,"secret":false,"description":"Command to run"}],"dependsOn":{"must":["ssh"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RemoveKeyFromList","version":7,"name":"RemoveKeyFromList","type":"python","tags":[],"contextKeys":[],"comment":"Removes a key in key/value store backed by an XSOAR list.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.719486+03:00","scriptTarget":0,"arguments":[{"name":"listName","required":true,"deprecated":false,"default":false,"secret":false,"description":"List name."},{"name":"keyName","required":true,"deprecated":false,"default":false,"secret":false,"description":"Key."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RepopulateFiles","version":7,"name":"RepopulateFiles","type":"python","tags":["Utility"],"contextKeys":[],"comment":"After running DeleteContext, this script can repopulate all the file entries in the ${File} context key","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.718558+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ResolveShortenedURL","version":7,"name":"ResolveShortenedURL","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Resolve the original URL from the given shortened URL and place it in both as output and in the context of a playbook. (https://unshorten.me/api)","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.716988+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"URL to resolve"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"URL.Data","description":"Shortened URL","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ReverseList","version":7,"name":"ReverseList","type":"python","tags":["general","entirelist","transformer"],"contextKeys":[],"comment":"Reverse a list\ne.g. [\"Mars\", \"Jupiter\", \"Saturn\"] =\u003e  [ \"Saturn\", \"Jupiter\", \"Mars\"]\n\nThis is an example for entire-list transformer - it operates the argument as a list  (note the \"entirelist\" tag)\n ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.716691+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"List to reverse","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RSSWidget","version":2,"name":"RSSWidget","type":"python","tags":["widget"],"contextKeys":[],"comment":"Script Widget - RSS Feed.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/feed-parser:1.0.0.23151","modified":"2021-09-07T09:21:43.720642+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"The URL of the RSS feed."},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of entries to return."},{"name":"insecure","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Trust any certificate (not secure). Possible values: \"true\" and \"false\".","defaultValue":"false"},{"name":"proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Use system proxy settings. Possible values: \"true\" and \"false\".","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"RunDockerCommand","version":7,"name":"RunDockerCommand","type":"python","tags":["Utilities"],"contextKeys":[],"comment":"This command will allow you to run commands against a local Docker Container. You can run commands like wc for instance with word count, or other types of commands that you want on the docker container. \n\nWe recommend for tools that you want to use that are not part of the default Docker container, to cope this Automation script and then create a customer docker container with /docker_image_create with a custom docker container to add any command level tool to Demisto and output the results directly to the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717272+03:00","scriptTarget":0,"arguments":[{"name":"cmd","required":false,"deprecated":false,"default":true,"secret":false,"description":"Enter Command"},{"name":"sysargs","required":false,"deprecated":false,"default":false,"secret":false,"description":"enter sysargs"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"CommandResults.Command","description":"This will contain the command line tool name and arguments that were ran.","type":""},{"contentPath":"","contextPath":"CommandResults.Results","description":"This will have the full results as a single string of the results. You will need to parse the results of the command into the format you want. Try looking at commands like ExtractRegex or create your own follow on automation script that will parse the results into the format you would like.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"RunPollingCommand","version":7,"name":"RunPollingCommand","type":"python","tags":[],"contextKeys":[],"comment":"Runs a specified polling command one time. This is useful for initiating a local playbook context before running a polling scheduled task.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.22912","modified":"2021-09-07T09:21:43.713357+03:00","scriptTarget":0,"arguments":[{"name":"ids","required":true,"deprecated":false,"default":false,"secret":false,"description":"List of IDs to poll"},{"name":"pollingCommand","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the polling command to run"},{"name":"pollingCommandArgName","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the argument of the polling command","defaultValue":"ids"},{"name":"additionalPollingCommandArgNames","required":false,"deprecated":false,"default":false,"secret":false,"description":"Commas separated arguments of the polling command"},{"name":"additionalPollingCommandArgValues","required":false,"deprecated":false,"default":false,"secret":false,"description":"Commas separated arguments values of the polling command"}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SaneDocReports","version":6,"name":"SaneDocReports","type":"python","tags":["sane-doc-reports","sane-reports","docx"],"contextKeys":[],"comment":"Parse Sane-json-reports and export them as docx files (used internally).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sane-doc-reports:1.0.0.20692","modified":"2021-09-05T10:48:03.027585+03:00","scriptTarget":0,"arguments":[{"name":"sane_docx_report_base64","required":true,"deprecated":false,"default":true,"secret":false,"description":"sane report json file contents base64"},{"name":"orientation","required":false,"deprecated":false,"default":false,"secret":false,"description":"orientation of the report","defaultValue":"portrait"},{"name":"paperSize","required":false,"deprecated":false,"default":false,"secret":false,"description":"The paper size for the report.","defaultValue":"A4"},{"name":"customerLogo","required":false,"deprecated":false,"default":false,"secret":false,"description":"Custom logo image."},{"name":"demistoLogo","required":false,"deprecated":false,"default":false,"secret":false,"description":"The logo for XSOAR."}],"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SanePdfReports","version":6,"name":"SanePdfReports","type":"python","tags":["sane-pdf-reports","sane-reports","pdf"],"contextKeys":[],"comment":"Parse Sane-json-reports and export them as pdf files (used internally).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/sane-pdf-reports:1.0.0.24026","modified":"2021-09-05T10:48:03.027661+03:00","scriptTarget":0,"arguments":[{"name":"sane_pdf_report_base64","required":true,"deprecated":false,"default":true,"secret":false,"description":"sane report json file contents base64"},{"name":"orientation","required":false,"deprecated":false,"default":false,"secret":false,"description":"orientation of the report","defaultValue":"portrait"},{"name":"paperSize","required":false,"deprecated":false,"default":false,"secret":false,"description":"the paper size of the report","defaultValue":"A4"},{"name":"resourceTimeout","required":false,"deprecated":false,"default":false,"secret":false,"description":"timeout for the report generation execution time","defaultValue":"4000"},{"name":"reportType","required":false,"deprecated":false,"default":false,"secret":false,"description":"type of report generated","defaultValue":"pdf"},{"name":"customerLogo","required":false,"deprecated":false,"default":false,"secret":false,"description":"customer's logo"},{"name":"demistoLogo","required":false,"deprecated":false,"default":false,"secret":false,"description":"demito's logo"},{"name":"disableHeaders","required":false,"deprecated":false,"default":false,"secret":false,"description":"flag to use headers in the report or not","defaultValue":"false"}],"deprecated":true,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ScheduleCommand","version":7,"name":"ScheduleCommand","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Schedule a command to run inside the war room at a future time (once or reoccurring)","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715551+03:00","scriptTarget":0,"arguments":[{"name":"command","required":true,"deprecated":false,"default":true,"secret":false,"description":"The command to schedule"},{"name":"cron","required":true,"deprecated":false,"default":false,"secret":false,"description":"The scheduled time to run"},{"name":"endDate","required":false,"deprecated":false,"default":false,"secret":false,"description":"When should we end the schedule. Will be only relevant if times is not provided. Optional. Format is 'Mon, 02 Jan 2006 15:04:05 MST'"},{"name":"times","required":false,"deprecated":false,"default":false,"secret":false,"description":"The number of times to run. Optional."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ScheduleGenericPolling","version":7,"name":"ScheduleGenericPolling","type":"python","tags":[],"contextKeys":[],"comment":"Called by the GenericPolling playbook, schedules the polling task.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.22912","modified":"2021-09-07T09:21:43.719787+03:00","scriptTarget":0,"arguments":[{"name":"ids","required":true,"deprecated":false,"default":false,"secret":false,"description":"List of IDs to poll","isArray":true},{"name":"pollingCommand","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the polling command to run"},{"name":"pollingCommandArgName","required":true,"deprecated":false,"default":false,"secret":false,"description":"Name of the argument of the polling command","defaultValue":"ids"},{"name":"dt","required":true,"deprecated":false,"default":false,"secret":false,"description":"DT filter for polling IDs"},{"name":"playbookId","required":false,"deprecated":false,"default":false,"secret":false,"description":"The ID of the playbook that contains the manual task which will be completed once the polling is done."},{"name":"interval","required":true,"deprecated":false,"default":false,"secret":false,"description":"Polling frequency - how often the polling command should run (minutes)","defaultValue":"1"},{"name":"timeout","required":true,"deprecated":false,"default":false,"secret":false,"description":"How much time to poll before declaring a timeout and resuming the playbook (minutes)","defaultValue":"60"},{"name":"tag","required":true,"deprecated":false,"default":false,"secret":false,"description":"The tag of the blocking manual task (\"Wait For Polling Task To Finish\")","defaultValue":"polling"},{"name":"additionalPollingCommandArgNames","required":false,"deprecated":false,"default":false,"secret":false,"description":"Names of additional arguments for the polling command (e.g. arg1,arg2,...)","isArray":true},{"name":"additionalPollingCommandArgValues","required":false,"deprecated":false,"default":false,"secret":false,"description":"Values of the additional arguments for the polling command (e.g. value1,value2,...)","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SCPPullFiles","version":7,"name":"SCPPullFiles","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Take a list of devices and pull a specific file (given by path) from each using SCP","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.710891+03:00","scriptTarget":0,"arguments":[{"name":"systems2files","required":true,"deprecated":false,"default":true,"secret":false,"description":"A JSON object mapping RemoteAccess instances to filepaths."}],"dependsOn":{"must":["copy-from"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SearchIncidentsV2","version":7,"name":"SearchIncidentsV2","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Searches Demisto incidents","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.2.17957","modified":"2021-09-07T09:21:43.716007+03:00","scriptTarget":0,"arguments":[{"name":"id","required":false,"deprecated":false,"default":true,"secret":false,"description":"A comma-separated list of incident IDs by which to filter the results.","isArray":true},{"name":"name","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident names by which to filter the results.","isArray":true},{"name":"status","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident statuses by which to filter the results. For example: assigned.","isArray":true},{"name":"notstatus","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident statuses to exclude from the results.  For example: assigned.","isArray":true},{"name":"reason","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of incident close reasons by which to filter the results.","isArray":true},{"name":"fromdate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by from date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"todate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by to date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"fromclosedate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by from close date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"toclosedate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by to close date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"fromduedate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by from due date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"toduedate","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by to due date (e.g. 2006-01-02T15:04:05+07:00 or 2006-01-02T15:04:05Z)"},{"name":"level","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by Severity","isArray":true},{"name":"owner","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by incident owners","isArray":true},{"name":"details","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by incident details"},{"name":"type","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by incident type","isArray":true},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Use free form query (use Lucene syntax) as filter. All other filters will be ignored when this filter is used."},{"name":"page","required":false,"deprecated":false,"default":false,"secret":false,"description":"Filter by the page number"},{"name":"size","required":false,"deprecated":false,"default":false,"secret":false,"description":"Number of incidents per page (per fetch)"},{"name":"sort","required":false,"deprecated":false,"default":false,"secret":false,"description":"Sort in format of field.asc,field.desc,..."}],"runAs":"DBotRole","outputs":[{"contentPath":"","contextPath":"foundIncidents.id","description":"A list of incident IDs returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.name","description":"A list of incident names returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.severity","description":"A list of incident severities returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.status","description":"A list of incident statuses returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.owner","description":"A list of incident owners returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.created","description":"A list of the incident create date returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.closed","description":"A list of incident close dates returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.labels","description":"An array of labels per incident returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.details","description":"Details of the incidents returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.dueDate","description":"A list of incident due dates returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.phase","description":"A list of incident phases returned from the query.","type":"Unknown"},{"contentPath":"","contextPath":"foundIncidents.incidentLink","description":"A list with links to the incidents returned from the query.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"SearchIndicatorRelationships","version":5,"name":"SearchIndicatorRelationships","type":"python","tags":["basescript"],"contextKeys":[],"comment":"This automation outputs the indicator relationships to context according to the provided query, using the entities, entityTypes, and relationships arguments. All arguments will use the AND operator. For example, using the following arguments entities=8.8.8.8 entities_types=Domain will provide only relationships that the 8.8.8.8 indicator has with indicators of type domain.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-05T10:48:03.02746+03:00","scriptTarget":0,"arguments":[{"name":"entities","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of entities for which to search for relationships. For example: 192.168.1.1,192.168.1.2. The search applies to both entity A or entity B values. This argument can be used in conjunction with the entityType and the relationship arguments and all arguments will be treated with the AND operator.","isArray":true},{"name":"entities_types","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["IP","Domain","URL","CVE","DomainGlob","Email","FILE","Host","CIDR","IPv6","IPv6CIDR","Registry Key","ssdeep","accountRep","CIDR","Attack Pattern","Malware","Report","Threat Actor","Tool","Intrusion Set","Campaign","Course of Action","Infrastructure."],"description":"A comma-separated list of entity types for which to search for relationships. For example: IP,URL. This argument can be used in conjunction with the entities and the relationship arguments and all arguments will be treated with the AND operator.","isArray":true},{"name":"relationships","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["applied","attachment-of","attaches","attribute-of","attributed-by","attributed-to","authored-by","beacons-to","bundled-in","bundles","communicated-with","communicated-by","communicates-with","compromises","contains","controls","created-by","creates","delivered-by","delivers","downloads","downloads-from","dropped-by","drops","duplicate-of","embedded-in","embeds","executed","executed-by","exfiltrates-to","exploits","has","hosted-on","hosts","impersonates","indicated-by","indicator-of","injected-from","injects-into","investigates","is-also","mitigated-by","mitigates","originated-from","owned-by","owns","part-of","related-to","remediates","resolved-by","resolved-from","resolves-to","seen-on","sent","sent-by","sent-from","sent-to","similar-to","sub-domain-of","supra-domain-of","subtechnique-of","parent-technique-of","targeted-by","targets","Types","uploaded-to","used-by","used-on","uses","variant-of"],"description":"A comma-separated list of relationship types for which to search for relationships. For example: related-to,contains. This argument can be used in conjunction with the entities and the entitiesTypes arguments and all arguments will be treated with the AND operator.","isArray":true},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"The number of results to return. Default is 20.","defaultValue":"20"},{"name":"verbose","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether all of the relationships attributes will be returned or just the basic attributes. Default is false and the returned values will be name, entity A value, entity A type, entity B value, entity B type, relationships type. If true, all attributes will be returned.","defaultValue":"false"},{"name":"revoked","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"The status of the relationships to return. Default is false.","defaultValue":"false"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Relationships.EntityA","description":"The source of the relationship.","type":"String"},{"contentPath":"","contextPath":"Relationships.EntityB","description":"The destination of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Relationship","description":"The name of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Reverse","description":"The name of the reverse relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.EntityAType","description":"The type of the source of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.EntityBType","description":"The type of the destination of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.ID","description":"The ID of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Reliability","description":"The reliability of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Brand","description":"The brand of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Revoked","description":"True if the relationship is revoked.","type":"string"},{"contentPath":"","contextPath":"Relationships.FirstSeenBySource","description":"The first time seen by the source of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.LastSeenBySource","description":"The last time seen by the source of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Description","description":"The description of the relationship.","type":"string"},{"contentPath":"","contextPath":"Relationships.Type","description":"The type of the relationship.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"SendEmailOnSLABreach","version":7,"name":"SendEmailOnSLABreach","type":"python","tags":["sla","example"],"contextKeys":[],"comment":"Sends an email informing the user of an SLA breach. The email is sent to the user who is assigned to the incident. It includes the incident name, ID, name of the SLA field that was breached, duration of that SLA field, and the date and time when that SLA was started.\nIn order to run successfully, the script should be configured to trigger on SLA breach, through field edit mode.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712215+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SendEmailToManager","version":4,"name":"SendEmailToManager","type":"python","tags":["communication"],"contextKeys":[],"comment":"Send an approval email to the manager of the employee with the given email allowing the manager to reply directly into the incident","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.027163+03:00","scriptTarget":0,"arguments":[{"name":"email","required":false,"deprecated":false,"default":false,"secret":false,"description":"The employee email. We will send an email to his manager. If not provided will be taken from incident label 'Email/from'"},{"name":"manager","required":false,"deprecated":false,"default":false,"secret":false,"description":"The manager attribute in Active Directory. Default is 'manager'."},{"name":"allowReply","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"If true, we will add an entitlement to the subject allowing manager to reply to war room"},{"name":"body","required":false,"deprecated":false,"default":false,"secret":false,"description":"The contents of the email body. It's a template that can include $empName and $managerName which will be replaced with actual values."},{"name":"request","required":false,"deprecated":false,"default":false,"secret":false,"description":"The contents of the request from the manager. Will be added below the body. If none is provided, incident details will be taken."},{"name":"replyEntriesTag","required":false,"deprecated":false,"default":false,"secret":false,"description":"Tag to add on email reply entries"},{"name":"persistent","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Indicates whether to use one-time entitlement or a persistent one","defaultValue":"false"}],"dependsOn":{"must":["ad-search","send-mail"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SendMessageToOnlineUsers","version":7,"name":"SendMessageToOnlineUsers","type":"javascript","tags":[],"contextKeys":[],"comment":"Send message to Demisto online users over Email, Slack, Mattermost or all.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714055+03:00","scriptTarget":0,"arguments":[{"name":"medium","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["Slack","Mattermost","Email","All"],"description":"Medium to send message over (Slack, Mattermost, Email).","defaultValue":"Email"},{"name":"message","required":true,"deprecated":false,"default":true,"secret":false,"description":"Message to send"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ServiceNowCreateIncident","version":1,"name":"ServiceNowCreateIncident","type":"python","tags":["servicenow","servicenow v2"],"contextKeys":[],"comment":"This script is used to wrap the generic create-record command in ServiceNow.\nYou can add fields that you want to create the record with as script arguments or in the\ncode and work with the records easily.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-24T19:36:38.251975+03:00","scriptTarget":0,"arguments":[{"name":"severity","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["1 - High","2 - Medium","3 - Low"],"description":"Incident severity"},{"name":"assignee","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident assigne name (e.g John Smith)"},{"name":"description","required":true,"deprecated":false,"default":false,"secret":false,"description":"Incident description"},{"name":"assigned_group","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident assigned group name (e.g Incident Management Group)"}],"dependsOn":{"must":["servicenow-create-record","servicenow-query-table"]},"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ServiceNow.Incident.ID","description":"Incident ID","type":"string"},{"contentPath":"","contextPath":"ServiceNow.Incident.Number","description":"Incident number","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ServiceNowIncidentStatus","version":1,"name":"ServiceNowIncidentStatus","type":"python","tags":["dynamic-section","python","servicenow v2"],"contextKeys":[],"comment":"populates the value of the ServiceNow Ticket State field and display it in a layout widget.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.1.14969","modified":"2021-08-24T19:36:38.252015+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ServiceNowQueryIncident","version":1,"name":"ServiceNowQueryIncident","type":"python","tags":["servicenow","servicenow v2"],"contextKeys":[],"comment":"This script is used to wrap the generic query-table command in ServiceNow.\nYou can add fields that you want to use as inputs and outputs from the record as script arguments or in the\ncode and work with the records easily.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-24T19:36:38.252032+03:00","scriptTarget":0,"arguments":[{"name":"id","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident System ID"},{"name":"number","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident number"},{"name":"assignee","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident assigne name (e.g John Smith)"}],"dependsOn":{"must":["servicenow-query-table"]},"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ServiceNow.Incident.ID","description":"Incident ID","type":"string"},{"contentPath":"","contextPath":"ServiceNow.Incident.Description","description":"Incident description","type":"string"},{"contentPath":"","contextPath":"ServiceNow.Incident.Number","description":"Incident number","type":"number"},{"contentPath":"","contextPath":"ServiceNow.Incident.Caller","description":"Incident caller","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ServiceNowUpdateIncident","version":1,"name":"ServiceNowUpdateIncident","type":"python","tags":["servicenow","servicenow v2"],"contextKeys":[],"comment":"This script is used to wrap the generic update-record command in ServiceNow.\nYou can add fields that you want to update the record with as script arguments or in the\ncode and work with the records easily.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-08-24T19:36:38.252056+03:00","scriptTarget":0,"arguments":[{"name":"severity","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["1 - High","2 - Medium","3 - Low"],"description":"Incident severity"},{"name":"assignee","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident assigne name (e.g John Smith)"},{"name":"description","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident description"},{"name":"assigned_group","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident assigned group name (e.g Incident Management Group)"},{"name":"id","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident ID to update"},{"name":"number","required":false,"deprecated":false,"default":false,"secret":false,"description":"Incident number to update"},{"name":"query","required":false,"deprecated":false,"default":false,"secret":false,"description":"Query to use "}],"dependsOn":{"must":["servicenow-update-record","servicenow-query-table"]},"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ServiceNow.Incident.ID","description":"Incident ID","type":"string"},{"contentPath":"","contextPath":"ServiceNow.Incident.Number","description":"Incident number","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Set","version":7,"name":"Set","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Set a value in context under the key you entered.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717158+03:00","scriptTarget":0,"arguments":[{"name":"key","required":true,"deprecated":false,"default":true,"secret":false,"description":"The key to set. Can be a full path such as \"Key.ID\". If using append=true can also use a DT selector such as \"Data(val.ID == obj.ID)\"."},{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to set to the key. Can be an array (e.g. [\"192.168.1.1\",\"192.168.1.2\"]) or JSON (e.g. {\"key\":\"value\"}).","isArray":true},{"name":"append","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"If false then the context key will be overwritten. If set to true then the script will append to existing context key."},{"name":"stringify","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether the argument should be saved as a string.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetAndHandleEmpty","version":7,"name":"SetAndHandleEmpty","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Set a value in context under the key you entered. If no value is entered, the script doesn't do anything.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.713287+03:00","scriptTarget":0,"arguments":[{"name":"key","required":true,"deprecated":false,"default":true,"secret":false,"description":"The key to set in context."},{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"The value of the key to set in context. The value is usually a DQ expression. Can be an array.","isArray":true},{"name":"append","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to append the new context key to the existing context key. If \"false\", then the existing context key will be overwritten with the new context key."},{"name":"stringify","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether to save the argument as a string. The default value is \"false\".","defaultValue":"false"}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetByIncidentId","version":7,"name":"SetByIncidentId","type":"python","tags":["DemistoAPI"],"contextKeys":[],"comment":"Works the same as the 'Set' command, but can work across incidents by specifying 'id' as an argument. Sets a value into the context with the given context key. Doesn't append by default.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.716654+03:00","scriptTarget":0,"arguments":[{"name":"id","required":false,"deprecated":false,"default":true,"secret":false,"description":"Incident to set context values in (Default is current incident)"},{"name":"key","required":true,"deprecated":false,"default":false,"secret":false,"description":"The key to set"},{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to set to the key. Can be an array. Usually, a dq expression."},{"name":"append","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"If false then the context key will be overwritten. If set to true then the script will append to existing context key","defaultValue":"false"},{"name":"errorUnfinished","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Returns an error if not all of the incidents where modified.","defaultValue":"false"}],"runAs":"DBotRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetDateField","version":7,"name":"SetDateField","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Sets a custom incident field with current date","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.714086+03:00","scriptTarget":0,"arguments":[{"name":"fieldName","required":true,"deprecated":false,"default":false,"secret":false,"description":"The name of the incident custom field of type date"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetGridField","version":7,"name":"SetGridField","type":"python","tags":null,"contextKeys":[],"comment":"Creates a Grid table from items or key-value pairs.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/pandas:1.0.0.23402","modified":"2021-09-07T09:21:43.719655+03:00","scriptTarget":0,"arguments":[{"name":"context_path","required":true,"deprecated":false,"default":false,"secret":false,"description":"Context path to list of items with similar properties or key-value pairs."},{"name":"grid_id","required":true,"deprecated":false,"default":false,"secret":false,"description":"Grid ID to modify."},{"name":"overwrite","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Set to 'true' to overwrite Grid Data.","defaultValue":"true"},{"name":"columns","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of grid columns, for example: (col1,col2,..,coln).","isArray":true},{"name":"keys","required":false,"deprecated":false,"default":false,"secret":false,"description":"Keys to retrieve from items. Keys will not be columns correlated. Default is all keys. **Note**: when the number of values exceeds the number of columns, it truncates the last values that are outside the range for table. If you want to leave an empty column, provide a place holder name that should not be in the context data, such as \"PLACE_HOLDER\".","isArray":true,"defaultValue":"*"},{"name":"sort_by","required":false,"deprecated":false,"default":false,"secret":false,"description":"Columns names by which to sort the rows.","isArray":true},{"name":"unpack_nested_elements","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["false","true"],"description":"Set to 'true' to unpack nested elements.","defaultValue":"false"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetIfEmpty","version":7,"name":"SetIfEmpty","type":"python","tags":["transformer","general","entirelist"],"contextKeys":[],"comment":"Checks an object for an empty value and returns a pre-set default value.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.718355+03:00","scriptTarget":0,"arguments":[{"name":"value","required":false,"deprecated":false,"default":false,"secret":false,"description":"The object value to check, if empty."},{"name":"defaultValue","required":false,"deprecated":false,"default":false,"secret":false,"description":"The new value to return if the original value was empty."},{"name":"applyIfEmpty","required":false,"deprecated":false,"default":true,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"If set to true, empty strings, arrays and dictionaries and the strings \"None\" and \"Null\" are considered empty entities and the default value is returned.","defaultValue":"true"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetMultipleValues","version":7,"name":"SetMultipleValues","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Set multiple keys/values to the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.712571+03:00","scriptTarget":0,"arguments":[{"name":"parent","required":true,"deprecated":false,"default":true,"secret":false,"description":"The parent key to which we append all the other keys"},{"name":"keys","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma separated list of keys"},{"name":"values","required":true,"deprecated":false,"default":false,"secret":false,"description":"Comma separated list of values"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SetTime","version":7,"name":"SetTime","type":"python","tags":[],"contextKeys":[],"comment":"Fill the current time in a custom incident field","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.713654+03:00","scriptTarget":0,"arguments":[{"name":"fieldName","required":true,"deprecated":false,"default":true,"secret":false,"description":"Incident field name to set"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ShowLocationOnMap","version":7,"name":"ShowLocationOnMap","type":"python","tags":["dynamic-indicator-section"],"contextKeys":[],"comment":"Show indicator geo location on map","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.3.286","modified":"2021-09-07T09:21:43.715246+03:00","scriptTarget":0,"arguments":null,"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ShowOnMap","version":7,"name":"ShowOnMap","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Returns a map entry with a marker on the given coordinates (lat,lng), or address (requires a configured GoogleMaps instance).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.714203+03:00","scriptTarget":0,"arguments":[{"name":"lat","required":false,"deprecated":false,"default":true,"secret":false,"description":"Latitude (e.g. `32.064622`)"},{"name":"lng","required":false,"deprecated":false,"default":false,"secret":false,"description":"Longitude (e.g. `34.774131`)"},{"name":"address","required":false,"deprecated":false,"default":false,"secret":false,"description":"Address (e.g., `1600 Pennsylvania ave, DC`)"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ShowScheduledEntries","version":7,"name":"ShowScheduledEntries","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Show all scheduled entries for specific incident.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.715205+03:00","scriptTarget":0,"arguments":[{"name":"incidentId","required":false,"deprecated":false,"default":true,"secret":false,"description":"Incident ID to get tasks from"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ScheduledEntries","description":"Entire scheduled entry object","type":""},{"contentPath":"","contextPath":"ScheduledEntries.id","description":"Entry ID","type":"string"},{"contentPath":"","contextPath":"ScheduledEntries.contents","description":"Entry contents (the scheduled command)","type":"string"},{"contentPath":"","contextPath":"ScheduledEntries.type","description":"Entry type","type":"number"},{"contentPath":"","contextPath":"ScheduledEntries.investigationID","description":"Entry's investigation ID","type":"string"},{"contentPath":"","contextPath":"ScheduledEntries.schedule.startDate","description":"Entry schedule start date","type":""},{"contentPath":"","contextPath":"ScheduledEntries.schedule.EndingType","description":"Entry schedule ending type (by / after)","type":""},{"contentPath":"","contextPath":"ScheduledEntries.schedule.Times","description":"Entry schedule times until ends (when ending type is 'by')","type":"number"},{"contentPath":"","contextPath":"ScheduledEntries.schedule.EndingDate","description":"Entry schedule end time (when ending type is 'after')","type":""},{"contentPath":"","contextPath":"ScheduledEntries.schedule.cron","description":"Entry schedule cron","type":"string"},{"contentPath":"","contextPath":"ScheduledEntries.schedule.HumanCron","description":"Entry schedule settings","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"SlackAsk","version":1,"name":"SlackAsk","type":"python","tags":["slack"],"contextKeys":[],"comment":"Sends a message (question) to either user (in a direct message) or to a channel. The message includes predefined reply options. The response can also close a task (might be conditional) in a playbook.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-05T10:49:33.606538+03:00","scriptTarget":0,"arguments":[{"name":"user","required":false,"deprecated":false,"default":false,"secret":false,"description":"The Slack user to which to send the message. Can be either an email address or a Slack user name."},{"name":"channel","required":false,"deprecated":false,"default":false,"secret":false,"description":"The Slack channel to which to send the message."},{"name":"message","required":true,"deprecated":false,"default":false,"secret":false,"description":"The message to send to the user or channel."},{"name":"option1","required":false,"deprecated":false,"default":false,"secret":false,"description":"The first reply option. The default is \"Yes\" with a green button. To change the color of the button, add the pound sign (#) followed by the name of the new color (green, red, or black). The default color is \"green\". For example, \"Yes#green\".","defaultValue":"Yes#green"},{"name":"option2","required":false,"deprecated":false,"default":false,"secret":false,"description":"The second reply option. The default is \"No\" with a red button. To change the button color, add the pound sign (#) followed by the name of the new color (green, red, or black). The default color is \"red\". For example, \"No#red\".","defaultValue":"No#red"},{"name":"task","required":false,"deprecated":false,"default":false,"secret":false,"description":"The task to close with the reply. If empty, then no playbook tasks will be closed."},{"name":"replyEntriesTag","required":false,"deprecated":false,"default":false,"secret":false,"description":"Tag to add to email reply entries."},{"name":"persistent","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Indicates whether to use one-time entitlement or persistent entitlement.","defaultValue":"false"},{"name":"responseType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["buttons","thread"],"description":"How the user should respond to the question.","defaultValue":"buttons"},{"name":"additionalOptions","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of additional options in the format of \"option#color\", for example, \"maybe#red\". The default color is \"black\"."},{"name":"reply","required":false,"deprecated":false,"default":false,"secret":false,"description":"The reply to send to the user. Use the templates {user} and {response} to incorporate these in the reply. (i.e. \"Thank you {user}. You have answered {response}.\")","defaultValue":"Thank you for your response."},{"name":"lifetime","required":false,"deprecated":false,"default":false,"secret":false,"description":"Time until the question expires. For example - 1 day. When it expires, a default response is sent.","defaultValue":"1 day"},{"name":"defaultResponse","required":false,"deprecated":false,"default":false,"secret":false,"description":"Default response in case the question expires.","defaultValue":"NoResponse"}],"dependsOn":{"must":["SlackV2|||send-notification"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SlackAskV2","version":1,"name":"SlackAskV2","type":"python","tags":["slack"],"contextKeys":[],"comment":"Sends a message (question) to either user (in a direct message) or to a channel. The message includes predefined reply options. The response can also close a task (might be conditional) in a playbook.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-05T10:49:33.606484+03:00","scriptTarget":0,"arguments":[{"name":"user","required":false,"deprecated":false,"default":false,"secret":false,"description":"The Slack user to which to send the message. Can be either an email address or a Slack user name."},{"name":"channel","required":false,"deprecated":false,"default":false,"secret":false,"description":"The Slack channel to which to send the message."},{"name":"message","required":true,"deprecated":false,"default":false,"secret":false,"description":"The message to send to the user or channel."},{"name":"option1","required":false,"deprecated":false,"default":false,"secret":false,"description":"The first reply option. The default is \"Yes\" with a green button. To change the color of the button, add the pound sign (#) followed by the name of the new color (green, red, or black). The default color is \"green\". For example, \"Yes#green\".","defaultValue":"Yes#green"},{"name":"option2","required":false,"deprecated":false,"default":false,"secret":false,"description":"The second reply option. The default is \"No\" with a red button. To change the button color, add the pound sign (#) followed by the name of the new color (green, red, or black). The default color is \"red\". For example, \"No#red\".","defaultValue":"No#red"},{"name":"task","required":false,"deprecated":false,"default":false,"secret":false,"description":"The task to close with the reply. If empty, then no playbook tasks will be closed."},{"name":"replyEntriesTag","required":false,"deprecated":false,"default":false,"secret":false,"description":"Tag to add to email reply entries."},{"name":"persistent","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Indicates whether to use one-time entitlement or persistent entitlement.","defaultValue":"false"},{"name":"responseType","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["buttons","thread"],"description":"How the user should respond to the question.","defaultValue":"buttons"},{"name":"additionalOptions","required":false,"deprecated":false,"default":false,"secret":false,"description":"A comma-separated list of additional options in the format of \"option#color\", for example, \"maybe#red\". The default color is \"black\"."},{"name":"reply","required":false,"deprecated":false,"default":false,"secret":false,"description":"The reply to send to the user. Use the templates {user} and {response} to incorporate these in the reply. (i.e. \"Thank you {user}. You have answered {response}.\")","defaultValue":"Thank you for your response."},{"name":"lifetime","required":false,"deprecated":false,"default":false,"secret":false,"description":"Time until the question expires. For example - 1 day. When it expires, a default response is sent.","defaultValue":"1 day"},{"name":"defaultResponse","required":false,"deprecated":false,"default":false,"secret":false,"description":"Default response in case the question expires.","defaultValue":"NoResponse"},{"name":"slackInstance","required":false,"deprecated":false,"default":false,"secret":false,"description":"The instance of SlackV3 this script should use."},{"name":"slackVersion","required":false,"deprecated":false,"default":true,"secret":false,"description":"The version of Slack to use. SlackV3 is configured by default.","defaultValue":"SlackV3"}],"dependsOn":{"must":["SlackV3|||send-notification"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"Sleep","version":7,"name":"Sleep","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Sleep for X seconds","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.711968+03:00","scriptTarget":0,"arguments":[{"name":"seconds","required":true,"deprecated":false,"default":true,"secret":false,"description":"Amount of seconds to sleep"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SSDeepReputation","version":7,"name":"SSDeepReputation","type":"python","tags":["reputation"],"contextKeys":[],"comment":"Calculate ssdeep reputation based on similar files (by ssdeep similarity) on the system.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717939+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"Ssdeep value."},{"name":"timeFrameDays","required":false,"deprecated":false,"default":false,"secret":false,"description":"Check similar values in this time frame (days).","defaultValue":"1"},{"name":"threshold","required":false,"deprecated":false,"default":false,"secret":false,"description":"Consider ssdeep similar above this threshold.","defaultValue":"50"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SSDeepSimilarity","version":6,"name":"SSDeepSimilarity","type":"python","tags":[],"contextKeys":[],"comment":"This script finds similar files that can be related to each other by fuzzy hash (SSDeep).","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/ssdeep:1.0.0.23743","modified":"2021-09-07T09:21:43.719146+03:00","scriptTarget":0,"arguments":[{"name":"ssdeep_hash","required":true,"deprecated":false,"default":false,"secret":false,"description":"The SSDeep hash to check for similarity against."},{"name":"ssdeep_hashes_to_compare","required":true,"deprecated":false,"default":false,"secret":false,"description":"A list of SSDeep hashes to check for similarity to the ssdeep_hash input.","isArray":true},{"name":"output_key","required":false,"deprecated":false,"default":false,"secret":false,"description":"The context key to which the list of SSDeep hashes will be outputted.\nIn case used, the default outputs will not contain the results.\nIn order to get results, replace the SSDeepSimilarity in default outputs with the output_key provided.","defaultValue":"SSDeepSimilarity"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"SSDeepSimilarity.compared_hashes.similarityValue","description":"The difference calculation score between the ssdeep_hash and the compared hash.","type":"number"},{"contentPath":"","contextPath":"SSDeepSimilarity.compared_hashes.hash","description":"The hash compared to the ssdeep_hash.","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"StixCreator","version":7,"name":"StixCreator","type":"python","tags":[],"contextKeys":[],"comment":"Gets a list of indicators from the indicators argument, and generates a JSON file in STIX 2.0 format.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/stix2:1.0.0.19258","modified":"2021-09-07T09:21:43.720524+03:00","scriptTarget":0,"arguments":[{"name":"indicators","required":true,"deprecated":false,"default":false,"secret":false,"description":"A JSON object of all indicators and their fields, indicator index mapped to Demisto indicator fields."},{"name":"doubleBackslash","required":false,"deprecated":false,"default":true,"secret":false,"description":"Adds a second backslash to all existing backslashes in the value field.","defaultValue":"true"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"StixExportedIndicators.created","description":"The date/time that the indicator was created.","type":"date"},{"contentPath":"","contextPath":"StixExportedIndicators.firstSeen","description":"The date/time that the indicator was first seen.","type":"date"},{"contentPath":"","contextPath":"StixExportedIndicators.source","description":"The source system for this indicator.","type":"string"},{"contentPath":"","contextPath":"StixExportedIndicators.type","description":"The STIX type (always exported as \"indicator\").","type":"string"},{"contentPath":"","contextPath":"StixExportedIndicators.pattern","description":" The type and value of indicators, for example: URL, IPv4, domain,email, and so on. ","type":"string"},{"contentPath":"","contextPath":"StixExportedIndicators.score","description":"The STIX impact score (\"High\", \"Medium\", \"None\", or \"Not Specified\")","type":"string"},{"contentPath":"","contextPath":"StixExportedIndicators.modified","description":"The date/time that the indicator was last seen.","type":"date"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"StixParser","version":6,"name":"StixParser","type":"python","tags":["stix","ioc"],"contextKeys":[],"comment":"Parse Stix files to Demisto indicators","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/stix:1.0.0.23135","modified":"2021-09-05T10:48:03.027347+03:00","scriptTarget":0,"arguments":[{"name":"iocXml","required":true,"deprecated":false,"default":true,"secret":false,"description":"ioc xml in stix format"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StopScheduledTask","version":7,"name":"StopScheduledTask","type":"python","tags":["Utility"],"contextKeys":[],"comment":"This stops the scheduled task whose ID is given in the taskID argument.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715749+03:00","scriptTarget":0,"arguments":[{"name":"taskID","required":true,"deprecated":false,"default":true,"secret":false,"description":"ID of the scheduled to stop"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StopTimeToAssignOnOwnerChange","version":7,"name":"StopTimeToAssignOnOwnerChange","type":"python","tags":["field-change-triggered","example"],"contextKeys":[],"comment":"Stops the \"Time To Assign\" timer if the owner of the incident was changed.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715957+03:00","scriptTarget":0,"arguments":[{"name":"old","required":false,"deprecated":false,"default":false,"secret":false,"description":"The old value of the changed field"},{"name":"new","required":false,"deprecated":false,"default":false,"secret":false,"description":"The new value of the changed field"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StringContainsArray","version":7,"name":"StringContainsArray","type":"javascript","tags":["filter","string"],"contextKeys":[],"comment":"Checks whether a substring or an array of substrings is within a string array(each item will be checked). Supports single strings as well. For example, for substrings ['a','b','c'] in a string 'a' the script will return true.\n","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.716538+03:00","scriptTarget":0,"arguments":[{"name":"left","required":false,"deprecated":false,"default":false,"secret":false,"description":"The string to search in, e.g., \"string1\""},{"name":"right","required":false,"deprecated":false,"default":false,"secret":false,"description":"The array of substrings to search in the string, e.g., [\"string1\",\"string2\"]"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StringLength","version":7,"name":"StringLength","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Returns the length of  the string passed as argument","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.719455+03:00","scriptTarget":0,"arguments":[{"name":"str","required":true,"deprecated":false,"default":false,"secret":false,"description":"The string to evaluate"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"StringLength.Result","description":"The length of the string passed as argument","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"StringReplace","version":7,"name":"StringReplace","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Replaces regex match/es in string.\nReturns the string after replace was preformed.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713759+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The string to preform replace on"},{"name":"regex","required":true,"deprecated":false,"default":false,"secret":false,"description":"The regex to find matches to be replaced with a new value"},{"name":"newValue","required":true,"deprecated":false,"default":false,"secret":false,"description":"The new value to replace the regex match. Pass '' to remove regex match."},{"name":"replaceAll","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Pass true to replace all matches, false to replace only the first occurrence.","defaultValue":"true"},{"name":"caseInsensitive","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Pass True to preform case-insensitive search and replace, false for case-sensitive.","defaultValue":"true"},{"name":"multiLine","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Pass true to indicate 'data'  is a multi-line string, false otherwise.","defaultValue":"true"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"StringReplace.Result","description":"The string after replace was preformed","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"Strings","version":7,"name":"Strings","type":"python","tags":["server","file"],"contextKeys":[],"comment":"Extract strings from a file with optional filter - similar to binutils strings command","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.720378+03:00","scriptTarget":0,"arguments":[{"name":"entry","required":true,"deprecated":false,"default":true,"secret":false,"description":"Entry ID of a file entry to retrieve strings from"},{"name":"chars","required":false,"deprecated":false,"default":false,"secret":false,"description":"Number of consecutive characters to be considered a string - default is 4"},{"name":"size","required":false,"deprecated":false,"default":false,"secret":false,"description":"Display first 'size' results - default is 1024"},{"name":"filter","required":false,"deprecated":false,"default":false,"secret":false,"description":"Regex to filter the strings - compiled with ignore case"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StringToArray","version":4,"name":"StringToArray","type":"python","tags":["transformer"],"contextKeys":[],"comment":"Converts string to array. \nFor example: `http://example.com/?score:1,4,time:55` will be transformed to `[\"http://example.com/?score:1,4,time:55\"]`.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-07T09:21:43.711225+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The URL to transform."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"StripChars","version":7,"name":"StripChars","type":"python","tags":["transformer","string"],"contextKeys":[],"comment":"Strip set of characters from prefix and/or suffix\ne.g. StripChar value=~!!~www.mydomain.com~!~!~  chars=!~ will return www.mydomain.com","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.22665","modified":"2021-09-07T09:21:43.71583+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"Text to trim (e.g. \"~!!~www.mydomain.com~!~!~\")"},{"name":"chars","required":true,"deprecated":false,"default":false,"secret":false,"description":"Characters to stripped from the text (e.g. \"!~\")"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"SumList","version":7,"name":"SumList","type":"python","tags":["transformer","number","entirelist"],"contextKeys":[],"comment":"Sums a List\ne.g. [\"25\", \"10\", \"25\"] =\u003e  \"60\"\n\nThis is an example for number transformer.\n ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.7.4.1150","modified":"2021-09-07T09:21:43.717904+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"A list for which to sum the list values.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"TextFromHTML","version":7,"name":"TextFromHTML","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Extract regular text from the given HTML","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.719333+03:00","scriptTarget":0,"arguments":[{"name":"html","required":true,"deprecated":false,"default":true,"secret":false,"description":"The HTML to strip tags from"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ticksToTime","version":7,"name":"ticksToTime","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Converting time in Ticks to readable time. Ticks are used to represent time by some vendors, most commonly by Microsoft. ","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.719517+03:00","scriptTarget":0,"arguments":[{"name":"ticks","required":true,"deprecated":false,"default":true,"secret":false,"description":"Time in ticks"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"TimeStampCompare","version":7,"name":"TimeStampCompare","type":"python","tags":[],"contextKeys":[],"comment":"Compares a single timestamp to a list of timestamps.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.3.8715","modified":"2021-09-07T09:21:43.714165+03:00","scriptTarget":0,"arguments":[{"name":"tested_time","required":true,"deprecated":false,"default":false,"secret":false,"description":"Timestamp to compare to the list of timestamps."},{"name":"values_to_compare","required":true,"deprecated":false,"default":false,"secret":false,"description":"Values to compare the tested_time against. The script checks each value and determines whether it's before/after/equal to the tested_time.","isArray":true},{"name":"time_format","required":false,"deprecated":false,"default":false,"secret":false,"description":"Time format of the times you entered. By default, the script uses automatic parsing. This should be used for cases like DD/MM/YYYY. Automatic parsing will detect formats such as: February 15th 2009, 02-15-2020, 02-15-2020T14:30:00Z"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"TimeStampCompare.TestedTime","description":"The tested time","type":"Date"},{"contentPath":"","contextPath":"TimeStampCompare.ComapredTime","description":"The compared time","type":"Date"},{"contentPath":"","contextPath":"TimeStampCompare.Result","description":"Whether the tested time was before, after, or equal to the comapred time.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"TimeStampToDate","version":7,"name":"TimeStampToDate","type":"javascript","tags":["transformer","date"],"contextKeys":[],"comment":"Converts UNIX Epoch time stamp to a simplified extended ISO format string. Use it to convert time stamp to Demisto date field\n\ne.g. 1525006939 will return '2018-04-29T13:02:19.000Z'","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.717637+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"Time stamp to convert"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"TopMaliciousRatioIndicators","version":7,"name":"TopMaliciousRatioIndicators","type":"python","tags":["widget"],"contextKeys":[],"comment":"Find the top malicious ratio indicators.\nMalicious ratio is defined by the ratio between the number of \"bad\" incidents divided by the number of total number of incidents that the indicators appears in.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717867+03:00","scriptTarget":0,"arguments":[{"name":"maxNumberOfIndicators","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of indicators for malicious ratio calculation.","defaultValue":"10000"},{"name":"minimumNumberOfInvs","required":false,"deprecated":false,"default":false,"secret":false,"description":"Minimum number of investigation the indicator has to appear in.","defaultValue":"3"},{"name":"maximumNumberOfResults","required":false,"deprecated":false,"default":false,"secret":false,"description":"Maximum number of results to display.","defaultValue":"100"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ToTable","version":7,"name":"ToTable","type":"javascript","tags":["Utility"],"contextKeys":[],"comment":"Convert an array to a nice table display. Usually, from the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.713983+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"The data to display as table - expecting array of objects","isArray":true},{"name":"title","required":false,"deprecated":false,"default":false,"secret":false,"description":"Title for the table"},{"name":"columns","required":false,"deprecated":false,"default":false,"secret":false,"description":"Comma-separated list of columns to display. Accepts nested columns using dot notation."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"UnEscapeIPs","version":7,"name":"UnEscapeIPs","type":"javascript","tags":["indicator-format"],"contextKeys":[],"comment":"Remove escaping chars from IP\n127[.]0[.]0[.]1 -\u003e 127.0.0.1","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71962+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"IP(s) to unescape.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"UnEscapeURLs","version":7,"name":"UnEscapeURLs","type":"javascript","tags":["indicator-format"],"contextKeys":[],"comment":"Extract URLs redirected by security tools like Proofpoint.\nChanges https://urldefense.proofpoint.com/v2/url?u=https-3A__example.com_something.html -\u003e https://example.com/something.html\nAlso, un-escape URLs that are escaped for safety with formats like hxxps://www[.]demisto[.]com","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-07T09:21:43.71102+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":false,"secret":false,"description":"The URL(s) to process","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"UnPackFile","version":7,"name":"UnPackFile","type":"python","tags":["Utility","file"],"contextKeys":[],"comment":"UnPack a file using fileName or entryID to specify a file. Files unpacked will be pushed to the war room and names will be pushed to the context.\nsupported types are:\n7z (.7z), ACE (.ace), ALZIP (.alz), AR (.a), ARC (.arc), ARJ (.arj), BZIP2 (.bz2), CAB (.cab), compress (.Z), CPIO (.cpio), DEB (.deb), DMS (.dms), GZIP (.gz), LRZIP (.lrz), LZH (.lha, .lzh), LZIP (.lz), LZMA (.lzma), LZOP (.lzo), RPM (.rpm), RAR (.rar), RZIP (.rz), TAR (.tar), XZ (.xz), ZIP (.zip, .jar) and ZOO (.zoo)","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/unrar:1.4","modified":"2021-09-07T09:21:43.711654+03:00","scriptTarget":0,"arguments":[{"name":"fileName","required":false,"deprecated":false,"default":true,"secret":false,"description":"Name of the file to unpack."},{"name":"entryID","required":false,"deprecated":false,"default":false,"secret":false,"description":"The entry id of the attached packed file in the warroom."},{"name":"lastPackedFileInWarroom","required":false,"deprecated":false,"default":false,"secret":false,"description":"Set to package file extension to look for the last of its kind in the war room."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ExtractedFiles","description":"List of file names which extracted from package.","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"UnzipFile","version":7,"name":"UnzipFile","type":"python","tags":["Utility","file"],"contextKeys":[],"comment":"Unzip a file using fileName or entryID to specify a file. Unzipped files will be loaded to the War Room and names will be put into the context.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/unzip:1.0.0.12410","modified":"2021-09-07T09:21:43.714653+03:00","scriptTarget":0,"arguments":[{"name":"fileName","required":false,"deprecated":false,"default":true,"secret":false,"description":"The file name."},{"name":"password","required":false,"deprecated":false,"default":false,"secret":true,"description":"Password to protect the ZIP file."},{"name":"entryID","required":false,"deprecated":false,"default":false,"secret":false,"description":"The entry ID of the attached ZIPp file in the War Room."},{"name":"lastZipFileInWarroom","required":false,"deprecated":false,"default":false,"secret":false,"description":"Enter 'yes' (or any other value) if the ZIP file is last ZIP file in the War Room."},{"name":"zipTool","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["7z","zipfile"],"description":"Tool to extract zip","defaultValue":"7z"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ExtractedFiles","description":"A list of file names that were extracted from the ZIP file.","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"URLDecode","version":7,"name":"URLDecode","type":"python","tags":["transformer"],"contextKeys":[],"comment":"Converts\nhttps:%2F%2Fexample.com\ninto\nhttps://example.com","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.6.13358","modified":"2021-09-07T09:21:43.720314+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The input url "}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"DecodedURL","description":"Parsed url as key/value","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"URLEncode","version":7,"name":"URLEncode","type":"python","tags":["transformer"],"contextKeys":[],"comment":"Encodes a URL string by replacing special characters in the string using the %xx escape. For example: https://example.com converts to https:%2F%2Fexample.com.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.8.5.11789","modified":"2021-09-07T09:21:43.716956+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The URL to  encode."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"URLNumberOfAds","version":7,"name":"URLNumberOfAds","type":"python","tags":["Utility"],"contextKeys":[],"comment":"Fetches the numbers of ads in the given url","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715593+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"URL to load and count ads on"},{"name":"easylist","required":false,"deprecated":false,"default":false,"secret":false,"description":"Optional easylist to get ads from","defaultValue":"https://easylist.github.io/easylist/easylist.txt"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"Ads.URL","description":"Ad URL found","type":""},{"contentPath":"","contextPath":"Ads.Count","description":"The count for the ad found","type":""},{"contentPath":"","contextPath":"URL.Data","description":"The URL we are checking","type":""},{"contentPath":"","contextPath":"URL.AdsCount","description":"The ads count on the URL","type":""}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"URLReputation","version":7,"name":"URLReputation","type":"python","tags":["enhancement"],"contextKeys":[],"comment":"A context script for URL entities","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.717772+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"URL to look up"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"UrlscanGetHttpTransactions","version":3,"name":"UrlscanGetHttpTransactions","type":"javascript","tags":["polling","UrlScan"],"contextKeys":[],"comment":"This script retrieves the HTTP transactions performed for a given URL using the UrlScan integration. \nUse this script inside a playbook and check the 'Run without a worker' checkbox in the Advanced section of the task that executes this script. This will cause the system to use less resources when polling.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"","modified":"2021-09-05T10:48:03.036044+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":false,"secret":false,"description":"The URL to search the transaction list for."},{"name":"wait_time_for_polling","required":false,"deprecated":false,"default":false,"secret":false,"description":"The wait time between two polling actions(In Seconds) of UrlScan results page, please note that you may encounter rate-limit error if the time set is too low.","defaultValue":"5"},{"name":"timeout","required":false,"deprecated":false,"default":false,"secret":false,"description":"How many seconds to wait for the scan id result","defaultValue":"60"},{"name":"limit","required":false,"deprecated":false,"default":false,"secret":false,"description":"Limits the results in the war room(Maximum limit allowed is 100)","defaultValue":"20"}],"dependsOn":{"must":["urlscan.io|||urlscan-get-http-transaction-list","urlscan.io|||urlscan-submit-url-command","urlscan.io|||urlscan-poll-uri"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"URLSSLVerification","version":7,"name":"URLSSLVerification","type":"python","tags":["url","Enrichment"],"contextKeys":[],"comment":"Verify URL SSL certificate","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.715121+03:00","scriptTarget":0,"arguments":[{"name":"url","required":true,"deprecated":false,"default":true,"secret":false,"description":"Comma separated list of URLs to verify.","isArray":true}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"URL","description":"The URL object","type":""},{"contentPath":"","contextPath":"URL.Data","description":"The URL address","type":"string"},{"contentPath":"","contextPath":"URL.Malicious","description":"The malicious description","type":""},{"contentPath":"","contextPath":"DBotScore","description":"The DBotScore object","type":""},{"contentPath":"","contextPath":"DBotScore.Indicator","description":"The indicator","type":"string"},{"contentPath":"","contextPath":"DBotScore.Type","description":"The indicator's type","type":"string"},{"contentPath":"","contextPath":"DBotScore.Vendor","description":"The reputation vendor","type":"string"},{"contentPath":"","contextPath":"DBotScore.Score","description":"The reputation score","type":"number"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"UserEnrichAD","version":4,"name":"UserEnrichAD","type":"python","tags":["enhancement","active directory","user"],"contextKeys":[],"comment":"Enhancement automation for user type indicator, to enrich the user name from Active Directory data","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-05T10:48:03.027204+03:00","scriptTarget":0,"arguments":[{"name":"name","required":true,"deprecated":false,"default":true,"secret":false,"description":"Name of user"}],"dependsOn":{"must":["activedir|||ad-search"]},"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"UtilAnyResults","version":7,"name":"UtilAnyResults","type":"python","tags":["Utility","Condition"],"contextKeys":[],"comment":"Utility script to use in playbooks - returns \"yes\" if the input is non-empty.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python:2.7.18.20958","modified":"2021-09-07T09:21:43.720037+03:00","scriptTarget":0,"arguments":[{"name":"data","required":true,"deprecated":false,"default":true,"secret":false,"description":"Data to check - can be a list or a string. Strings containing only commas are considered empty results."}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"ValidateContent","version":6,"name":"ValidateContent","type":"python","tags":[],"contextKeys":[],"comment":"Runs validation and linting using the Demisto SDK on content items, such as integrations, automations and content packs. This automation script is used as part of the content validation that runs as part of the contribution flow.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/xsoar-tools:1.0.0.19258","modified":"2021-09-05T10:48:03.027978+03:00","scriptTarget":0,"arguments":[{"name":"filename","required":false,"deprecated":false,"default":false,"secret":false,"description":"Name of the file to validate."},{"name":"data","required":false,"deprecated":false,"default":false,"secret":false,"description":"Base64 encoded contents of the file to validate."},{"name":"entry_id","required":false,"deprecated":false,"default":false,"secret":false,"description":"ID of War Room file entry for the ZIP content pack or the integration/automation YAML."},{"name":"use_system_proxy","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Use system proxy settings to download required models from GitHub.","defaultValue":"yes"},{"name":"trust_any_certificate","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Trust any certificate (not secure) to download required models from GitHub.","defaultValue":"no"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ValidationResult.Name","description":"Name of validated item.","type":"String"},{"contentPath":"","contextPath":"ValidationResult.Error","description":"The validation error message.","type":"String"},{"contentPath":"","contextPath":"ValidationResult.Line","description":"The code line number in which the error was found in the lint.","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"VerifyIPv6Indicator","version":7,"name":"VerifyIPv6Indicator","type":"python","tags":["indicator-format"],"contextKeys":[],"comment":"Verify that the address is a valid IPv6 address.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.5.21272","modified":"2021-09-07T09:21:43.718895+03:00","scriptTarget":0,"arguments":[{"name":"input","required":false,"deprecated":false,"default":true,"secret":false,"description":"The IPv6 to vriefy.","isArray":true}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"VerifyJSON","version":7,"name":"VerifyJSON","type":"powershell","tags":["JSON","Utility"],"contextKeys":[],"comment":"Verifies if the supplied JSON string is valid and optionally verifies against a provided schema. The script utilizes Powershell's Test-JSON cmdlet.","enabled":false,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/powershell:7.1.3.22028","modified":"2021-09-07T09:21:43.720245+03:00","scriptTarget":0,"arguments":[{"name":"json","required":true,"deprecated":false,"default":false,"secret":false,"description":"JSON string to verify."},{"name":"schema","required":false,"deprecated":false,"default":false,"secret":false,"description":"Optional schema against which to validate the JSON input."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"VerifyJSON.Result","description":"Whether the passed JSON was verified.","type":"boolean"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"WhereFieldEquals","version":7,"name":"WhereFieldEquals","type":"python","tags":["transformer","general","entirelist"],"contextKeys":[],"comment":"Return all items from the list where their given 'field' attribute is equal to 'equalTo' argument\n\nE.g. !WhereFieldEquals with the following arguments:\n - value=[{ \"name\": \"192.1,0.82\", \"type\": \"IP\" }, { \"name\": \"myFile.txt\", \"type\": \"File\" }, { \"name\": \"172.0.0.2\", \"type\": \"IP\" }]\n - field='type'\n - equalTo='IP'\n - getField='name' \n\nWill return all items names where field 'type' equals 'IP' - ['192.1,0.82', '172.0.0.2']","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python3:3.9.6.22912","modified":"2021-09-07T09:21:43.711522+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":true,"secret":false,"description":"The list to apply the transformer to."},{"name":"field","required":true,"deprecated":false,"default":false,"secret":false,"description":"The attribute in the collection items to check equality against `equalTo`."},{"name":"equalTo","required":true,"deprecated":false,"default":false,"secret":false,"description":"The value to filter all items by in the collection."},{"name":"getField","required":false,"deprecated":false,"default":false,"secret":false,"predefined":[""],"description":"The field to extract from each item (Optional)."},{"name":"stringify","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["true","false"],"description":"Whether the argument should be saved as a string (Optional).","defaultValue":"true"}],"runAs":"DBotWeakRole","roles":[],"permitted":true,"propagationLabels":null},{"id":"WordTokenizer","version":7,"name":"WordTokenizer","type":"python","tags":["phishing","ml"],"contextKeys":[],"comment":"Tokenize the words in a input text.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/nltk:2.0.0.19143","modified":"2021-09-07T09:21:43.711261+03:00","scriptTarget":0,"arguments":[{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The text value","isArray":true},{"name":"type","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["word","punkt"],"description":"Tokenizer type. you can read more about this here: https://www.nltk.org/api/nltk.tokenize.html","defaultValue":"word"},{"name":"cleanHtml","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Clean html from text value?","defaultValue":"yes"},{"name":"removeLineBreaks","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove line breaks?","defaultValue":"yes"},{"name":"encoding","required":false,"deprecated":false,"default":false,"secret":false,"description":"Text encoding","defaultValue":"utf-8"},{"name":"hashWordWithSeed","required":false,"deprecated":false,"default":false,"secret":false,"description":"If non-empty hash the words with this seed."}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"WordTokenizeOutput","description":"Output text ","type":"string"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"WordTokenizerNLP","version":6,"name":"WordTokenizerNLP","type":"python","tags":["phishing","ml"],"contextKeys":[],"comment":"Tokenize the words in a input text.","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/dl:1.4","modified":"2021-09-05T10:48:03.028242+03:00","scriptTarget":0,"arguments":[{"name":"cleanHtml","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Clean html from text value?","defaultValue":"yes"},{"name":"removeLineBreaks","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove line breaks?","defaultValue":"yes"},{"name":"encoding","required":false,"deprecated":false,"default":false,"secret":false,"description":"Text encoding","defaultValue":"utf-8"},{"name":"hashWordWithSeed","required":false,"deprecated":false,"default":false,"secret":false,"description":"If non-empty hash the words with this seed."},{"name":"removeNonEnglishWords","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove non-english words","defaultValue":"no"},{"name":"removeStopWords","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove english stop words (\"the\", \"a\", \"an\", etc)","defaultValue":"yes"},{"name":"removePunctuation","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove punctuation","defaultValue":"yes"},{"name":"replaceEmails","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Replace emails with magic","defaultValue":"yes"},{"name":"replaceUrls","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Replace urls with magic","defaultValue":"yes"},{"name":"replaceNumbers","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Replace numbers with magic","defaultValue":"yes"},{"name":"removeNonAlphaWords","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Remove non-alphabetic words","defaultValue":"no"},{"name":"useLemmatization","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Use lemmatization. you can read more about lemma here: https://en.wikipedia.org/wiki/Lemmatisation","defaultValue":"yes"},{"name":"value","required":true,"deprecated":false,"default":false,"secret":false,"description":"The text value"},{"name":"isValueJson","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["yes","no"],"description":"Is the input text value is json encoded?","defaultValue":"no"},{"name":"language","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["English","German","French","Spanish","Portuguese","Italian","Dutch","Other"],"description":"The language of the input text. Default is \"English\". Can be \"English\", \"German\", \"French\", \"Spanish\", \"Portuguese\", \"Italian\", \"Dutch\", or \"Other\".","defaultValue":"English"},{"name":"tokenizationMethod","required":false,"deprecated":false,"default":false,"secret":false,"auto":"PREDEFINED","predefined":["tokenizer","byWords","byLetters"],"description":"Tokenization method for text. Only required when the language argument is set to \"Other\". Can be \"tokenizer\", \"byWords\", or \"byLetters\".","defaultValue":"tokenizer"}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"WordTokenizeOutput","description":"Output text","type":"Unknown"}],"roles":[],"permitted":true,"propagationLabels":null},{"id":"ZipFile","version":7,"name":"ZipFile","type":"python","tags":["Utility","file"],"contextKeys":[],"comment":"Zip a file and upload to war room","enabled":true,"system":true,"detached":false,"locked":false,"user":"","dockerImage":"demisto/python_zipfile:1.0.0.12410","modified":"2021-09-07T09:21:43.712693+03:00","scriptTarget":0,"arguments":[{"name":"entryID","required":true,"deprecated":false,"default":false,"secret":false,"description":"CSV list of entry ids for the files to zip.","isArray":true},{"name":"zipName","required":false,"deprecated":false,"default":false,"secret":false,"description":"Name of the output file, for example: zipName=\"test\" would result in output file \"test.zip\""},{"name":"password","required":false,"deprecated":false,"default":false,"secret":false,"description":"Used to create a password protected zip file. Example: password=\"abcd\""}],"runAs":"DBotWeakRole","outputs":[{"contentPath":"","contextPath":"ZipFile.ZippedFile","description":"The zipped file","type":"string"},{"contentPath":"","contextPath":"File.Name","description":"The full file name (including file extension).","type":"String"},{"contentPath":"","contextPath":"File.EntryID","description":"The ID for locating the file in the War Room.","type":"String"},{"contentPath":"","contextPath":"File.Size","description":"The size of the file in bytes.","type":"Number"},{"contentPath":"","contextPath":"File.MD5","description":"The MD5 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.SHA1","description":"The SHA1 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.SHA256","description":"The SHA1 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.SHA512","description":"The SHA512 hash of the file.","type":"String"},{"contentPath":"","contextPath":"File.SSDeep","description":"The ssdeep hash of the file (same as displayed in file entries).","type":"String"},{"contentPath":"","contextPath":"File.Extension","description":"The file extension, for example: 'xls'.","type":"String"},{"contentPath":"","contextPath":"File.Type","description":"The file type, as determined by libmagic (same as displayed in file entries).","type":"String"}],"roles":[],"permitted":true,"propagationLabels":null}],"selectedScript":null,"suggestions":["Condition","DBot","DemistoAPI","Enrichment","IAM","JSON","UrlScan","Utilities","Utility","active directory","autoextract","basescript","campaign","carbon-black","communication","csv","date","dedup","doc","docx","duplicate","dynamic-indicator-section","dynamic-section","email","endpoint","enhancement","entirelist","entropy","epo","evaluation","ews","example","field-change-triggered","field-display","file","filter","general","hash","helloworld","http","incidents","indicator-format","infra","ingestion","ioc","ip","list","management","ml","number","parser","pcap","pdf","phishing","polling","post-processing","python","reputation","sane-doc-reports","sane-pdf-reports","sane-reports","server","servicenow","servicenow v2","sla","slack","stix","string","transformer","url","user","username","whitelist","widget","word"],"pythonEnabled":true}
