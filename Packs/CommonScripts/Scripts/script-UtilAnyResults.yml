commonfields:
  id: UtilAnyResults
  version: -1
name: UtilAnyResults
script: >
  res = []

  try:
      data = demisto.get(demisto.args(), 'data')
      if (isinstance(data, list) and data):
          res.append("yes")
      elif type(data) in [str, unicode] and data:
        if data[0] in ['[', '{']:
          data = data[1:]
        if data[-1] in [']', '}']:
          data = data[:-1]
        # If data resembles one of ",,," or "[,,]" or "[]" it is considered empty of results.
        res.append('yes' if data.replace(',','') else 'no')
      else:
          res.append("no")
  except Exception as ex:
      res.append({"Type": entryTypes["error"], "ContentsFormat": formats["text"],
                  "Contents": "Error occurred while parsing data. Exception info:\n" + str(ex) + "\n\nInvalid data:\n" + str(data)})
  demisto.results(res)
type: python
subtype: python2
tags:
- Utility
- Condition
comment: Utility script to use in playbooks - returns "yes" if the input is non-empty.
system: true
args:
- name: data
  required: true
  default: true
  description: Data to check - can be a list or a string. Strings containing only commas are considered empty results.
scripttarget: 0
dependson: {}
timeout: 0s
fromversion: 5.0.0
