args:
- description: Comma-separated values to map from.
  name: input_values
  required: true
- description: Comma-separated values to map to.
  name: mapped_values
  required: true
comment: "This script converts the input value into another value using two lists.\
  \ The input value is searched in the first list (input_values). \nIf it exists,\
  \ the value from the second list (mapped_values) at the same index is retutrned.\
  \ If there is no match, the original value is returned.\nIf the original input is\
  \ a dictionary, then the script will look for a \"stringified\" version of the key/:/value\
  \ pair in the input_values and then map the result in the output_values into the\
  \ original \"value\".\n\nExample 1:\n\ninput_values = \"1,2,3,4\"\nmapper_values\
  \ = \"4,3,2,1\"\nvalue = 3\n\nOutput would be \"2\"\n\nExample 2:\n\ninput_values\
  \ =\"firstkey: datahere,secondkey: datathere\"\nmapper_values = \"datathere,datahere\"\
  \nvalue(dict)= {\n                                \"firstkey\": \"datahere\"\n \
  \                         }\n\nOutput would be:\n                          {\n \
  \                               \"firstkey\": \"datathere\"\n                  \
  \         }\n\nThe reason for matching the key AND value pair in a dictionary is\
  \ to allow the mappig of values that have a specific key name. In most cases, dictionaries\
  \ will continan key-value pairs in which the values are the same. You might want\
  \ to change the value of KeyA, but not the value of KeyB. This method gives control\
  \ over which key is changed.\n\nWhen the input is a dict, str , int, or list, the\
  \ output is ALWAYS returned as a string."
commonfields:
  id: MapValuesTransformer
  version: -1
dockerimage: demisto/python3:3.9.7.24076
enabled: true
fromversion: 5.0.0
name: MapValuesTransformer
runas: DBotWeakRole
runonce: false
script:
- '8.1'
scripttarget: 0
subtype: python3
tags:
- transformer
- string
tests:
- No tests (auto formatted)
type: python
