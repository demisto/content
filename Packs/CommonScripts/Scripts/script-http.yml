commonfields:
  id: http
  version: -1
name: http
comment: Sends http request. Returns the response as json.
script: >+
  var requestObj = {
      Method: args.method,
  };


  if (args.username) {
      requestObj.Username = args.username;
  }


  if (args.username) {
      requestObj.Password = args.password;
  }


  if (args.body) {
      var body = (typeof args.body) === 'string' ? args.body : JSON.stringify(args.body);
      requestObj.Body = body;
  }


  if (args.headers) {
      var headersJs = {};
      var headersArr = args.headers.split(',');
      for (i = 0; i < headersArr.length; i++) {
          var keyValue = headersArr[i].split(':');
          if (keyValue.length != 2 ){
              throw 'Invalid headers. Please make sure you have entered "headers" in correct format.';
          } else {
              headersJs[keyValue[0]] = [keyValue[1]];
          }
      }
      requestObj.Headers = headersJs;
  }

  if (args.saveAsFile === 'yes') {
      requestObj.SaveToFile = true;
  }


  var unsecure = (args.unsecure === 'true' || args.insecure === 'true');

  var proxy = (args.proxy === 'true');

  var res = http(args.url, requestObj, unsecure, proxy);

  var fileName;

  if (args.filename) {
      fileName = args.filename;
  } else if (res.Headers['Content-disposition']) {
      fileName = res.Headers['Content-disposition'][0];
  } else {
      fileName = 'http-file';
  }


  if (args.saveAsFile === 'yes') {
      return {
          Type: 3,
          FileID: res.Path,
          File: fileName,
          Contents: fileName
      };
  }


  return {
      Type: entryTypes.note,
      Contents: res,
      ContentsFormat: formats.json,
      EntryContext: {
          'HttpRequest.Response': res
      }
  };



type: javascript
tags:
- Utility
enabled: true
args:
- name: method
  required: true
  auto: PREDEFINED
  predefined:
  - GET
  - POST
  - DELETE
  - PUT
  description: The method for the http request
- name: body
  description: The body for the http request
- name: url
  required: true
  description: The url for the http request
- name: headers
  description: The headers for the http request, in the format of 'key1:value1,key2:value2, ...'
- name: insecure
  auto: PREDEFINED
  description: Trust any certificate (not secure)
  deprecated: true
- name: unsecure
  auto: PREDEFINED
  description: Trust any certificate (not secure)
  predefined:
  - "true"
  - "false"
  defaultValue: "true"
- name: proxy
  auto: PREDEFINED
  description: Use system proxy settings
  predefined:
  - "true"
  - "false"
  defaultValue: "false"
- name: username
  description: The user for the http request
- name: password
  secret: true
  description: The password for the http request
- name: saveAsFile
  description: yes to save file, else no. Default is no
  defaultValue: "no"
- name: filename
  description: Using filename from headers if filename is not given. Default is http-file
outputs:
- contextPath: HttpRequest.Response
  description: The response for the http request
scripttarget: 0
fromversion: 5.0.0
