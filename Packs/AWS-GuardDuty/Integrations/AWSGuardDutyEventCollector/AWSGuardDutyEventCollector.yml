category: Analytics & SIEM
commonfields:
  id: AWS - GuardDuty Event Collector
  version: -1
configuration:
- display: AWS Default Region # TODO: should be a list of values.
  name: defaultRegion
  required: true
  type: 0
- display: Role Arn
  name: roleArn
  required: false
  type: 0
- display: Role Session Name
  name: roleSessionName
  required: false
  type: 0
- display: Role Session Duration
  name: sessionDuration
  required: false
  type: 0
- display: Access Key
  name: access_key
  required: false
  type: 0
- display: Secret Key
  name: secret_key
  required: false
  type: 4
- display: Timeout
  name: timeout
  additionalinfo: The time in seconds till a timeout exception is reached. You can
    specify just the read timeout (for example 60) or also the connect timeout followed
    after a comma (for example 60,10). If a connect timeout is not specified, a default
    of 10 second will be used.
  defaultvalue: 60,10
  required: false
  type: 0
- display: Retries
  name: retries
  defaultvalue: 5
  additionalinfo: "The maximum number of retry attempts when connection or throttling errors
  are encountered. Set to 0 to disable retries. The default value is 5 and the limit is 10.
  Note: Increasing the number of retries will increase the execution time."
  required: false
  type: 0
- display: First fetch time interval
  name: collect_from
  type: 0
  defaultvalue: 3 days
  required: false
- display: Number of events to fetch per fetch.
  name: limit
  type: 0
  defaultvalue: 1000
  required: false
- display: Trust any certificate (not secure)
  hidden: false
  name: insecure
  required: false
  type: 8
- display: Use system proxy settings
  hidden: false
  name: proxy
  required: false
  type: 8
- display: The product corresponding to the integration that originated the events.
  name: product
  type: 0
  defaultvalue: 'aws-guard-duty'
  required: true
description: Amazon Web Services Guard Duty Service (gd) event collector integraion for XSIAM.
display: AWS - GuardDuty Event Collector
name: AWS - GuardDuty Event Collector
script:
  script: ""
  type: python
  commands:
  - arguments:
    - auto: PREDEFINED
      defaultValue: 'False'
      description: Set this argument to True in orfer to create events, otherwise the command will only display them.
      isArray: false
      name: should_push_events
      predefined:
        - 'True'
        - 'False'
      required: true
    deprecated: false
    description: Manual command to fetch events and display them.
    execution: false
    name: aws-gd-get-events
  dockerimage: devtesting/boto3py3:1.1.0.1661157277
  isfetchevents: true
  runonce: false
  subtype: python3
marketplaces:
- marketplacev2
tests:
- No test
fromversion: 6.8.0
