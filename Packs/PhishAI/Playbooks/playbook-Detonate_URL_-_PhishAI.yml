id: Detonate URL - Phish.AI
version: -1
hidden: true
name: Detonate URL - Phish.AI
description: Deprecated. Vendor has declared end of life for this product. No available replacement.
fromversion: "5.0.0"
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: d2f4d7dc-4562-4517-8d63-3539676ca81d
    type: start
    task:
      id: d2f4d7dc-4562-4517-8d63-3539676ca81d
      version: -1
      name: ""
      description: start
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: a9d60056-7ef8-4164-8748-f5016616e779
    type: playbook
    task:
      id: a9d60056-7ef8-4164-8748-f5016616e779
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      Ids:
        complex:
          root: PhishAI
          accessor: ScanID
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: scan_id
      PollingCommandName:
        simple: phish-ai-check-status
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: PhishAI(val.Status === 'in progress').ScanID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 574c57f0-c341-4fb0-8576-5acd9a2ba120
    type: condition
    task:
      id: 574c57f0-c341-4fb0-8576-5acd9a2ba120
      version: -1
      name: Is there a URL to detonate?
      description: Checks that there is a URL in the playbookâ€™s input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: inputs.URL
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: 586f9a47-8d2a-4ff5-8ad5-788ddc8310ed
    type: title
    task:
      id: 586f9a47-8d2a-4ff5-8ad5-788ddc8310ed
      version: -1
      name: Done
      description: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 20e936c1-98ba-4255-8042-101aa9bcaf5a
    type: condition
    task:
      id: 20e936c1-98ba-4255-8042-101aa9bcaf5a
      version: -1
      name: Is Phish.AI enabled?
      description: |
        Verify that there is a valid instance of McAfee ATD enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Phish.AI
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "10":
    id: "10"
    taskid: 744dfdfb-f55d-4586-8783-addf3cd6fd12
    type: regular
    task:
      id: 744dfdfb-f55d-4586-8783-addf3cd6fd12
      version: -1
      name: Get Report URL
      description: Checks on url's status, e.g. completed, in progress
      script: '|||phish-ai-check-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      scan_id:
        complex:
          root: PhishAI
          accessor: ScanID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: 46100a3a-dc92-4c08-8098-8baff8320399
    type: regular
    task:
      id: 46100a3a-dc92-4c08-8098-8baff8320399
      version: -1
      name: Scan URL
      description: Check if url is phishing and get details about the brand that is being phished
      script: '|||phish-ai-scan-url'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      url:
        complex:
          root: inputs.URL
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "5_11_yes": 0.9
    },
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 492.5,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: URL
  value:
    complex:
      root: URL
      accessor: Data
  required: false
  description: URL to detonate.
- key: Interval
  value:
    simple: "1"
  required: false
  description: Polling frequency - how often the polling command should run (minutes)
- key: Timeout
  value:
    simple: "15"
  required: false
  description: How much time to wait before a timeout occurs (minutes)
outputs:
- contextPath: PhishAI.ScanID
  description: Phish.AI scan ID
  type: string
- contextPath: PhishAI.Status
  description: Scan status
  type: string
- contextPath: PhishAI.URL
  description: URL address
  type: string
- contextPath: URL.Malicious.Vendor
  description: For malicious URLs, the vendor that made the decision
  type: string
- contextPath: URL.Malicious.Description
  description: For malicious URLs, the reason for the vendor to make the decision
  type: string
- contextPath: DBotScore.Indicator
  description: The indicator we tested
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score
  type: string
- contextPath: DBotScore.Score
  description: The actual score
  type: number
- contextPath: IP.Address
  description: IP address of the url
  type: string
- contextPath: IP.Geo.Country
  description: Geo location of the url
  type: string
- contextPath: URL.Status
  description: URL's Status
  type: string
- contextPath: URL.Data
  description: URL's Address
  type: string
tests:
- No tests
deprecated: true
