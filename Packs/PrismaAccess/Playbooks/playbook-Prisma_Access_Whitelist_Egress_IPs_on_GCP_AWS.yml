id: Prisma Access Whitelist Egress IPs on GCP and AWS
version: -1
name: Prisma Access Whitelist Egress IPs on GCP and AWS
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: c4adb31e-c47f-4c99-8fef-b8950d9817ec
    type: start
    task:
      id: c4adb31e-c47f-4c99-8fef-b8950d9817ec
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '27'
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 200\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  '1':
    id: '1'
    taskid: ad4c7012-4ea1-41a8-8d45-78b0b4d995aa
    type: regular
    task:
      id: ad4c7012-4ea1-41a8-8d45-78b0b4d995aa
      version: -1
      name: List all Egress IPs from Prisma Access
      description: Gets indicators from the feed.
      script: '|||prisma-access-get-indicators'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '35'
      - '36'
    scriptarguments:
      limit: {}
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 545\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  '27':
    id: '27'
    taskid: dcec89f7-39db-43d5-819b-ef7e9df250ff
    type: condition
    task:
      id: dcec89f7-39db-43d5-819b-ef7e9df250ff
      version: -1
      name: Is Prisma Access integration enabled?
      type: condition
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#default#':
      - '34'
      yes:
      - '1'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Prisma Access Egress IP feed
                accessor: brand
            iscontext: true
          right:
            value:
              simple: Prisma Access Egress IP feed
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 370\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  '34':
    id: '34'
    taskid: 5afdebe9-00e3-4dff-8f18-5c0e4667660d
    type: title
    task:
      id: 5afdebe9-00e3-4dff-8f18-5c0e4667660d
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: "{\n  \"position\": {\n    \"x\": 30,\n    \"y\": 1080\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  '35':
    id: '35'
    taskid: 7dd109bb-2bc0-45cd-8085-183445f21ce4
    type: playbook
    task:
      id: 7dd109bb-2bc0-45cd-8085-183445f21ce4
      version: -1
      name: IP Whitelist - AWS Security Group
      playbookName: IP Whitelist - AWS Security Group
      type: playbook
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '34'
    scriptarguments:
      IP:
        simple: ${PrismaAccess.Egress.IP.Address}
      IndicatorTagName:
        simple: AWS_Prisma_IP_Whitelist
      SecurityGroupName: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
      max: 100
    view: "{\n  \"position\": {\n    \"x\": 350,\n    \"y\": 750\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  '36':
    id: '36'
    taskid: cf93f5a2-ecfd-48a3-867f-987fcbd6e6e8
    type: playbook
    task:
      id: cf93f5a2-ecfd-48a3-867f-987fcbd6e6e8
      version: -1
      name: IP Whitelist - GCP Firewall
      playbookName: IP Whitelist - GCP Firewall
      type: playbook
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '34'
    scriptarguments:
      GCPFirewallName: {}
      IP:
        simple: ${PrismaAccess.Egress.IP.Address}
      IndicatorTagName:
        simple: GCP_Prisma_IP_Whitelist
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
      max: 100
    view: "{\n  \"position\": {\n    \"x\": 780,\n    \"y\": 750\n  }\n}"
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: "{\n  \"linkLabelsPosition\": {\n    \"27_1_yes\": 0.36\n  },\n  \"paper\":\
  \ {\n    \"dimensions\": {\n      \"height\": 945,\n      \"width\": 1130,\n   \
  \   \"x\": 30,\n      \"y\": 200\n    }\n  }\n}"
inputs:
- key: ''
  value: {}
  required: false
  description: ''
  playbookInputQuery:
    query: ''
    queryEntity: indicators
    results:
    daterange:
      fromdate: 0001-01-01 00:00:00+00:00
      todate: 0001-01-01 00:00:00+00:00
      period:
        by: ''
        byto: ''
        byfrom: ''
        tovalue:
        fromvalue:
        field: ''
      fromdatelicenseval: 0001-01-01 00:00:00+00:00
    runFromLastJobTime: true
outputs: []
fromversion: 5.0.0
description: ''
