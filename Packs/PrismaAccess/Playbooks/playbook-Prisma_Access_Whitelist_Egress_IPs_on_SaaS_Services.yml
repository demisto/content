id: Prisma Access Whitelist Egress IPs on SaaS Services
version: -1
name: Prisma Access Whitelist Egress IPs on SaaS Services
description: Retrieve Prisma Access Egress IP for specific geographic Zones and populate
  in security groups within cloud services.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: f4b26174-2f46-41d8-89e9-11e7fc95f44f
    type: start
    task:
      id: f4b26174-2f46-41d8-89e9-11e7fc95f44f
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "27"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 152.5,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "27":
    id: "27"
    taskid: 9e9cb365-93c9-4710-8357-3245dfd771cb
    type: condition
    task:
      id: 9e9cb365-93c9-4710-8357-3245dfd771cb
      version: -1
      name: Is Prisma Access integration enabled?
      type: condition
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#default#':
      - "34"
      "yes":
      - "40"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Prisma Access Egress IP feed
                accessor: brand
            iscontext: true
          right:
            value:
              simple: Prisma Access Egress IP feed
    view: |-
      {
        "position": {
          "x": 152.5,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: a8e6a350-b336-46ea-8f39-e2a7f899b4bd
    type: title
    task:
      id: a8e6a350-b336-46ea-8f39-e2a7f899b4bd
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 40,
          "y": 1010
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "35":
    id: "35"
    taskid: ca97b365-4686-4fe9-8092-3ca0e087c4c8
    type: playbook
    task:
      id: ca97b365-4686-4fe9-8092-3ca0e087c4c8
      version: -1
      name: IP Whitelist - AWS Security Group
      description: Sync a list of IP addresses to an AWS Security Group.
      playbookName: IP Whitelist - AWS Security Group
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      IP:
        simple: ${PrismaAccess.Egress.IP(["Cambodia","Argentina"].indexOf(val.Zone)>=0).Address}
      IndicatorTagName:
        simple: AWS_Prisma_IP_Whitelist
      SecurityGroupName: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 330,
          "y": 740
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
  "36":
    id: "36"
    taskid: c2cb4e00-5f83-4c65-8b39-94b217bd7e63
    type: playbook
    task:
      id: c2cb4e00-5f83-4c65-8b39-94b217bd7e63
      version: -1
      name: IP Whitelist - GCP Firewall
      description: Set a list of IP addresses in GCP firewall.
      playbookName: IP Whitelist - GCP Firewall
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      GCPFirewallName: {}
      IP:
        simple: ${PrismaAccess.Egress.IP(["Cambodia","Argentina"].indexOf(val.Zone)>=0).Address}
      IndicatorTagName:
        simple: GCP_Prisma_IP_Whitelist
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 760,
          "y": 740
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
  "40":
    id: "40"
    taskid: 00411c25-e47d-40fa-8435-1f92993284df
    type: regular
    task:
      id: 00411c25-e47d-40fa-8435-1f92993284df
      version: -1
      name: Prisma Access Egress IP Feed - Get IPs
      description: Gets indicators from the feed.
      script: '|||prisma-access-get-indicators'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "35"
      - "36"
      - "41"
    scriptarguments:
      limit:
        simple: "1000"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 532.5,
          "y": 560
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
  "41":
    id: "41"
    taskid: 133c5abd-6df4-4ee2-82e0-69cc1d01ee2b
    type: playbook
    task:
      id: 133c5abd-6df4-4ee2-82e0-69cc1d01ee2b
      version: -1
      name: IP Whitelist - Okta Zone
      description: "Sync a list of IP addresses to the Okta Network Zone with the\
        \ given ID. \nExisting IPs in the Okta Zone which are not in the input list\
        \ will be removed and the indicator will be untagged on XSOAR.\nIDs can be\
        \ retrieved  using !okta-list-zones. This playbook supports CIDR notation\
        \ only (1.1.1.1/32) and not range notation (1.1.1.1-1.1.1.1)"
      playbookName: IP Whitelist - Okta Zone
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      IP:
        simple: ${PrismaAccess.Egress.IP(["Cambodia","Argentina"].indexOf(val.Zone)>=0).Address}
      IndicatorTagName:
        simple: Prisma_Access_Okta_Zone
      ZoneID: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 740
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
system: true
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 875,
        "width": 1540,
        "x": 40,
        "y": 200
      }
    }
  }
inputs:
- key: ""
  value: {}
  required: false
  description: ""
  playbookInputQuery:
    query: ""
    queryEntity: indicators
    results:
    daterange:
      fromdate: 0001-01-01T00:00:00Z
      todate: 0001-01-01T00:00:00Z
      period:
        by: ""
        byto: ""
        byfrom: ""
        tovalue:
        fromvalue:
        field: ""
      fromdatelicenseval: 0001-01-01T00:00:00Z
    runFromLastJobTime: false
outputs: []
fromversion: 5.5.0
tests:
- No tests
