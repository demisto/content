[MODEL: dataset="trend_micro_vision_one_raw"]
filter
    event_type in ("workbench")
| alter
    Entities = json_extract_array(impactScope, "$.entities"),
    Indicators = json_extract_array(indicators, "$."),
    Rules = json_extract_array(matchedRules, "$.")
    | alter
    matchedRulesIds = arraystring(arraymap(json_extract_array(matchedRules, "$."), json_extract_scalar("@element", "$.id")), ", "),
    matchedRulesNames = arraystring(arraymap(json_extract_array(matchedRules, "$."), json_extract_scalar("@element", "$.name")), ", "),
    identityType = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "host", XDM_CONST.IDENTITY_TYPE_MACHINE, json_extract_scalar("@element", "$.entityType") = "account", XDM_CONST.IDENTITY_TYPE_USER, json_extract_scalar("@element", "$.entityType") = "emailAdress", XDM_CONST.IDENTITY_TYPE_UNKNOWN)), ", "),
    entityValueGuidsUserName = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "account", json_extract_scalar("@element", "$.entityValue.guid"), null)), ", "),
    entityValuesUserName = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "account", json_extract_scalar("@element", "$.entityValue"), null)), ", "),
    entityValueNamesUserName = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "account", json_extract_scalar("@element", "$.entityValue.name"), null)), ", "),
    entityIdsDeviceId = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "host", json_extract_scalar("@element", "$.entityId"), null)), ", "),
    entityIdsAccountIdentifier = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "account", json_extract_scalar("@element", "$.entityId"), null)), ", "),
    entityIdsEmailIdentifier = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "emailAdress", json_extract_scalar("@element", "$.entityId"), null)), ", "),
    entityValueGuidsHostname = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "host", json_extract_scalar("@element", "$.entityValue.guid"), null)), ", "),
    entityValueNamesHostName = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "host", json_extract_scalar("@element", "$.entityValue.name"), null)), ", "),
    indicatorsValuesHostname = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "endpointHostName", json_extract_scalar("@element", "$.value"), null)), ", "),
    entityValueGuidsUpn = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "emailAdress", json_extract_scalar("@element", "$.entityValue.guid"), null)), ", "),
    entityValueNamesUpn = arraystring(arraymap(Entities, if(json_extract_scalar("@element", "$.entityType") = "emailAdress", json_extract_scalar("@element", "$.entityValue.name"), null)), ", "),
    relatedEntities = arraystring(arraymap(Entities, json_extract_scalar("@element", "$.relatedEntities")), ", "),
    provenances = arraystring(arraymap(Entities, json_extract_scalar("@element", "$.provenance")), ", "),
    entityValueIps = arraystring(arraymap(Entities, json_extract_scalar("@element", "$.entityValue.ips")), ", "),
    indicatorsValuesProcessName = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "processCmd", json_extract_scalar("@element", "$.value"), null)), ", "),
    indicatorsValuesProcessId = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "parentCmd", json_extract_scalar("@element", "$.value"), null)), ", "),
    indicatorsValuesRegistryKey = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "objectRegistryKeyHandle", json_extract_scalar("@element", "$.value"), null)), ", "),
    indicatorsValuesRegistryValue = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "objectRegistryValue", json_extract_scalar("@element", "$.value"), null)), ", "),
    indicatorsValuesCommandLine = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "objectCmd", json_extract_scalar("@element", "$.value"), null)), ", "),
    indicatorsValuesExecutablePath = arraystring(arraymap(Indicators, if(json_extract_scalar("@element", "$.field") = "processFilePath", json_extract_scalar("@element", "$.value"), null)), ", "),
    originalThreatName = arraystring(arraymap(Rules, json_extract_scalar(arrayindex(json_extract_array("@element", "$.matchedFilters"), 0), "$.name")), ", "),
    mitreTechniques = arraymap(Rules, replex(arraystring(json_extract_array(arrayindex(json_extract_array("@element", "$.matchedFilters"), 0), "$.mitreTechniqueIds"), ", "), "\"", ""))

    | alter
    xdm.source.cloud.project = id,
    xdm.event.outcome_reason = investigationStatus,
    xdm.network.http.url = workbenchLink,
    xdm.source.application.name = alertProvider,
    xdm.event.type = model,
    xdm.alert.severity = to_string(score),
    xdm.event.log_level = severity,
    xdm.alert.description = description,
    xdm.alert.original_alert_id = matchedRulesIds,
    xdm.alert.name = matchedRulesNames,
    xdm.source.user.identity_type = identityType,
    xdm.source.user.username = coalesce(entityValuesUserName, entityValueGuidsUserName, entityValueNamesUserName),
    xdm.source.host.device_id = entityIdsDeviceId,
    xdm.source.user.identifier = coalesce(entityIdsAccountIdentifier, entityIdsEmailIdentifier),
    xdm.source.host.hostname = coalesce(entityValueGuidsHostname, entityValueNamesHostName, indicatorsValuesHostname),
    xdm.source.user.upn = coalesce(entityValueGuidsUpn, entityValueNamesUpn),
    xdm.target.resource.id = relatedEntities,
    xdm.alert.subcategory = provenances,
    xdm.source.ipv4 = entityValueIps,
    xdm.source.process.name = indicatorsValuesProcessName,
    xdm.source.process.parent_id = indicatorsValuesProcessId,
    xdm.target.registry.key = indicatorsValuesRegistryKey,
    xdm.target.registry.value = indicatorsValuesRegistryValue,
    xdm.source.process.command_line = indicatorsValuesCommandLine,
    xdm.source.process.executable.path = indicatorsValuesExecutablePath,
    xdm.event.description = matchedRules,
    xdm.alert.original_threat_name = originalThreatName,
    xdm.alert.mitre_techniques = mitreTechniques,
    xdm.event.original_event_type = event_type;

filter
    event_type in ("search_detection")
| alter
    xdm.event.outcome_reason = replex(arraystring(json_extract_array(act, "$."), ", "), "\"", ""),
    xdm.alert.original_threat_name = behaviorCat,
    xdm.observer.unique_identifier = deviceGUID,
    xdm.target.port = dpt,
    xdm.target.ipv4 = replex(arraystring(arraymap(json_extract_array(dst, "$."), if("@element" not contains ":", "@element", null)), ", "), "\"", ""),
    xdm.source.host.device_id = endpointGUID,
    xdm.event.id = eventId,
    xdm.event.description = eventName,
    xdm.event.operation_sub_type = eventSubName,
    xdm.observer.type = mpname,
    xdm.observer.version = mpver,
    xdm.source.process.executable.md5 = coalesce(objectFileHashMd5, objectFileHashSha256),
    xdm.source.process.executable.sha256 = coalesce(objectFileHashSha256, objectFileHashMd5),
    xdm.target.module.path = objectFilePath,
    xdm.target.module.signer = replex(arraystring(json_extract_array(objectSigner, "$."), ", "), "\"", ""),
    xdm.observer.content_version = pname,
    xdm.intermediate.process.executable.path = processFilePath,
    xdm.source.process.pid = to_number(processPid),
    xdm.source.port = to_number(spt),
    xdm.alert.original_alert_id = uuid,
    xdm.observer.action = actResult,
    xdm.network.application_protocol = app,
    xdm.event.type = blocking,
    xdm.alert.severity = cat,
    xdm.source.agent.version = replex(arraystring(json_extract_array(component,  "$."), ", "), "\"", ""),
    xdm.source.process.name = coalesce(deviceProcessName, processName),
    xdm.source.host.mac_addresses = coalesce(split(deviceMacAddress), split(endpointMacAddress), split(interestedMacAddress)),
    xdm.target.host.hostname = dhost,
    xdm.source.user.domain = domainName,
    xdm.source.host.hostname = coalesce(endpointHostName, hostName),
    xdm.source.host.ipv4_addresses = arraymap(json_extract_array(endpointIp, "$."), replex("@element", "\"", "")),
    xdm.source.process.executable.filename = replex(arraystring(json_extract_array(fileName, "$."), ", "), "\"", ""),
    xdm.source.process.executable.path = filePath,
    xdm.target.file.size = fileSize,
    xdm.network.http.referrer = httpReferer,
    xdm.alert.subcategory = malType,
    xdm.alert.mitre_tactics = arraymap(json_extract_array(mitreMapping, "$."), replex("@element", "\"", "")),
    xdm.source.process.command_line = coalesce(replex(arraystring(json_extract_array(objectCmd, "$."), ", "), "\"", ""), processCmd),
    xdm.target.module.filename = coalesce(objectFileName, objectName),
    xdm.source.process.executable.signer = processSigner,
    xdm.network.http.url = request,
    xdm.source.user_agent = requestClientApplication,
    xdm.alert.name = threatName,
    xdm.source.ipv6 = replex(arraystring(arraymap(json_extract_array(mDevice, "$."), if("@element" contains ":", "@element", null)), ", "), "\"", ""),
    xdm.source.ipv4 = coalesce(replex(arraystring(arraymap(json_extract_array(mDevice, "$."), if("@element" not contains ":", "@element", null)), ", "), "\"", ""), replex(arraystring(arraymap(json_extract_array(src, "$."), if("@element" contains ":", "@element", null)), ","), "\"", "")),
    xdm.event.original_event_type = event_type;

filter
    event_type in ("observed_attack_technique")
| alter
    xdm.event.type = source,
    xdm.session_context_id = uuid,
    xdm.source.agent.identifier = json_extract_scalar(endpoint, "$.agentGuid"),
    xdm.source.host.os = json_extract_scalar(detail, "$.osName"),
    xdm.source.process.name = json_extract_scalar(detail, "$.processName"),
    xdm.source.process.pid = to_number(json_extract_scalar(detail, "$.processPid")),
    xdm.network.session_id = json_extract_scalar(detail, "$.sessionId"),
    xdm.source.user.username = coalesce(json_extract_scalar(detail, "$.processUser"), json_extract_scalar(detail, "$.objectUser")),
    xdm.source.user.domain = coalesce(json_extract_scalar(detail, "$.processUserDomain"), json_extract_scalar(detail, "$.objectUserDomain")),
    xdm.source.process.command_line = json_extract_scalar(detail, "$.processCmd"),
    xdm.source.process.executable.path = json_extract_scalar(detail, "$.processFilePath"),
    xdm.source.process.executable.sha256 = json_extract_scalar(detail, "$.processFileHashSha256"),
    xdm.source.process.executable.md5 = json_extract_scalar(detail, "$.processFileHashMd5"),
    xdm.source.process.executable.size = to_number(json_extract_scalar(detail, "$.processFileSize")),
    xdm.source.process.executable.file_type = to_string(json_extract_scalar(detail, "$.processTrueType")),
    xdm.target.file.path = json_extract_scalar(detail, "$.objectFilePath"),
    xdm.target.module.sha256 = json_extract_scalar(detail, "$.objectFileHashSha256"),
    xdm.target.module.md5 = json_extract_scalar(detail, "$.objectFileHashMd5"),
    xdm.target.module.filename = json_extract_scalar(detail, "$.objectName"),
    xdm.source.port = to_number(json_extract_scalar(detail, "$.spt")),
    xdm.target.module.path = json_extract_scalar(detail, "$.srcFilePath"),
    xdm.event.id = arraystring(arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.id")), ", "),
    xdm.alert.name = arraystring(arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.name")), ", "),
    xdm.alert.description = arraystring(arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.description")), ", "),
    xdm.alert.severity = arraystring(arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.riskLevel")), ", "),
    xdm.alert.mitre_tactics = arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.mitreTacticIds")),
    xdm.alert.mitre_techniques = arraymap(json_extract_array(filters, "$."), json_extract_scalar("@element", "$.mitreTechniqueIds")),
    xdm.source.ipv6 = replex(arraystring(arraymap(json_extract_array(endpoint, "$.ips"), if("@element" contains ":", "@element", null)), ", "), "\"", ""),
    xdm.source.ipv4 = coalesce(replex(arraystring(arraymap(json_extract_array(endpoint, "$.ips"), if("@element" not contains ":", "@element", null)), ", "), "\"", ""), replex(arraystring(arraymap(json_extract_array(endpoint, "$.endpointIp"), if("@element" not contains ":", "@element", null)), ", "), "\"", ""), json_extract_scalar(detail, "$.src")),
    xdm.source.host.mac_addresses = arraymap(json_extract_array(detail, "$.endpointMacAddress"), replex("@element", "\"", "")),
    xdm.source.process.executable.signer = replex(arraystring(json_extract_array(detail, "$.processSigner"), ","), "\"", ""),
    xdm.source.process.executable.signature_status = arraystring(arraymap(json_extract_array(detail, "$.processSignerValid"), if("@element" = "true", XDM_CONST.SIGNATURE_STATUS_SIGNED_VERIFIED, "@element" = "false", XDM_CONST.SIGNATURE_STATUS_SIGNED_INVALID, "@element" != "false" and "@element" != "true", XDM_CONST.SIGNATURE_STATUS_STATUS_UNKNOWN)), ", "),
    xdm.target.module.signer = replex(arraystring(json_extract_array(detail, "$.objectSigner"), ", "), "\"", ""),
    xdm.target.module.signature_status = replex(arraystring(arraymap(json_extract_array(detail, "$.objectSignerValid"), if("@element" = "true", "@element", "@element" = "false", "@element")), ", "), "\"", ""),
    xdm.event.original_event_type = event_type;

filter
    event_type in ("audit")
| alter
    xdm.source.user.username = loggedUser,
    xdm.source.user.groups = split(loggedRole, "!"),
    xdm.source.zone = accessType,
    xdm.event.type = category,
    xdm.event.operation_sub_type = activity,
    xdm.event.outcome = if(result = "Successful", XDM_CONST.OUTCOME_SUCCESS, result = "Unsuccessful", XDM_CONST.OUTCOME_FAILED, null),
    xdm.event.description = details,
    xdm.event.original_event_type = event_type;