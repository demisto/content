{
    "breakingChanges": true,
    "breakingChangesNotes": "enable-user-account: The users can now pass multiple accounts in one call. Pass a dictionary object containing `account_name` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. disable-user-account: The users can now pass multiple accounts in one call. Pass a dictionary object containing `account_name` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. force-signout: The users can now pass multiple accounts in one call. Pass a dictionary object containing `account_name` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. force-password-reset: The users can now pass multiple accounts in one call. Pass a dictionary object containing `account_name` and optional `description` object in a comma separated list. The action now returns `status` and `task_id`. add-to-block-list: Multiple items can be added to block list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. remove-from-block-list: Multiple items can be removed from block list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. quarantine-email-message: Multiple emails can be quarantined in one call. Pass a dictionary object containing `unique_id` and optional `description` or `message_id`, `mailbox` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. delete-email-message: Multiple emails can be deleted in one call. Pass a dictionary object containing `unique_id` and optional `description` or `message_id`, `mailbox` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. check-task-status: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. isolate-endpoint: Multiple endpoints can be isolated in one call. Pass a dictionary object containing `endpoint` (hostname) and optional `description` or `agent_guid` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. restore-endpoint-connection: Multiple endpoints can be restored in one call. Pass a dictionary object containing `endpoint` (hostname) and optional `description` or `agent_guid` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. add-objects-to-exception-list: Multiple objects can be added to exception list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. delete-objects-from-exception-list: Multiple objects can be removed from exception list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. add-objects-to-suspicious-list: Multiple objects can be added to suspicious list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description`, `scan_action`, `risk_level` and `days_to_expiration` in a comma separated list. The action now returns `status` and `task_id`. delete-objects-from-suspicious-list: Multiple objects can be removed from suspicious list in one call. Pass a dictionary object containing `object_type`, `object_value` and optional `description` in a comma separated list. The action now returns `status` and `task_id`. get-endpoint-info: Multiple endpoints can be queried in one call. Pass a comma separated string containing `ip`, `agent_gui` or `hostname`, terminate-process: Multiple processes can be terminated in one call. Pass a dictionary object containing `endpoint` (hostname) or `agent_guid`, `fileSha1` and optional `fileName` and `description`. The action now returns `status` and `task_id`. collect-forensic-file: Multiple files can be collected in one call. Pass a dictionary object containing `endpoint` (hostname) or `agent_guid`, `filePath` and optional `description`. The action now returns `status` and `task_id`. download-information-for-collected-forensic-file: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. download-suspicious-object-list: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. get-file-analysis-status: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. get-file-analysis-result: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. download-analysis-report: The analysis report now returns the `file_added` string which indicates the name of the analysis report (.pdf format), download-investigation-package: The investigation package now returns the `file_added` string which indicates the name of the investigation package (.zip format). submit-file-to-sandbox: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format. update-status: This action now accepts an additional `if_match` argument. The status of a workbench alert is only updated when a valid `if_match` (Etag) is provided, add-note: This action is mostly unchanged. The only difference is the return context output variable names. The output context now follows snake case format."
}
