id: Reset User Password via Chatbot
version: -1
name: Reset User Password via Chatbot
description: "This playbook resets the password of an Active Directory or Okta user. The process is as follows:\n1. A user requests a password reset using a chatbot in Slack or in Microsoft Teams.\n2. The playbook optionally seeks approval to reset the user's password from the relevant stakeholder, or from the user's manager. The request will be available for approval/disapproval for 1 hour. If not processed within that time, it will be disapproved.\n3. If the reset was approved, the playbook optionally verifies the user using 2-factor authentication, from the user's available 2FA methods on Okta.\n4. If the reset is verified, a new password will be created while meeting the complexity requirements of the organization.\n5. The user's password will be reset and set to the newly generated password. The user will be forced to change their password on next login.\n6. The new user's password will be placed inside a password-protected ZIP (protected by a different password).\n7. The encrypted ZIP file that contains the new password for the user will be sent to the user via email. \n8. The password for the ZIP file that contains the new user's password, will be sent to the requesting user through Slack or Teams.\n\nThis playbook is intended for use with Slack or Teams. In order to use it, please make sure that you have a classifier and mapper in place. The classifier should create a Password Reset via Chatbot incident, while the mapper should map the email of the user to the Reporter Email Address field.\nThis playbook assumes that the user requesting the password reset has the same email in Slack / Teams, and in Active Directory / Okta."
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: c7a0b000-0e23-4a2f-802a-a77ae62a7b41
    type: start
    task:
      id: c7a0b000-0e23-4a2f-802a-a77ae62a7b41
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "5"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: b8cccbdb-15c7-4600-89f7-c8d64607223d
    type: regular
    task:
      id: b8cccbdb-15c7-4600-89f7-c8d64607223d
      version: -1
      name: Reset user password in AD & send email
      description: |-
        Generates password.
        Set an AD user account with this password.
        Enable the account.
        Send mail to the user with tha account information.
        This script runs the `send-mail` command. Make sure there is a matching Integration configurated.
      scriptName: IAMInitADUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      ZipProtectWithPassword:
        complex:
          root: NEW_PASSWORD
      displayname:
        complex:
          root: ActiveDirectory.Users
          accessor: displayName
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
      email_body:
        complex:
          root: inputs.UserEmailBody
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      sAMAccountName:
        complex:
          root: ActiveDirectory.Users
          accessor: sAMAccountName
      to_email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 4900
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Password Reset Successfully
      output:
        complex:
          root: IAM.InitADUser
          accessor: success
    - incidentfield: Email Sent Successfully
      output:
        complex:
          root: IAM.InitADUser
          accessor: sentMail
    - incidentfield: Error Message
      output:
        complex:
          root: IAM.InitADUser
          accessor: errorDetails
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2+

          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: IAM.InitADUser.sendMailError
                iscontext: true
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 55a829e4-02a5-4298-8f35-f9acdc507dab
    type: condition
    task:
      id: 55a829e4-02a5-4298-8f35-f9acdc507dab
      version: -1
      name: Is approval required for the password reset?
      description: Checks whether the password reset should be approved by a specific user or by the manager of the user who asked to reset their password. This is configurable through the ApprovalTarget playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "22"
      Yes, from manager:
      - "6"
      Yes, from specified user:
      - "24"
    separatecontext: false
    conditions:
    - label: Yes, from manager
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.ApprovalTarget
            iscontext: true
          right:
            value:
              simple: Manager
          ignorecase: true
    - label: Yes, from specified user
      condition:
      - - operator: containsString
          left:
            value:
              complex:
                root: inputs.ApprovalTarget
            iscontext: true
          right:
            value:
              simple: '@'
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 54004008-8086-46c7-8089-f7863a07ad7f
    type: playbook
    task:
      id: 54004008-8086-46c7-8089-f7863a07ad7f
      version: -1
      name: Active Directory - Get User Manager Details
      description: Takes an email address or a username of a user account in Active Directory, and returns the email address of the user's manager.
      playbookName: Active Directory - Get User Manager Details
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      UserEmail:
        complex:
          root: incident
          accessor: reporteremailaddress
          transformers:
          - operator: uniq
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -300,
          "y": 700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 58f62f7d-b7df-4eea-8f46-76adfaca48a9
    type: condition
    task:
      id: 58f62f7d-b7df-4eea-8f46-76adfaca48a9
      version: -1
      name: Was the manager email retrieved?
      description: Checks whether the email of the user's manager was retrieved from Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "23"
      "yes":
      - "24"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: UserManagerEmail
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 331e954c-42a1-407c-81c8-c1e230a52a56
    type: condition
    task:
      id: 331e954c-42a1-407c-81c8-c1e230a52a56
      version: -1
      name: Ask - is the reset approved or disapproved?
      description: Asks the user's manager or the user specified in the ApprovalTarget playbook input through email, whether the password reset is approved or not.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      Approve Reset:
      - "25"
      Disapprove Reset:
      - "26"
    separatecontext: false
    sla:
      minutes: 0
      hours: 1
      days: 0
      weeks: 0
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 260,
          "y": 1570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ApprovalTarget
                iscontext: true
      subject:
        complex:
          root: inputs.ApprovalEmailSubject
      body:
        complex:
          root: inputs.ApprovalEmailBody
          transformers:
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: incident.reporteremailaddress
                iscontext: true
              toReplace:
                value:
                  simple: '[PLACEHOLDER]'
      methods:
      - email
      format: ""
      bcc:
      cc:
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
        completeafterv2: true
        completeaftersla: true
      replyOptions:
      - Approve Reset
      - Disapprove Reset
      defaultOption: Disapprove Reset
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 39a32fb7-736d-4621-843e-e49e52f4a15e
    type: regular
    task:
      id: 39a32fb7-736d-4621-843e-e49e52f4a15e
      version: -1
      name: Send email to the user saying reset was not approved
      description: Sends an email to the user saying the password reset has not been approved.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      body:
        complex:
          root: inputs.ResetNotApprovedEmailBody
      subject:
        complex:
          root: inputs.ResetNotApprovedEmailSubject
      to:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 260,
          "y": 5380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: 56c79667-eb38-4d73-8cd5-bf7bf48cf962
    type: regular
    task:
      id: 56c79667-eb38-4d73-8cd5-bf7bf48cf962
      version: -1
      name: Close the incident
      description: Closes the current incident.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 5550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: b5302ffb-028f-43b3-895b-cd5fd4189634
    type: regular
    task:
      id: b5302ffb-028f-43b3-895b-cd5fd4189634
      version: -1
      name: Get user's sAMAccountName from Active Directory
      description: Retrieves detailed information about a user account. The user can be specified by name, email address, or as an Active Directory Distinguished Name (DN). If no filter is specified, all users are returned.
      tags:
      - user_information
      script: '|||ad-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 4480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: 53cbf1cc-c3d0-40cc-835f-d9800c9077a5
    type: condition
    task:
      id: 53cbf1cc-c3d0-40cc-835f-d9800c9077a5
      version: -1
      name: Was a user found in Active Directory?
      description: Checks whether the user was found in Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: ActiveDirectory.Users
                accessor: sAMAccountName
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 4640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: 3757152b-f855-4971-8837-e3ebcac13608
    type: condition
    task:
      id: 3757152b-f855-4971-8837-e3ebcac13608
      version: -1
      name: Where should the password be reset?
      description: Checks where the user's password should be reset according to the playbook inputs. Some organizations have Okta provisioning in place, in which case they may prefer to reset the password in Okta. Other organizations may use Active Directory directly.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      Active Directory:
      - "12"
      Okta:
      - "17"
    separatecontext: false
    conditions:
    - label: Active Directory
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Active Directory
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Active Directory Query v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    - label: Okta
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Okta
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Okta v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 4280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: d91445fa-e415-4653-84a8-36aaf8d899d9
    type: regular
    task:
      id: d91445fa-e415-4653-84a8-36aaf8d899d9
      version: -1
      name: Reset user password in Okta & send email
      description: |-
        Generates a password and sets an Okta user account with that password.
        Enables the account.
        Sends an  email to the user with the account information.
        This script runs the `send-mail` command. Make sure there is a mail sender integration configured.
      scriptName: IAMInitOktaUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      ZipProtectWithPassword:
        complex:
          root: NEW_PASSWORD
      displayname:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: DisplayName
      email_body:
        complex:
          root: inputs.UserEmailBody
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      temporary_password:
        simple: "true"
      to_email:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Email
      username:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Username
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1800,
          "y": 4900
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Password Reset Successfully
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: success
    - incidentfield: Email Sent Successfully
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: sentMail
    - incidentfield: Error Message
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: errorDetails
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2+

          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: IAM.InitOktaUser.sendMailError
                iscontext: true
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: 133709ec-ca09-4580-87ae-383d67d6d2dd
    type: regular
    task:
      id: 133709ec-ca09-4580-87ae-383d67d6d2dd
      version: -1
      name: Get Okta user information
      description: Fetches information for a single user. You must enter one or more parameters for the command to run.
      tags:
      - user_information
      script: '|||okta-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      username:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1800,
          "y": 4480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 47ac33b6-07c2-4426-81a1-a0d184446da6
    type: condition
    task:
      id: 47ac33b6-07c2-4426-81a1-a0d184446da6
      version: -1
      name: Was a user found in Okta?
      description: Checks whether the user was found in Okta.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Account
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Account.Type
                      iscontext: true
                    right:
                      value:
                        simple: Okta
                    ignorecase: true
                accessor: Username
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1800,
          "y": 4640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: 49e6e22e-c11b-4a11-84a6-5f11ff64344f
    type: condition
    task:
      id: 49e6e22e-c11b-4a11-84a6-5f11ff64344f
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 5090
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: e34ffc40-ea90-4aa5-8f38-b013c9eea367
    type: condition
    task:
      id: e34ffc40-ea90-4aa5-8f38-b013c9eea367
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1800,
          "y": 5090
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "22":
    id: "22"
    taskid: c5cac7e4-76ad-491d-8322-0a975db2e182
    type: regular
    task:
      id: c5cac7e4-76ad-491d-8322-0a975db2e182
      version: -1
      name: Update approval status - not required
      description: commands.local.cmd.set.incident
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      approvalstatus:
        simple: Not required
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "23":
    id: "23"
    taskid: 154c139a-5482-4541-8dad-70e16f0c0783
    type: regular
    task:
      id: 154c139a-5482-4541-8dad-70e16f0c0783
      version: -1
      name: Update approval status to could not be obtained
      description: Updates the approval status to "could not be obtained".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      approvalstatus:
        simple: Required, but could not be obtained
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "24":
    id: "24"
    taskid: 6e51d23d-2d3b-4fbd-824e-1fd539906580
    type: regular
    task:
      id: 6e51d23d-2d3b-4fbd-824e-1fd539906580
      version: -1
      name: Update approver, and approval status - awaiting approval
      description: Updates the Approver field with the email of the user who is approving the reset request, and updates the Approval Status field to "Awaiting approval".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "48"
    scriptarguments:
      approvalstatus:
        simple: Awaiting approval
      approver:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ApprovalTarget
                iscontext: true
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1035
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "25":
    id: "25"
    taskid: c87853e6-9c40-4a78-83e6-f243bc1509b4
    type: regular
    task:
      id: c87853e6-9c40-4a78-83e6-f243bc1509b4
      version: -1
      name: Update approval status - approved
      description: Updates the Approval Status field to "Approved".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      approvalstatus:
        simple: Approved
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 740,
          "y": 2050
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: 372f5506-4ac0-4355-86fd-4a14c698260b
    type: regular
    task:
      id: 372f5506-4ac0-4355-86fd-4a14c698260b
      version: -1
      name: Update approval status - disapproved
      description: Updates the Approval Status field to "Disapproved".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      approvalstatus:
        simple: Disapproved
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 260,
          "y": 2060
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: d292b099-cac6-4e53-855a-cd54a6a3a4e6
    type: title
    task:
      id: d292b099-cac6-4e53-855a-cd54a6a3a4e6
      version: -1
      name: Approval Granted
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "29"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 2230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: ee3ceeb7-cf11-4ba0-85b4-22b5f66e9150
    type: condition
    task:
      id: ee3ceeb7-cf11-4ba0-85b4-22b5f66e9150
      version: -1
      name: Is 2-Factor Authentication required?
      description: Checks whether 2-Factor Authentication is required for the password reset process. This is determined by the "Require2FA" playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "37"
      "yes":
      - "31"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.Require2FA
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 2390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "31":
    id: "31"
    taskid: 8e375b07-dc1d-4ba5-89fd-f600f05d2f74
    type: title
    task:
      id: 8e375b07-dc1d-4ba5-89fd-f600f05d2f74
      version: -1
      name: 2-Factor Authentication
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "33"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 2580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "33":
    id: "33"
    taskid: c69938e0-afc6-4537-89e0-123d90bdd000
    type: regular
    task:
      id: c69938e0-afc6-4537-89e0-123d90bdd000
      version: -1
      name: Get user verification methods
      description: |-
        Returns all the enrolled factors for the specified user.
        Also sets the "Verification Status" as "Required".
      script: '|||okta-get-user-factors'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      username:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 2710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Verification Status
      output:
        simple: Required
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "34":
    id: "34"
    taskid: 382d452a-fd04-4adf-80d5-b8695bc674ea
    type: condition
    task:
      id: 382d452a-fd04-4adf-80d5-b8695bc674ea
      version: -1
      name: Was a verification method found?
      description: Checks whether an active 2FA method is available for the user who requested the password reset.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "35"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Account.Factor
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Account.Factor.Status
                      iscontext: true
                    right:
                      value:
                        simple: ACTIVE
                    ignorecase: true
                accessor: ID
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 2880
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "35":
    id: "35"
    taskid: b2488f8f-f409-461b-82bf-e7c6af1d004a
    type: regular
    task:
      id: b2488f8f-f409-461b-82bf-e7c6af1d004a
      version: -1
      name: Verify user
      description: |-
        Enrolls and verifies a push factor for the specified user.
        Also sets the "Verification Status" as "In Progress", and the "Verification Method" field with the method that was used for the 2-factor authentication.
      script: '|||okta-verify-push-factor'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "36"
    scriptarguments:
      factorId:
        complex:
          root: Account.Factor
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Status
                iscontext: true
              right:
                value:
                  simple: ACTIVE
              ignorecase: true
          accessor: ID
          transformers:
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
      userId:
        complex:
          root: Account
          accessor: ID
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 3060
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Verification Status
      output:
        simple: In Progress
    - incidentfield: Verification Method
      output:
        complex:
          root: Account.Factor
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Provider
                iscontext: true
              right:
                value:
                  simple: OKTA
              ignorecase: true
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Status
                iscontext: true
              right:
                value:
                  simple: ACTIVE
              ignorecase: true
          accessor: FactorType
          transformers:
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "36":
    id: "36"
    taskid: 27a82491-8396-4938-8285-08c89c51980a
    type: condition
    task:
      id: 27a82491-8396-4938-8285-08c89c51980a
      version: -1
      name: Did the user verify successfully?
      description: Checks whether the user passed the 2-factor authentication.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "39"
      "yes":
      - "38"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: Account
                accessor: VerifyPushResult
            iscontext: true
          right:
            value:
              simple: SUCCESS
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 700,
          "y": 3240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "37":
    id: "37"
    taskid: faaa867c-a86f-4999-82af-b369ec05e487
    type: regular
    task:
      id: faaa867c-a86f-4999-82af-b369ec05e487
      version: -1
      name: Update verification status - not required
      description: Updates the Verification Status field to "Not required".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      verificationstatus:
        simple: Not Required
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 2710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "38":
    id: "38"
    taskid: ba0b5c9a-fe26-4c48-8b1e-907b4594405c
    type: regular
    task:
      id: ba0b5c9a-fe26-4c48-8b1e-907b4594405c
      version: -1
      name: Update verification status - verified
      description: Updates the Verification Status field to "Verified".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      verificationstatus:
        simple: Verified
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 990,
          "y": 3410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "39":
    id: "39"
    taskid: 435a0dd1-5885-46ff-8e24-3ec4680a1e6e
    type: regular
    task:
      id: 435a0dd1-5885-46ff-8e24-3ec4680a1e6e
      version: -1
      name: Update verification status - failed to verify
      description: Updates the Verification Status field to "Failed to verify".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      verificationstatus:
        simple: Failed To Verify
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 520,
          "y": 3410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "40":
    id: "40"
    taskid: a86e3b7c-4c8d-4d94-8fb5-947f9a66e1c1
    type: title
    task:
      id: a86e3b7c-4c8d-4d94-8fb5-947f9a66e1c1
      version: -1
      name: Password Protect ZIP
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "41"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 3620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "41":
    id: "41"
    taskid: def2922a-86c4-4bfb-8a90-5db051bf6bf2
    type: regular
    task:
      id: def2922a-86c4-4bfb-8a90-5db051bf6bf2
      version: -1
      name: Generate password for ZIP that will contain the user password
      description: |-
        Generates a password to protect the ZIP file that contains the user's new password.
        Note: the ZIP file's password is NOT the same as the user's new password.
      scriptName: GeneratePassword
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
    reputationcalc: 1
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 3750
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "43":
    id: "43"
    taskid: 44a45381-22a0-4547-88f1-5b51f229bcf8
    type: regular
    task:
      id: 44a45381-22a0-4547-88f1-5b51f229bcf8
      version: -1
      name: Send ZIP password to the user on Slack / Teams
      description: Sends the ZIP file password to the user along with the message specified in the "ZipPasswordMessage" playbook input.
      script: '|||send-notification'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "44"
    scriptarguments:
      ignoreAddURL:
        simple: "true"
      message:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.ZipPasswordMessage
                iscontext: true
              suffix: {}
      to:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 3960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "44":
    id: "44"
    taskid: 2e76d6c6-5f7d-4426-84be-17f230917bc9
    type: title
    task:
      id: 2e76d6c6-5f7d-4426-84be-17f230917bc9
      version: -1
      name: Reset & Send Email
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "14"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1230,
          "y": 4130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "45":
    id: "45"
    taskid: 4d93e157-e329-44a3-85d4-48249155e465
    type: regular
    task:
      id: 4d93e157-e329-44a3-85d4-48249155e465
      version: -1
      name: Ask - is the reset approved?
      description: Asks the approver whether we can proceed with the password reset process, in a way that the approver can reply directly to the email without needing to access a special link.
      scriptName: EmailAskUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "47"
    scriptarguments:
      bodyType:
        simple: text
      email:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ApprovalTarget
                iscontext: true
      message:
        complex:
          root: inputs.ApprovalEmailBody
          transformers:
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: incident.reporteremailaddress
                iscontext: true
              toReplace:
                value:
                  simple: '[PLACEHOLDER]'
      subject:
        complex:
          root: inputs.ApprovalEmailSubject
      task:
        simple: ApprovalReply
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 740,
          "y": 1570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "47":
    id: "47"
    taskid: 390faa7c-9828-45da-8d44-1cec8dec8f02
    type: condition
    task:
      id: 390faa7c-9828-45da-8d44-1cec8dec8f02
      version: -1
      name: Was the reset approved? (task auto-completes)
      description: Waits for the reply from the approver of the password reset. This task auto-completes when a reply is received.
      tags:
      - ApprovalReply
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "No":
      - "26"
      "Yes":
      - "25"
    separatecontext: false
    sla:
      minutes: 0
      hours: 0
      days: 0
      weeks: 0
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 740,
          "y": 1740
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "48":
    id: "48"
    taskid: 337b01a8-8330-4189-87bc-9853960d7e7e
    type: condition
    task:
      id: 337b01a8-8330-4189-87bc-9853960d7e7e
      version: -1
      name: How should the approver be contacted?
      description: Checks whether the person approving the password reset request should have access to the XSOAR server's network and thus receive a link to approve/disapprove the request, or they should be contacted in a way that they can approve/disapprove the request with a simple email reply, without needing to have any special network access.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "50"
      Email Link (XSOAR Hosted):
      - "49"
    separatecontext: false
    conditions:
    - label: Email Link (XSOAR Hosted)
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.RequireAccessForApprover
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "49":
    id: "49"
    taskid: 5934d2ea-5f5f-4cae-88cc-9c6688773202
    type: title
    task:
      id: 5934d2ea-5f5f-4cae-88cc-9c6688773202
      version: -1
      name: Approver Has Access For Approval
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 260,
          "y": 1440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "50":
    id: "50"
    taskid: 89974cfa-1e4c-4b91-8df3-02aa9275e82e
    type: title
    task:
      id: 89974cfa-1e4c-4b91-8df3-02aa9275e82e
      version: -1
      name: XSOAR not open to internet / Approver missing VPN
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "45"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 740,
          "y": 1440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "13_10_#default#": 0.1,
      "13_1_yes": 0.46,
      "14_10_#default#": 0.21,
      "14_12_Active Directory": 0.65,
      "18_10_#default#": 0.1,
      "18_15_yes": 0.42,
      "19_10_#default#": 0.1,
      "19_11_yes": 0.1,
      "20_10_#default#": 0.1,
      "20_11_yes": 0.1,
      "29_31_yes": 0.44,
      "34_10_#default#": 0.15,
      "34_35_yes": 0.51,
      "5_24_Yes, from specified user": 0.53,
      "5_6_Yes, from manager": 0.6,
      "7_23_#default#": 0.2,
      "7_24_yes": 0.53,
      "8_25_Approve Reset": 0.46,
      "8_26_Disapprove Reset": 0.63
    },
    "paper": {
      "dimensions": {
        "height": 5265,
        "width": 2480,
        "x": -300,
        "y": 380
      }
    }
  }
inputs:
- key: PasswordMaxDigits
  value:
    simple: "4"
  required: false
  description: The maximum number of digits in the generated password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxLowercase
  value:
    simple: "4"
  required: false
  description: Maximum number of lower case characters to include in the password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxSymbols
  value:
    simple: "4"
  required: false
  description: Maximum number of symbols to include in the password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxUppercase
  value:
    simple: "4"
  required: false
  description: Maximum number of upper case characters to include in the password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMinDigits
  value:
    simple: "2"
  required: false
  description: Minimum number of digits to include in the password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinLowercase
  value:
    simple: "2"
  required: false
  description: Minimum number of lower case characters to include in the password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinSymbols
  value:
    simple: "2"
  required: false
  description: Minimum number of symbols to include in the password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinUppercase
  value:
    simple: "2"
  required: false
  description: Minimum number of upper case characters to include in the password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: ApprovalTarget
  value:
    simple: Manager
  required: false
  description: |-
    Optional - determines who will approve or disapprove the password reset. Possible values are: no value specified, email address of the user who will receive the reset request, or "Manager".

    If no value is specified - approval will not be required when resetting the password.

    If the value of "Manager" is specified - the user's manager email will be retrieved from Active Directory, and an approval email will be sent to the manager to allow or decline the password reset.

    If an email is specified  - an approval email will be sent to the email specified to allow or decline the password reset.
  playbookInputQuery:
- key: ApprovalEmailSubject
  value:
    simple: Action Required - User Password Reset
  required: false
  description: |-
    Optional - applicable only if the "ApprovalTarget" input is not blank.
    The subject of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery:
- key: ApprovalEmailBody
  value:
    simple: |-
      User [PLACEHOLDER] asked to reset their password.
      Please allow or decline the password reset.
  required: false
  description: |-
    Optional - applicable only if the "ApprovalTarget" input is not empty.
    The body of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery:
- key: TargetProduct
  value:
    simple: Active Directory
  required: false
  description: |-
    Determines where the user password will be reset. Some organizations provision the data from Okta to Active Directory, so they may choose to reset the password in Okta instead of Active Directory.
    Possible values are (choose one):
    - Active Directory
    - Okta
  playbookInputQuery:
- key: Require2FA
  value:
    simple: "True"
  required: false
  description: |-
    Whether to require that the user authenticates using an available authentication method.
    Currently, this only supports the Extra Verification methods available in Okta (Okta Verify, SMS, Security Question or Google Authenticator).
  playbookInputQuery:
- key: UserEmailSubject
  value:
    simple: Password Reset
  required: false
  description: The subject of the email with the password that will be sent to the user.
  playbookInputQuery:
- key: UserEmailBody
  value:
    simple: |-
      Following your request to reset your password, we've changed your password to a new temporary password.
      After logging in, you will be required to change the password to a new one.
      You can find the password in the ZIP file attached to this email. The password to the ZIP file was sent to you in a direct message in Slack or in Teams.
  required: false
  description: 'The body of the email with the password that will be sent to the user. Note: The password will not be included in the email body, but in a protected ZIP file instead.'
  playbookInputQuery:
- key: ZipPasswordMessage
  value:
    simple: "Following your request to reset your password, we've sent you an email with the new password. The password is protected inside an encrypted ZIP file.\nThe password to the ZIP file is: "
  required: false
  description: |
    The message that will be sent to the user in Slack/Teams after their password was reset. The value of this input will be appended to the beginning of the the ZIP password that will be sent in the following manner:
    "The zip file password is: [zip_password_will_be_here]".

    Note: There is no need to actually write the placeholder for the ZIP password. It will simply appear after your message.
  playbookInputQuery:
- key: ResetNotApprovedEmailSubject
  value:
    simple: Password Reset Not Approved
  required: false
  description: The subject of the email that will be sent to the requesting user in case the reset was disapproved or could not be approved.
  playbookInputQuery:
- key: ResetNotApprovedEmailBody
  value:
    simple: |-
      Your request for a password reset could not be approved or was disapproved. Please contact the helpdesk for assistance with resetting your password.

      If you did not ask to reset your password, please change your password immediately and report the incident.
  required: false
  description: The body of the email that will be sent to the requesting user in case the reset was not approved or could not be approved.
  playbookInputQuery:
- key: RequireAccessForApprover
  value:
    simple: "True"
  required: false
  description: |-
    Optional - applicable only if the ApprovalTarget input is not empty.
    Determines whether the person approving the reset request must have access to the XSOAR server's network. Possible values are "True" or "False".
    If set to True - the person approving the request will receive and email with a link that takes them to a form hosted on this XSOAR server. This means that the approver must be able to access the network either through a VPN or directly.
    If set to False - the approver will get an email where they can simply reply with "yes" or "no", without having to click on a link that requires them to have access to the network of this server.

    You may want to set this to False to make it easier for the stakeholder to approve the request even if they are on vacation or cannot access this network for any reason.

    Note: Enabling this option requires you to have an email sender integration and an email listener integration enabled with the same email address configured on both. In addition, this option does not support disapproving the request automatically if a reply was not received within the 1 hour time window.
  playbookInputQuery:
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.8.0
