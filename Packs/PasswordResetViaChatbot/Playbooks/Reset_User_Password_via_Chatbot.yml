id: Reset User Password via Chatbot
version: 74
vcShouldKeepItemLegacyProdMachine: false
name: Reset User Password via Chatbot
description: |-
  This playbooks should be triggered by a Slack or a Teams message from a user requesting to reset their forgotten password.
  The playbook seeks approval before resetting the user's password. It then generates a new password for the user, meeting the complexity criteria defined in the playbook inputs, and sends an email to the user with the new password.
  The only information required from the user requesting the password reset in this playbook is the "reporteremailaddress" field, which should hold the email address of the user asking for password reset.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 129967c4-7baf-4b91-8f77-56d4f07f1a59
    type: start
    task:
      id: 129967c4-7baf-4b91-8f77-56d4f07f1a59
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 7cc52d62-6695-4853-87c7-f5d740c50cdb
    type: regular
    task:
      id: 7cc52d62-6695-4853-87c7-f5d740c50cdb
      version: -1
      name: Reset user password in AD & send email
      description: |-
        Generates password,
        Set an AD user account with this password.
        Enable the account.
        Send mail to the user with tha account information.
        This script is running `send-mail` command, make sure there is a matching Integration configurated.
      scriptName: IAMInitADUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      ZipProtectWithPassword:
        complex:
          root: NEW_PASSWORD
      displayname:
        complex:
          root: ActiveDirectory.Users
          accessor: displayName
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
      email_body:
        complex:
          root: inputs.UserEmailBody
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      sAMAccountName:
        complex:
          root: ActiveDirectory.Users
          accessor: sAMAccountName
      to_email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 4270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Password Reset Successfully
      output:
        complex:
          root: IAM.InitADUser
          accessor: success
    - incidentfield: Email Sent Successfully
      output:
        complex:
          root: IAM.InitADUser
          accessor: sentMail
    - incidentfield: Error Message
      output:
        complex:
          root: IAM.InitADUser
          accessor: errorDetails
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2+

          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: IAM.InitADUser.sendMailError
                iscontext: true
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 47c09c55-e2db-4d5a-8895-316575d6ba22
    type: condition
    task:
      id: 47c09c55-e2db-4d5a-8895-316575d6ba22
      version: -1
      name: Is confirmation required for the password reset?
      description: Checks whether the password reset should be approved by a specific
        user or by the manager of the user that asked to reset their password. This
        is configurable through the ConfirmationTarget playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "22"
      Yes, from manager:
      - "6"
      Yes, from specified user:
      - "24"
    separatecontext: false
    conditions:
    - label: Yes, from manager
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.ConfirmationTarget
            iscontext: true
          right:
            value:
              simple: Manager
          ignorecase: true
    - label: Yes, from specified user
      condition:
      - - operator: containsString
          left:
            value:
              complex:
                root: inputs.ConfirmationTarget
            iscontext: true
          right:
            value:
              simple: '@'
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 506d5091-6b29-4745-888e-4a099e05eaf8
    type: playbook
    task:
      id: 506d5091-6b29-4745-888e-4a099e05eaf8
      version: -1
      name: Active Directory - Get User Manager Details
      description: Takes an email address or a username of a user account in Active
        Directory, and returns the email address of the user's manager.
      playbookName: Active Directory - Get User Manager Details
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      UserEmail:
        complex:
          root: incident
          accessor: reporteremailaddress
          transformers:
          - operator: uniq
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -300,
          "y": 700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 19f2cf3b-9a1e-4d2d-8e42-ab19bfed359e
    type: condition
    task:
      id: 19f2cf3b-9a1e-4d2d-8e42-ab19bfed359e
      version: -1
      name: Was the manager email retrieved?
      description: Checks whether the email of the user's manager was retrieved from
        Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "23"
      "yes":
      - "24"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: UserManagerEmail
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 26264bec-c298-4539-86fc-d8c690cd9165
    type: condition
    task:
      id: 26264bec-c298-4539-86fc-d8c690cd9165
      version: -1
      name: Ask - is the reset approved or disapproved?
      description: Asks the user's manager or the user specified in the ConfirmationTarget
        playbook input through email, whether the password reset is approved or not.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      Approve Reset:
      - "25"
      Disapprove Reset:
      - "26"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ConfirmationTarget
                iscontext: true
      subject:
        complex:
          root: inputs.ConfirmationEmailSubject
      body:
        complex:
          root: inputs.ConfirmationEmailBody
          transformers:
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: incident.reporteremailaddress
                iscontext: true
              toReplace:
                value:
                  simple: '[PLACEHOLDER]'
      methods:
      - email
      format: ""
      bcc: null
      cc: null
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
        completeafterv2: true
        completeaftersla: false
      replyOptions:
      - Approve Reset
      - Disapprove Reset
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 92a341b9-96ea-4963-805b-95a675f57f51
    type: regular
    task:
      id: 92a341b9-96ea-4963-805b-95a675f57f51
      version: -1
      name: Send email to the user saying reset was not approved
      description: Sends an email to the user saying the password reset has not been
        approved.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      body:
        complex:
          root: inputs.ResetNotApprovedEmailBody
      subject:
        complex:
          root: inputs.ResetNotApprovedEmailSubject
      to:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 290,
          "y": 4750
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: 00f711bf-5674-4dc2-830a-7339aa6a345e
    type: regular
    task:
      id: 00f711bf-5674-4dc2-830a-7339aa6a345e
      version: -1
      name: Close the incident
      description: Closes the current incident.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 4920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: ee9b7a4f-a26a-4826-8d2d-4c3202560e7d
    type: regular
    task:
      id: ee9b7a4f-a26a-4826-8d2d-4c3202560e7d
      version: -1
      name: Get user's sAMAccountName from Active Directory
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      tags:
      - user_information
      script: '|||ad-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3850
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: 32e17593-98c6-4858-8527-a6974c53ea7e
    type: condition
    task:
      id: 32e17593-98c6-4858-8527-a6974c53ea7e
      version: -1
      name: Was a user found in Active Directory?
      description: Checks whether the user was found in Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: ActiveDirectory.Users
                accessor: sAMAccountName
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 4010
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: d82ccfd8-b1df-4c7d-81ac-34c8b552a658
    type: condition
    task:
      id: d82ccfd8-b1df-4c7d-81ac-34c8b552a658
      version: -1
      name: Where should the password be reset?
      description: Checks where the user's password should be reset according to the
        playbook inputs. Some organizations have Okta provisioning in place, in which
        case they may prefer to reset the password in Okta. Other organizations may
        use Active Directory directly.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      Active Directory:
      - "12"
      Okta:
      - "17"
    separatecontext: false
    conditions:
    - label: Active Directory
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Active Directory
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Active Directory Query v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    - label: Okta
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Okta
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Okta v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: 985a7cb6-ab92-4abc-89f4-cd4ab02ccd81
    type: regular
    task:
      id: 985a7cb6-ab92-4abc-89f4-cd4ab02ccd81
      version: -1
      name: Reset user password in Okta & send email
      description: |-
        Generates a password and sets an Okta user account with that password.
        Enables the account.
        Sends an  email to the user with the account information.
        This script is running the `send-mail` command, make sure there is a mail sender integration configured.
      scriptName: IAMInitOktaUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      ZipProtectWithPassword:
        complex:
          root: NEW_PASSWORD
      displayname:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: DisplayName
      email_body:
        complex:
          root: inputs.UserEmailBody
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      temporary_password:
        simple: "true"
      to_email:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Email
      username:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Username
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1830,
          "y": 4270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Password Reset Successfully
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: success
    - incidentfield: Email Sent Successfully
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: sentMail
    - incidentfield: Error Message
      output:
        complex:
          root: IAM.InitOktaUser
          accessor: errorDetails
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |2+

          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: IAM.InitOktaUser.sendMailError
                iscontext: true
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: 0bed915e-2699-4607-8e6e-37dfe77ea203
    type: regular
    task:
      id: 0bed915e-2699-4607-8e6e-37dfe77ea203
      version: -1
      name: Get Okta user information
      description: Fetches information for a single user. You must enter one or more
        parameters for the command to run.
      tags:
      - user_information
      script: '|||okta-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      username:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1830,
          "y": 3850
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 9f772e37-9e76-4b7e-8a4c-226cff0e1712
    type: condition
    task:
      id: 9f772e37-9e76-4b7e-8a4c-226cff0e1712
      version: -1
      name: Was a user found in Okta?
      description: Checks whether the user was found in Okta.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Account
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Account.Type
                      iscontext: true
                    right:
                      value:
                        simple: Okta
                    ignorecase: true
                accessor: Username
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1830,
          "y": 4010
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: d5ff5f58-7474-4233-8e31-89fe630d4fed
    type: condition
    task:
      id: d5ff5f58-7474-4233-8e31-89fe630d4fed
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an
        email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 4460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: 097ecede-1fc9-468b-84d1-f7effb473376
    type: condition
    task:
      id: 097ecede-1fc9-468b-84d1-f7effb473376
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an
        email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1830,
          "y": 4460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "22":
    id: "22"
    taskid: c5870d9b-f109-4670-80ba-94d89bc15d72
    type: regular
    task:
      id: c5870d9b-f109-4670-80ba-94d89bc15d72
      version: -1
      name: Update approval status - not required
      description: commands.local.cmd.set.incident
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      approvalstatus:
        simple: Not required
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "23":
    id: "23"
    taskid: f623ac90-7cda-402e-8cca-1a8d0a9e8950
    type: regular
    task:
      id: f623ac90-7cda-402e-8cca-1a8d0a9e8950
      version: -1
      name: Update approval status to could not be obtained
      description: Updates the approval status to "could not be obtained".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      approvalstatus:
        simple: Required, but could not be obtained
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "24":
    id: "24"
    taskid: 4e0c8e99-7b87-4c66-8a95-385ec65964b0
    type: regular
    task:
      id: 4e0c8e99-7b87-4c66-8a95-385ec65964b0
      version: -1
      name: Update approver, and approval status - awaiting approval
      description: Updates the Approver field with the email of the user who is approving
        the reset request, and updates the Approval Status field to "Awaiting approval".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      approvalstatus:
        simple: Awaiting approval
      approver:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ConfirmationTarget
                iscontext: true
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1035
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "25":
    id: "25"
    taskid: 19e0cd09-79ed-4802-8d4e-01da43831eb9
    type: regular
    task:
      id: 19e0cd09-79ed-4802-8d4e-01da43831eb9
      version: -1
      name: Update approval status - approved
      description: Updates the Approval Status field to "Approved".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      approvalstatus:
        simple: Approved
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 770,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: a01b0930-5a28-4672-856b-294db52bb83e
    type: regular
    task:
      id: a01b0930-5a28-4672-856b-294db52bb83e
      version: -1
      name: Update approval status - disapproved
      description: Updates the Approval Status field to "Disapproved".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      approvalstatus:
        simple: Disapproved
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 290,
          "y": 1430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: 86b335d4-4bb4-4ee7-891d-cf14201483fb
    type: title
    task:
      id: 86b335d4-4bb4-4ee7-891d-cf14201483fb
      version: -1
      name: Approval Granted
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 1600
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: 574478cb-5ca9-4ea6-82ce-970bedfdec71
    type: condition
    task:
      id: 574478cb-5ca9-4ea6-82ce-970bedfdec71
      version: -1
      name: Is 2-Factor Authentication required?
      description: Checks whether 2-Factor Authentication is required for the password
        reset process. This is determined by the "Require2FA" playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "37"
      "yes":
      - "31"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.Require2FA
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 1760
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "31":
    id: "31"
    taskid: 8cc3d775-dc40-4faf-8c54-5ccc2925949f
    type: title
    task:
      id: 8cc3d775-dc40-4faf-8c54-5ccc2925949f
      version: -1
      name: 2-Factor Authentication
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 730,
          "y": 1950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "33":
    id: "33"
    taskid: 466bd21a-73f1-4793-8d42-833fd881c733
    type: regular
    task:
      id: 466bd21a-73f1-4793-8d42-833fd881c733
      version: -1
      name: Get user verification methods
      description: |-
        Returns all the enrolled factors for the specified user.
        Also sets the "Verification Status" as "Required".
      script: '|||okta-get-user-factors'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      username:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 730,
          "y": 2080
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Verification Status
      output:
        simple: Required
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "34":
    id: "34"
    taskid: 250c8eef-e298-48a1-8c87-f51b2043b0b0
    type: condition
    task:
      id: 250c8eef-e298-48a1-8c87-f51b2043b0b0
      version: -1
      name: Was a verification method found?
      description: Checks whether an active 2FA method is available for the user who
        requested the password reset.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "35"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Account.Factor
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Account.Factor.Status
                      iscontext: true
                    right:
                      value:
                        simple: ACTIVE
                    ignorecase: true
                accessor: ID
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 730,
          "y": 2250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "35":
    id: "35"
    taskid: 63b951b9-9535-4452-8520-112b4164e3f3
    type: regular
    task:
      id: 63b951b9-9535-4452-8520-112b4164e3f3
      version: -1
      name: Verify user
      description: |-
        Enrolls and verifies a push factor for the specified user.
        Also sets the "Verification Status" as "In Progress", and the "Verification Method" field with the method that was used for the 2-factor authentication.
      script: '|||okta-verify-push-factor'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "36"
    scriptarguments:
      factorId:
        complex:
          root: Account.Factor
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Status
                iscontext: true
              right:
                value:
                  simple: ACTIVE
              ignorecase: true
          accessor: ID
          transformers:
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
      userId:
        complex:
          root: Account
          accessor: ID
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 730,
          "y": 2430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    fieldMapping:
    - incidentfield: Verification Status
      output:
        simple: In Progress
    - incidentfield: Verification Method
      output:
        complex:
          root: Account.Factor
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Provider
                iscontext: true
              right:
                value:
                  simple: OKTA
              ignorecase: true
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Factor.Status
                iscontext: true
              right:
                value:
                  simple: ACTIVE
              ignorecase: true
          accessor: FactorType
          transformers:
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "36":
    id: "36"
    taskid: ef7a9cb8-1032-42db-8ecf-cd1a4b0d42d6
    type: condition
    task:
      id: ef7a9cb8-1032-42db-8ecf-cd1a4b0d42d6
      version: -1
      name: Did the user verify successfully?
      description: Checks whether the user passed the 2-factor authentication.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "39"
      "yes":
      - "38"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: Account
                accessor: VerifyPushResult
            iscontext: true
          right:
            value:
              simple: SUCCESS
          ignorecase: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 730,
          "y": 2610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "37":
    id: "37"
    taskid: 22c2af60-1499-4b29-804a-f0ed8b8452e9
    type: regular
    task:
      id: 22c2af60-1499-4b29-804a-f0ed8b8452e9
      version: -1
      name: Update verification status - not required
      description: Updates the Verification Status field to "Not required".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      verificationstatus:
        simple: Not Required
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 2080
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "38":
    id: "38"
    taskid: 59660f26-c3b3-4bfc-85b1-44d3d0b00a1c
    type: regular
    task:
      id: 59660f26-c3b3-4bfc-85b1-44d3d0b00a1c
      version: -1
      name: Update verification status - verified
      description: Updates the Verification Status field to "Verified".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      verificationstatus:
        simple: Verified
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1020,
          "y": 2780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "39":
    id: "39"
    taskid: b0b1d0b2-044b-4bf7-8f21-8eaa4c8f067c
    type: regular
    task:
      id: b0b1d0b2-044b-4bf7-8f21-8eaa4c8f067c
      version: -1
      name: Update verification status - failed to verify
      description: Updates the Verification Status field to "Failed to verify".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      verificationstatus:
        simple: Failed To Verify
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 550,
          "y": 2780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "40":
    id: "40"
    taskid: 51dbd485-2fbb-4fc5-8867-918021aaa99e
    type: title
    task:
      id: 51dbd485-2fbb-4fc5-8867-918021aaa99e
      version: -1
      name: Password Protect ZIP
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "41"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 2990
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "41":
    id: "41"
    taskid: f7dfd774-bade-4c81-8243-a036ba848c58
    type: regular
    task:
      id: f7dfd774-bade-4c81-8243-a036ba848c58
      version: -1
      name: Generate password for ZIP that will contain the user password
      description: |-
        Generates a password to protect the ZIP file which contains the user's new password.
        Note: the ZIP file's password is NOT the same as the user's new password.
      scriptName: GeneratePassword
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
    reputationcalc: 1
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "43":
    id: "43"
    taskid: 071ade79-bf5c-4165-8e2c-33ddf5dc54c7
    type: regular
    task:
      id: 071ade79-bf5c-4165-8e2c-33ddf5dc54c7
      version: -1
      name: Send ZIP password to the user on Slack / Teams
      description: Sends the ZIP file password to the user along with the message
        specified in the "ZipPasswordMessage" playbook input.
      script: '|||send-notification'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "44"
    scriptarguments:
      ignoreAddURL:
        simple: "true"
      message:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.ZipPasswordMessage
                iscontext: true
              suffix: {}
      to:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "44":
    id: "44"
    taskid: 7ca94d81-b25a-4300-884d-85dfe7ef7c04
    type: title
    task:
      id: 7ca94d81-b25a-4300-884d-85dfe7ef7c04
      version: -1
      name: Reset & Send Email
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3500
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "13_10_#default#": 0.1,
      "13_1_yes": 0.46,
      "14_10_#default#": 0.21,
      "14_12_Active Directory": 0.65,
      "18_10_#default#": 0.1,
      "18_15_yes": 0.42,
      "19_10_#default#": 0.1,
      "19_11_yes": 0.1,
      "20_10_#default#": 0.1,
      "20_11_yes": 0.1,
      "29_31_yes": 0.44,
      "34_10_#default#": 0.15,
      "34_35_yes": 0.51,
      "5_24_Yes, from specified user": 0.53,
      "5_6_Yes, from manager": 0.6,
      "7_23_#default#": 0.2,
      "7_24_yes": 0.53,
      "8_26_Disapprove Reset": 0.27
    },
    "paper": {
      "dimensions": {
        "height": 4635,
        "width": 2510,
        "x": -300,
        "y": 380
      }
    }
  }
inputs:
- key: PasswordMaxDigits
  value:
    simple: "4"
  required: false
  description: The maximum number of digits in the generated password. If no value
    is specified, a value of 10 will be used.
  playbookInputQuery: null
- key: PasswordMaxLowercase
  value:
    simple: "4"
  required: false
  description: Maximum number of lower case characters to include in password. If
    no value is specified, a value of 10 will be used.
  playbookInputQuery: null
- key: PasswordMaxSymbols
  value:
    simple: "4"
  required: false
  description: Maximum number of symbols to include in password. If no value is specified,
    a value of 10 will be used.
  playbookInputQuery: null
- key: PasswordMaxUppercase
  value:
    simple: "4"
  required: false
  description: Maximum number of upper case characters to include in password. If
    no value is specified, a value of 10 will be used.
  playbookInputQuery: null
- key: PasswordMinDigits
  value:
    simple: "2"
  required: false
  description: Minimum number of digits to include in password. If no value is specified,
    a value of 0 will be used.
  playbookInputQuery: null
- key: PasswordMinLowercase
  value:
    simple: "2"
  required: false
  description: Minimum number of lower case characters to include in password. If
    no value is specified, a value of 0 will be used.
  playbookInputQuery: null
- key: PasswordMinSymbols
  value:
    simple: "2"
  required: false
  description: Minimum number of symbols to include in password. If no value is specified,
    a value of 0 will be used.
  playbookInputQuery: null
- key: PasswordMinUppercase
  value:
    simple: "2"
  required: false
  description: Minimum number of upper case characters to include in password. If
    no value is specified, a value of 0 will be used.
  playbookInputQuery: null
- key: ConfirmationTarget
  value:
    simple: Manager
  required: false
  description: |-
    Determines who will confirm the password reset. Possible values are: no value specified, email address of the user that will confirm the reset, or "Manager".

    If no value is specified - confirmation will not be required when resetting the password.

    If the value of "Manager" is specified - the user's manager email will be retrieved from Active Directory, and a confirmation email will be sent to the manager to allow or decline the password reset.

    If an email is specified  - a confirmation email will be sent to the email specified to allow or decline the password reset.
  playbookInputQuery: null
- key: ConfirmationEmailSubject
  value:
    simple: Action Required - User Password Reset
  required: false
  description: |-
    Optional - applicable only if the "ConfirmationTarget" input is not blank.
    The subject of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery: null
- key: ConfirmationEmailBody
  value:
    simple: |-
      User [PLACEHOLDER] asked to reset their password.
      Please allow or decline the password reset.
  required: false
  description: |-
    Optional - applicable only if the "ConfirmationTarget" input is not blank.
    The body of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery: null
- key: TargetProduct
  value:
    simple: Okta
  required: false
  description: |-
    Determines whether the user password will be reset. Some organizations provision the data from Okta to Active Directory, so they may choose to reset the password in Okta instead of Active Directory.
    Possible values are (choose one):
    - Active Directory
    - Okta
  playbookInputQuery: null
- key: Require2FA
  value:
    simple: "True"
  required: false
  description: |-
    Whether to require that the user authenticates using an available authentication method.
    Currently, this only supports the Extra Verification methods available in Okta (Okta Verify, SMS, Security Question or Google Authenticator).
  playbookInputQuery: null
- key: UserEmailSubject
  value:
    simple: Password Reset
  required: false
  description: The subject of the email with the password that will be sent to the
    user.
  playbookInputQuery: null
- key: UserEmailBody
  value:
    simple: |-
      Following your request to reset your password, we've changed your password to a new temporary password.
      After logging in, you will be required to change the password to a new one.
      You can find the password in the ZIP file attached to this email. The password to the ZIP file was sent to you in a direct message on Slack or on Teams.
  required: false
  description: 'The body of the email with the password that will be sent to the user.
    Note: the password will not be included in the email body, but in a protected
    ZIP file instead.'
  playbookInputQuery: null
- key: ZipPasswordMessage
  value:
    simple: "Following your request to reset your password, we've sent you an email
      with the new password. The password is protected inside an encrypted ZIP file.\nThe
      password to the ZIP file is: "
  required: false
  description: |
    The message that will be sent to the user on Slack/Teams after their password was reset. The value of this input will be appended to the beginning of the the ZIP password that will be sent in the following manner:
    "The zip file password is: [zip_password_will_be_here]".

    Note: there is no need to actually write the placeholder for the ZIP password. It will simply appear after your message.
  playbookInputQuery: null
- key: ResetNotApprovedEmailSubject
  value:
    simple: Password Reset Not Approved
  required: false
  description: ""
  playbookInputQuery: null
- key: ResetNotApprovedEmailBody
  value:
    simple: |-
      Your request for a password reset could not be approved or was disapproved. Please contact helpdesk for assistance with resetting your password.

      If you did not ask to reset your password, please change your password immediately and report the incident.
  required: false
  description: ""
  playbookInputQuery: null
outputs: []
