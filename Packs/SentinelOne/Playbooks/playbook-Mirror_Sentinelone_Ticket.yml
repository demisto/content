id: Mirror SentinelOne Ticket
version: -1
name: Mirror SentinelOne Ticket
description: |-
  Mirror SentinelOne Ticket is designed to serve as a playbook, which enables ticket mirroring with SentinelOne.
  It enables you to manage SentinelOne tickets in Cortex xSOAR while data is continuously synced between SentinelOne and Cortex xSOAR, including SentinelOne schema, fields.

  To enable mirroring, use the SentinelOne Incident  - common mappers for incoming and outgoing mirroring by enabling mirroring direction.

  In Addition to the playbook, we recommend that you use the included layout for SentinelOne Incident, which helps visualize SentinelOne incident information in Cortex xSOAR.
  You can add the new layout as a tab to existing layouts using the Edit Layout page.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: f6578767-2459-4d8b-8101-a1e1e1011e76
    type: start
    task:
      id: f6578767-2459-4d8b-8101-a1e1e1011e76
      version: -1
      name: ""
      description: Start.
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: ade9b90c-9859-4074-8feb-81a508041cbe
    type: regular
    task:
      id: ade9b90c-9859-4074-8feb-81a508041cbe
      version: -1
      name: Set Mirroring fields
      description: Change the properties of an incident.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      dbotMirrorDirection:
        complex:
          root: incident.labels
          accessor: mirror_direction
      dbotMirrorId:
        complex:
          root: incident.labels
          accessor: id
      dbotMirrorInstance:
        complex:
          root: incident.labels
          accessor: mirror_instance
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 4cf02609-998b-45a4-874e-5b52d440c693
    type: title
    task:
      id: 4cf02609-998b-45a4-874e-5b52d440c693
      version: -1
      name: Done
      description: end.
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 375,
        "width": 380,
        "x": 450,
        "y": 400
      }
    }
  }
inputs:
- key: IncidentID
  value: {}
  required: false
  description: SentinelOne Incident ID to mirror.
  playbookInputQuery: null
- key: MirrorInstanceName
  value: {}
  required: false
  description: Set the mirror instance name to enable mirroring with SentinelOne.
  playbookInputQuery: null
- key: MirrorDirection
  value:
    simple: Both
  required: false
  description: "Set the mirror direction, should be one of the following: \n1. In\n2.
    Out\n3. Both"
  playbookInputQuery: null
outputs: []
tests:
 -  No tests
fromversion: 6.0.0