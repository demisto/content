commonfields:
  id: IAMInstancesList
  version: -1
name: IAMInstancesList
script: |-
  from operator import itemgetter

  iam_brands_with_non_iam_category = ['Active Directory Query v2']

  def get_state(state):
      if state == 'active':
          return 'Enabled'
      return 'Disabled'


  all_instances = demisto.getModules()
  instances = []
  for instance_name, details in all_instances.items():
      if (details.get('category') == 'Identity and Access Management' or details.get('brand') in iam_brands_with_non_iam_category) and details.get('state') == 'active':
          details['name'] = instance_name
          instances.append({
              "Instance Name": instance_name,
              "Brand": details.get('brand')
          })

  instances = sorted(instances, key=itemgetter('Brand'))

  output = {
      'data': instances,
      'total': len(instances)
  }

  return_outputs(json.dumps(output))
type: python
comment: Returns a table widget type of active IAM integration instances.
tags:
- widget
- IAM
enabled: true
scripttarget: 0
subtype: python3
runonce: false
dockerimage: demisto/python3:3.10.12.68300
runas: DBotWeakRole
tests:
- No tests (auto formatted)
fromversion: 5.0.0
