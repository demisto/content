id: Fetch Incidents Test
description: ''
fromversion: 6.5.0
version: -1
name: Fetch Incidents Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: b21bfe86-08a4-4079-8ca6-0ccfb3c00c68
    type: start
    task:
      id: b21bfe86-08a4-4079-8ca6-0ccfb3c00c68
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 635bd945-58f1-4cbe-85c9-66364036b155
    type: condition
    task:
      id: 635bd945-58f1-4cbe-85c9-66364036b155
      description: ''
      version: -1
      name: Check If Incidents exist
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "20"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isTrue
          left:
            value:
              simple: IncidentsCheck.ConditionMet
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: ed479f11-0b27-4777-87ca-b717ea2b796c
    type: regular
    task:
      id: ed479f11-0b27-4777-87ca-b717ea2b796c
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      all:
        simple: "no"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: ea9251c7-0bcd-4933-8890-fafc317ddbd0
    type: title
    task:
      id: ea9251c7-0bcd-4933-8890-fafc317ddbd0
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 3345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: df1a8229-c1ef-481e-8344-aa939c240fbf
    type: regular
    task:
      id: df1a8229-c1ef-481e-8344-aa939c240fbf
      version: -1
      name: Check If Fields Exist
      description: Receive fields and context. Verifies that these field exists in context.
      scriptName: VerifyObjectFieldsList
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      fields_to_search:
        simple: ${searchField}
      object:
        simple: ${foundIncidents}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 1987f07a-3be5-4768-8c20-58ab92ab7987
    type: condition
    task:    
      id: 1987f07a-3be5-4768-8c20-58ab92ab7987
      description: ''
      version: -1
      name: Do all the indicator fields exist?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "23"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isTrue
          left:
            value:
              simple: CheckIfFieldsExists.FieldsExists
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 2fd62184-1bd3-4a6d-873e-72714b3a53fc
    type: playbook
    task:
      id: 2fd62184-1bd3-4a6d-873e-72714b3a53fc
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      AdditionalPollingCommandArgNames:
        simple: size
      AdditionalPollingCommandArgValues:
        simple: "1"
      Ids:
        simple: ${searchQuery}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: query
      PollingCommandName:
        simple: VerifyEnoughIncidents
      Timeout:
        simple: "5"
      dt:
        simple: IncidentsCheck(val.ConditionMet==false).Query
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1945
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: e9611b2a-e76c-41f8-8a84-6cf937573006
    type: regular
    task:
      id: e9611b2a-e76c-41f8-8a84-6cf937573006
      version: -1
      name: VerifyIntegrationHealth
      description: Heath check for integration
      scriptName: VerifyIntegrationHealth
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      integration_name:
        simple: ${sourceBrand}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 11d17f24-6198-4d17-84aa-2e0f702f66ad
    type: condition
    task:
      id: 11d17f24-6198-4d17-84aa-2e0f702f66ad
      description: ''
      version: -1
      name: Check Health status
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isTrue
          left:
            value:
              simple: IntegrationHealth.isHealthy
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: ee099d71-1c80-4925-8264-3d011f8dc0e3
    type: regular
    task:
      id: ee099d71-1c80-4925-8264-3d011f8dc0e3
      version: -1
      name: Set Incidents Search Query
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      key:
        simple: searchQuery
      value:
        simple: sourceInstance:${Instances.instanceName}*
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: dd2b5e12-1d3d-487c-810f-f8d9695a857a
    type: regular
    task:
      id: dd2b5e12-1d3d-487c-810f-f8d9695a857a
      version: -1
      name: SearchIncidentsV2
      description: Searches Demisto incidents
      scriptName: SearchIncidentsV2
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      extend-context:
        simple: Incidents=
      query:
        simple: ${searchQuery}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "21":
    id: "21"
    taskid: e277376f-a44c-4f2d-843d-d7f0cee176fc
    type: regular
    task:
      id: e277376f-a44c-4f2d-843d-d7f0cee176fc
      version: -1
      name: VerifyEnoughIncidents
      description: Returns whether there are enough incidents in the system.
      scriptName: VerifyEnoughIncidents
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      query:
        simple: ${searchQuery}
      size:
        simple: "1"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1595
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "22":
    id: "22"
    taskid: b2cf2ada-d2c1-4229-8f48-cd76625eacaa
    type: condition
    task:
      id: b2cf2ada-d2c1-4229-8f48-cd76625eacaa
      description: ''
      version: -1
      name: Check If Incidents exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "23"
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: foundIncidents
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2295
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "23":
    id: "23"
    taskid: 3106db13-594a-42d7-8e7c-6b60dd72b0cb
    type: playbook
    task:
      id: 3106db13-594a-42d7-8e7c-6b60dd72b0cb
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      Ids:
        simple: ${sourceBrand}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: integration_name
      PollingCommandName:
        simple: VerifyIntegrationHealth
      Timeout:
        simple: "10"
      dt:
        simple: IntegrationHealth(val.fetchDone==false).integrationName
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "24":
    id: "24"
    taskid: 6d42898a-8eda-48ca-8a39-a98bd52b1a9e
    type: regular
    task:
      id: 6d42898a-8eda-48ca-8a39-a98bd52b1a9e
      version: -1
      name: GetInstanceName
      description: Given an integration name, returns the instance name.
      scriptName: GetInstanceName
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      integration_name:
        simple: ${sourceBrand}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "25":
    id: "25"
    taskid: 68256294-ada1-42f1-8255-09265fc4b02a
    type: condition
    task:
      id: 68256294-ada1-42f1-8255-09265fc4b02a
      description: ''
      version: -1
      name: Instance name should not contain spaces.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "19"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: notContainsString
          left:
            value:
              simple: Instances.instanceName
            iscontext: true
          right:
            value:
              simple: ' '
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: 291a7880-8c5a-4c4f-81b3-7bc086910d16
    type: condition
    task:
      id: 291a7880-8c5a-4c4f-81b3-7bc086910d16
      description: ''
      version: -1
      name: Check if there are playbook inputs
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "27"
      "yes":
      - "30"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.sourcebrand
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.searchfield
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "27":
    id: "27"
    taskid: 610da9f3-3221-4399-8ebd-c90f306399d5
    type: regular
    task:
      id: 610da9f3-3221-4399-8ebd-c90f306399d5
      version: -1
      name: Get Incident Fields to search
      description: send HTTP GET requests
      script: '|||demisto-api-get'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      extend-context:
        simple: serverConfig=
      uri:
        simple: /system/config
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 275,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "28":
    id: "28"
    taskid: 6d42fd0f-54e3-48e6-8f9b-b750e01a9534
    type: regular
    task:
      id: 6d42fd0f-54e3-48e6-8f9b-b750e01a9534
      version: -1
      name: Set sourcebrand
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      key:
        simple: sourceBrand
      value:
        simple: ${serverConfig.response.sysConf.sourcebrand}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 275,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: a19fc491-3d60-4ad4-8132-bdbd8bcff6f6
    type: regular
    task:
      id: a19fc491-3d60-4ad4-8132-bdbd8bcff6f6
      version: -1
      name: Set searchField
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      key:
        simple: searchField
      value:
        simple: ${serverConfig.response.sysConf.searchfield}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 275,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "30":
    id: "30"
    taskid: 384d866a-c887-4f83-82b7-cc4f25b80cf2
    type: regular
    task:
      id: 384d866a-c887-4f83-82b7-cc4f25b80cf2
      version: -1
      name: Set searchField
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      key:
        simple: searchField
      value:
        simple: ${inputs.searchfield}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -180,
          "y": 660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "31":
    id: "31"
    taskid: 9792295d-ac29-4ed7-858b-3dd860979d67
    type: regular
    task:
      id: 9792295d-ac29-4ed7-858b-3dd860979d67
      version: -1
      name: Set sourcebrand
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      key:
        simple: sourceBrand
      value:
        simple: ${inputs.sourcebrand}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -180,
          "y": 835
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3360,
        "width": 835,
        "x": -180,
        "y": 50
      }
    }
  }
inputs:
- key: sourcebrand
  value:
    simple: Panorama
  required: false
  description: Id of Integration that we want to test.
  playbookInputQuery:
- key: searchfield
  value:
    simple: CustomFields.destinationport
  required: false
  description: Comma separated list of fields to confirm that exists in all incidents.
  playbookInputQuery:
outputs: []
tests:
- PAN-OS URL Filtering enrichment - Test
- PAN-OS - Block IP and URL - External Dynamic List v2 Test
- PAN-OS Create Or Edit Rule Test
- PAN-OS EDL Setup v3 Test
- PAN-OS Query Logs For Indicators Test
- PAN-OS DAG Configuration Test
