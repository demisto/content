id: PAN-OS DAG Configuration Test
version: -1
name: PAN-OS DAG Configuration Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: c8f1b369-9ce7-46b3-895e-c0926762f118
    type: start
    task:
      id: c8f1b369-9ce7-46b3-895e-c0926762f118
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 3f22ab71-1b4b-4831-8f23-af5a0e9982e8
    type: regular
    task:
      id: 3f22ab71-1b4b-4831-8f23-af5a0e9982e8
      version: -1
      name: Clear Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: eb4615d0-ed33-4683-8e4b-748b2fd13e69
    type: regular
    task:
      id: eb4615d0-ed33-4683-8e4b-748b2fd13e69
      version: -1
      name: Unregister IP from tag
      description: Unregisters IP addresses from a tag
      script: '|||panorama-unregister-ip-tag'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      IPs:
        simple: ${inputs.ip}
      tag:
        simple: ${inputs.tag_name}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 2e503cf3-d0da-480f-872c-4c103e883c74
    type: regular
    task:
      id: 2e503cf3-d0da-480f-872c-4c103e883c74
      version: -1
      name: Delete address group
      description: Deletes an address group
      script: '|||panorama-delete-address-group'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      name:
        simple: ${inputs.address_group}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 725
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: 18c1e60a-cf71-4825-8a61-dbd9ff7d8995
    type: regular
    task:
      id: 18c1e60a-cf71-4825-8a61-dbd9ff7d8995
      version: -1
      name: Get address group
      description: Get details for the specified address group
      script: '|||panorama-get-address-group'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      name:
        simple: ${inputs.address_group}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: 4f308b30-e348-4796-87ea-4ceeda248c45
    type: condition
    task:
      id: 4f308b30-e348-4796-87ea-4ceeda248c45
      version: -1
      name: check if address group does not exist
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: notContainsGeneral
          left:
            value:
              simple: Panorama.AddressGroups.Name
            iscontext: true
          right:
            value:
              simple: inputs.address_group
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1405
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 906d9486-da54-4e8f-888e-23432c66cad9
    type: title
    task:
      id: 906d9486-da54-4e8f-888e-23432c66cad9
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 3080
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "10":
    id: "10"
    taskid: 31adb11f-ccdb-4eae-8e8d-15a65cd6ab32
    type: regular
    task:
      id: 31adb11f-ccdb-4eae-8e8d-15a65cd6ab32
      version: -1
      name: Clear Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: eb3cbd72-c119-4c6e-8db0-58e1da1a8cb8
    type: regular
    task:
      id: eb3cbd72-c119-4c6e-8db0-58e1da1a8cb8
      version: -1
      name: Get address group
      description: Get details for the specified address group
      script: '|||panorama-get-address-group'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      name:
        simple: ${inputs.address_group}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "12":
    id: "12"
    taskid: 7cd5849f-8c62-45ef-8257-807ad8499006
    type: condition
    task:
      id: 7cd5849f-8c62-45ef-8257-807ad8499006
      version: -1
      name: Check if address group exist
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: Panorama.AddressGroups.Name
            iscontext: true
          right:
            value:
              simple: inputs.address_group
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: Panorama.AddressGroups.Match
            iscontext: true
          right:
            value:
              simple: inputs.tag_name
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2495
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "13":
    id: "13"
    taskid: 57d3f381-da8c-46ba-87c3-c284e2f44d94
    type: regular
    task:
      id: 57d3f381-da8c-46ba-87c3-c284e2f44d94
      version: -1
      name: Get Rules
      description: Returns a list of predefined Security Rules.
      script: '|||panorama-list-rules'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      pre_post:
        simple: pre-rulebase
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1600
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "14":
    id: "14"
    taskid: e3e9df9d-1fcf-4f43-85d5-72c367ad4315
    type: condition
    task:
      id: e3e9df9d-1fcf-4f43-85d5-72c367ad4315
      version: -1
      name: Check the rule does not exist
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "10"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: notContainsGeneral
          left:
            value:
              simple: Panorama.SecurityRule.Name
            iscontext: true
          right:
            value:
              simple: inputs.rule_name
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: 8cf5f7c3-b2ef-4914-8b91-4971a58d5eaf
    type: regular
    task:
      id: 8cf5f7c3-b2ef-4914-8b91-4971a58d5eaf
      version: -1
      name: Get Rules
      description: Returns a list of predefined Security Rules.
      script: '|||panorama-list-rules'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      pre_post:
        simple: pre-rulebase
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 726770ec-bd4b-4db7-89c7-770f6378174c
    type: condition
    task:
      id: 726770ec-bd4b-4db7-89c7-770f6378174c
      version: -1
      name: Check if the rule defined
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "9"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsString
          left:
            value:
              simple: Panorama.SecurityRule.Name
            iscontext: true
          right:
            value:
              simple: inputs.rule_name
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2855
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 2054b0e1-acf2-48af-8e4e-f5bb287d4991
    type: regular
    task:
      id: 2054b0e1-acf2-48af-8e4e-f5bb287d4991
      version: -1
      name: delete rule
      description: Deletes a policy rule
      script: '|||panorama-delete-rule'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      device-group: {}
      pre_post:
        simple: pre-rulebase
      rulename:
        simple: ${inputs.rule_name}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: cd9e7821-44f9-481b-8871-d4d4c3c897e7
    type: playbook
    task:
      id: cd9e7821-44f9-481b-8871-d4d4c3c897e7
      version: -1
      name: PAN-OS Commit Configuration
      playbookName: PAN-OS Commit Configuration
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 900
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "20":
    id: "20"
    taskid: 8e0e584d-eff0-4b41-88e6-f70febd2e0a0
    type: regular
    task:
      id: 8e0e584d-eff0-4b41-88e6-f70febd2e0a0
      version: -1
      name: Clear Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "23":
    id: "23"
    taskid: 3aff2f5d-840c-4afb-845b-2641a3472038
    type: playbook
    task:
      id: 3aff2f5d-840c-4afb-845b-2641a3472038
      version: -1
      name: PAN-OS DAG Configuration
      playbookName: PAN-OS DAG Configuration
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      action-type:
        simple: drop
      address_group_name:
        complex:
          root: inputs.address_group
      auto_commit:
        simple: "Yes"
      device-group: {}
      inbound-or-outbound-rule:
        simple: outbound
      ip_list:
        complex:
          root: inputs.ip
      log-forwarding-object-name: {}
      pre-post-rulebase:
        simple: pre-rulebase
      relative-rule-name: {}
      rule-position:
        simple: bottom
      rule_name:
        complex:
          root: inputs.rule_name
      tag_name:
        complex:
          root: inputs.tag_name
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3095,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: tag_name
  value:
    simple: dag_test_tag2
  required: false
  description: ""
- key: rule_name
  value:
    simple: dag_test_rule2
  required: false
  description: ""
- key: address_group
  value:
    simple: dag_test_ag2
  required: false
  description: ""
- key: ip
  value:
    simple: 7.7.7.7
  required: false
  description: ""
outputs: []
