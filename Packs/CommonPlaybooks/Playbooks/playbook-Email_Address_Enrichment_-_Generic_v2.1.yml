id: Email Address Enrichment - Generic v2.1
version: -1
fromversion: 5.0.0
name: Email Address Enrichment - Generic v2.1
description: |-
  Enrich email addresses.
  - Get information from Active Directory for internal addresses
  - Get the domain-squatting reputation for external addresses
  - Email address reputation using !email command.
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: 22a55a7c-c942-4d12-84fb-76bce3695b83
    type: start
    task:
      id: 22a55a7c-c942-4d12-84fb-76bce3695b83
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '5'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 497.5,
          "y": 120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '4':
    id: '4'
    taskid: 8970ccc7-3ca4-4f5a-879e-f9d0c07c3e5b
    type: title
    task:
      id: 8970ccc7-3ca4-4f5a-879e-f9d0c07c3e5b
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    scriptarguments:
      query:
        simple: entry.contents:${Account.Username}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 497.5,
          "y": 1310
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '5':
    id: '5'
    taskid: dce4e3b8-0986-4a8c-8436-0602977d9f8c
    type: condition
    task:
      id: dce4e3b8-0986-4a8c-8436-0602977d9f8c
      version: -1
      name: Are there email addresses to check?
      description: Determines whether the playbook's input contains at least one email address.
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '20'
      'yes':
      - '9'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.Email
            iscontext: true
    view: |-
      {
        "position": {
          "x": 497.5,
          "y": 250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '9':
    id: '9'
    taskid: 41284223-6f2e-44de-82a4-c8e096a3cdc4
    type: regular
    task:
      id: 41284223-6f2e-44de-82a4-c8e096a3cdc4
      version: -1
      name: Classify email addresses as internal or external
      description: Adds a NetworkType attribute to all email addresses. The NetworkType attribute determines whether the email address is an internal or external email address, according to the domains that were passed as arguments to this playbook.
      scriptName: IsEmailAddressInternal
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '13'
      - '14'
    scriptarguments:
      domain:
        complex:
          root: inputs.InternalDomains
          transformers:
          - operator: uniq
      email:
        complex:
          root: inputs.Email
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: inputs.Email
                iscontext: true
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 497.5,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '10':
    id: '10'
    taskid: 1a9686bb-e22f-46a7-8f5e-adf7acffdf3b
    type: title
    task:
      id: 1a9686bb-e22f-46a7-8f5e-adf7acffdf3b
      version: -1
      name: Internal
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '17'
      - "23"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 22.5,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '11':
    id: '11'
    taskid: 7874c1a7-0bae-43cc-8f13-9234c337f491
    type: title
    task:
      id: 7874c1a7-0bae-43cc-8f13-9234c337f491
      version: -1
      name: External
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '18'
      - "21"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 950,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '12':
    id: '12'
    taskid: e3b298d5-cb30-4440-803e-596597adcc10
    type: regular
    task:
      id: e3b298d5-cb30-4440-803e-596597adcc10
      version: -1
      name: Get email address info from Active Directory
      description: Uses Active Directory to get user information for internal email addresses.
      script: '|||ad-get-user'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '4'
    scriptarguments:
      email:
        complex:
          root: Account.Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Email.NetworkType
                iscontext: true
              right:
                value:
                  simple: Internal
              ignorecase: true
          accessor: Address
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 222.5,
          "y": 1135
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '13':
    id: '13'
    taskid: 4dbbbdb8-0102-445f-8fc3-d3ed70c32aa3
    type: condition
    task:
      id: 4dbbbdb8-0102-445f-8fc3-d3ed70c32aa3
      version: -1
      name: Are there any external email addresses?
      description: Checks whether there are email addresses with a NetworkType attribute value of "External".
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '4'
      'yes':
      - '11'
    scriptarguments:
      value:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Email.NetworkType
                iscontext: true
              right:
                value:
                  simple: External
              ignorecase: true
          accessor: Email
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 710.5,
          "y": 620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '14':
    id: '14'
    taskid: 4bb4197a-cd13-41a6-8882-b8e6c51312c3
    type: condition
    task:
      id: 4bb4197a-cd13-41a6-8882-b8e6c51312c3
      version: -1
      name: Are there any internal email addresses?
      description: Checks whether there are email addresses with a NetworkType attribute value of "Internal".
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '4'
      'yes':
      - '10'
    scriptarguments:
      value:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Email.NetworkType
                iscontext: true
              right:
                value:
                  simple: Internal
              ignorecase: true
          accessor: Email
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 292.5,
          "y": 620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '15':
    id: '15'
    taskid: 9b9a97f6-c855-4d4e-8047-f0306f006a5f
    type: regular
    task:
      id: 9b9a97f6-c855-4d4e-8047-f0306f006a5f
      version: -1
      name: Check email addresses for domain-squatting
      description: Checks if an email address's domain is trying to squat other domains using Levenshtein distance algorithm.
      scriptName: EmailDomainSquattingReputation
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '4'
    scriptarguments:
      domain:
        complex:
          root: inputs.Domain
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: inputs.Domain
                iscontext: true
          transformers:
          - operator: uniq
      email:
        complex:
          root: Account
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: Account.Email.Address
                iscontext: true
          accessor: Email
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: External
              field:
                value:
                  simple: NetworkType
              getField:
                value:
                  simple: Address
              stringify:
                value:
                  simple: "false"
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 750.5,
          "y": 1135
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '17':
    id: '17'
    taskid: bc59d675-c18d-44ac-878f-bdc8dc7c578e
    type: condition
    task:
      id: bc59d675-c18d-44ac-878f-bdc8dc7c578e
      version: -1
      name: Is Active Directory Query v2 enabled?
      description: Checks if there's an active instance of the Active Directory Query v2 integration enabled.
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '4'
      'yes':
      - '12'
    scriptarguments:
      value:
        complex:
          root: modules
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: modules.brand
                iscontext: true
              right:
                value:
                  simple: Active Directory Query v2
          - - operator: isEqualString
              left:
                value:
                  simple: modules.state
                iscontext: true
              right:
                value:
                  simple: active
          accessor: brand
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 222.5,
          "y": 930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '18':
    id: '18'
    taskid: 82034885-dcb2-4c4a-8fa7-1c1514c27e46
    type: condition
    task:
      id: 82034885-dcb2-4c4a-8fa7-1c1514c27e46
      version: -1
      name: Is there a domain list input?
      description: Checks if there is at least one domain to check for domain-squatting.
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '4'
      'yes':
      - '15'
    scriptarguments:
      value:
        complex:
          root: inputs.Domain
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: inputs.Domain
                iscontext: true
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 750.5,
          "y": 930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  '20':
    id: '20'
    taskid: 358de9fa-efe5-47c2-801f-7c85db0d408b
    type: title
    task:
      id: 358de9fa-efe5-47c2-801f-7c85db0d408b
      version: -1
      name: No Email Addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '4'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -400,
          "y": 465
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
    continueonerrortype: ""
  "21":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                root: inputs.UseReputationCommand
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "22"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 047c804f-cc74-4eb3-8ea5-7776e5827088
      iscommand: false
      name: Should use !email command?
      description: Check if should run email address reputation command
      type: condition
      version: -1
    taskid: 047c804f-cc74-4eb3-8ea5-7776e5827088
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1150,
          "y": 930
        }
      }
  "22":
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    scriptarguments:
      email:
        complex:
          root: Account.Email
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Email.NetworkType
                iscontext: true
              right:
                value:
                  simple: External
              ignorecase: true
          accessor: Address
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: true
    task:
      brand: ""
      description: Checks if an email address was compromised.
      id: 156ef5ee-88a6-4fd7-8636-b6e9c678f5e3
      iscommand: true
      name: Check Reputation
      script: '|||email'
      type: regular
      version: -1
    taskid: 156ef5ee-88a6-4fd7-8636-b6e9c678f5e3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1160,
          "y": 1135
        }
      }
  "23":
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "24"
    note: false
    quietmode: 0
    scriptarguments:
      brandname:
        simple: EWS v2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns 'yes' if integration brand is available. Otherwise returns 'no'.
      id: 766c0f6c-feff-49af-8bfd-62574133e61c
      iscommand: false
      name: Is EWS v2 enabled?
      scriptName: IsIntegrationAvailable
      type: condition
      version: -1
    taskid: 766c0f6c-feff-49af-8bfd-62574133e61c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -180,
          "y": 930
        }
      }
  "24":
    continueonerrortype: ""
    fieldMapping:
    - incidentfield: Additional Email Addresses
      output:
        simple: ${EWS.ResolvedNames.email_address}
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    scriptarguments:
      full-contact-data:
        simple: "False"
      identifier:
        complex:
          accessor: Address
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: Account.Email.NetworkType
              operator: isEqualString
              right:
                value:
                  simple: Internal
          root: Account.Email
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: true
    task:
      brand: ""
      description: This operation verifies aliases and matches display names to the correct mailbox user. It handles one ambiguous name at a time. If there are multiple potential matches, all will be returned, but limited to a maximum of 100 candidates.
      id: d10b47f1-37e1-4354-870b-0ac7b022d7d3
      iscommand: true
      name: Get full contact info
      script: '|||ews-resolve-name'
      type: regular
      version: -1
    taskid: d10b47f1-37e1-4354-870b-0ac7b022d7d3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -180,
          "y": 1135
        }
      }
view: |-
  {
    "linkLabelsPosition": {
      "13_11_yes": 0.64,
      "13_4_#default#": 0.25,
      "14_10_yes": 0.65,
      "14_4_#default#": 0.17,
      "17_4_#default#": 0.55,
      "18_4_#default#": 0.25,
      "21_4_#default#": 0.13,
      "5_20_#default#": 0.35
    },
    "paper": {
      "dimensions": {
        "height": 1255,
        "width": 1940,
        "x": -400,
        "y": 120
      }
    }
  }
inputs:
- key: InternalDomains
  value: {}
  required: false
  description: A CSV list of internal domains. The list will be used to determine whether an email address is internal or external.
  playbookInputQuery:
- key: Email
  value:
    complex:
      root: Account
      accessor: Email.Address
      transformers:
      - operator: uniq
  required: false
  description: The email addresses to enrich.
  playbookInputQuery:
- key: Domain
  value: {}
  required: false
  description: The domains associated with the incident. These domains will be checked for domain-squatting.
  playbookInputQuery:
- description: |-
    Define if you would like to use the !email command.
    Note: This input should be used whenever there is no auto-extract enabled in the investigation flow.
    Possible values: True / False.
    The default value is false.
  key: UseReputationCommand
  playbookInputQuery:
  required: true
  value:
    simple: "False"
outputs:
- contextPath: Account
  description: The Account object.
  type: unknown
- contextPath: Account.Email.NetworkType
  description: The email account NetworkType (Internal/External).
  type: string
- contextPath: Account.Email.Distance.Domain
  description: The compared domain.
  type: string
- contextPath: Account.Email.Distance.Value
  description: 'The distance between the email domain and the compared domain. '
  type: number
- contextPath: DBotScore
  description: The DBotScore object.
  type: unknown
- contextPath: Account.Email.Username
  description: The Email account username.
  type: string
- contextPath: Account.Email.Domain
  description: The Email account domain.
  type: string
- contextPath: ActiveDirectory.Users.dn
  description: The user distinguished name.
- contextPath: ActiveDirectory.Users.displayName
  description: The user display name.
- contextPath: ActiveDirectory.Users.name
  description: The user common name.
- contextPath: ActiveDirectory.Users.sAMAccountName
  description: The user sAMAccountName.
- contextPath: ActiveDirectory.Users.userAccountControl
  description: The user account control flag.
- contextPath: ActiveDirectory.Users.manager
  description: The manager of the user.
- contextPath: ActiveDirectory.Users.memberOf
  description: Groups in which the user is a member.
- contextPath: ActiveDirectory.Users.userAccountControlFields.SCRIPT
  description: Whether the login script is run. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.ACCOUNTDISABLE
  description: Whether the user account is disabled. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.HOMEDIR_REQUIRED
  description: Whether the home folder is required. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.LOCKOUT
  description: Whether the user is locked out. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.PASSWD_NOTREQD
  description: Whether the password is required. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.PASSWD_CANT_CHANGE
  description: Whether the user can change the password. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.ENCRYPTED_TEXT_PWD_ALLOWED
  description: Whether the user can send an encrypted password. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.TEMP_DUPLICATE_ACCOUNT
  description: Whether this is an account for users whose primary account is in another domain. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.NORMAL_ACCOUNT
  description: Whether this is a default account type that represents a typical user. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.INTERDOMAIN_TRUST_ACCOUNT
  description: Whether the account is permitted to trust a system domain that trusts other domains. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.WORKSTATION_TRUST_ACCOUNT
  description: Whether this is a computer account for a computer running Microsoft Windows NT 4.0 Workstation, Microsoft Windows NT 4.0 Server, Microsoft Windows 2000 Professional, or Windows 2000 Server and is a member of this domain.
- contextPath: ActiveDirectory.Users.userAccountControlFields.SERVER_TRUST_ACCOUNT
  description: Whether this is a computer account for a domain controller that is a member of this domain. Works for *Windows Server 2012 R2*.
- contextPath: ActiveDirectory.Users.userAccountControlFields.DONT_EXPIRE_PASSWORD
  description: Whether to never expire the password on the account.
- contextPath: ActiveDirectory.Users.userAccountControlFields.MNS_LOGON_ACCOUNT
  description: Whether this is an MNS login account.
- contextPath: ActiveDirectory.Users.userAccountControlFields.SMARTCARD_REQUIRED
  description: Whether to force the user to log in by using a smart card.
- contextPath: ActiveDirectory.Users.userAccountControlFields.TRUSTED_FOR_DELEGATION
  description: Whether the service account (the user or computer account) under which a service runs is trusted for Kerberos delegation.
- contextPath: ActiveDirectory.Users.userAccountControlFields.NOT_DELEGATED
  description: Whether the security context of the user isn't delegated to a service even if the service account is set as trusted for Kerberos delegation.
- contextPath: ActiveDirectory.Users.userAccountControlFields.USE_DES_KEY_ONLY
  description: Whether to restrict this principal to use only Data Encryption Standard (DES) encryption types for keys.
- contextPath: ActiveDirectory.Users.userAccountControlFields.DONT_REQ_PREAUTH
  description: Whether this account require Kerberos pre-authentication for logging on.
- contextPath: ActiveDirectory.Users.userAccountControlFields.PASSWORD_EXPIRED
  description: Whether the user password expired.
- contextPath: ActiveDirectory.Users.userAccountControlFields.TRUSTED_TO_AUTH_FOR_DELEGATION
  description: Whether the account is enabled for delegation.
- contextPath: ActiveDirectory.Users.userAccountControlFields.PARTIAL_SECRETS_ACCOUNT
  description: Whether the account is a read-only domain controller (RODC).
- contextPath: ActiveDirectory.UsersPageCookie
  description: An opaque string received in a paged search, used for requesting subsequent entries.
- contextPath: Account.DisplayName
  description: The user display name.
- contextPath: Account.Groups
  description: Groups for which the user is a member.
- contextPath: Account.Manager
  description: The user manager.
- contextPath: Account.ID
  description: The user distinguished name.
- contextPath: Account.Username
  description: The user samAccountName.
- contextPath: Account.Email
  description: The user email address.
- contextPath: ActiveDirectory.Users.mail
  description: The user email address.
- contextPath: Account.Email.Address
  description: The Email account full address.
  type: string
- contextPath: Account.Email.Distance
  description: The email address distance compare to the domains in query.
  type: number
- contextPath: DBotScore.Indicator
  description: The Indicator.
  type: string
- contextPath: DBotScore.Type
  description: The Indicator Type.
  type: string
- contextPath: DBotScore.Vendor
  description: The DBot score vendor.
  type: string
- contextPath: DBotScore.Score
  description: The DBot score.
  type: number
- contextPath: DBotScore.Reliability
  description: The actual score.
- contextPath: Email.Relationships.EntityA
  description: The source of the relationship.
- contextPath: Email.Relationships.EntityB
  description: The destination of the relationship.
- contextPath: Email.Relationships.Relationship
  description: The name of the relationship.
- contextPath: Email.Relationships.EntityAType
  description: The type of the source of the relationship.
- contextPath: Email.Relationships.EntityBType
  description: The type of the destination of the relationship.
- contextPath: EWS.ResolvedNames
  type: unknown
  description: EWS resolved name primary key output.
- contextPath: EWS.ResolvedNames.email_address
  description: The primary SMTP address of a mailbox user.
- contextPath: EWS.ResolvedNames.mailbox_type
  description: The type of mailbox that is represented by the email address.
- contextPath: EWS.ResolvedNames.name
  description: The name of a mailbox user.
- contextPath: EWS.ResolvedNames.routing_type
  description: The address type for the mailbox.
tests:
- Email Address Enrichment - Generic v2.1 - Test
marketplaces:
- xsoar
- marketplacev2
