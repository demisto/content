commonfields:
  id: c2315777-c63f-44ac-82f6-9b5395dd96d7
  version: 5
name: automationwitherrors
script: |+
  """This is to test mypy catches the error on line 40 where 'Basescript doesnt have a closing quote,
  and a validation is caught that docker is not set.
  """

  from typing import Dict, Any
  import traceback


  ''' STANDALONE FUNCTION '''


  # TODO: REMOVE the following dummy function:
  def basescript_dummy(dummy: str) -> Dict[str, str]:
      """Returns a simple python dict with the information provided
      in the input (dummy).
      :type dummy: ``str``
      :param dummy: string to add in the dummy dict that is returned
      :return: dict as {"dummy": dummy}
      :rtype: ``str``
      """

      return {"dummy": dummy}
  # TODO: ADD HERE THE FUNCTIONS TO INTERACT WITH YOUR PRODUCT API


  ''' COMMAND FUNCTION '''


  # TODO: REMOVE the following dummy command function
  def basescript_dummy_command(args: Dict[str, Any]) -> CommandResults:

      dummy = args.get('dummy', 'example dummy')

      if not dummy:
          raise ValueError('dummy not specified')

      # Call the standalone function and get the raw response
      result = basescript_dummy(dummy)

      return CommandResults(
          outputs_prefix='BaseScript,
          outputs_key_field='',
          outputs=result,
      )
  # TODO: ADD additional command functions that translate XSOAR inputs/outputs


  ''' MAIN FUNCTION '''


  def main():
      try:
          hello =  'hello'
          # TODO: replace the invoked command function with yours
          return_results(basescript_dummy_command(demisto.args()))
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

type: python
tags: []
enabled: true
scripttarget: 0
subtype: python3
pswd: ""
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}
