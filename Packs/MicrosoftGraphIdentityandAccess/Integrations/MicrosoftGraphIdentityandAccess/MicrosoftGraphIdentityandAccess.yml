category: Authentication & Identity Management
sectionOrder:
- Connect
- Collect
commonfields:
  id: MicrosoftGraphIdentityandAccess
  version: -1
configuration:
- defaultvalue: 597c0375-766f-4e6d-ad2a-f48117044ac5
  display: Application ID (Client ID for Client credentials mode)
  name: app_id
  type: 0
  section: Connect
  required: false
- display: Tenant ID (required for Client Credentials mode)
  name: tenant_id
  type: 0
  section: Connect
  required: false
- displaypassword: Client Secret (required for Client Credentials mode)
  name: credentials
  type: 9
  additionalinfo: "Client Secret. Required for Client Credentials mode)"
  hiddenusername: true
  section: Connect
  required: false
- additionalinfo: Used for certificate authentication. As appears in the "Certificates & secrets" page of the app.
  display: Certificate Thumbprint
  name: creds_certificate
  type: 9
  displaypassword: Private Key
  section: Connect
  advanced: true
  required: false
- additionalinfo: Relevant only if the integration is running on Azure VM. If selected, authenticates based on the value provided for the Azure Managed Identities Client ID field. If no value is provided for the Azure Managed Identities Client ID field, authenticates based on the System Assigned Managed Identity. For additional information, see the Help tab.
  display: Use Azure Managed Identities
  name: use_managed_identities
  type: 8
  section: Connect
  required: false
- additionalinfo: The Managed Identities client ID for authentication - relevant only if the integration is running on Azure VM.
  displaypassword: Azure Managed Identities Client ID
  name: managed_identities_client_id
  hiddenusername: true
  type: 9
  section: Connect
  required: false
- name: first_fetch
  display: First Fetch Time Interval
  defaultvalue: 1 days
  type: 0
  additionalinfo: The time range to consider for the initial data fetch in the format <number> <unit>. For example, 1 hour, 2 hours, 6 hours, 12 hours, 24 hours, 48 hours, etc.
  section: Collect
  required: false
- defaultvalue: '50'
  display: Max fetch interval
  additionalinfo: The maximum number of incidents per request from the Azure Active Directory. Default is 50.
  name: max_fetch
  type: 0
  section: Collect
  required: false
- display: Fetch query
  name: fetch_filter_expression
  type: 0
  section: Collect
  advanced: true
  required: false
- defaultvalue: https://login.microsoftonline.com
  display: Azure AD endpoint
  name: azure_ad_endpoint
  options:
  - https://login.microsoftonline.com
  - https://login.microsoftonline.us
  - https://login.microsoftonline.de
  - https://login.chinacloudapi.cn
  type: 15
  additionalinfo: Azure AD endpoint associated with a national cloud.
  section: Connect
  advanced: true
  required: false
- display: Incident type
  name: incidentType
  type: 13
  section: Connect
  required: false
- additionalinfo: Use a self-deployed Azure application and authenticate using the Client Credentials flow.
  display: Use Client Credentials Authorization Flow
  name: client_credentials
  type: 8
  section: Connect
  required: false
- name: isFetch
  display: Fetch incidents
  type: 8
  section: Collect
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  section: Connect
  advanced: true
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  section: Connect
  advanced: true
  required: false
description: Use the Azure Active Directory Identity And Access integration to manage roles and members.
display: Azure Active Directory Identity And Access
name: MicrosoftGraphIdentityandAccess
script:
  commands:
  - description: Run this command to start the authorization process and follow the instructions in the command results.
    name: msgraph-identity-auth-start
  - description: |-
      Run this command to complete the authorization process.
      Should be used after running the msgraph-identity-auth-start command.
    name: msgraph-identity-auth-complete
  - description: Run this command if for some reason you need to rerun the authentication process.
    name: msgraph-identity-auth-reset
  - description: Tests connectivity to Microsoft.
    name: msgraph-identity-auth-test
  - description: Lists the roles in the directory.
    name: msgraph-identity-directory-roles-list
    arguments:
    - name: limit
      description: Maximum number of results to fetch.
      defaultValue: 10
    outputs:
    - contextPath: MSGraphIdentity.Role.deletedDateTime
      description: The time when a role was deleted. Displays only if a role was deleted.
      type: Date
    - contextPath: MSGraphIdentity.Role.description
      description: The description of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.displayName
      description: The display name of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.id
      description: The unique identifier of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.roleTemplateId
      description: The ID of the directory role template on which the role is based.
      type: String
  - description: Activates a role by its template ID.
    name: msgraph-identity-directory-role-activate
    arguments:
    - name: role_template_id
      description: ID of the role template to activate. Can be retrieved using the msgraph-identity-directory-roles-list command.
      required: true
    outputs:
    - contextPath: MSGraphIdentity.Role.deletedDateTime
      description: The time when the role was deleted. Displays only if the role was deleted.
      type: Date
    - contextPath: MSGraphIdentity.Role.description
      description: The description of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.displayName
      description: The display name of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.id
      description: The unique identifier of the directory role.
      type: String
    - contextPath: MSGraphIdentity.Role.roleTemplateId
      description: The ID of the directory role template on which this role is based.
      type: String
  - description: Gets all members in a role ID.
    name: msgraph-identity-directory-role-members-list
    arguments:
    - name: role_id
      description: The ID of the application for which to get its role members list. Can be retrieved using the msgraph-identity-directory-roles-list command.
      required: true
    - name: limit
      description: The maximum number of members to fetch.
      defaultValue: 10
    outputs:
    - contextPath: MSGraphIdentity.RoleMember.user_id
      description: The unique identifier of the user in the role.
      type: String
    - contextPath: MSGraphIdentity.RoleMember.role_id
      description: The unique identifier of the role specified in the input.
      type: String
  - description: Adds a user to a role.
    name: msgraph-identity-directory-role-member-add
    arguments:
    - name: role_id
      description: The ID of the role to add the user to. Can be retrieved using the msgraph-identity-directory-roles-list command.
      required: true
    - name: user_id
      description: The ID of the user to add to the role. Can be retrieved using the msgraph-identity-directory-role-members-list command.
      required: true
  - description: Removes a user from a role.
    name: msgraph-identity-directory-role-member-remove
    arguments:
    - name: role_id
      description: ID of the role from which to remove the user. Can be retrieved using the msgraph-identity-directory-roles-list command.
      required: true
    - name: user_id
      description: ID of the user to remove from the role. Can be retrieved using the msgraph-identity-directory-role-members-list command.
      required: true
  - description: Retrieve an ip named location by id.
    name: msgraph-identity-ip-named-locations-get
    arguments:
    - name: ip_id
      description: The id of the named ip location to get from the api.
      required: true
    outputs:
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.time_created
      description: The time when an ip named location was created.
      type: Date
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.time_modified
      description: The time when an ip named location was updated.
      type: Date
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.display_name
      description: The display name of the ip named location.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.id
      description: The unique identifier of the ip named location.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.is_trusted
      description: Abollean that taled if the ip named location is a trusted source.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.ip_ranges
      description: List of ip ranges for the ip named location
      type: Array
  - description: Retrieve all ip named locations.
    name: msgraph-identity-ip-named-locations-list
    arguments:
    - name: limit
      description: The limit for results we get from the api.
    - name: page
      description: The page to get the data from.
    - name: odata_query
      description: An odata query to send to the api.
    outputs:
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.ip_named_locations
      description: List of ip named locations.
      type: Array
  - description: Delete an ip named location by id.
    name: msgraph-identity-ip-named-locations-delete
    arguments:
    - name: ip_id
      description: The id of the named ip location to get from the api.
      required: true
  - description: Create an ip named location.
    name: msgraph-identity-ip-named-locations-create
    arguments:
    - name: ips
      description: A list of IP addresses to add to the named location, should be a string with the addresses separated by the delimiter ','.
    - name: is_trusted
      description: Boolean that indicates if the ip can be trusted.
    - name: display_name
      description: The disply name for the named ip location.
    outputs:
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.time_created
      description: The time when an ip named location was created.
      type: Date
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.time_modified
      description: The time when an ip named location was updated.
      type: Date
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.display_name
      description: The display name of the ip named location.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.id
      description: The unique identifier of the ip named location.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.is_trusted
      description: Abollean that taled if the ip named location is a trusted source.
      type: String
    - contextPath: MSGraph.conditionalAccess.namedIpLocations.ip_ranges
      description: List of ip ranges for the ip named location
      type: Array
  - description: update an ip named location by id.
    name: msgraph-identity-ip-named-locations-update
    arguments:
    - name: ip_id
      description: The id of the named ip location to get from the api.
      required: true
    - name: ips
      description: A list of ip addresses to ad to the named location, it should be a string with the addresses separated by the delimiter ','.
    - name: is_trusted
      description: Boolean that indicates if the ip can be trusted.
    - name: display_name
      description: The disply name for the named ip location.
  - description: Retrieve all the detected risks.
    name: msgraph-identity-protection-risks-list
    arguments:
    - name: limit
      description: The limit for results we get from the api.
    - name: odata_query
      description: An odata query to send to the api.
    outputs:
    - contextPath: MSGraph.identityProtection.risks.additionalInfo
      description: dentityProtection.risks.additionalInfo
      type: string
    - contextPath: MSGraph.identityProtection.risks.userPrincipalName
      description: Risky user principal name.
      type: string
    - contextPath: MSGraph.identityProtection.risks.userDisplayName
      description: Risky user display name.
      type: string
    - contextPath: MSGraph.identityProtection.risks.userId
      description: Unique ID of the user.
      type: string
    - contextPath: MSGraph.identityProtection.risks.lastUpdatedDateTime
      description: Date and time that the risk detection was last updated. The DateTimeOffset type represents date and time information using the ISO 8601 format and is always in UTC time.
      type: string
    - contextPath: MSGraph.identityProtection.risks.detectedDateTime
      description: Date and time that the risk was detected. The DateTimeOffset type represents date and time information using the ISO 8601 format and is always in UTC time.
      type: string
    - contextPath: MSGraph.identityProtection.risks.activityDateTime
      description: Date and time that the risky activity occurred. The DateTimeOffset type represents date and time information using the ISO 8601 format and is always in UTC time.
      type: string
    - contextPath: MSGraph.identityProtection.risks.location.state
      description: State of the sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.location.geoCoordinates.longitude
      description: Longitude of the sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.location.geoCoordinates.latitude
      description: Latitude of the sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.location.countryOrRegion
      description: Country or region of the sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.location.city
      description: City of the sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.ipAddress
      description: Provides the IP address of the client from where the risk occurred.
      type: string
    - contextPath: MSGraph.identityProtection.risks.tokenIssuerType
      description: Indicates the type of token issuer for the detected sign-in risk. The possible values are AzureAD, ADFederationServices, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.activity
      description: Indicates the activity type the detected risk is linked to. The possible values are signin, user, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.detectionTimingType
      description: Timing of the detected risk (real-time/offline). The possible values are notDefined, realtime, nearRealtime, offline, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.source
      description: Source of the risk detection. For example, activeDirectory.
      type: string
    - contextPath: MSGraph.identityProtection.risks.riskDetail
      description: Reason why the user is considered a risky user. The possible values are limited to none, adminGeneratedTemporaryPassword, userPerformedSecuredPasswordChange, userPerformedSecuredPasswordReset, adminConfirmedSigninSafe, aiConfirmedSigninSafe, userPassedMFADrivenByRiskBasedPolicy, adminDismissedAllRiskForUser, adminConfirmedSigninCompromised, hidden, adminConfirmedUserCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.riskstate
      description: State of the user's risk. The possible values are none, confirmedSafe, remediated, dismissed, atRisk, confirmedCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.riskLevel
      description: Risk level of the detected risky user. The possible values are low, medium, high, hidden, none, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.riskType
      description: Deprecated. Use riskEventType instead. List of risk event types.
      type: string
    - contextPath: MSGraph.identityProtection.risks.riskEventType
      description: The type of risk event detected. The possible values are unlikelyTravel, anonymizedIPAddress, maliciousIPAddress, unfamiliarFeatures, malwareInfectedIPAddress, suspiciousIPAddress, leakedCredentials, investigationsThreatIntelligence, generic,adminConfirmedUserCompromised, mcasImpossibleTravel, mcasSuspiciousInboxManipulationRules, investigationsThreatIntelligenceSigninLinked, maliciousIPAddressValidCredentialsBlockedIP, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risks.correlationId
      description: Correlation ID of the sign-in associated with the risk detection. This property is null if the risk detection is not associated with a sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.requestId
      description: The ID of the sign-in associated with the risk detection. This property is null if the risk detection is not associated with a sign-in.
      type: string
    - contextPath: MSGraph.identityProtection.risks.id
      description: Unique ID of the risk detection.
      type: string
  - description: Retrieve the risky users in active directory.
    name: msgraph-identity-protection-risky-user-list
    arguments:
    - name: limit
      description: The limit for results we get from the api.
    - name: odata_query
      description: An odata query to send to the api.
    outputs:
    - contextPath: MSGraph.identityProtection.risky-users.userPrincipalName
      description: Risky user principal name.
      type: string
    - contextPath: MSGraph.identityProtection.risky-users.userDisplayName
      description: Risky user display name.
      type: string
    - contextPath: MSGraph.identityProtection.risky-users.riskDetail
      description: Reason why the user is considered a risky user. The possible values are limited to none, adminGeneratedTemporaryPassword, userPerformedSecuredPasswordChange, userPerformedSecuredPasswordReset, adminConfirmedSigninSafe, aiConfirmedSigninSafe, userPassedMFADrivenByRiskBasedPolicy, adminDismissedAllRiskForUser, adminConfirmedSigninCompromised, hidden, adminConfirmedUserCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risky-users.riskstate
      description: State of the user's risk. The possible values are none, confirmedSafe, remediated, dismissed, atRisk, confirmedCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risky-users.riskLevel
      description: Risk level of the detected risky user. The possible values are low, medium, high, hidden, none, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.risky-users.riskLastUpdatedDateTime
      description: The date and time that the risky user was last updated. The DateTimeOffset type represents date and time information using the ISO 8601 format and is always in UTC time.
      type: DateTime
    - contextPath: MSGraph.identityProtection.risky-users.isProcessing
      description: Indicates whether a user's risky state is being processed by the backend.
      type: Boolean
    - contextPath: MSGraph.identityProtection.risky-users.isDeleted
      description: Indicates whether a user is delted
      type: Boolean
    - contextPath: MSGraph.identityProtection.risky-users.id
      description: Unique ID of the risky user.
      type: string
  - description: Retrieve the risky users history in active directory.
    name: msgraph-identity-protection-risky-user-history-list
    arguments:
    - name: limit
      description: The limit for results we get from the api.
    - name: odata_query
      description: An odata query to send to the api.
    - name: user_id
      description: The id of the user to get the history for.
      required: true
    outputs:
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.userPrincipalName
      description: Risky user principal name.
      type: string
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.userDisplayName
      description: Risky user display name.
      type: string
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.riskDetail
      description: Reason why the user is considered a risky user. The possible values are limited to none, adminGeneratedTemporaryPassword, userPerformedSecuredPasswordChange, userPerformedSecuredPasswordReset, adminConfirmedSigninSafe, aiConfirmedSigninSafe, userPassedMFADrivenByRiskBasedPolicy, adminDismissedAllRiskForUser, adminConfirmedSigninCompromised, hidden, adminConfirmedUserCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.riskstate
      description: State of the user's risk. The possible values are none, confirmedSafe, remediated, dismissed, atRisk, confirmedCompromised, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.riskLevel
      description: Risk level of the detected risky user. The possible values are low, medium, high, hidden, none, and unknownFutureValue.
      type: string
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.riskLastUpdatedDateTime
      description: The date and time that the risky user was last updated. The DateTimeOffset type represents date and time information using the ISO 8601 format and is always in UTC time.
      type: DateTime
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.isProcessing
      description: Indicates whether a user's risky state is being processed by the backend.
      type: Boolean
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.isDeleted
      description: Indicates whether the user is deleted.
      type: Boolean
    - contextPath: MSGraph.identityProtection.RiskyUserHistory.id
      description: Unique ID of the risky user.
      type: string
  - description: Delete an ip named location by id.
    name: msgraph-identity-protection-risky-user-confirm-compromised
    arguments:
    - name: user_ids
      description: The ids of the users to compromise seperated be commas.
      required: true
  - description: Delete an ip named location by id.
    name: msgraph-identity-protection-risky-user-dismiss
    arguments:
    - name: user_ids
      description: The ids of the users to dismiss seperated be commas.
      required: true
  isfetch: true
  script: '-'
  type: python
  subtype: python3
  dockerimage: demisto/crypto:1.0.0.66562
fromversion: 5.0.0
defaultmapperin: Microsoft Graph Identity and Access Incoming Mapper
defaultclassifier: Microsoft Graph Identity and Access Classifier
tests:
- Identity & Access test playbook
