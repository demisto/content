id: XSOAR Engineer Training - Extend Context - Set By Incident
version: -1
name: XSOAR Engineer Training - Extend Context - Set By Incident
description: "Example Playbook which queries for Status from one incident, and then does a set by incident on it if it's not closed.   The use case is to update the original open Incident with additional information (such as another reporting user for a phishing email), so we can keep track, and deduplicate.\n\nEach step in the playbook may have some additional details in the details tab to explain what we are doing. "
tags:
- training
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 6f121cee-1322-4abc-85d6-5030e573a4d7
    type: start
    task:
      id: 6f121cee-1322-4abc-85d6-5030e573a4d7
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": -120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: aba5054e-a9bf-47a8-8103-d3206170cfce
    type: collection
    task:
      id: aba5054e-a9bf-47a8-8103-d3206170cfce
      version: -1
      name: What Incident should we query?
      description: Data collection task, to grab the Incident we want to query for status.
      type: collection
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
      subject:
      body:
        simple: What Incident should we query?
      methods: []
      format: ""
      bcc:
      cc:
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
        completeafterv2: false
        completeaftersla: false
    form:
      questions:
      - id: "0"
        label: ""
        labelarg:
          simple: What Incident?
        required: true
        gridcolumns: []
        defaultrows: []
        type: number
        options: []
        optionsarg: []
        fieldassociated: ""
        placeholder: ""
        tooltip: Incident number
        readonly: false
      title: Incident
      description: Enter the Incident number to query
      sender: ""
      expired: false
      totalanswers: 0
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 087b54ef-7f64-46fc-8c97-9267f98449b8
    type: regular
    task:
      id: 087b54ef-7f64-46fc-8c97-9267f98449b8
      version: -1
      name: Search Incidents - Put the Status in Context using extend context (SEE DETAILS TAB FOR INFO)
      description: "For this we will use the search incidents automation to get the details of the other Incident.   \n\nhttps://xsoar.pan.dev/docs/reference/scripts/search-incidents-v2\n\nWe then use extend-context to put the Status of the other Incident into a context key to make it easier for us to use.   This can be used to put custom fields into context as well where the path would be Content.data.CustomFields.customfieldmachinename.\n\nhttps://xsoar.pan.dev/docs/playbooks/playbooks-extend-context#extending-context\n\nYou can use the argument raw-response=true on the CLI to see where we grab item for extend context."
      scriptName: SearchIncidentsV2
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      extend-context:
        simple: OtherIncidentStatus=Contents.data.status
      id:
        complex:
          root: Incident.Answers
          accessor: "0"
          transformers:
          - operator: Stringify
      ignore-outputs:
        simple: "false"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 555
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 94d5c85e-1032-4059-8441-c14541ec2432
    type: condition
    task:
      id: 94d5c85e-1032-4059-8441-c14541ec2432
      version: -1
      name: Is the other Incident Closed?
      description: Check if the other Incident is closed, based on the key we put into Context.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "4"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualNumber
          left:
            value:
              complex:
                root: OtherIncidentStatus
                transformers:
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
          right:
            value:
              simple: "2"
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: af4f6833-0656-41c0-825a-a614c6584c4f
    type: regular
    task:
      id: af4f6833-0656-41c0-825a-a614c6584c4f
      version: -1
      name: Yes - Other Incident is Closed
      description: Prints text to war room (Markdown supported)
      scriptName: Print
      type: regular
      iscommand: false
      brand: Builtin
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      value:
        simple: 'Other Incident Status: ${OtherIncident.status}'
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 480,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 56f26763-ed88-4946-8f7b-7da403d86b2f
    type: regular
    task:
      id: 56f26763-ed88-4946-8f7b-7da403d86b2f
      version: -1
      name: Use SetByIncident to update the other Incident with the person who answered the question
      description: |-
        Works the same as the 'Set' command, but can work across incidents by specifying 'id' as an argument. Sets a value into the context with the given context key. Doesn't append by default.

        Mike - For this we'll take the person who answered and add them to a key in context of the other open Incident before closing this one.  This could be adapted to send the reporter of an email for example to the other open Incident, closing the duplicate submission.  Then when the first Incident is closed, you just adapt the task that notifies the reporters about the type of email they submitted.
      scriptName: SetByIncidentId
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      append:
        simple: "true"
      id:
        complex:
          root: Incident.Answers
          accessor: "0"
      key:
        simple: PersonWhoAnswered
      value:
        complex:
          root: Incident.Answers
          accessor: name
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: e57186ab-00ff-4854-8389-51587b7b3cb6
    type: regular
    task:
      id: e57186ab-00ff-4854-8389-51587b7b3cb6
      version: -1
      name: Delete Context
      description: Delete field from context, used so we can re-run the playbook for developing them..
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      all:
        simple: "yes"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 15
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 0b4215f0-b97b-42e4-87fe-a6fa8974e148
    type: title
    task:
      id: 0b4215f0-b97b-42e4-87fe-a6fa8974e148
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 8616e502-f971-422f-8d63-92cf245063be
    type: regular
    task:
      id: 8616e502-f971-422f-8d63-92cf245063be
      version: -1
      name: Print Playbook Overview
      description: Prints text to war room (Markdown supported)
      scriptName: Print
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      value:
        simple: "## XSOAR Engineer Training - Extend Context - Set By Incident\n\nExample Playbook which queries for Status from one incident, and then does a set by incident on it if it's not closed.   The use case is to update the original open Incident with additional information (such as another reporting user for a phishing email), so we can keep track, and deduplicate.\n\nEach step in the playbook may have some additional details in the details tab to explain what we are doing. "
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 265,
          "y": 190
        }
      }
    note: true
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1255,
        "width": 810,
        "x": 50,
        "y": -120
      }
    }
  }
inputs: []
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.8.0
