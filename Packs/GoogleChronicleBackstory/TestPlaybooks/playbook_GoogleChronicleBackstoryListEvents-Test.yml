id: Google Chronicle Backstory List Events - Test
version: -1
name: Google Chronicle Backstory List Events - Test
description: This playbook uses the Google Chronicle Backstory integration and tests
  the various scenarios of the "gcb-list-events" command.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 2ecac28e-5b6a-4849-8276-a9946cf0ac2a
    type: start
    task:
      id: 2ecac28e-5b6a-4849-8276-a9946cf0ac2a
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "6"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: f13cb26f-6736-4192-83fe-92d3435b179a
    type: title
    task:
      id: f13cb26f-6736-4192-83fe-92d3435b179a
      version: -1
      name: Test gcb-list-events command
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 953fe96b-300b-4857-8f17-3c2b33133371
    type: regular
    task:
      id: 953fe96b-300b-4857-8f17-3c2b33133371
      version: -1
      name: Get events from Chronicle
      description: List all of the events discovered within your enterprise on a particular
        device within the specified time range. If you receive the maximum number
        of events you specified using the page_size parameter (or 100, the default),
        there might still be more events within your Chronicle account. You can narrow
        the time range and issue the call again to ensure you have visibility into
        all possible events. This command returns more than 60 different types of
        events. Any event would have only specific output context set. Refer the UDM
        documentation to figure out the output properties specific to the event types.
      script: '|||gcb-list-events'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      asset_identifier:
        simple: ray-glass-laptop
      asset_identifier_type:
        simple: Host Name
      end_time: {}
      page_size:
        simple: "1"
      preset_time_range:
        simple: Last 30 days
      reference_time: {}
      start_time:
        simple: "2020-01-01T00:00:00Z"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 515
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: fffb96f4-9780-4cfe-8dd1-b09581a6e0c8
    type: condition
    task:
      id: fffb96f4-9780-4cfe-8dd1-b09581a6e0c8
      version: -1
      name: Verify context data
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "7"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: GoogleChronicleBackstory.Events.eventType
            iscontext: true
      - - operator: isExists
          left:
            value:
              simple: GoogleChronicleBackstory.Events.eventTimestamp
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 865
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: 48c09236-575a-4111-8131-ab33f097aa7d
    type: title
    task:
      id: 48c09236-575a-4111-8131-ab33f097aa7d
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "6":
    id: "6"
    taskid: b33d52ef-ee6c-4779-8572-5ecfd14684c5
    type: regular
    task:
      id: b33d52ef-ee6c-4779-8572-5ecfd14684c5
      version: -1
      name: Delete Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "7":
    id: "7"
    taskid: 9b0c7856-84b8-4657-8ef0-a5ceff02e21e
    type: regular
    task:
      id: 9b0c7856-84b8-4657-8ef0-a5ceff02e21e
      version: -1
      name: Delete Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1040
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "8":
    id: "8"
    taskid: 2c363649-47a7-40b7-87cb-dddc96aeb169
    type: regular
    task:
      id: 2c363649-47a7-40b7-87cb-dddc96aeb169
      version: -1
      name: Close Investigation
      description: commands.local.cmd.close.inv
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: ac2c4b32-b3a9-4485-8b10-bdbf681d42d8
    type: condition
    task:
      id: ac2c4b32-b3a9-4485-8b10-bdbf681d42d8
      version: -1
      name: Is response received from chronicle?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "3"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: GoogleChronicleBackstory.Events
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1405,
        "width": 492.5,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
