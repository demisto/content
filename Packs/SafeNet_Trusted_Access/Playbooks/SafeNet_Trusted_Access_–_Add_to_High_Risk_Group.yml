description: This playbook adds the user to a group that was created to identify higher
  risk accounts. SafeNet Trusted Access policies can be configured to take this into
  account and provide stronger protection when handling access events from users who
  are members of the group. The user is added to this group for a configurable period
  of time.
id: SafeNet Trusted Access – Add to High Risk Group
inputs:
- description: Username of the user.
  key: userName
  playbookInputQuery:
  required: true
  value:
    simple: ${incident.safenettrustedaccessusername}
- description: Name of the High Risk Group.
  key: highRiskGroup
  playbookInputQuery:
  required: true
  value:
    simple: ${lists.sta_high_risk_group}
- description: Name of the SafeNet Trusted Access integration instance.
  key: instanceName
  playbookInputQuery:
  required: true
  value:
    simple: ${incident.safenettrustedaccessinstancename}
- description: Amount of time that the user will remain in the High Risk Group.
  key: sleepTime
  playbookInputQuery:
  required: true
  value:
    simple: ${lists.sta_user_in_high_risk_group_hours}
name: SafeNet Trusted Access – Add to High Risk Group
outputs: []
starttaskid: "0"
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "34"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0621dc52-7d68-4c1e-81f4-e8a536b6e6c3
      iscommand: false
      name: ""
      version: -1
      description: ''
    taskid: 0621dc52-7d68-4c1e-81f4-e8a536b6e6c3
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 695,
          "y": 50
        }
      }
  "9":
    continueonerror: true
    id: "9"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "10"
    note: false
    quietmode: 0
    scriptarguments:
      groupName:
        simple: ${inputs.highRiskGroup}
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Get information for a specific group.
      id: f6bd9b04-b89f-41c6-8934-d10ba59dc545
      iscommand: true
      name: Get Group Information
      script: '|||sta-get-group-info'
      type: regular
      version: -1
    taskid: f6bd9b04-b89f-41c6-8934-d10ba59dc545
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1070
        }
      }
  "10":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: STA.GROUP
          operator: isNotEmpty
      label: "yes"
    id: "10"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "12"
      "yes":
      - "17"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if the group exist in the tenant.
      id: 6acd99db-6b97-4649-8616-df3c3de3b6e6
      iscommand: false
      name: Group exist in the tenant ?
      type: condition
      version: -1
    taskid: 6acd99db-6b97-4649-8616-df3c3de3b6e6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1245
        }
      }
  "11":
    id: "11"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      groupName:
        simple: ${inputs.highRiskGroup}
      userName:
        simple: ${inputs.userName}
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Add user to a specific group.
      id: 5a165490-329e-45fc-821a-7b46558edbdd
      iscommand: true
      name: Add to High Risk Group
      script: '|||sta-add-user-group'
      type: regular
      version: -1
    taskid: 5a165490-329e-45fc-821a-7b46558edbdd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 2120
        }
      }
  "12":
    id: "12"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      message:
        simple: The specified High Risk Group - ${inputs.highRiskGroup} doesn't exist.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Prints an error entry with a given message.
      id: 70089dca-e5bf-40c8-864f-caaa15112b14
      iscommand: false
      name: Failed Message
      script: PrintErrorEntry
      type: regular
      version: -1
    taskid: 70089dca-e5bf-40c8-864f-caaa15112b14
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1420
        }
      }
  "13":
    id: "13"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    quietmode: 0
    scriptarguments:
      seconds:
        complex:
          root: inputs.sleepTime
          transformers:
          - args:
              by:
                value:
                  simple: "3600"
            operator: multiply
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sleep for X seconds
      id: 365791f5-1938-4005-8dd0-22bdcb147bf1
      iscommand: false
      name: Sleep Time - User would be in High Risk Group for ${inputs.sleepTime}
        hours
      script: Sleep
      type: regular
      version: -1
    taskid: 365791f5-1938-4005-8dd0-22bdcb147bf1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2295
        }
      }
  "14":
    id: "14"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    quietmode: 0
    scriptarguments:
      groupName:
        simple: ${inputs.highRiskGroup}
      userName:
        simple: ${inputs.userName}
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Remove user from a group.
      id: 1a4313db-4ac5-47c8-8b90-fe28ab133783
      iscommand: true
      name: Remove from High Risk Group
      script: '|||sta-remove-user-group'
      type: regular
      version: -1
    taskid: 1a4313db-4ac5-47c8-8b90-fe28ab133783
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2470
        }
      }
  "15":
    id: "15"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes:
        simple: User successfully removed from the High Risk Group.
      closeReason:
        simple: User removed from the High Risk Group.
      emailclassification: {}
      id:
        simple: ${incident.id}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.close.inv
      id: 3451ab5c-fa49-4b77-820d-aa5989c9945b
      iscommand: true
      name: Close incident
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 3451ab5c-fa49-4b77-820d-aa5989c9945b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2645
        }
      }
  "17":
    id: "17"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "18"
    note: false
    quietmode: 0
    scriptarguments:
      groupName:
        simple: ${inputs.highRiskGroup}
      userName:
        simple: ${inputs.userName}
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check whether the user exists in a specific group.
      id: 3758ff8a-e19e-470c-8e40-fee958cb5fdd
      iscommand: true
      name: Check user's existence in High Risk Group.
      script: '|||sta-user-exist-group'
      type: regular
      version: -1
    taskid: 3758ff8a-e19e-470c-8e40-fee958cb5fdd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1420
        }
      }
  "18":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: STA.USER.EXIST.GROUP
          operator: isTrue
      label: "yes"
    id: "18"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "11"
      "yes":
      - "25"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if the user exist in the tenant.
      id: 331b0bfb-c23d-452a-836b-ab1d3fbaf5a1
      iscommand: false
      name: User is a member of High Risk Group ?
      type: condition
      version: -1
    taskid: 331b0bfb-c23d-452a-836b-ab1d3fbaf5a1
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1595
        }
      }
  "20":
    id: "20"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes:
        simple: Duplicate incident. New Ticket ID - ${incident.id}
      closeReason:
        simple: Duplicate incident. New Ticket ID - ${incident.id}
      emailclassification: {}
      id:
        simple: ${foundIncidents.id}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.close.inv
      id: f5cb3eff-110b-485f-8c61-22b67b74397a
      iscommand: true
      name: Close all old incidents for the same user as duplicates.
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: f5cb3eff-110b-485f-8c61-22b67b74397a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2120
        }
      }
  "22":
    continueonerror: true
    id: "22"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "23"
    note: false
    quietmode: 0
    scriptarguments:
      userName:
        complex:
          root: inputs.userName
          transformers:
          - operator: trim
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Get the profile information for a specific user.
      id: 5f2c3539-6f2d-432a-865d-13bbeeaa15f3
      iscommand: true
      name: Get User Information
      script: '|||sta-get-user-info'
      type: regular
      version: -1
    taskid: 5f2c3539-6f2d-432a-865d-13bbeeaa15f3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 720
        }
      }
  "23":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: STA.USER
          operator: isNotEmpty
      label: "yes"
    id: "23"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "24"
      "yes":
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if the user exist in the tenant.
      id: 64118424-d533-4bd7-8e89-a950e5f9a15c
      iscommand: false
      name: User exist in the tenant ?
      type: condition
      version: -1
    taskid: 64118424-d533-4bd7-8e89-a950e5f9a15c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 480,
          "y": 895
        }
      }
  "24":
    id: "24"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      message:
        simple: User - ${inputs.userName} doesn't exist in the tenant.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Prints an error entry with a given message.
      id: 88a56575-51ae-4b24-820b-65fd7a2e8321
      iscommand: false
      name: Failed Message
      script: PrintErrorEntry
      type: regular
      version: -1
    taskid: 88a56575-51ae-4b24-820b-65fd7a2e8321
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1070
        }
      }
  "25":
    id: "25"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "29"
    note: false
    quietmode: 0
    scriptarguments:
      details: {}
      fromclosedate: {}
      fromdate: {}
      fromduedate: {}
      id: {}
      level: {}
      name: {}
      notstatus: {}
      owner: {}
      page: {}
      query:
        simple: sourceInstance:"${incident.sourceInstance}" and type:"${incident.type}"
          and safenettrustedaccessinstancename:"${inputs.instanceName}" and status:"Active"
          and safenettrustedaccessusername:"${inputs.userName}" and name:"${incident.name}"
          and -id:"${incident.id}"
      reason: {}
      size:
        simple: "1"
      sort:
        simple: id.desc
      status: {}
      toclosedate: {}
      todate: {}
      toduedate: {}
      type: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Searches Demisto incidents
      id: 79b82273-53a1-4802-81f0-f13f8c6b017b
      iscommand: false
      name: Search old incidents for the same user.
      script: SearchIncidentsV2
      type: regular
      version: -1
    taskid: 79b82273-53a1-4802-81f0-f13f8c6b017b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1770
        }
      }
  "29":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: foundIncidents.id
          operator: isNotEmpty
      label: "yes"
    id: "29"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "30"
      "yes":
      - "20"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if any old incident found for the user.
      id: 8007cf7e-b930-48a7-8083-2c2131bc5c00
      iscommand: false
      name: Old incident exist for the same user in  the same instance ?
      type: condition
      version: -1
    taskid: 8007cf7e-b930-48a7-8083-2c2131bc5c00
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1945
        }
      }
  "30":
    id: "30"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes:
        simple: User is already a member of the High Risk Group.
      closeReason:
        simple: User is already a member of the High Risk Group.
      emailclassification: {}
      id:
        simple: ${incident.id}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.close.inv
      id: 775ca2c6-e1ef-4f75-8b07-5779b6eb32b1
      iscommand: true
      name: Close Incident.
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 775ca2c6-e1ef-4f75-8b07-5779b6eb32b1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 2120
        }
      }
  "31":
    continueonerror: true
    id: "31"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "32"
    note: false
    quietmode: 0
    scriptarguments:
      using:
        simple: ${inputs.instanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether you have permission to access the requested tenant.
      id: 91aa72b4-5e54-416f-812d-3e3d73ab43d0
      iscommand: true
      name: Validate tenant.
      script: '|||sta-validate-tenant'
      type: regular
      version: -1
    taskid: 91aa72b4-5e54-416f-812d-3e3d73ab43d0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 695,
          "y": 370
        }
      }
  "32":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: STA.VALIDATE.TENANT
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: STA.VALIDATE.TENANT
          operator: isTrue
      label: "yes"
    id: "32"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "22"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check permission of the tenant.
      id: 9befa808-b046-4471-860f-8a53903c0b94
      iscommand: false
      name: Check if instance exists and enabled?
      type: condition
      version: -1
    taskid: 9befa808-b046-4471-860f-8a53903c0b94
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 695,
          "y": 545
        }
      }
  "33":
    id: "33"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      message:
        simple: |-
          Connection error. Please ensure that the following requirements are fulfilled.
          1. The SafeNet Trusted Access integration instance's name must be the same as the Instance name mentioned in the alert email template.
          2. Ensure that you have the correct Tenant Code or API Key in the integration instance.
          3. Ensure that the integration instance is Enabled.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Prints an error entry with a given message.
      id: 38a7b104-acf0-4abf-81c9-18e74ea372da
      iscommand: false
      name: Failed Message
      script: PrintErrorEntry
      type: regular
      version: -1
    taskid: 38a7b104-acf0-4abf-81c9-18e74ea372da
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 720
        }
      }
  "34":
    id: "34"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    scriptarguments:
      safenettrustedaccesshighriskgroup:
        simple: ${inputs.highRiskGroup}
      safenettrustedaccessuserinhighriskgrouphours:
        simple: ${inputs.sleepTime}
      severity:
        simple: "2"
      sla:
        complex:
          root: inputs.sleepTime
          transformers:
          - args:
              by:
                value:
                  simple: "60"
            operator: multiply
          - args:
              by:
                value:
                  simple: "1"
            operator: addition
          - operator: round
      stahighriskgroup:
        simple: ${inputs.highRiskGroup}
      stauserinhighriskgrouphours:
        simple: ${inputs.sleepTime} hours
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: 4ee40376-ad01-4b83-8422-eb6603c41bdc
      iscommand: true
      name: Set Incident Fields
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 4ee40376-ad01-4b83-8422-eb6603c41bdc
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 695,
          "y": 195
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "10_12_#default#": 0.25,
      "18_11_#default#": 0.42
    },
    "paper": {
      "dimensions": {
        "height": 2690,
        "width": 1240,
        "x": 50,
        "y": 50
      }
    }
  }
fromversion: 6.0.0
tests:
- No tests (auto formatted)
