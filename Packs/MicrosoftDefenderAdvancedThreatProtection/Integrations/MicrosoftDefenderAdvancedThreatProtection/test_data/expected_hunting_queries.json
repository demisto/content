{
  "LateralMovementEvidence": {
    "network_connections": "DeviceNetworkEvents\n| where (RemoteIP startswith \"172.16\" or RemoteIP startswith \"192.168\" or RemoteIP startswith \"10.\") and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| summarize TotalConnections = count() by DeviceName, RemoteIP, RemotePort, InitiatingProcessFileName\n| order by TotalConnections\n| limit 1",
    "credential_dumping": "DeviceProcessEvents\n| where ((FileName has_any (\"procdump.exe\", \"procdump64.exe\") and ProcessCommandLine has \"lsass\") or (ProcessCommandLine has \"lsass.exe\" and (ProcessCommandLine has \"-accepteula\" or ProcessCommandLine contains \"-ma\")) ) and ( (DeviceName has_any (\"1\")) )\n| project Timestamp, DeviceName, ActionType, FileName, ProcessCommandLine, AccountName, InitiatingProcessIntegrityLevel, InitiatingProcessTokenElevation\n| limit 10",
    "rdp_attempts": "DeviceNetworkEvents\n| where RemotePort in (22,3389,139,135,23,1433) and ( (DeviceName has_any (\"1\")) )\n| summarize TotalCount=count() by DeviceName,LocalIP,RemoteIP,RemotePort\n| order by TotalCount\n| limit 10",
    "smb_connections": "DeviceNetworkEvents\n| where RemotePort == 445 and InitiatingProcessId !in (0, 4) and ( (InitiatingProcessMD5 has_any (\"1\",\"2\")) )\n| summarize RemoteIPCount=dcount(RemoteIP) by DeviceName, InitiatingProcessFileName, InitiatingProcessId, InitiatingProcessCreationTime\n| limit 1",
    "smb_connections_w_remote_ip_count": "DeviceNetworkEvents\n| where RemotePort == 445 and InitiatingProcessId !in (0, 4) and ( (InitiatingProcessMD5 has_any (\"1\",\"2\")) )\n| summarize RemoteIPCount=dcount(RemoteIP) by DeviceName, InitiatingProcessFileName, InitiatingProcessId, InitiatingProcessCreationTime\n| where RemoteIPCount > 25 | limit 1"
  },
  "PersistenceEvidence": {
    "scheduled_job": "DeviceEvents | where ActionType == \"ScheduledTaskCreated\" and InitiatingProcessAccountSid != \"S-1-5-18\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, AdditionalFields\n| limit 1",
    "registry_entry": "DeviceRegistryEvents | where ActionType == \"RegistryValueSet\" and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) and InitiatingProcessCommandLine contains \"something\" )\n| project Timestamp, DeviceName, RegistryKey, RegistryValueType, PreviousRegistryValueData, RegistryValueName, PreviousRegistryValueName, PreviousRegistryKey, InitiatingProcessFileName\n| limit 1",
    "startup_folder_changes": "DeviceFileEvents | where FolderPath contains @\"\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" and ActionType == \"FileCreated\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, FileName, FolderPath, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1",
    "new_service_created": "DeviceRegistryEvents | where RegistryKey contains @\"HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\" and ActionType == \"RegistryKeyCreated\" and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, RegistryKey, RegistryValueName, RegistryValueType, RegistryValueData, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1",
    "service_updated": "DeviceRegistryEvents | where RegistryKey contains @\"HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\" and ActionType has_any (\"RegistryValueSet\",\"RegistryKeyCreated\") and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, ActionType, RegistryKey, PreviousRegistryKey, RegistryValueName, PreviousRegistryValueName, RegistryValueType, RegistryValueData, PreviousRegistryValueData, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1",
    "file_replaced": "DeviceFileEvents | where FolderPath contains @\"C:\\Program Files\" and ActionType == \"FileModified\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, ActionType, FileName, FolderPath, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1",
    "new_user": "DeviceEvents | where ActionType == \"UserAccountCreated\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project AccountName,DeviceName,Timestamp,AccountSid,AccountDomain,InitiatingProcessAccountName,InitiatingProcessLogonId\n| limit 1",
    "new_group": "DeviceEvents | where ActionType == \"SecurityGroupCreated\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project AccountName,DeviceName,Timestamp,AccountSid,AccountDomain,InitiatingProcessAccountName,InitiatingProcessLogonId,AdditionalFields\n| limit 1",
    "group_user_change": "DeviceEvents | where ActionType == \"UserAccountAddedToLocalGroup\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| summarize by AccountSid\n| limit 1",
    "local_firewall_change": "DeviceRegistryEvents | where RegistryKey contains @\"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\" and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, ActionType, RegistryKey, PreviousRegistryKey, RegistryValueName, PreviousRegistryValueName, RegistryValueType, RegistryValueData, PreviousRegistryValueData, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1",
    "host_file_change": "DeviceFileEvents | where FolderPath contains @\"C:\\Windows\\System32\\drivers\\etc\\hosts\" and ActionType == \"FileModified\" and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceName, ActionType, FileName, FolderPath, SHA1, SHA256, MD5, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine\n| limit 1"
  },
  "FileOrigin": "DeviceFileEvents | where ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp,FileName,FolderPath, ActionType,DeviceName,MD5,SHA1,SHA256,FileSize,FileOriginUrl,FileOriginIP,InitiatingProcessCommandLine,InitiatingProcessFileName,InitiatingProcessParentFileName\n| limit 1",
  "ProcessDetails": {
    "parent_process": "DeviceProcessEvents | where ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceId, DeviceName, ActionType, ProcessId, ProcessCommandLine, ProcessCreationTime, AccountSid, AccountName, AccountDomain,InitiatingProcessAccountDomain, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessAccountSid, InitiatingProcessAccountSid, InitiatingProcessAccountUpn, InitiatingProcessAccountObjectId, InitiatingProcessLogonId, InitiatingProcessIntegrityLevel, InitiatingProcessTokenElevation, InitiatingProcessSHA1, InitiatingProcessSHA256, InitiatingProcessMD5, InitiatingProcessFileName, InitiatingProcessFileSize, InitiatingProcessVersionInfoCompanyName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoProductVersion, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessVersionInfoFileDescription, InitiatingProcessId, InitiatingProcessCommandLine, InitiatingProcessCreationTime, InitiatingProcessFolderPath, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessAccountSid\n| limit 1",
    "grandparent_process": "DeviceProcessEvents | where ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceId, DeviceName, ActionType, ProcessId, ProcessCommandLine, ProcessIntegrityLevel, ProcessCreationTime, AccountSid, AccountName, AccountDomain, AccountObjectId, AccountUpn, InitiatingProcessSHA1, InitiatingProcessSHA256, InitiatingProcessMD5, InitiatingProcessFileName, InitiatingProcessId, InitiatingProcessCreationTime, InitiatingProcessFolderPath, InitiatingProcessParentFileName, InitiatingProcessParentId, InitiatingProcessParentCreationTime\n| limit 1",
    "process": "DeviceProcessEvents | where ( (SHA1 has_any (\"1\",\"2\")) )\n| summarize by SHA1,FileName,SHA256,MD5 | join DeviceFileCertificateInfo on SHA1 | summarize by FileName,SHA1,SHA256,IsSigned,Signer,SignatureType,Issuer,CertificateExpirationTime,IsTrusted,IsRootSignerMicrosoft\n| limit 1",
    "beaconing_evidence": "DeviceNetworkEvents | where ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceId, DeviceName, ActionType, RemoteIP, RemotePort, RemoteUrl, LocalIP, LocalPort, Protocol, LocalIPType, RemoteIPType, InitiatingProcessSHA1, InitiatingProcessSHA256, InitiatingProcessMD5, InitiatingProcessFileName\n| limit 1",
    "process_excecution_powershell": "DeviceProcessEvents | where FileName in~ (\"powershell.exe\", \"powershell_ise.exe\",\".ps\") and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) and (DeviceId has_any (\"1\")) )| project Timestamp, FileName, FolderPath, ProcessVersionInfoProductName, ProcessCommandLine, ProcessCreationTime, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessCommandLine, InitiatingProcessFolderPath, InitiatingProcessSignerType, InitiatingProcessSignatureStatus,DeviceId,DeviceName\n| limit 1",
    "powershell_execution_unsigned_files": "DeviceProcessEvents | where FileName in~ (\"powershell.exe\", \"powershell_ise.exe\",\".ps\") and ( InitiatingProcessFileName != \"SenerIR.exe\" and InitiatingProcessParentFileName != \"MsSense.exe\" and InitiatingProcessSignatureStatus != \"Valid\" ) and (InitiatingProcessFileName != \"CompatTelRunner.exe\" and InitiatingProcessParentFileName != \"CompatTelRunner.exe\")\n| summarize by InitiatingProcessFolderPath,InitiatingProcessFileName,InitiatingProcessParentFileName,InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessVersionInfoProductName,InitiatingProcessCommandLine,InitiatingProcessSignerType,InitiatingProcessSignatureStatus",
    "powershell_execution_unsigned_files__md5": "DeviceProcessEvents | where FileName in~ (\"powershell.exe\", \"powershell_ise.exe\",\".ps\") and ( InitiatingProcessFileName != \"SenerIR.exe\" and InitiatingProcessParentFileName != \"MsSense.exe\" and InitiatingProcessSignatureStatus != \"Valid\" ) and (InitiatingProcessFileName != \"CompatTelRunner.exe\" and InitiatingProcessParentFileName != \"CompatTelRunner.exe\") and ( (InitiatingProcessMD5 has_any (\"1\")) )\n| summarize by InitiatingProcessFolderPath,InitiatingProcessFileName,InitiatingProcessParentFileName,InitiatingProcessVersionInfoOriginalFileName, InitiatingProcessVersionInfoProductName,InitiatingProcessCommandLine,InitiatingProcessSignerType,InitiatingProcessSignatureStatus"
  },
  "NetworkConnections": {
    "external_addresses": "DeviceNetworkEvents | where not(RemoteIP matches regex \"(^10\\\\.)|(^172\\\\.1[6-9]\\\\.)|(^172\\\\.2[0-9]\\\\.)|(^172\\\\.3[0-1]\\\\.)|(^192\\\\.168\\\\.)\") and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )\n| summarize TotalConnections = count() by DeviceName, RemoteIP, RemotePort, InitiatingProcessFileName,InitiatingProcessFolderPath | order by TotalConnections\n| limit 1",
    "dns_query": "DeviceNetworkEvents | where RemotePort == 53 and ( (InitiatingProcessSHA1 has_any (\"1\",\"2\")) )| project Timestamp,DeviceName,ActionType,RemoteIP,Packetinfo = url_decode(AdditionalFields)\n| limit 1",
    "encoded_commands": "DeviceProcessEvents | where FileName in (\"powershell.exe\",\"powershell_ise.exe\") and ProcessCommandLine contains \"-encoded\" and ( (DeviceId has_any (\"1\")) )\n| limit 1"
  },
  "PrivilegeEscalation": "DeviceLogonEvents | where IsLocalAdmin == 1 and ( (DeviceId has_any (\"1\")) ) and AccountDomain == DeviceName | project Timestamp, DeviceId, DeviceName, ActionType, LogonType, AccountDomain, AccountName, IsLocalAdmin, InitiatingProcessFileName\n| limit 1",
  "Tampering": {
    "with_device": "let includeProc = dynamic([\"sc.exe\",\"net1.exe\",\"net.exe\", \"taskkill.exe\", \"cmd.exe\", \"powershell.exe\"]); let action = dynamic([\"stop\",\"disable\", \"delete\"]); let service1 = dynamic(['sense', 'windefend', 'mssecflt']); let service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']); let params1 = dynamic([\"-DisableRealtimeMonitoring\", \"-DisableBehaviorMonitoring\" ,\"-DisableIOAVProtection\"]); let params2 = dynamic([\"sgrmbroker.exe\", \"mssense.exe\"]); let regparams1 = dynamic(['reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\"', 'reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection\"']); let regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']); let regparams3 = dynamic(['sense', 'windefend']); let regparams4 = dynamic(['demand', 'disabled']); let timeframe = 1d; DeviceProcessEvents| where ( (DeviceId has_any (\"1\")) )\n| where InitiatingProcessFileName in~ (includeProc) | where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe') or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has \"/IM\") or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has '/d 1') or (InitiatingProcessCommandLine has_any(\"start\") and InitiatingProcessCommandLine has \"config\" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project Timestamp, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, InitiatingProcessParentFileName\n| limit 1",
    "no_device": "let includeProc = dynamic([\"sc.exe\",\"net1.exe\",\"net.exe\", \"taskkill.exe\", \"cmd.exe\", \"powershell.exe\"]); let action = dynamic([\"stop\",\"disable\", \"delete\"]); let service1 = dynamic(['sense', 'windefend', 'mssecflt']); let service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']); let params1 = dynamic([\"-DisableRealtimeMonitoring\", \"-DisableBehaviorMonitoring\" ,\"-DisableIOAVProtection\"]); let params2 = dynamic([\"sgrmbroker.exe\", \"mssense.exe\"]); let regparams1 = dynamic(['reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\"', 'reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection\"']); let regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']); let regparams3 = dynamic(['sense', 'windefend']); let regparams4 = dynamic(['demand', 'disabled']); let timeframe = 1d; DeviceProcessEvents\n| where InitiatingProcessFileName in~ (includeProc) | where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe') or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has \"/IM\") or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has '/d 1') or (InitiatingProcessCommandLine has_any(\"start\") and InitiatingProcessCommandLine has \"config\" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project Timestamp, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, InitiatingProcessParentFileName\n| limit 1"
  },
  "CoverUp": {
    "file_deleted": "DeviceFileEvents | where ActionType == \"FileDeleted\" and ( (SHA1 has_any (\"1\",\"2\")) )\n| project Timestamp, DeviceId, DeviceName, FileName, FolderPath, InitiatingProcessFileName, InitiatingProcessVersionInfoProductName, InitiatingProcessCommandLine\n| limit 1",
    "event_log": "DeviceProcessEvents | where (ProcessCommandLine has \"WEVTUTIL\" and ProcessCommandLine has_any (\"CL\",\"clear-log\")) or (ProcessCommandLine contains \"Clear-EventLog\") and ( (DeviceId has_any (\"12\")) )\n| summarize LogClearCount = dcount(ProcessCommandLine), ClearedLogList = make_set(ProcessCommandLine) by DeviceId,DeviceName, bin(Timestamp, 5m),FileName,InitiatingProcessFileName\n| limit 1",
    "compromised_information": "union Device* | where ( (AccountName has_any (\"dbot\")) )\n| project Timestamp, DeviceId, DeviceName, ActionType, FileName, FolderPath, SHA1, SHA256, MD5, InitiatingProcessFileName\n| limit 1",
    "connected_devices": "union Device* | where ( (AccountName has_any (\"dbot\")) )\n| summarize by DeviceName\n| limit 1",
    "action_types": "union Device* | where ( (AccountName has_any (\"dbot\")) )\n| summarize Number_of_actions=count(ActionType) by ActionType,DeviceName | order by Number_of_actions\n| limit 1",
    "common_files": "union Device* | where ( (AccountName has_any (\"dbot\")) )\n| summarize Number_of_accoiated_events=count(FileName) by FileName, MD5, SHA1, SHA256 | order by Number_of_accoiated_events\n| limit 1"
  }
}
