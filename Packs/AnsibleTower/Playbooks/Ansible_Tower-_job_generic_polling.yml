id: Launch Job - Ansible Tower
version: -1
name: Launch Job - Ansible Tower
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 41211f80-ab03-41b3-8abb-a83e06bc3566
    type: start
    task:
      id: 41211f80-ab03-41b3-8abb-a83e06bc3566
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 53c43873-5710-43ad-81bf-81963629ccf6
    type: condition
    task:
      id: 53c43873-5710-43ad-81bf-81963629ccf6
      version: -1
      name: is Ansible Tower enabled?
      description: ''
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "2"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: AnsibleTower
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 51aa51b8-6f4c-464e-87e0-d6d2f1d34ea5
    type: regular
    task:
      id: 51aa51b8-6f4c-464e-87e0-d6d2f1d34ea5
      version: -1
      name: Job template launch
      description: Launch the job template.
      script: '|||ansible-tower-job-launch'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      credentials_id:
        complex:
          root: inputs.credentials_id
      extra_variables:
        complex:
          root: inputs.extra_variables
      inventory_id:
        complex:
          root: inputs.Inventory_id
      job_template_id:
        complex:
          root: inputs.job_template_id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 415d0af8-5eb3-475f-8c9b-d5afff54402e
    type: title
    task:
      id: 415d0af8-5eb3-475f-8c9b-d5afff54402e
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: a33406f6-57e6-43a6-81f5-f16092697b32
    type: playbook
    task:
      id: a33406f6-57e6-43a6-81f5-f16092697b32
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      Ids:
        complex:
          root: AnsibleAWX.Job
          accessor: id
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: job_id
      PollingCommandName:
        simple: ansible-tower-job-status
      Timeout:
        simple: "10"
      dt:
        simple: AnsibleAWX.Job(val.status !== 'successful').id
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: b89b4843-2c36-4ed8-8ccf-9d0337c01061
    type: regular
    task:
      id: b89b4843-2c36-4ed8-8ccf-9d0337c01061
      version: -1
      name: Job output
      description: Retrieves the standard output from running the given job.
      script: '|||ansible-tower-job-stdout'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      job_id:
        complex:
          root: AnsibleAWX.Job
          accessor: id
      print_output:
        complex:
          root: inputs.show_output
      text_filter:
        simple: RECAP
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: bd418f5e-49e2-43d0-8c1e-84381ce4773d
    type: regular
    task:
      id: bd418f5e-49e2-43d0-8c1e-84381ce4773d
      version: -1
      name: Get Job Events
      description: Retrieves the list of job events of specific job.
      script: '|||ansible-tower-job-events-list-by-id'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      job_id:
        simple: ${AnsibleAWX.Job.id}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 492.5,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: job_template_id
  value:
    simple: "34"
  required: true
  description: 'The job template id to launch. '
  playbookInputQuery:
- key: credentials_id
  value: {}
  required: false
  description: Select the credentials that allows Tower to access the nodes this job will be run against (if needed).
  playbookInputQuery:
- key: Inventory_id
  value: {}
  required: false
  description: Select the inventory containing the hosts you want this job to manage (if needed).
  playbookInputQuery:
- key: extra_variables
  value: {}
  required: false
  description: Pass extra command line variables to the playbook (if needed).
  playbookInputQuery:
- key: show_output
  value:
    simple: "true"
  required: false
  description: Print output from the job that is running.
  playbookInputQuery:
- key: Interval
  value:
    simple: "1"
  required: false
  description: Polling frequency - how often the polling command should run (in minutes)
  playbookInputQuery:
- key: Timeout
  value:
    simple: "15"
  required: false
  description: How much time (in minutes) to wait before a timeout occurs.
  playbookInputQuery:
outputs:
- contextPath: AnsibleAWX.Job.id
  description: Job id
- contextPath: AnsibleAWX.Job.status
  description: Job status
- contextPath: AnsibleAWX.JobStdout.content
  description: job stdout
- contextPath: AnsibleAWX.JobEvents.stdout
  description: Standard output of the job.
- contextPath: AnsibleAWX.JobEvents.type
  description: Data type for this job event.
- contextPath: AnsibleAWX.JobEvents.id
  description: Database ID for this job event.
- contextPath: AnsibleAWX.JobEvents.job
  description: Job ID.
- contextPath: AnsibleAWX.JobEvents.host
  description: Host ID associated with the event.
- contextPath: AnsibleAWX.JobEvents.task
  description: Task name.
- contextPath: AnsibleAWX.JobEvents.start_line
  description: Starting line number of the execution.
- contextPath: AnsibleAWX.JobEvents.end_line
  description: Ending line number of the execution.
- contextPath: AnsibleAWX.JobEvents.event_data
  description: Job event data.
fromversion: 6.0.0
description: Generic pooling playbook to launch a specific job template. Returns the job status when the job finishes running.
tests:
- No tests (auto formatted)
contentitemexportablefields:
  contentitemfields: {}
