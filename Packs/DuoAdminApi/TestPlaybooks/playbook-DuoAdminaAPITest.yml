id: DuoAdmin API test playbook
version: -1
name: DuoAdmin API test playbook
starttaskid: "0"
description: Test playbook for DuoAdmin Integration
tasks:
  "0":
    id: "0"
    taskid: d5a155c3-7dbe-4fcd-88f3-393891485890
    type: start
    task:
      id: d5a155c3-7dbe-4fcd-88f3-393891485890
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "13"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 628eefe3-5c76-4c4b-8b1a-3c601ede42a4
    type: regular
    task:
      id: 628eefe3-5c76-4c4b-8b1a-3c601ede42a4
      version: -1
      name: Get Users Detail
      script: '|||duoadmin-get-users'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: 8f23b807-f566-4a80-82fb-8b789020b127
    type: regular
    task:
      id: 8f23b807-f566-4a80-82fb-8b789020b127
      version: -1
      name: Get User2 Logs
      script: '|||duoadmin-get-authentication-logs-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      from:
        simple: 10_years_ago
      limit: {}
      username:
        simple: ${DuoAdmin.UserDetails.[2].username}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: 5f90ae6b-f0bf-49a7-8d8e-133e9231977e
    type: title
    task:
      id: 5f90ae6b-f0bf-49a7-8d8e-133e9231977e
      version: -1
      name: Check if two different users have different auth logs
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "40"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 890,
          "y": 1905
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: 818eecd7-c9bb-4239-8255-398969e10852
    type: regular
    task:
      id: 818eecd7-c9bb-4239-8255-398969e10852
      version: -1
      name: Delete Context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: b3ec79cb-57d7-448c-8818-1b372cbfaf88
    type: condition
    task:
      id: b3ec79cb-57d7-448c-8818-1b372cbfaf88
      version: -1
      name: Are auth logs a part of user details?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "30"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[2].auth_logs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 1565
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: 0646e6c0-d72a-4df4-8735-d3cf474a7362
    type: title
    task:
      id: 0646e6c0-d72a-4df4-8735-d3cf474a7362
      version: -1
      name: User Devices Operations
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: de27dc01-916d-4d59-8483-a08bf27ffabe
    type: title
    task:
      id: de27dc01-916d-4d59-8483-a08bf27ffabe
      version: -1
      name: User Logs
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1200,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: 4a16da49-c497-43aa-8b6d-9151bd387aaf
    type: title
    task:
      id: 4a16da49-c497-43aa-8b6d-9151bd387aaf
      version: -1
      name: Devices
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "20"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 650,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "20":
    id: "20"
    taskid: 88255fc2-33a8-4a6a-837d-9eab7eef238a
    type: regular
    task:
      id: 88255fc2-33a8-4a6a-837d-9eab7eef238a
      version: -1
      name: Get All Devices
      script: '|||duoadmin-get-devices'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 650,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: 40227007-b965-46fa-8e25-8ae41e38b20f
    type: condition
    task:
      id: 40227007-b965-46fa-8e25-8ae41e38b20f
      version: -1
      name: Are phones a part of the DuoAdmin object?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "17"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: Phones.phone_id
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: Phones.number
            iscontext: true
      - - operator: isExists
          left:
            value:
              simple: DuoAdmin.Phones.platform
            iscontext: true
      - - operator: isExists
          left:
            value:
              simple: DuoAdmin.Phones.last_seen
            iscontext: true
    view: |-
      {
        "position": {
          "x": 650,
          "y": 1565
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "23":
    id: "23"
    taskid: 5e0f585c-6016-411a-8988-50e686f66f98
    type: regular
    task:
      id: 5e0f585c-6016-411a-8988-50e686f66f98
      version: -1
      name: Get User Phones
      script: '|||duoadmin-get-devices-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 865
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: f12d17ea-9ece-43ac-881a-ebe4b544ae73
    type: condition
    task:
      id: f12d17ea-9ece-43ac-881a-ebe4b544ae73
      version: -1
      name: Does the user have a phone?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "28"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: phones
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1040
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "27":
    id: "27"
    taskid: dca96d4b-996c-41af-8828-8d4e9e4fce39
    type: regular
    task:
      id: dca96d4b-996c-41af-8828-8d4e9e4fce39
      version: -1
      name: Get User Phones
      script: '|||duoadmin-get-devices-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "28":
    id: "28"
    taskid: 7febf8f6-a202-4224-80e7-d8a10e8f5bf8
    type: regular
    task:
      id: 7febf8f6-a202-4224-80e7-d8a10e8f5bf8
      version: -1
      name: Dissociate the phone from the user
      script: '|||duoadmin-dissociate-device-from-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      device_id:
        simple: DPQ5YSXIRTLG4QO561J9
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "29":
    id: "29"
    taskid: 1873a847-d9e4-47e0-8386-a652a46b83d4
    type: condition
    task:
      id: 1873a847-d9e4-47e0-8386-a652a46b83d4
      version: -1
      name: Does the user still has a phone?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "19"
    separatecontext: false
    conditions:
    - label: "no"
      condition:
      - - operator: isNotExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: phones
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1565
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "30":
    id: "30"
    taskid: 653afee5-51f1-4e2b-8eb2-6a8956297a95
    type: title
    task:
      id: 653afee5-51f1-4e2b-8eb2-6a8956297a95
      version: -1
      name: U2F Tokens
      type: title
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "31"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1740,
          "y": 1230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "31":
    id: "31"
    taskid: e2382114-7cbb-4317-8b81-bad9a50faae3
    type: regular
    task:
      id: e2382114-7cbb-4317-8b81-bad9a50faae3
      version: -1
      name: Get User Tokens
      description: |-
        Notice that for the test to actually test something the user has to have a token assigned to it.
        To create a "dummy token" (for tests and such) use SOFTU2F with the duo admin site (available at https://github.com/github/SoftU2F).
        You might have to kill it's process a few times and press "approve" for it to work (about 4 or 5 times)
      script: '|||duoadmin-get-u2f-tokens-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 1390
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "32":
    id: "32"
    taskid: adc71739-96f3-4791-84d6-f74edf5ea5b0
    type: condition
    task:
      id: adc71739-96f3-4791-84d6-f74edf5ea5b0
      version: -1
      name: Does the user have a U2F token?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "9"
      "yes":
      - "33"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: u2ftokens
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 1565
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "33":
    id: "33"
    taskid: 4ccc1a79-85d3-4ef2-81d5-c13e674b203a
    type: regular
    task:
      id: 4ccc1a79-85d3-4ef2-81d5-c13e674b203a
      version: -1
      name: Delete the token
      script: '|||duoadmin-delete-u2f-token'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "35"
    scriptarguments:
      token_id:
        complex:
          root: DuoAdmin
          accessor: UserDetails
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: winitzky
              field:
                value:
                  simple: username
              getField: {}
          - operator: getField
            args:
              field:
                value:
                  simple: u2ftokens
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
          - operator: getField
            args:
              field:
                value:
                  simple: registration_id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 1765
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: e49beec9-f9f9-4381-8a91-0d1399615185
    type: condition
    task:
      id: e49beec9-f9f9-4381-8a91-0d1399615185
      version: -1
      name: Does the user still have a token
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "9"
    separatecontext: false
    conditions:
    - label: "no"
      condition:
      - - operator: isNotExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: u2ftokens
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 2170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "35":
    id: "35"
    taskid: 566dac57-2414-4597-8cdb-d879e085b21b
    type: regular
    task:
      id: 566dac57-2414-4597-8cdb-d879e085b21b
      version: -1
      name: Get User Tokens
      description: |-
        Notice that for the test to actually test something the user has to have a token assigned to it.
        To create a "dummy token" (for tests and such) use SOFTU2F with the duo admin site (available at https://github.com/github/SoftU2F).
        You might have to kill it's process a few times and press "approve" for it to work (about 4 or 5 times)
      script: '|||duoadmin-get-u2f-tokens-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 1970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "36":
    id: "36"
    taskid: a655df04-93b7-480a-834e-d35dc7adc7e0
    type: regular
    task:
      id: a655df04-93b7-480a-834e-d35dc7adc7e0
      version: -1
      name: Associate a dummy phone
      script: '|||duoadmin-associate-device-to-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      device_id:
        simple: DPQ5YSXIRTLG4QO561J9
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "40":
    id: "40"
    taskid: 2eedc889-7d09-445f-8fe6-2d4401ba9370
    type: regular
    task:
      id: 2eedc889-7d09-445f-8fe6-2d4401ba9370
      version: -1
      name: Get User0 Logs
      description: Returns authentication logs associated with a user. Limited to
        30 at a time
      script: DUO Admin|||duoadmin-get-authentication-logs-by-user
      type: regular
      iscommand: true
      brand: DUO Admin
    nexttasks:
      '#none#':
      - "45"
    scriptarguments:
      from:
        simple: 5_years_ago
      limit: {}
      username:
        simple: ${DuoAdmin.UserDetails.[0].username}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 890,
          "y": 2075
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "43":
    id: "43"
    taskid: 9112a52b-28ab-4df2-862f-830206ade49c
    type: title
    task:
      id: 9112a52b-28ab-4df2-862f-830206ade49c
      version: -1
      name: done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 890,
          "y": 2640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "45":
    id: "45"
    taskid: 7afdefc8-d22a-4483-8cfd-af628e4e66d5
    type: condition
    task:
      id: 7afdefc8-d22a-4483-8cfd-af628e4e66d5
      version: -1
      name: Check that user0 and user2 auth_logs are different
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "46"
      "yes":
      - "43"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: notIn
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[0].auth_logs.[0]
            iscontext: true
          right:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[2].auth_logs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 890,
          "y": 2265
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "46":
    id: "46"
    taskid: e7d58b8b-a87b-44cb-82e2-4a24632f39d4
    type: regular
    task:
      id: e7d58b8b-a87b-44cb-82e2-4a24632f39d4
      version: -1
      name: Print Error in case of two users have the same auth logs
      description: Prints an error entry with a given message
      scriptName: PrintErrorEntry
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      message:
        simple: There are two users with the same logs. The bug haven't been fixed
          (issue 19141).
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 650,
          "y": 2460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
system: true
view: |-
  {
    "linkLabelsPosition": {
      "29_19_no": 0.68
    },
    "paper": {
      "dimensions": {
        "height": 2655,
        "width": 2080,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
fromversion: 5.0.0
