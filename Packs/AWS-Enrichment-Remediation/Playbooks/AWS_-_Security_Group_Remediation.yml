id: AWS - Security Group Remediation
version: -1
name: AWS - Security Group Remediation
description: Replace current security groups with limited access security groups.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: bc679cc4-9bdc-4ea3-8561-c61ab291d92f
    type: start
    task:
      id: bc679cc4-9bdc-4ea3-8561-c61ab291d92f
      description: ""
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 420,
          "y": -470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: bddf5a7c-bdaa-4919-83fb-ba9b790a9ac8
    type: title
    task:
      id: bddf5a7c-bdaa-4919-83fb-ba9b790a9ac8
      description: ""
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 100,
          "y": 2510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 86c543a8-5c75-4f17-8c34-820a91af424e
    type: regular
    task:
      id: 86c543a8-5c75-4f17-8c34-820a91af424e
      version: -1
      name: Add a security group ingress rule (IP 172.16.0.0/12 & port 22) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      cidrIp:
        simple: 172.16.0.0/12
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 970,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: a646bdcb-9c96-4e8e-8bd8-95ab738fbb50
    type: condition
    task:
      id: a646bdcb-9c96-4e8e-8bd8-95ab738fbb50
      version: -1
      name: Is AWS - EC2 enabled?
      description: Determines if the AWS - EC2 integration instance is configured to continue with remediating security groups.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "24"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: AWS - EC2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 420,
          "y": -290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 8adab80a-6486-409b-8924-719b353d5d83
    type: regular
    task:
      id: 8adab80a-6486-409b-8924-719b353d5d83
      version: -1
      name: Create remediation security group
      description: Creates a security group.
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      description:
        simple: This is a remediation security group that has rules for basic access to the instance.
      groupName:
        simple: Remediation-Security-Group
      vpcId:
        complex:
          root: inputs.VpcID
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: 41908428-ef2b-4471-8920-b5e326548853
    type: regular
    task:
      id: 41908428-ef2b-4471-8920-b5e326548853
      version: -1
      name: Replace security group
      description: Modifies the specified network interface attribute. You can specify only one attribute at a time.
      script: AWS - EC2|||aws-ec2-modify-network-interface-attribute
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      groups:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
          transformers:
          - operator: uniq
      networkInterfaceId:
        complex:
          root: inputs.NicID
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 420,
          "y": 2190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: 78489f59-3abe-4712-89bb-707d49e6ddf6
    type: title
    task:
      id: 78489f59-3abe-4712-89bb-707d49e6ddf6
      description: ""
      version: -1
      name: Create remediation security group
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: 73219688-7291-4956-8765-e64953bebc34
    type: regular
    task:
      id: 73219688-7291-4956-8765-e64953bebc34
      version: -1
      name: Add a security group ingress rule (IP 10.0.0.0/8 & port 22) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      cidrIp:
        simple: 10.0.0.0/8
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: afbc2968-5af3-4961-8544-c83eb18010d3
    type: regular
    task:
      id: afbc2968-5af3-4961-8544-c83eb18010d3
      version: -1
      name: Add a security group ingress rule (IP 192.168.0.0/16 & port 22) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      cidrIp:
        simple: 192.168.0.0/16
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1860,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: b648a357-4621-4e1c-8f34-db686f42574f
    type: title
    task:
      id: b648a357-4621-4e1c-8f34-db686f42574f
      description: ""
      version: -1
      name: Add port 22 ingress rules
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
      - "6"
      - "18"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: 0bcf94a6-3f57-4101-841c-8c8bc4ddfbf0
    type: title
    task:
      id: 0bcf94a6-3f57-4101-841c-8c8bc4ddfbf0
      description: ""
      version: -1
      name: Add port 3389 ingress rules
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
      - "22"
      - "23"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "21":
    id: "21"
    taskid: 4a22d5ae-b386-44b9-8b62-e2fb15468851
    type: regular
    task:
      id: 4a22d5ae-b386-44b9-8b62-e2fb15468851
      version: -1
      name: Add a security group ingress rule (IP 172.16.0.0/12 & port 3389) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      cidrIp:
        simple: 172.16.0.0/12
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 980,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "22":
    id: "22"
    taskid: 2e5c9282-0f3d-4980-8246-8daf1ed9b6d6
    type: regular
    task:
      id: 2e5c9282-0f3d-4980-8246-8daf1ed9b6d6
      version: -1
      name: Add a security group ingress rule (IP 10.0.0.0/8 & port 3389) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      cidrIp:
        simple: 10.0.0.0/8
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "23":
    id: "23"
    taskid: 8555ec1a-abdd-4889-847f-ac8212086a42
    type: regular
    task:
      id: 8555ec1a-abdd-4889-847f-ac8212086a42
      version: -1
      name: Add a security group ingress rule (IP 192.168.0.0/16 & port 3389) permitting specific traffic
      description: Adds ingress rule to a security group.
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      cidrIp:
        simple: 192.168.0.0/16
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          root: AWS.EC2.SecurityGroups
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
                iscontext: true
              right:
                value:
                  simple: Remediation-Security-Group
          accessor: GroupId
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1860,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "24":
    id: "24"
    taskid: fab84dc2-5f23-438a-895e-cfcfbeabbc54
    type: regular
    task:
      id: fab84dc2-5f23-438a-895e-cfcfbeabbc54
      version: -1
      name: Check if Remediation-Security-Group exists?
      description: Checks if the remediation security group exists.
      script: AWS - EC2|||aws-ec2-describe-security-groups
      type: regular
      iscommand: true
      brand: AWS - EC2
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      filters:
        simple: Name=group-name,Values=Remediation-Security-Group
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 420,
          "y": 55
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "25":
    id: "25"
    taskid: e975e535-8265-4fd4-88a4-010d0d79aa06
    type: condition
    task:
      id: e975e535-8265-4fd4-88a4-010d0d79aa06
      version: -1
      name: Was there a SG named Remediation-Security-Group?
      description: Check whether the last command returned security group information or not.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "no":
      - "14"
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: AWS.EC2.SecurityGroups
                accessor: GroupName
            iscontext: true
          right:
            value: {}
    - label: "no"
      condition:
      - - operator: isNotExists
          left:
            value:
              complex:
                root: AWS.EC2.SecurityGroups
                accessor: GroupName
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 420,
          "y": 290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "26":
    id: "26"
    taskid: 5bb4729d-cd9b-4ddf-80be-cd75450a3d8c
    type: regular
    task:
      id: 5bb4729d-cd9b-4ddf-80be-cd75450a3d8c
      version: -1
      name: Ssh port
      description: Set a Ssh port value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      key:
        simple: Ssh
      value:
        simple: "22"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1170,
          "y": 1090
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "29":
    id: "29"
    taskid: 05c2a0aa-ac40-4eb5-867f-99f055ae2c50
    type: regular
    task:
      id: 05c2a0aa-ac40-4eb5-867f-99f055ae2c50
      version: -1
      name: Rdp port
      description: Set a Rdp port value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      key:
        simple: Rdp
      value:
        simple: "3389"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1640,
          "y": 1090
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "30":
    id: "30"
    taskid: 6241d3ff-4cfe-4f67-86a6-406e2ee29928
    type: title
    task:
      id: 6241d3ff-4cfe-4f67-86a6-406e2ee29928
      description: ""
      version: -1
      name: Set ports in context
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
      - "29"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3045,
        "width": 2140,
        "x": 100,
        "y": -470
      }
    }
  }
inputs:
- key: VpcID
  value: {}
  required: true
  description: This is the VPC ID used for Security group creation.
  playbookInputQuery:
- key: NicID
  value: {}
  required: true
  description: This is the Network interface of Ec2 instance.
  playbookInputQuery:
outputs: []
fromversion: 6.5.0
tests:
- No tests (auto formatted)
