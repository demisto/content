id: Add Note - Vectra Detect
version: -1
name: Add Note - Vectra Detect
description: This playbook will add a note in Vectra for an entity based on its type.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 08ba5c43-1f29-446d-8131-93b0eca854c0
    type: start
    task:
      id: 08ba5c43-1f29-446d-8131-93b0eca854c0
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "11"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 6f99bf05-47d2-4f22-84a0-0d2e603866ef
    type: condition
    task:
      id: 6f99bf05-47d2-4f22-84a0-0d2e603866ef
      version: -1
      name: Is entity Account or Host?
      description: Check if the entity is a host or account.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      Account:
      - "2"
      Host:
      - "3"
    separatecontext: false
    conditions:
    - label: Host
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.entity_type
                transformers:
                - operator: toLowerCase
            iscontext: true
          right:
            value:
              simple: host
    - label: Account
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.entity_type
                transformers:
                - operator: toLowerCase
            iscontext: true
          right:
            value:
              simple: account
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": 400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 1855c3cd-f777-45d7-8ef6-7f4984d6a5ca
    type: regular
    task:
      id: 1855c3cd-f777-45d7-8ef6-7f4984d6a5ca
      version: -1
      name: Add note for an Account.
      description: Add a note to the account.
      script: '|||vectra-account-note-add'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      account_id:
        complex:
          root: inputs.entity_id
      note:
        complex:
          root: incident
          accessor: accountname
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'This entity with the name '
              suffix:
                value:
                  simple: ' and the ID '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: incident.accountid
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' is an account.'
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 160,
          "y": 580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: ead36ffe-0b12-40c7-84ad-97c6c88887d9
    type: regular
    task:
      id: ead36ffe-0b12-40c7-84ad-97c6c88887d9
      version: -1
      name: Add a note for a Host.
      description: Add a note to the host.
      script: '|||vectra-host-note-add'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      host_id:
        complex:
          root: inputs.entity_id
      note:
        complex:
          root: incident
          accessor: devicename
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'This entity with the name '
              suffix:
                value:
                  simple: ' and the ID '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: incident.deviceid
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' is a host.'
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 590,
          "y": 580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: b15b21ae-c385-4562-8bcb-ecd6bfe5cab7
    type: title
    task:
      id: b15b21ae-c385-4562-8bcb-ecd6bfe5cab7
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 590,
          "y": 850
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: 89d17ef0-2a06-47a4-869a-52c11cdb825b
    type: condition
    task:
      id: 89d17ef0-2a06-47a4-869a-52c11cdb825b
      version: -1
      name: Is VectraDetect Integration Enabled?
      description: Check VectraDetect integration is active.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Vectra_Detect
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "11_4_#default#": 0.48
    },
    "paper": {
      "dimensions": {
        "height": 865,
        "width": 810,
        "x": 160,
        "y": 50
      }
    }
  }
inputs:
- key: entity_type
  value:
    complex:
      root: incident
      accessor: vectraentitytype
  required: false
  description: Type of the entity.
  playbookInputQuery:
- key: entity_id
  value:
    complex:
      root: incident
      accessor: accountid
      transformers:
      - operator: SetIfEmpty
        args:
          applyIfEmpty: {}
          defaultValue:
            value:
              simple: incident.deviceid
            iscontext: true
  required: false
  description: ID of the entity.
  playbookInputQuery:
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.5.0
