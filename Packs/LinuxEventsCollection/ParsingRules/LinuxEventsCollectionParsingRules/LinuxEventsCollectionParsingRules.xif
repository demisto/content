[INGEST:vendor="linux", product="linux", target_dataset="linux_linux_raw", no_hit=keep]
// this filter applies to log records which contain a full RFC 3339 style timestamps with an explicit timezone offset or zulu time suffix (UTC)
filter _raw_log ~= "\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:[+-]\d{2}:?\d{2}|Z)"
| alter tmp_timestamp = arrayindex(regextract(_raw_log, "\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}\S+"), 0)
| alter _time = if(
    tmp_timestamp ~= "[+-]\d{4}", parse_timestamp("%FT%H:%M:%E*S%z", tmp_timestamp), // timezone offset without a separating colon, e.g., 2024-10-28T14:30:55+0300
    tmp_timestamp ~= "[+-]\d{2}:\d{2}", parse_timestamp("%FT%H:%M:%E*S%Ez", tmp_timestamp), // RFC 3339 compatible timestamp offset, e.g., 2024-10-28T14:30:55+03:00
    parse_timestamp("%FT%H:%M:%E*SZ", tmp_timestamp)) // RFC 3339 compatible timestamp with zulu time notation, e.g., 2024-10-28T14:30:55Z
| fields - tmp*;

// Filter to apply the parsing rule only on logs ingested via syslog and not xdrc.
filter _raw_log ~= "\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}" and  _collector_type != "XDR Collector"
| alter
// Get the current year and timestamp.
    tmp_get_current_year = arrayindex(regextract(to_string(_insert_time), "\d{4}"), 0),
    tmp_get_timestamp = arrayindex(regextract(_raw_log, "\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}"), 0)
| alter 
// Unifies the year and timestamp as String.
    tmp_timestamp1 = concat(tmp_get_current_year, " ", tmp_get_timestamp)
| alter 
// Converts the full timestamp to datetime format (First option).
    tmp_timestamp_format1 = parse_timestamp("%Y %b %d %H:%M:%S", tmp_timestamp1)
| alter 
// Check the days difference between the current and extracted time.
    tmp_timeDiff = timestamp_diff(tmp_timestamp_format1, current_time(), "MILLISECOND")
| alter 
// If the number of days between extracted and current time is positive, reduce the current year by 1.
    tmp_verify_year = if(tmp_timeDiff > 0, to_string(subtract(to_integer(tmp_get_current_year),1)),null)
| alter
// If the year was reduced by 1, unifies the reduced year and extracted timestamp as String.
    tmp_timestamp2 = if(tmp_verify_year != null, concat(tmp_verify_year, " ", tmp_get_timestamp), null)
| alter
// Converts the full timestamp to datetime format (Second option).
    tmp_timestamp_format2 = if(tmp_timestamp2 != null, parse_timestamp("%Y %b %d %H:%M:%S", tmp_timestamp2), null)
| alter
    tmp_check_which_timestamp = coalesce(tmp_timestamp_format2, tmp_timestamp_format1, _insert_time) 
| alter
// Check if the second option is null, if not, use the first option.
    _time = tmp_check_which_timestamp
| fields -tmp_get_current_year, tmp_get_timestamp, tmp_timestamp1, tmp_timestamp_format1, tmp_timeDiff, tmp_verify_year, tmp_timestamp2, tmp_timestamp_format2, tmp_check_which_timestamp;