category: Data Enrichment & Threat Intelligence
commonfields:
  id: Abnormal Security
  version: -1
configuration:
  - defaultvalue: https://api.abnormalplatform.com/v1
    display: Server URL (e.g. https://api.abnormalplatform.com/v1)
    name: url
    required: true
    type: 0
  - defaultvalue: ""
    display: API Key
    name: api_key
    required: true
    type: 4
  - display: Trust any certificate (not secure)
    name: insecure
    type: 8
    required: false
  - display: Use system proxy settings
    name: proxy
    type: 8
    required: false
  - display: Fetch incidents
    name: isFetch
    required: false
    type: 8
  - additionalinfo: Maximum number of incidents per fetch. The default value is 200.
    defaultvalue: 200
    display: Maximum incidents to fetch.
    name: max_fetch
    type: 0
    required: false
  - display: Fetch Threats
    name: fetch_threats
    type: 8
  - display: Fetch Abuse Campaigns
    name: fetch_abuse_campaigns
    type: 8
  - display: Fetch Account Takeover Cases
    name: fetch_account_takeover_cases
    type: 8
  - defaultvalue: 3 days
    display: First fetch time
    additionalinfo: First alert created date to fetch. e.g., "1 min ago","2 weeks ago","3 months ago"
    name: first_fetch
    type: 0
    required: false
  - display: Incident type
    name: incidentType
    type: 13
    required: false
description: Abnormal Security detects the whole spectrum of email attacks, from vendor email compromise and spear-phishing to unwanted email spam and graymail. To stop these advanced attacks, Abnormal leverages the industryâ€™s most advanced behavioral data science to baseline known good behavior and detects anomalies.
display: Abnormal Security
name: Abnormal Security
script:
  commands:
    - arguments:
        - description: Value must be of the format `filter={FILTER KEY} gte YYYY-MM-DDTHH:MM:SSZ lte YYYY-MM-DDTHH:MM:SSZ`. A `{FILTER KEY}` must be specified, and currently the only keys that are supported for `/threats` are `receivedTime` and `lastModifiedTime`. At least 1 of `gte`/`lte` must be specified, with a datetime string following the `YYYY-MM-DDTHH:MM:SSZ format`.
          name: filter
        - description: Number of threats that on in each page. Each page of data will have at most page_size threats. Has no effect if filter is not specified.
          name: page_size
        - description: 1-indexed page number to get a particular page of threats. Has no effect if filter is not specified.
          name: page_number
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Filters threats based on the source of detection.
          name: source
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get a list of threats.
      name: abnormal-security-list-threats
      outputs:
        - contextPath: AbnormalSecurity.inline_response_200.threats.threatId
          description: An id which maps to a threat campaign. A threat campaign might be received by multiple users.
          type: String
        - contextPath: AbnormalSecurity.inline_response_200.pageNumber
          description: The current page number. Will not be be in the response if no filter query  meter is passed in via the request.
          type: Number
        - contextPath: AbnormalSecurity.inline_response_200.nextpageNumber
          description: The next page number. Will not be included in the response if there are no more pages of data or if no filter query meter is passed in via the request.
          type: Number

    - arguments:
        - description: A UUID representing a threat campaign. Full list of threat IDs can be obtained by first running the command to list a threat.
          name: threat_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get details of a threat.
      name: abnormal-security-get-threat
      outputs:
        - contextPath: AbnormalSecurity.ThreatDetails.threatId
          description: An id which maps to a threat campaign. A threat campaign might be received by multiple users.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.threatId
          description: An id which maps to a threat campaign. A threat campaign might be received by multiple users.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.abxMessageId
          description: A unique identifier for an individual message within a threat (i.e email campaign).
          type: Number
        - contextPath: AbnormalSecurity.ThreatDetails.messages.abxPortalUrl
          description: The URL at which the specific message details are viewable in Abnormal Security's Portal web interface.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.subject
          description: The email subject.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.fromAddress
          description: The email address of the sender.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.fromName
          description: The display name of the sender.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.toAddresses
          description: All the email addresses to which the message was sent, comma-se ted & truncated at 255 chars.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.recipientAddress
          description: the email address of the user who actually received the message.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.receivedTime
          description: The timestamp at which this message arrived.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.sentTime
          description: The timestamp at which this message was sent.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.internetMessageId
          description: The internet message ID, per RFC 822.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.autoRemediated
          description: Abnormal has automatically detected and remediated this message from the user's mailbox.
          type: Boolean
        - contextPath: AbnormalSecurity.ThreatDetails.messages.postRemediated
          description: Email campaigns that were remediated at a later time, after landing in user's mailbox.
          type: Boolean
        - contextPath: AbnormalSecurity.ThreatDetails.messages.attackType
          description: The type of threat the message represents.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.attackStrategy
          description: The attack strategy identified to be used by a threat campaign.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.returnPath
          description: The potential path where information is returned to the attacker.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.senderIpAddress
          description: IP address of sender.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.impersonatedParty
          description: Impersonated party, if any.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.attackVector
          description: The attack medium.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.remediationTimestamp
          description: The timestamp at which this message was remediated, or empty if it has not been remediated.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.isRead
          description: Whether an email has been read.
          type: Boolean
        - contextPath: AbnormalSecurity.ThreatDetails.messages.attackedParty
          description: The party that was targeted by an attack.
          type: String

        - contextPath: AbnormalSecurity.ThreatDetails.messages.attachmentCount
          description: The number of attachments in the message.
          type: Number
        - contextPath: AbnormalSecurity.ThreatDetails.messages.attachmentNames
          description: List of attachment names in the message.
          type: Unknown
        - contextPath: AbnormalSecurity.ThreatDetails.messages.ccEmails
          description: List of CC'd email addresses.
          type: Unknown
        - contextPath: AbnormalSecurity.ThreatDetails.messages.replyToEmails
          description: List of email addresses to reply to.
          type: Unknown
        - contextPath: AbnormalSecurity.ThreatDetails.messages.senderDomain
          description: The domain of the sender's email address.
          type: String
        - contextPath: AbnormalSecurity.ThreatDetails.messages.summaryInsights
          description: Summary insights of the message.
          type: Unknown
        - contextPath: AbnormalSecurity.ThreatDetails.messages.urlCount
          description: Count of URLs in the message.
          type: Number
        - contextPath: AbnormalSecurity.ThreatDetails.messages.urls
          description: List of URLs in the message.
          type: Unknown
        - contextPath: AbnormalSecurity.ThreatDetails.messages.remediationStatus
          description: The status of remediation for the message.
          type: String

    - arguments:
        - description: A UUID representing a threat campaign. Full list of threat IDs can be obtained by first running the command to list a threat.
          name: threat_id
          required: true
        - description: Action to perform on threat.
          name: action
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Manage a Threat identified by Abnormal Security.
      name: abnormal-security-manage-threat
      outputs:
        - contextPath: AbnormalSecurity.ThreatManageResults.action_id
          description: ID of the action taken.
          type: String
        - contextPath: AbnormalSecurity.ThreatManageResults.status_url
          description: URL of the status of the action.
          type: String

    - arguments:
        - description: A UUID representing a threat campaign. Full list of threat IDs can be obtained by first running the command to list a threat.
          name: threat_id
          required: true
        - description: A UUID representing the action id for a threat. Can be obtained from payload after performing an action on the threat.
          name: action_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Check the status of an action requested on a threat.
      name: abnormal-security-check-threat-action-status
      outputs:
        - contextPath: AbnormalSecurity.ActionStatus.status
          description: The status of a threat after performing an action on it.
          type: String
        - contextPath: AbnormalSecurity.ActionStatus.description
          description: The description of the status.
          type: String
    - arguments:
        - description: Filter the results based on a filter key. Value must be of the format `filter={FILTER KEY} gte YYYY-MM-DDTHH:MM:SSZ lte YYYY-MM-DDTHH:MM:SSZ`. Supported keys - [`receivedTime`].
          name: filter
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Filters threats based on the source of detection.
          name: source
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Download data from Threat Log in .csv format.
      name: abnormal-security-download-threat-log-csv
    - arguments:
        - description: Value must be of the format `filter={FILTER KEY} gte YYYY-MM-DDTHH:MM:SSZ lte YYYY-MM-DDTHH:MM:SSZ`. A `{FILTER KEY}` must be specified, and currently the only key that is supported for `/cases` is `lastModifiedTime`. At least 1 of `gte`/`lte` must be specified, with a datetime string following the `YYYY-MM-DDTHH:MM:SSZ` format.
          name: filter
        - description: Number of cases that are on each page. Each page of data will have at most page_size threats. Has no effect if filter is not specified.
          name: page_size
        - description: 1-indexed page number to get a particular page of cases. Has no effect if filter is not specified.
          name: page_number
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get a list of Abnormal cases identified by Abnormal Security.
      name: abnormal-security-list-abnormal-cases
      outputs:
        - contextPath: AbnormalSecurity.inline_response_200_1.cases.caseId
          description: A unique identifier for this case.
          type: String
        - contextPath: AbnormalSecurity.inline_response_200_1.cases.description
          description: Description of the severity level for this case.
          type: String
        - contextPath: AbnormalSecurity.inline_response_200_1.pageNumber
          description: The current page number. Will not be be in the response if no filter query meter is passed in via the request.
          type: Number
        - contextPath: AbnormalSecurity.inline_response_200_1.nextpageNumber
          description: The next page number. Will not be included in the response if there are no more pages of data or if no filter query meter is passed in via the request.
          type: Number

    - arguments:
        - description: A string representing the email case. Can be retrieved by first running command to list cases.
          name: case_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get details of an Abnormal case.
      name: abnormal-security-get-abnormal-case
      outputs:
        - contextPath: AbnormalSecurity.AbnormalCaseDetails.caseId
          description: A unique identifier for this case.
          type: String
        - contextPath: AbnormalSecurity.AbnormalCaseDetails.severity
          description: Description of the severity level for this case.
          type: String
        - contextPath: AbnormalSecurity.AbnormalCaseDetails.affectedEmployee
          description: Which employee this case pertains to.
          type: String
        - contextPath: AbnormalSecurity.AbnormalCaseDetails.firstObserved
          description: First time suspicious behavior was observed.
          type: String
    - arguments:
        - description: A string representing the email case. Can be retrieved by first running command to list cases.
          name: case_id
          required: true
        - description: Action to perform on case.
          name: action
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Manage an Abnormal Case.
      name: abnormal-security-manage-abnormal-case
      outputs:
        - contextPath: AbnormalSecurity.CaseManageResults.action_id
          description: ID of the action taken.
          type: String
        - contextPath: AbnormalSecurity.CaseManageResults.status_url
          description: URL of the status of the action.
          type: String
    - arguments:
        - description: A string representing the email case. Can be retrieved by first running command to list cases.
          name: case_id
          required: true
        - description: A string representing the email case. Can be retrieved from payload after performing an action on a case.
          name: action_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Check the status of an action requested on a case.
      name: abnormal-security-check-case-action-status
      outputs:
        - contextPath: AbnormalSecurity.ActionStatus.status
          description: Status of the case after an action is performed.
          type: String
        - contextPath: AbnormalSecurity.ActionStatus.description
          description: Detailed description of the status.
          type: String
    - arguments:
        - description: A string representing the email case. Can be retrieved by first running command to list cases.
          name: case_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Provides the analysis and timeline details of a case.
      name: abnormal-security-get-case-analysis-and-timeline
      outputs:
        - contextPath: AbnormalSecurity.CaseAnalysis.insights.signal
          description: Insight signal or highlight of a case.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.insights.description
          description: Description of insight signal or highlight.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.eventTimeline.event_timestamp
          description: Time when event occurred.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.eventTimeline.category
          description: Type of event.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.eventTimeline.title
          description: Title of the event.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.eventTimeline.ip_address
          description: IP Address where user accessed mail from.
          type: String
        - contextPath: AbnormalSecurity.CaseAnalysis.eventTimeline.field_labels
          description: Analysis labels associated with the fields in the timeline event.
          type: Unknown
    - arguments:
        - description: Value must be of the format `filter={FILTER KEY} gte YYYY-MM-DDTHH:MM:SSZ lte YYYY-MM-DDTHH:MM:SSZ`. A `{FILTER KEY}` must be specified, and currently only the key `lastReportedTime` is supported for `/abusecampaigns`. At least one of `gte`/`lte` must be specified, with a datetime string following the `YYYY-MM-DDTHH:MM:SSZ` format. Do note that provided filter time is in UTC.
          name: filter
        - description: Number of abuse campaigns shown on each page. Each page of data will have at most page_size abuse campaign IDs.
          name: page_size
        - description: 1-indexed page number to get a particular page of threats. Has no effect if filter is not specified.
          name: page_number
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get a list of campaigns submitted to Abuse Mailbox.
      name: abnormal-security-list-abuse-mailbox-campaigns
      outputs:
        - contextPath: AbnormalSecurity.AbuseCampaign.campaigns.campaignId
          description: An id which maps to an abuse campaign.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.pageNumber
          description: The current page number.
          type: Number
        - contextPath: AbnormalSecurity.AbuseCampaign.nextPageNumber
          description: The next page number.
          type: Number
    - arguments:
        - description: A UUID representing the abuse campaign id. Can be Can be retrieved by first running command to list abuse mailbox campaigns.
          name: campaign_id
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Subtenant of the user (if applicable).
          name: subtenant
      description: Get details of an Abuse Mailbox campaign.
      name: abnormal-security-get-abuse-mailbox-campaign
      outputs:
        - contextPath: AbnormalSecurity.AbuseCampaign.campaignId
          description: An id which maps to an abuse campaign.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.firstReported
          description: Date abuse campaign was first reported.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.lastReported
          description: Date abuse campaign was last reported.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.messageId
          description: A unique identifier for the first message in the abuse campaign.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.subject
          description: Subject of the first email in the abuse campaign.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.fromName
          description: The display name of the sender.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.fromAddress
          description: The email address of the sender.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.recipientName
          description: The email address of the recipient.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.recipientAddress
          description: The email address of the recipient.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.judgementStatus
          description: Judgement status of message.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.overallStatus
          description: Overall status of message.
          type: String
        - contextPath: AbnormalSecurity.AbuseCampaign.attackType
          description: The type of threat the message represents.
          type: String

    # Employee commands
    - arguments:
        - description: Email address of the employee you want to retrieve data for.
          name: email_address
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Get employee identity analysis (Genome) data.
      name: abnormal-security-get-employee-identity-analysis
      outputs:
        - contextPath: AbnormalSecurity.Employee.email
          description: Employee email.
          type: String
        - contextPath: AbnormalSecurity.Employee.histograms.key
          description: Genome key name.
          type: String
        - contextPath: AbnormalSecurity.Employee.histograms.name
          description: Genome title.
          type: String
        - contextPath: AbnormalSecurity.Employee.histograms.description
          description: Description of genome object.
          type: String
        - contextPath: AbnormalSecurity.Employee.histograms.values.value
          description: Category value.
          type: String
        - contextPath: AbnormalSecurity.Employee.histograms.values.percentage
          description: Ratio of this category relative to others.
          type: Number
        - contextPath: AbnormalSecurity.Employee.histograms.values.total_count
          description: Number of occurences for this category.
          type: Number

    - arguments:
        - description: Email address of the employee you want to retrieve data for.
          name: email_address
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Get employee information.
      name: abnormal-security-get-employee-information
      outputs:
        - contextPath: AbnormalSecurity.Employee.name
          description: Name of the employee.
          type: String
        - contextPath: AbnormalSecurity.Employee.email
          description: Email of the employee.
          type: String
        - contextPath: AbnormalSecurity.Employee.title
          description: Job title of the employee.
          type: String
        - contextPath: AbnormalSecurity.Employee.manager
          description: Email address of the employee's manager.
          type: String

    - arguments:
        - description: Email address of the employee you want to retrieve data for.
          name: email_address
          required: true
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Get employee login information for last 30 days in csv format.
      name: abnormal-security-get-employee-last-30-days-login-csv
    - arguments:
        - description: Returns test data if set to `True`.
          name: mock-data
        - description: Email of the reporter.
          name: reporter
          required: true
        - description: Type of misjudgement reported.
          name: report_type
          required: true
      description: Submit an Inquiry to request a report on misjudgement by Abnormal Security.
      name: abnormal-security-submit-inquiry-to-request-a-report-on-misjudgement
      outputs:
        - contextPath: AbnormalSecurity.SubmitInquiry.detail
          description: Confirmation of inquiry sent.
          type: String

    - arguments:
        - description: Email address of the sender.
          name: sender_email
          required: true
        - description: Email address of the recipient.
          name: recipient_email
          required: true
        - description: Subject of email.
          name: subject
          required: true
      description: Submit a False Negative Report.
      name: abnormal-security-submit-false-negative-report

    - arguments:
        - description: URL link of threat log in abnormal security portal.
          name: portal_link
          required: true
      description: Submit a False Positive Report.
      name: abnormal-security-submit-false-positive-report

    - arguments:
        - description: Number of vendors that should appear on each page. Each page of data will have at most this many vendors.
          name: page_size
          required: false
        - description: 1-indexed page number to get a particular page of vendors.
          name: page_number
          required: false
      description: Get a list of vendors.
      name: abnormal-security-list-vendors
      outputs:
        - contextPath: AbnormalSecurity.VendorsList
          description: List of vendors.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorsList.vendorDomain
          description: The domain of the vendor.
          type: String

    - arguments:
        - description: The domain name of the specific vendor for which you want to get details.
          name: vendor_domain
          required: true
      description: Get the details of a specific vendor.
      name: abnormal-security-get-vendor-details
      outputs:
        - contextPath: AbnormalSecurity.VendorDetails.vendorDomain
          description: The domain name of the vendor.
          type: String
        - contextPath: AbnormalSecurity.VendorDetails.riskLevel
          description: The risk level associated with the vendor.
          type: String
        - contextPath: AbnormalSecurity.VendorDetails.vendorContacts
          description: List of contacts related to the vendor.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorDetails.companyContacts
          description: List of contacts related to the company.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorDetails.vendorCountries
          description: List of countries associated with the vendor.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorDetails.analysis
          description: List of analyses associated with the vendor.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorDetails.vendorIpAddresses
          description: List of IP addresses associated with the vendor.
          type: Unknown

    - arguments:
        - description: Domain name for the vendor whose activity is to be retrieved.
          name: vendor_domain
          required: true
      description: Get the activity for a specific vendor.
      name: abnormal-security-get-vendor-activity
      outputs:
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline
          description: Event timeline for the vendor.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.eventTimestamp
          description: Timestamp of the event in the vendor's activity timeline.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.eventType
          description: Type of event in the vendor's activity timeline.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.suspiciousDomain
          description: Suspicious domain involved in the event.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.domainIp
          description: IP address of the suspicious domain.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.ipGeolocation
          description: Geolocation of the IP address.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.attackGoal
          description: The goal of the attack.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.actionTaken
          description: Action taken in response to the event.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.hasEngagement
          description: Indicates whether the event involved any form of engagement.
          type: Boolean
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.recipient
          description: The recipient targeted by the event, if applicable.
          type: String
        - contextPath: AbnormalSecurity.VendorActivity.eventTimeline.threatId
          description: Unique identifier for the threat.
          type: String

    - arguments:
        - description: Value must be of the format `filter={FILTER KEY} gte YYYY-MM-DDTHH:MM:SSZ lte YYYY-MM-DDTHH:MM:SSZ`. A `{FILTER KEY}` must be specified, and currently only the keys `firstObservedTime` and `lastModifiedTime` are supported for `/vendor-cases`. At least one of `gte`/`lte` must be specified, with a datetime string following the `YYYY-MM-DDTHH:MM:SSZ` format. Do note that provided filter time is in UTC.
          name: filter
          required: false
        - description: Number of vendor cases that should appear on each page. Each page of data will have at most this many vendor cases.
          name: page_size
          required: false
        - description: 1-indexed page number to get a particular page of vendor cases.
          name: page_number
          required: false
      description: Get a list of vendor cases.
      name: abnormal-security-list-vendor-cases
      outputs:
        - contextPath: AbnormalSecurity.VendorCases
          description: List of vendor cases.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorCases.vendorCaseId
          description: The identifier of the vendor case.
          type: Number

    - arguments:
        - description: The identifier of the vendor case to retrieve details for.
          name: case_id
          required: true
      description: Get the details of a vendor case.
      name: abnormal-security-get-vendor-case-details
      outputs:
        - contextPath: AbnormalSecurity.VendorCaseDetails.vendorCaseId
          description: The identifier of the vendor case.
          type: String
        - contextPath: AbnmoralSecurity.VendorCaseDetails.vendorDomain
          description: The vendor domain associated with the case.
          type: String
        - contextPath: AbnormalSecurity.VendorCaseDetails.firstObservedTime
          description: The time the vendor case was first observed.
          type: String
        - contextPath: AbnormalSecurity.VendorCaseDetails.lastModifiedTime
          description: The last time the vendor case was modified.
          type: String
        - contextPath: AbnormalSecurity.VendorCaseDetails.insights
          description: List of insights related to the vendor case.
          type: Unknown
        - contextPath: AbnormalSecurity.VendorCaseDetails.timeline
          description: Timeline of events related to the vendor case.
          type: Unknown

    - arguments:
        - description: The start time for retrieving the list of unanalyzed abuse mailbox campaigns.
          name: start
          required: false
        - description: The end time for retrieving the list of unanalyzed abuse mailbox campaigns.
          name: end
          required: false
      description: Get a list of unanalyzed abuse mailbox campaigns.
      name: abnormal-security-list-unanalyzed-abuse-mailbox-campaigns
      outputs:
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.abx_message_id
          description: An id which maps to an abuse campaign.
          type: Number
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.recipient.name
          description: The name of the recipient.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.recipient.email
          description: The email address of the recipient.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.reported_datetime
          description: The datetime the report was made.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.reporter.email
          description: The email address of the reporter.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.reporter.name
          description: The name of the reporter.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.subject
          description: The subject of the message.
          type: String
        - contextPath: AbnormalSecurity.UnanalyzedAbuseCampaigns.results.not_analyzed_reason
          description: The reason the message was not analyzed.
          type: String

    - arguments:
        - description: Returns test data if set to `True`.
          name: mock-data
      description: Get the latest threat intel feed.
      name: abnormal-security-get-latest-threat-intel-feed
      deprecated: true
  dockerimage: demisto/python3:3.10.13.75921
  script: ""
  subtype: python3
  type: python
  isfetch: true
fromversion: 6.0.0
tests:
  - No tests (auto formatted)
