category: Utilities
commonfields:
  id: AWS - System Manager
  version: -1
configuration:
- display: AWS Default Region
  name: defaultRegion
  options:
  - us-east-1
  - us-east-2
  - us-west-1
  - us-west-2
  - ca-central-1
  - eu-west-1
  - eu-central-1
  - eu-west-2
  - ap-northeast-1
  - ap-northeast-2
  - ap-southeast-1
  - ap-southeast-2
  - ap-south-1
  - sa-east-1
  - eu-north-1
  - eu-west-3
  - us-gov-east-1
  - us-gov-west-1
  type: 15
  required: true
- display: Role Arn
  name: roleArn
  type: 0
  required: false
- display: Role Session Name
  name: roleSessionName
  type: 0
  required: false
- display: Role Session Duration
  name: sessionDuration
  type: 0
  required: false
- display: Access Key
  name: credentials
  type: 9
  displaypassword: Secret Key
  required: false
- display: Timeout
  name: timeout
  defaultvalue: 60,10
  additionalinfo: "The time in seconds till a timeout exception is reached. You can specify just the read timeout (for example 60) or also the connect timeout followed after a comma (for example 60,10). If a connect timeout is not specified, a default of 10 seconds will be used."
  type: 0
  required: false
- display: Retries
  name: retries
  type: 0
  defaultvalue: 5
  additionalinfo: "The maximum number of retry attempts when connection or throttling errors are encountered. Set to 0 to disable retries. The default value is 5 and the limit is 10. Note: Increasing the number of retries will increase the execution time."
  required: false
- display: Trust any certificate (not secure)
  name: insecure
  type: 8
  required: false
- display: Use system proxy settings
  name: proxy
  type: 8
  required: false
description: AWS Systems Manager is the operations hub for your AWS applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.
display: AWS - System Manager
name: AWS - System Manager
script:
  commands:
  - arguments:
    - auto: PREDEFINED
      description: |-
        Specifies the type of resource for tagging.
        Note: The ManagedInstance type for this API operation is for on-premises managed nodes.
      name: resource_type
      required: true
      predefined:
      - Association
      - Automation
      - Document
      - MaintenanceWindow
      - ManagedInstance
      - OpsItem
      - OpsMetadata
      - PatchBaseline
      - Parameter
    - description: 'The resource ID to be tagged.(e.g. MaintenanceWindow: mw-012345abcde, PatchBaseline: pb-012345abcde, for more example see in the README)'
      name: resource_id
      required: true
    - description: 'The name of the tag. Note: Don’t enter personally identifiable information in this field.'
      name: tag_key
      required: true
    - description: 'The value of the tag. Note: Don’t enter personally identifiable information in this field.'
      name: tag_value
      required: true
    description: |-
      Adds or overwrites one tag for the specified resource.
      Tags are metadata that you can assign to your automations, documents, managed nodes, maintenance windows, Parameter Store parameters, and patch baselines.
      Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment.
      Each tag consists of a key and an optional value, both of which you define.
      For example, you could define a set of tags for your account’s managed nodes that helps you track each node’s owner and stack level.
      For example, Key=Owner,Value=SysAdmin.
    name: aws-ssm-tag-add
  - arguments:
    - auto: PREDEFINED
      description: |-
        Specifies the type of resource for tagging.
        Note: The ManagedInstance type for this API operation is for on-premises managed nodes.
      name: resource_type
      required: true
      predefined:
      - Association
      - Automation
      - Document
      - MaintenanceWindow
      - ManagedInstance
      - OpsItem
      - OpsMetadata
      - PatchBaseline
      - Parameter
    - description: 'The ID of the resource to remove tags.(e.g. MaintenanceWindow: mw-012345abcde, PatchBaseline: pb-012345abcde, for more examples see in the README)'
      name: resource_id
      required: true
    - description: The name of the tag which want to be remove.
      name: tag_key
      required: true
    description: Removes tag keys from the specified resource.
    name: aws-ssm-tag-remove
  - arguments:
    - description: The maximum number of items to return for this call, the default and max is 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      name: limit
    - description: The token for the next set of items to return. (Received this token from a previous call.)
      name: next_token
    description: Query inventory information. This includes managed node status, such as Stopped or Terminated.
    name: aws-ssm-inventory-get
    outputs:
    - contextPath: AWS.SSM.InventoryNextToken
      description: The token for the next set of items to return.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Id
      description: ID of the inventory result entity. For example, for managed node inventory the result will be the managed node ID. For EC2 instance inventory, the result will be the instance ID.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.TypeName
      description: The name of the inventory result item type.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.SchemaVersion
      description: The schema version for the inventory result item.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.CaptureTime
      description: The time inventory item data was captured.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.ContentHash
      description: MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API doesn’t update the inventory item type contents if the MD5 hash hasn’t changed since last update.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.AgentType
      description: The type of SSM agent running on the instance.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.AgentVersion
      description: The version of the SSM agent running on the instance.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.ComputerName
      description: The fully qualified host name of the managed node.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.IpAddress
      description: The IP address of the managed node.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.PlatformName
      description: The name of the operating system platform running on the managed node.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.PlatformType
      description: The operating system platform type.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.PlatformVersion
      description: The version of the OS platform running on the managed node.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.ResourceType
      description: The type of instance. Instances are either EC2 instances or managed instances.
      type: String
    - contextPath: AWS.SSM.Inventory.Entities.Data.Content.InstanceId
      description: The managed node ID.
      type: String
  - arguments:
    - description: 'The managed node ID to get inventory information for. Note: to get the instance ID, run the aws-ssm-inventory-get command.'
      name: instance_id
      required: true
    - description: The type of inventory item to get information for.
      name: type_name
      required: true
    - description: The maximum number of items to return for this call, the default and max is 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      name: limit
    - description: The token for the next set of items to return. (Received this token from a previous call.)
      name: next_token
    description: A list of inventory items returned by the request.
    name: aws-ssm-inventory-entry-list
    outputs:
    - contextPath: AWS.SSM.InventoryEntryNextToken
      description: The token for the next set of items to return.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.TypeName
      description: The type of inventory item returned by the request.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.InstanceId
      description: The managed node ID targeted by the request to query inventory information.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.SchemaVersion
      description: The inventory schema version used by the managed node(s).
      type: String
    - contextPath: AWS.SSM.InventoryEntry.CaptureTime
      description: The time that inventory information was collected for the managed node(s).
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.AgentVersion
      description: The version of the SSM agent running on the instance.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.AgentType
      description: The type of SSM agent running on the instance.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.ComputerName
      description: The fully qualified host name of the managed node.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.IpAddress
      description: The IP address of the managed node.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.PlatformName
      description: The name of the operating system platform running on the managed node.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.PlatformType
      description: The operating system platform type.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.PlatformVersion
      description: The version of the OS platform running on the managed node.
      type: String
    - contextPath: AWS.SSM.InventoryEntry.Entries.ResourceType
      description: The type of instance. Instances are either EC2 instances or managed instances.
      type: String
  - arguments:
    - description: The maximum number of items to return for this call, the default and max is 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      name: limit
    - description: The token for the next set of items to return. (Received this token from a previous call.)
      name: next_token
    description: "Returns all State Manager associations in the current Amazon Web Services account and Amazon Web Services Region. Note: An association is a binding between a document and a set of targets with a schedule."
    name: aws-ssm-association-list
    outputs:
    - contextPath: AWS.SSM.AssociationNextToken
      description: The token for the next set of items to return.
      type: String
    - contextPath: AWS.SSM.Association.Name
      description: The name of the SSM document.
      type: String
    - contextPath: AWS.SSM.Association.AssociationName
      description: The association name.
      type: String
    - contextPath: AWS.SSM.Association.InstanceId
      description: The managed node ID.
      type: String
    - contextPath: AWS.SSM.Association.AssociationId
      description: The ID created by the system when crating an association. An association is a binding between a document and a set of targets with a schedule.
      type: String
    - contextPath: AWS.SSM.Association.AssociationVersion
      description: The association version.
      type: String
    - contextPath: AWS.SSM.Association.DocumentVersion
      description: The version of the document used in the association.
      type: String
    - contextPath: AWS.SSM.Association.Targets.Key
      description: User-defined criteria for sending commands that target managed nodes that meet the criteria.
      type: String
    - contextPath: AWS.SSM.Association.Targets.Values
      description: User-defined criteria that maps to Key.
      type: String
    - contextPath: AWS.SSM.Association.LastExecutionDate
      description: The date on which the association was last run.
      type: String
    - contextPath: AWS.SSM.Association.Overview.Status
      description: "The status of the association. Status can be: Pending, Success, or Failed."
      type: String
    - contextPath: AWS.SSM.Association.Overview.DetailedStatus
      description: A detailed status of the association.
      type: String
    - contextPath: AWS.SSM.Association.Overview.AssociationStatusAggregatedCount
      description: Returns the number of targets for the association status. For example, if you created an association with two managed nodes, and one of them was successful, this would return the count of managed nodes by status.
      type: String
    - contextPath: AWS.SSM.Association.ScheduleExpression
      description: A cron expression that specifies a schedule when the association runs. The schedule runs in Coordinated Universal Time (UTC).
      type: String
    - contextPath: AWS.SSM.Association.ScheduleOffset
      description: Number of days to wait after the scheduled day to run an association.
      type: Number
  - arguments:
    - description: The name of the SSM document.
      name: document_name
    - description: The managed node ID.
      name: instance_id
    - description: The association ID for which information is requested.
      name: association_id
    - description: Specify the association version to retrieve. To view the latest version, either specify $LATEST for this parameter, or omit this parameter.
      name: association_version
    description: Describes the association for the specified target or managed node. if the association was established using the Targets parameter, the association details must be retrieved using the associated ID. this command must provide either association id or instance_id and document_name
    name: aws-ssm-association-get
    outputs:
    - contextPath: AWS.SSM.Association.AssociationDescription.Name
      description: The name of the SSM document.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.InstanceId
      description: The managed node ID.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.AssociationVersion
      description: The association version.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Date
      description: The date when the association was made.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.LastUpdateAssociationDate
      description: The date when the association was last updated.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Status.Date
      description: The date when the status changed.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Status.Name
      description: The status.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Status.Message
      description: The reason for the status.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Status.AdditionalInfo
      description: A user-defined string.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Overview.Status
      description: 'The status of the association. Status can be: Pending, Success, or Failed.'
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Overview.DetailedStatus
      description: A detailed status of the association.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Overview.AssociationStatusAggregatedCount
      description: Returns the number of targets for the association status. For example, if an association was created with two managed nodes, and one of them was successful, this would return the count of managed nodes by status.
      type: Number
    - contextPath: AWS.SSM.Association.AssociationDescription.DocumentVersion
      description: The document version.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.AutomationTargetParameterName
      description: Choose the parameter that will define how the automation will branch out. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of Amazon Web Services Systems Manager.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Parameters
      description: A description of the parameters for a document.
      type: Dictionary
    - contextPath: AWS.SSM.Association.AssociationDescription.AssociationId
      description: The association ID.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Targets.Key
      description: User-defined criteria for sending commands that target managed nodes that meet the criteria.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.Targets.Values
      description: User-defined criteria that maps to Key.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.ScheduleExpression
      description: A cron expression that specifies a schedule when the association runs.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.OutputLocation
      description: An S3 bucket where to store the output details of the request.
    - contextPath: AWS.SSM.Association.AssociationDescription.OutputLocation.S3Location.OutputS3Region
      description: The Amazon Web Services Region of the S3 bucket.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.OutputLocation.S3Location.OutputS3BucketName
      description: The name of the S3 bucket.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.OutputLocation.S3Location.OutputS3KeyPrefix
      description: The S3 bucket subfolder.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.LastExecutionDate
      description: The date on which the association was last run.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.LastSuccessfulExecutionDate
      description: The last date on which the association was successfully run.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.AssociationName
      description: The association name.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.MaxErrors
      description: The number of errors that are allowed before the system stops sending requests to run the association on additional targets.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.MaxConcurrency
      description: The maximum number of targets allowed to run the association at the same time.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.ComplianceSeverity
      description: The severity level that is assigned to the association.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.SyncCompliance
      description: The mode for generating association compliance. AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn’t run successfully, the association is NON-COMPLIANT. In MANUAL mode, must specify the AssociationId as a parameter for the PutComplianceItems API operation. In this case, compliance data isn’t managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by direct call to the PutComplianceItems API operation. By default, all associations use AUTO mode.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.ApplyOnlyAtCronInterval
      description: By default, when creating a new association, the system runs it immediately after it is created and then according to the schedule that was specified. This parameter isn’t supported for rate expressions.
      type: Boolean
    - contextPath: AWS.SSM.Association.AssociationDescription.CalendarNames
      description: The names or Amazon Resource Names (ARNs) of the Change Calendar type documents your associations are gated under. The associations only run when that change calendar is open.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.Accounts
      description: The Amazon Web Services accounts targeted by the current Automation execution.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.Regions
      description: The Amazon Web Services Regions targeted by the current Automation execution.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.TargetLocationMaxConcurrency
      description: The maximum number of Amazon Web Services Regions and Amazon Web Services accounts allowed to run the Automation concurrently.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.TargetLocationMaxErrors
      description: The maximum number of errors allowed before the system stops queueing additional Automation executions for the currently running Automation.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.ExecutionRoleName
      description: The Automation execution role used by the currently running Automation. If not specified, the default value is AWS-SystemsManager-AutomationExecutionRole.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.TargetLocationAlarmConfiguration.IgnorePollAlarmFailure
      description: When this value is true, the automation or command continues to run in cases where we can’t retrieve alarm status information from CloudWatch. In cases where we successfully retrieve an alarm status of OK or INSUFFICIENT_DATA, the automation or command continues to run, regardless of this value. Default is false.
      type: Boolean
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetLocations.TargetLocationAlarmConfiguration.Alarms.Name
      description: The name of the CloudWatch alarm.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.ScheduleOffset
      description: Number of days to wait after the scheduled day to run an association.
      type: Number
    - contextPath: AWS.SSM.Association.AssociationDescription.TargetMaps
      description: A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can’t be specified together.
      type: List
    - contextPath: AWS.SSM.Association.AssociationDescription.AlarmConfiguration.IgnorePollAlarmFailure
      description: When this value is true, the automation or command continues to run in cases where we can’t retrieve alarm status information from CloudWatch. In cases where we successfully retrieve an alarm status of OK or INSUFFICIENT_DATA, the automation or command continues to run, regardless of this value. Default is false.
      type: Boolean
    - contextPath: AWS.SSM.Association.AssociationDescription.AlarmConfiguration.Alarms.Name
      description: The name of the CloudWatch alarm.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TriggeredAlarms.Name
      description: The CloudWatch alarm that was invoked during the association.
      type: String
    - contextPath: AWS.SSM.Association.AssociationDescription.TriggeredAlarms.State
      description: The state of the CloudWatch alarm.
      type: String
  - arguments:
    - description: The association ID for which want to view all versions.
      name: association_id
      required: true
    - description: The maximum number of items to return for this call, the default and max is 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      name: limit
    - description: The token for the next set of items to return. (Received this token from a previous call.)
      name: next_token
    description: Retrieves all versions of an association for a specific association ID.
    name: aws-ssm-association-version-list
    outputs:
    - contextPath: AWS.SSM.AssociationVersionNextToken
      description: The token for the next set of items to return. Use this token to get the next set of results.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.AssociationId
      description: The ID created by the system when the association was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.AssociationVersion
      description: The association version.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.CreatedDate
      description: The date the association version was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.Name
      description: The name specified when the association was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.DocumentVersion
      description: The version of an Amazon Web Services Systems Manager document (SSM document) used when the association version was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.Parameters
      description: Parameters specified when the association version was created.
      type: Dictionary
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.Targets.Key
      description: User-defined criteria for sending commands that target managed nodes that meet the criteria.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.Targets.Values
      description: User-defined criteria that maps to Key, Depending on the type of target, the maximum number of values for a key might be lower than the global maximum of 50.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.ScheduleExpression
      description: The cron or rate schedule specified for the association when the association version was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.OutputLocation.S3Location
      description: An S3 bucket where to store the output details of the request.
      type: Dictionary
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.OutputLocation.S3Location.OutputS3Region
      description: The Amazon Web Services Region of the S3 bucket.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.OutputLocation.S3Location.OutputS3BucketName
      description: The name of the S3 bucket.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.OutputLocation.S3Location.OutputS3KeyPrefix
      description: The S3 bucket subfolder.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.AssociationName
      description: The name specified for the association version when the association version was created.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.MaxErrors
      description: The number of errors that are allowed before the system stops sending requests to run the association on additional targets. Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.MaxConcurrency
      description: The maximum number of targets allowed to run the association at the same time. If a new managed node starts and attempts to run an association while Systems Manager is running MaxConcurrency associations, the association is allowed to run. During the next association interval, the new managed node will process its association within the limit specified for MaxConcurrency.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.ComplianceSeverity
      description: The severity level that is assigned to the association.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.SyncCompliance
      description: The mode for generating association compliance. can specify AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn’t run successfully, the association is NON-COMPLIANT. By default, all associations use AUTO mode. In MANUAL mode, must specify the AssociationId as a parameter for the PutComplianceItems API operation. In this case, compliance data isn’t managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by your direct call to the PutComplianceItems API operation.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.ApplyOnlyAtCronInterval
      description: By default, when creating a new association, the system runs it immediately after it is created and then according to the schedule that was specified. This parameter isn’t supported for rate expressions.
      type: Boolean
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.CalendarNames
      description: 'The names or Amazon Resource Names (ARNs) of the Change Calendar type documents your associations are gated under. The associations for this version only run when that Change Calendar is open. '
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.Accounts
      description: The Amazon Web Services accounts targeted by the current Automation execution.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.Regions
      description: The Amazon Web Services Regions targeted by the current Automation execution.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.TargetLocationMaxConcurrency
      description: The maximum number of Amazon Web Services Regions and Amazon Web Services accounts allowed to run the Automation concurrently.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.TargetLocationMaxErrors
      description: The maximum number of errors allowed before the system stops queueing additional Automation executions for the currently running Automation.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.ExecutionRoleName
      description: The Automation execution role used by the currently running Automation. If not specified, the default value is AWS-SystemsManager-AutomationExecutionRole.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.TargetLocationAlarmConfiguration.IgnorePollAlarmFailure
      description: When this value is true, the automation or command continues to run in cases where we can’t retrieve alarm status information from CloudWatch. In cases where we successfully retrieve an alarm status of OK or INSUFFICIENT_DATA, the automation or command continues to run, regardless of this value. Default is false.
      type: Boolean
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetLocations.TargetLocationAlarmConfiguration.Alarms.Name
      description: The name of the CloudWatch alarm.
      type: String
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.ScheduleOffset
      description: Number of days to wait after the scheduled day to run an association.
      type: Number
    - contextPath: AWS.SSM.AssociationVersion.AssociationVersions.TargetMaps
      description: A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can’t be specified together.
      type: Dictionary
  - arguments:
    - description: The maximum number of items to return for this call, the default and max is 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      name: limit
    - description: The token for the next set of items to return. (Received this token from a previous call.)
      name: next_token
    description: Returns all Systems Manager (SSM) documents in the current Amazon Web Services account and Amazon Web Services Region.
    name: aws-ssm-document-list
    outputs:
    - contextPath: AWS.SSM.DocumentNextToken
      description: The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Name
      description: The name of the SSM document.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.CreatedDate
      description: The date the SSM document was created.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.DisplayName
      description: An optional field allowing the specification of a user-defined, friendly name for the SSM document. This value can vary across different versions of the document.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Owner
      description: The Amazon Web Services user that created the document.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.VersionName
      description: An optional field specifying the version of the artifact associated with the document. For example, “Release 12, Update 6”. This value is unique across all versions of a document, and can’t be changed.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.PlatformTypes
      description: The operating system platform.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.DocumentVersion
      description: The document version.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.DocumentType
      description: The document type.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.SchemaVersion
      description: The schema version.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.DocumentFormat
      description: The document format, either JSON or YAML.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.TargetType
      description: "The target type which defines the kinds of resources the document can run on. For example, /AWS:EC2:Instance. For a list of valid resource types, see Amazon Web Services resource and property types reference in the [CloudFormation User Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)."
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Tags.Key
      description: The name of the tag.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Requires.Name
      description: The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Requires.Version
      description: The document version required by the current document.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Requires.RequireType
      description: The document type of the required SSM document.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Requires.VersionName
      description: An optional field specifying the version of the artifact associated with the document. For example, “Release 12, Update 6”. This value is unique across all versions of a document, and can’t be changed.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.ReviewStatus
      description: The current status of a document review.
      type: String
    - contextPath: AWS.SSM.Document.DocumentIdentifiers.Author
      description: The user in your organization who created the document.
      type: String
  - arguments:
    - description: The name of the SSM document.
      name: document_name
      required: true
    - description: "The document version. Can be a specific version or the default version. Valid Values: 'default' 'latest' or a specific version number"
      name: document_version
    - description: Specifying the version of the artifact associated with the document. For example, “Release 12, Update 6”. This value is unique across all versions of a document, and can’t be changed.
      name: version_name
    description: Describes the specified Amazon Web Services Systems Manager document (SSM document).
    name: aws-ssm-document-get
    outputs:
    - contextPath: AWS.SSM.Document.Document.Sha1
      description: The SHA1 hash of the document, which you can use for verification.
      type: String
    - contextPath: AWS.SSM.Document.Document.Hash
      description: The Sha256 or Sha1 hash created by the system when the document was created.
      type: String
    - contextPath: AWS.SSM.Document.Document.HashType
      description: The hash type of the document. Valid values include Sha256 or Sha1.
      type: String
    - contextPath: AWS.SSM.Document.Document.Name
      description: The name of the SSM document.
      type: String
    - contextPath: AWS.SSM.Document.Document.DisplayName
      description: The friendly name of the SSM document. This value can differ for each version of the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.VersionName
      description: The version of the artifact associated with the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.Owner
      description: The Amazon Web Services user that created the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.CreatedDate
      description: The date when the document was created.
      type: String
    - contextPath: AWS.SSM.Document.Document.Status
      description: The status of the SSM document.
      type: String
    - contextPath: AWS.SSM.Document.Document.StatusInformation
      description: A message returned by Amazon Web Services Systems Manager that explains the Status value. For example, a Failed status might be explained by the StatusInformation message, “The specified S3 bucket doesn’t exist. Verify that the URL of the S3 bucket is correct.”
      type: String
    - contextPath: AWS.SSM.Document.Document.DocumentVersion
      description: The document version.
      type: String
    - contextPath: AWS.SSM.Document.Document.Description
      description: A description of the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.Parameters.Name
      description: The name of the parameter.
      type: String
    - contextPath: AWS.SSM.Document.Document.Parameters.Type
      description: The type of parameter. The type can be either String or StringList.
      type: String
    - contextPath: AWS.SSM.Document.Document.Parameters.Description
      description: A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.
      type: String
    - contextPath: AWS.SSM.Document.Document.Parameters.DefaultValue
      description: If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.
      type: String
    - contextPath: AWS.SSM.Document.Document.PlatformTypes
      description: The list of operating system (OS) platforms compatible with this SSM document.
      type: String
    - contextPath: AWS.SSM.Document.Document.DocumentType
      description: The type of document.
      type: String
    - contextPath: AWS.SSM.Document.Document.SchemaVersion
      description: The schema version.
      type: String
    - contextPath: AWS.SSM.Document.Document.LatestVersion
      description: The latest version of the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.DefaultVersion
      description: The default version.
      type: String
    - contextPath: AWS.SSM.Document.Document.DocumentFormat
      description: The document format, either JSON or YAML.
      type: String
    - contextPath: AWS.SSM.Document.Document.TargetType
      description: The target type which defines the kinds of resources the document can run on.
      type: String
    - contextPath: AWS.SSM.Document.Document.Tags.Key
      description: The name of the tag.
      type: String
    - contextPath: AWS.SSM.Document.Document.Tags.Value
      description: The value of the tag.
      type: String
    - contextPath: AWS.SSM.Document.Document.AttachmentsInformation.Name
      description: The name of the attachment.
      type: String
    - contextPath: AWS.SSM.Document.Document.Requires.Name
      description: The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
      type: String
    - contextPath: AWS.SSM.Document.Document.Requires.Version
      description: The document version required by the current document.
      type: String
    - contextPath: AWS.SSM.Document.Document.Requires.RequireType
      description: The document type of the required SSM document.
      type: String
    - contextPath: AWS.SSM.Document.Document.Requires.VersionName
      description: An optional field specifying the version of the artifact associated with the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.Author
      description: The user in your organization who created the document.
      type: String
    - contextPath: AWS.SSM.Document.Document.ReviewInformation.ReviewedTime
      description: The time that the reviewer took action on the document review request.
      type: String
    - contextPath: AWS.SSM.Document.Document.ReviewInformation.Status
      description: The current status of the document review request.
      type: String
    - contextPath: AWS.SSM.Document.Document.ReviewInformation.Reviewer
      description: The reviewer assigned to take action on the document review request.
      type: String
    - contextPath: AWS.SSM.Document.Document.ApprovedVersion
      description: The version of the document currently approved for use in the organization.
      type: String
    - contextPath: AWS.SSM.Document.Document.PendingReviewVersion
      description: The version of the document that is currently under review.
      type: String
    - contextPath: AWS.SSM.Document.Document.ReviewStatus
      description: The current status of the review.
      type: String
    - contextPath: AWS.SSM.Document.Document.Category
      description: The classification of a document to help you identify and categorize its use.
      type: String
    - contextPath: AWS.SSM.Document.Document.CategoryEnum
      description: The value that identifies a document’s category.
      type: String
  - arguments:
    - description: "The name of the SSM document to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document ARN. Note: to get the document name, use the aws-ssm-document-list command."
      name: document_name
      required: true
    - description: User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can’t be reused.
      name: client_token
    - description: "The version of the Automation runbook to use for this execution. Can be a specific version or the default version. Valid Values: 'default' 'latest' or a specific version number"
      name: document_version
    - description: The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.
      name: max_concurrency
    - description: The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. for more information see in the readme file.)
      name: max_errors
    - description: "The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto."
      name: mode
      auto: PREDEFINED
      predefined:
      - Auto
      - Interactive
    - description: The name of the tag.
      name: tag_key
    - description: The value of the tag.
      name: tag_value
    - description: The interval in seconds between each poll.
      name: interval_in_seconds
      defaultValue: 30
    - description: 'A key-value map of execution parameters, which match the declared parameters in the Automation runbook. for example: {"key1":"value1","key2":"value2"}'
      name: parameters
    description: Initiates execution of an Automation runbook.
    name: aws-ssm-automation-execution-run
  - arguments:
    - description: The interval in seconds between each poll.
      name: interval_in_seconds
      defaultValue: 30
    - description: The execution ID of the Automation to stop.
      name: automation_execution_id
      required: true
    - description: "The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel. Can get the value by running the aws-ssm-automation-list command."
      name: type
      auto: PREDEFINED
      predefined:
      - Cancel
      - Complete
    - auto: PREDEFINED
      defaultValue: 'false'
      description: Default is false. When set to true, will keep polling results until the command return that the  status of the automation execution is updated to Cancelled.
      name: polling
      predefined:
      - 'true'
      - 'false'
    - description: This argument is used to determine whether the current execution of the command is the initial run. After the command is executed, the argument is updated to 'false.' During polling, the code checks the status only for the first execution.
      name: first_run
      defaultValue: true
      hidden: true
    description: Stop an Automation execution.
    name: aws-ssm-automation-execution-cancel
  isfetch: false
  runonce: false
  script: '-'
  type: python
  subtype: python3
  dockerimage: demisto/boto3py3:1.0.0.72237
fromversion: 6.9.0
marketplaces:
- xsoar
- marketplacev2
tests:
- No tests (auto formatted)
