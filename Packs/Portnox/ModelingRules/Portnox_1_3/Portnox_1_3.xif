[MODEL:dataset="portnox_portnox_raw"]
alter deviceVersion = arrayindex(regextract(_raw_log ,"CEF\:0\|Portnox\|Portnox\|([^\|]+)\|"),0),
    deviceEventClassId = arrayindex(regextract(_raw_log ,"CEF\:0\|Portnox\|Portnox\|[^\|]+\|([^\|]+)\|"),0),
    action = arrayindex(regextract(_raw_log ,"CEF\:0\|Portnox\|Portnox\|[^\|]+\|[^\|]+\|([^\|]+)\|"),0),
    src_user = arrayindex(regextract(_raw_log ,"\|user\s(\S+)\s"),0),
    src_ipv4 = arrayindex(regextract(_raw_log ,"\(ip\:(\d+\.\d+\.\d+\.\d+)\)"),0),
    dst_user = arrayindex(regextract(_raw_log ,"user\s\'([^\']+)\'"),0),
    dst_group = arrayindex(regextract(_raw_log ,"group\s\'([^\']+)\'"),0),
    target_resource = arrayindex(regextract(_raw_log ,"\s\'([^\']+)\'"),0),
    event_description = arrayindex(regextract(_raw_log ,"\|([^\|]+)$"),0),
    dest_hostname = arrayindex(regextract(_raw_log ,"for\sdevice\s([^\.]+)\."),0)
| alter xdm.event.outcome_reason = coalesce(act,action),
    xdm.target.vlan = to_integer(cn1),
    xdm.source.host.os = cs2,
    xdm.event.outcome =  if(outcome in("success","sucess") , XDM_CONST.OUTCOME_SUCCESS  , outcome in ("failure"),XDM_CONST.OUTCOME_FAILED ,to_string(outcome)),
    xdm.auth.auth_method = cs3,
    xdm.target.port = to_integer(dpt),
    xdm.source.user.username = src_user,
    xdm.target.user.username= dst_user,
    xdm.target.ipv4 = dst,
    xdm.target.user.groups = arraycreate(dst_group),
    xdm.event.description = coalesce(msg,event_description),
    xdm.target.host.mac_addresses = arraycreate(dmac),
    xdm.target.host.hostname = coalesce(dhost,dest_hostname),
    xdm.source.host.hostname = shost,
    xdm.target.file.path = filePath,
    xdm.source.ipv4 = coalesce(SourceAddress,src_ipv4),
    xdm.target.domain = destinationDnsDomain,
    xdm.source.port = to_integer(sourceTranslatedPort),
    xdm.target.process.name = destinationServiceName,
    xdm.observer.vendor = coalesce(deviceVersion,cefDeviceVersion),
    xdm.event.id = coalesce(cefDeviceEventClassId,deviceEventClassId),
    xdm.target.resource.name = target_resource;