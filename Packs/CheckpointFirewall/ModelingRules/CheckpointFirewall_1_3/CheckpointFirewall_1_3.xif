[MODEL: dataset ="check_point_vpn_1_firewall_1_raw"]
// Fields Parsing
alter rt = to_string(rt)
| alter rt = arrayindex(regextract(rt, "\d{10}"), 0)
| alter time = parse_timestamp("%s", rt)
| alter application = if(app = null or app="Unknown Protocol", service_id, app)
| alter ruleName = if(cs2Label = "Rule Name", cs2, null)
| alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
| alter ipv6src = if(src != null and ipv4src = null, src, null)
| alter ipv4dest = if(dst ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", dst, null)
| alter ipv6dest = if(dst != null and ipv4dest = null, dst, null)
| alter duration = to_integer(duration)
// Fields Modeling
| alter
   // _time = time,
    xdm.event.id = loguid,
    xdm.event.type = cefDeviceEventClassId,
    xdm.event.outcome_reason = reason,
    xdm.network.session_id = session_id_,
    xdm.network.ip_protocol = proto,
    xdm.network.application_protocol = application,
    xdm.network.rule = ruleName,
    xdm.event.duration = duration,
    xdm.network.dns.dns_question.type = dns_type,
    xdm.network.dns.dns_resource_record.type = dns_query,
    xdm.observer.vendor = cefDeviceVendor,
    xdm.observer.product = cefDeviceProduct,
    xdm.observer.action = act,
    xdm.source.host.hostname = shost,
    xdm.source.user.username = suser,
    xdm.source.ipv4 = ipv4src,
    xdm.source.ipv6 = ipv6src,
    xdm.source.port = spt,
    xdm.source.zone = inzone,
    xdm.target.host.hostname = dhost,
    xdm.target.user.username = duser,
    xdm.target.ipv4 = ipv4src,
    xdm.target.ipv6 = ipv4dest,
    xdm.target.port = dpt,
    xdm.target.zone = outzone;

[MODEL: dataset ="check_point_url_filtering_raw"]
// Fields Parsing
alter rt = to_string(rt)
| alter rt = arrayindex(regextract(rt, "\d{10}"), 0)
| alter time = parse_timestamp("%s", rt)
| alter application = if(app = null or app="Unknown Protocol", service_id, app)
| alter ruleName = if(cs2Label = "Rule Name", cs2, null)
| alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
| alter ipv6src = if(src != null and ipv4src = null, src, null)
| alter ipv4dest = if(dst ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", dst, null)
| alter ipv6dest = if(dst != null and ipv4dest = null, dst, null)
| alter duration = to_integer(duration)
// Fields Modeling
| alter
    //_time = time,
    xdm.event.id = loguid,
    xdm.event.type = cefDeviceEventClassId,
    xdm.network.ip_protocol = proto,
    xdm.network.application_protocol = application,
    xdm.network.rule = ruleName,
    xdm.event.duration = duration,
    xdm.network.http.url = request,
    xdm.network.http.method = requestMethod,
    xdm.alert.severity = cp_severity,
    xdm.observer.vendor = cefDeviceVendor,
    xdm.observer.product = cefDeviceProduct,
    xdm.observer.action = act,
    xdm.source.host.hostname = shost,
    xdm.source.user.username = suser,
    xdm.source.ipv4 = ipv4src,
    xdm.source.ipv6 = ipv6src,
    xdm.target.user.username = duser,
    xdm.target.ipv4 = ipv4src,
    xdm.target.ipv6 = ipv4dest,
    xdm.target.port = dpt;

[MODEL: dataset ="check_point_smartdefense_raw"]
// Fields Parsing
alter rt = to_string(rt)
| alter rt = arrayindex(regextract(rt, "\d{10}"), 0)
| alter time = parse_timestamp("%s", rt)
| alter Threat_Prevention_Rule_Name = if(cs1Label = "Threat Prevention Rule Name", cs1, null)
| alter protectionName = if(cs4Label = "Protection Name", cs4, null)
| alter Attack_Information = if(flexString2Label = "Attack Information", flexString2, null)
| alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
| alter ipv6src = if(src != null and ipv4src = null, src, null)
| alter ipv4dest = if(dst ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", dst, null)
| alter ipv6dest = if(dst != null and ipv4dest = null, dst, null)
// Fields Modeling
| alter //_time = time,
    xdm.event.id = loguid,
    xdm.event.type = cefDeviceEventClassId,
    xdm.network.session_id = session_id,
    xdm.network.ip_protocol = proto,
    xdm.network.rule = Threat_Prevention_Rule_Name,
    xdm.alert.severity = cefSeverity,
    xdm.alert.name = protectionName,
    xdm.alert.description = Attack_Information,
    xdm.observer.vendor = cefDeviceVendor,
    xdm.observer.product = cefDeviceProduct,
    xdm.observer.action = act,
    xdm.source.host.hostname = shost,
    xdm.source.user.username = suser,
    xdm.source.ipv4 = ipv4src,
    xdm.source.ipv6 = ipv6src,
    xdm.source.port = spt,
    xdm.target.host.hostname = dhost,
    xdm.target.user.username = duser,
    xdm.target.ipv4 = ipv4src,
    xdm.target.ipv6 = ipv4dest,
    xdm.target.port = dpt;

[MODEL: dataset ="check_point_application_control_raw"]
// Fields Parsing
alter rt = to_string(rt)
| alter rt = arrayindex(regextract(rt, "\d{10}"), 0)
| alter time = parse_timestamp("%s", rt)
| alter application = if(app = null or app="Unknown Protocol", service_id, app)
| alter ruleName = if(cs2Label = "Rule Name", cs2, null)
| alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
| alter ipv6src = if(src != null and ipv4src = null, src, null)
| alter ipv4dest = if(dst ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", dst, null)
| alter ipv6dest = if(dst != null and ipv4dest = null, dst, null)
| alter duration = to_integer(duration)
// Fields Modeling
| alter
   // _time = time,
    xdm.event.id = loguid,
    xdm.event.type = cefDeviceEventClassId,
    xdm.network.ip_protocol = proto,
    xdm.network.application_protocol = application,
    xdm.network.rule = ruleName,
    xdm.event.duration = duration,
    xdm.network.http.url = request,
    xdm.network.http.method = requestMethod,
    xdm.alert.severity = cefSeverity,
    xdm.observer.vendor = cefDeviceVendor,
    xdm.observer.product = cefDeviceProduct,
    xdm.observer.action = act,
    xdm.source.host.hostname = shost,
    xdm.source.user.username = suser,
    xdm.source.ipv4 = ipv4src,
    xdm.source.ipv6 = ipv6src,
    xdm.target.host.hostname = dhost,
    xdm.target.user.username = duser,
    xdm.target.ipv4 = ipv4src,
    xdm.target.ipv6 = ipv4dest,
    xdm.target.port = dpt;

[MODEL: dataset ="check_point_identity_awareness_raw"]
// Fields Parsing
alter rt = to_string(rt)
| alter rt = arrayindex(regextract(rt, "\d{10}"), 0)
| alter time = parse_timestamp("%s", rt)
| alter ipv4src = if(src ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", src, null)
| alter ipv6src = if(src != null and ipv4src = null, src, null)
| alter ipv4dest = if(dst ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", dst, null)
| alter ipv6dest = if(dst != null and ipv4dest = null, dst, null)
| alter auth_status_temp = if(auth_status = null, act, auth_status)
// Fields Modeling
| alter
    //_time = time,
    xdm.event.id = loguid,
    xdm.event.type = cefDeviceEventClassId,
    xdm.auth.auth_method = cs5,
    xdm.event.outcome = auth_status_temp,
    xdm.event.outcome_reason = reason,
    xdm.observer.vendor = cefDeviceVendor,
    xdm.observer.product = cefDeviceProduct,
    xdm.source.ipv4 = ipv4src,
    xdm.source.ipv6 = ipv6src,
    xdm.source.user.username = suser,
    xdm.source.user.user_type = cs3,
    xdm.target.ipv4 = ipv4dest,
    xdm.target.ipv6 = ipv6dest,
    xdm.target.user.username = duser;