[MODEL: dataset="VMware_ESXi_raw", model=Endpoint]
 filter _raw_log contains "hostd" or _raw_log contains "vcpu" or _raw_log contains "svga"  or _raw_log contains "mks" or _raw_log contains "vmx" 
| filter  _raw_log not contains "verbose" 
|alter request_time = arrayindex(regextract(_raw_log ,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)"),0)
|alter service_name= arrayindex(regextract(_raw_log ,"\d+\-\d+\-\d+T\d+\:\d+\:\d+\S\d+\w+\s?\w+\|?\s([^\[?\|?\]]+)") ,0)
// extract message
| alter message1= arrayindex(regextract(_raw_log , "\|\s\w+\:\s([^\"]+)") ,0)
| alter message2 = arrayindex(regextract(_raw_log , "opID\=[^\s]+\s([^\"]+)"),0)
| alter message = coalesce(message2 ,message1)
// end extract message
| alter opID= arrayindex(regextract(_raw_log ,"opID\=([^\]]+)") ,0)
| alter originator=arrayindex(regextract(_raw_log ,"Originator\@(\d+)") ,0)
// extract username
| alter user= arrayindex(regextract(_raw_log ,"user\:\s(\w+)") ,0)
| alter vpxuser= arrayindex(regextract(_raw_log ,"vpxuser\@(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter username = coalesce(user ,vpxuser)
// end extract user
| alter sub = arrayindex(regextract(_raw_log ,"sub\=([^\s]+)") ,0)
| alter XDM.Endpoint.operation =service_name 
| alter XDM.Endpoint.operation =opID
| alter XDM.Endpoint.Observer.unique_identifier =originator
| alter XDM.Endpoint.original_event_sub_type= sub
| alter XDM.Endpoint.Actor.user.identifier  =username
| alter XDM.Endpoint.event_timestamp= parse_timestamp("%Y-%m-%dT%H:%M:%E3SZ",request_time)
| alter XDM.Endpoint.threat.description=message;


[MODEL: dataset="VMware_ESXi_raw", model=Audit]
filter _raw_log contains "verbose" or _raw_log contains "vpax" or _raw_log contains "scsiCorrelator" or _raw_log contains "cpu" or _raw_log contains "mark" or _raw_log contains "vmkeventd" or _raw_log contains "vmkdevmgr" or _raw_log contains "lwsmd" or _raw_log contains "smrtd" or _raw_log contains "sysboot" or _raw_log contains "ESXShell" or _raw_log contains "SSH" or _raw_log contains "mark" or _raw_log contains "esxupdate" or _raw_log contains "dhclient-um" 
// extract message
| alter message1= arrayindex(regextract(_raw_log ,"opID\=[^\s]+\s([^\"]+)") ,0)
| alter message2 = arrayindex(regextract(_raw_log ,"\:\s([^\&]+)"),0)
| alter message = coalesce(message2 ,message1)
// end extract message
// extract timestamp part 
| alter boot_timestamp= arrayindex(regextract(_raw_log ,"\[(\d+\-\d+\-\d+\s+\d+\:\d+\:\d+\.\d+)") ,0) 
 ,extract_timestamp2= arrayindex(regextract(_raw_log ,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+)") ,0) 
| alter timestamp2 = concat(extract_timestamp2 ,".000000") 
	,boot_timestamp =replex(boot_timestamp , " ","T") 
| alter Timestamp = coalesce(boot_timestamp , Timestamp2) 
| alter the_timestamp = parse_timestamp("%Y-%m-%dT%H:%M:%E6S",Timestamp ) 
// end extarct timestamp
| alter Timestamp= arrayindex(regextract(_raw_log ,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)") ,0)
| alter opID= arrayindex(regextract(_raw_log ,"opID\=([^\]]+)") ,0)
| alter originator=arrayindex(regextract(_raw_log ,"Originator\@(\d+)") ,0)
| alter sub = arrayindex(regextract(_raw_log ," sub\=([^\]]+)") ,0) 
| alter process_name = arrayindex(regextract(_raw_log ,"\w+\:\s\[(\w+)") ,0) 
// extract severity_alert
| alter severity_alert1= arrayindex(regextract(_raw_log ,"\d+\:\s\w+\:\s(\w+)") ,0)
| alter severity_alert2 = arrayindex(regextract(_raw_log ,"\:\w+\)([^\:M]+)"),0)
| alter severity_alert = coalesce(severity_alert2 ,severity_alert1)
// end extract severity_alert
// extract service_name
| alter service_name2 = arrayindex(regextract(_raw_log ,"\w+\:\s\d+\:\s(\w+)\:\s") ,0)
| alter service_name1 = arrayindex(regextract(_raw_log ,"\-\d+\-\d+T\d+\:\d+\:\d+\S+\s(\w+)"),0) 
| alter service_name3 = arrayindex(regextract(_raw_log ,"\d+\]\s(\w+)\:\s"),0) 
| alter service_name = coalesce(service_name2,service_name1,service_name3)
// end extract service_name
| alter source_ip= arrayindex(regextract(_raw_log ,"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter XDM.Audit.operation= service_name
| alter XDM.Audit.event_timestamp = the_timestamp
| alter XDM.Audit.audited_resource.id =opID
| alter XDM.Audit.TriggeredBy.identity.uuid= originator 
| alter XDM.Audit.identity.sub_type= sub
| alter XDM.Audit.TriggeredBy.identity.name= process_name
| alter XDM.Audit.threat.description= message
| alter XDM.Audit.threat.severity= severity_alert 
| alter XDM.Audit.TriggeredBy.ipv4= source_ip;


[MODEL: dataset="VMware_ESXi_raw", model=Auth]
filter _raw_log contains "vmauthd" or _raw_log contains "sshd"
| alter Timestamp= arrayindex(regextract(_raw_log ,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)") ,0)
| alter Service_name = arrayindex(regextract(_raw_log ,"\d+\-\d+\-\d+T\d+\:\d+\:\d+\S+\s(\w+)") ,0)
| alter pid = arrayindex(regextract(_raw_log ,"Z\s\w+\[(\d+)"),0)
| alter message= arrayindex(regextract(_raw_log ,"Z\s\w+\[(\d+)") ,0)
// extract source_ip
| alter sourceip2= arrayindex(regextract(_raw_log ,"from\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter sourceip1 = arrayindex(regextract(_raw_log ,"rhost\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter sourceip = coalesce(sourceip1 ,sourceip2)
// end extract source_ip
// extract username
| alter username1= arrayindex(regextract(_raw_log ,"user\=(\w+)") ,0)
| alter username2 = arrayindex(regextract(_raw_log ,"ruser\=(\w+)"),0)
| alter username = coalesce(username1 ,username2)
// end extract username
| alter XDM.Auth.event_timestamp =parse_timestamp("%Y-%m-%dT%H:%M:%SZ",Timestamp)
| alter XDM.Auth.Observer.unique_identifier =service_name  
| alter XDM.Auth.Client.process.pid =To_number(pid)
| alter XDM.Auth.threat.description =message 
| alter XDM.Auth.Client.ipv4 =sourceip
| alter XDM.Auth.Client.user.username =username; 
