[MODEL: dataset="VMware_ESXi_raw"]
filter _raw_log contains "hostd" or _raw_log contains "vcpu" or _raw_log contains "svga" or _raw_log contains "mks" or _raw_log contains "vmx"
| filter _raw_log not contains "verbose"
| alter request_time = arrayindex(regextract(_raw_log,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)"),0)
| alter service_name = arrayindex(regextract(_raw_log,"\d+\-\d+\-\d+T\d+\:\d+\:\d+\S\d+\w+\s?\w+\|?\s([^\[?\|?\]]+)"),0)
// extract message
| alter message1 = arrayindex(regextract(_raw_log, "\|\s\w+\:\s([^\"]+)"),0)
| alter message2 = arrayindex(regextract(_raw_log, "opID\=[^\s]+\s([^\"]+)"),0)
| alter message = coalesce(message2,message1)
// end extract message
| alter opID = arrayindex(regextract(_raw_log,"opID\=([^\]]+)"),0)
| alter originator = arrayindex(regextract(_raw_log,"Originator\@(\d+)"),0)
// extract username
| alter user = arrayindex(regextract(_raw_log,"user\:\s(\w+)"),0)
| alter vpxuser = arrayindex(regextract(_raw_log,"vpxuser\@(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter username = coalesce(user,vpxuser)
// end extract user
| alter sub = arrayindex(regextract(_raw_log,"sub\=([^\s]+)"),0)
| alter xdm.event.operation = service_name
| alter xdm.event.operation = opID
| alter xdm.observer.unique_identifier = originator
| alter xdm.event.operation_sub_type = sub
| alter xdm.source.user.identifier = username
| alter _time = parse_timestamp("%Y-%m-%dT%H:%M:%E3SZ",request_time)
| alter xdm.alert.description = message;

[MODEL: dataset="VMware_ESXi_raw"]
filter _raw_log contains "verbose" or _raw_log contains "vpax" or _raw_log contains "scsiCorrelator" or _raw_log contains "cpu" or _raw_log contains "mark" or _raw_log contains "vmkeventd" or _raw_log contains "vmkdevmgr" or _raw_log contains "lwsmd" or _raw_log contains "smrtd" or _raw_log contains "sysboot" or _raw_log contains "ESXShell" or _raw_log contains "SSH" or _raw_log contains "mark" or _raw_log contains "esxupdate" or _raw_log contains "dhclient-um"
// extract message
| alter message1 = arrayindex(regextract(_raw_log,"opID\=[^\s]+\s([^\"]+)"),0)
| alter message2 = arrayindex(regextract(_raw_log,"\:\s([^\&]+)"),0)
| alter message = coalesce(message2,message1)
// end extract message
// extract timestamp part
| alter boot_timestamp = arrayindex(regextract(_raw_log,"\[(\d+\-\d+\-\d+\s+\d+\:\d+\:\d+\.\d+)"),0)
    ,extract_timestamp2 = arrayindex(regextract(_raw_log,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+)"),0)
| alter timestamp2 = concat(extract_timestamp2,".000000")
    ,boot_timestamp = replex(boot_timestamp, " ","T")
| alter Timestamp = coalesce(boot_timestamp, Timestamp2)
| alter the_timestamp = parse_timestamp("%Y-%m-%dT%H:%M:%E6S",Timestamp)
// end extarct timestamp
| alter Timestamp = arrayindex(regextract(_raw_log,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)"),0)
| alter opID = arrayindex(regextract(_raw_log,"opID\=([^\]]+)"),0)
| alter originator = arrayindex(regextract(_raw_log,"Originator\@(\d+)"),0)
| alter sub = arrayindex(regextract(_raw_log," sub\=([^\]]+)"),0)
| alter process_name = arrayindex(regextract(_raw_log,"\w+\:\s\[(\w+)"),0)
// extract severity_alert
| alter severity_alert1 = arrayindex(regextract(_raw_log,"\d+\:\s\w+\:\s(\w+)"),0)
| alter severity_alert2 = arrayindex(regextract(_raw_log,"\:\w+\)([^\:M]+)"),0)
| alter severity_alert = coalesce(severity_alert2,severity_alert1)
// end extract severity_alert
// extract service_name
| alter service_name2 = arrayindex(regextract(_raw_log,"\w+\:\s\d+\:\s(\w+)\:\s"),0)
| alter service_name1 = arrayindex(regextract(_raw_log,"\-\d+\-\d+T\d+\:\d+\:\d+\S+\s(\w+)"),0)
| alter service_name3 = arrayindex(regextract(_raw_log,"\d+\]\s(\w+)\:\s"),0)
| alter service_name = coalesce(service_name2,service_name1,service_name3)
// end extract service_name
| alter source_ip = arrayindex(regextract(_raw_log,"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter xdm.event.operation = service_name
| alter _time = the_timestamp
| alter xdm.target.resource.id = opID
| alter xdm.source.user.identifier = originator
| alter xdm.source.user.username = process_name
| alter xdm.alert.description = message
| alter xdm.alert.severity = severity_alert
| alter xdm.source.ipv4 = source_ip;

[MODEL: dataset="VMware_ESXi_raw"]
filter _raw_log contains "vmauthd" or _raw_log contains "sshd"
| alter Timestamp = arrayindex(regextract(_raw_log,"(\d+\-\d+\-\d+T\d+\:\d+\:\d+Z?\.?\d+Z)"),0)
| alter Service_name = arrayindex(regextract(_raw_log,"\d+\-\d+\-\d+T\d+\:\d+\:\d+\S+\s(\w+)"),0)
| alter pid = arrayindex(regextract(_raw_log,"Z\s\w+\[(\d+)"),0)
| alter message = arrayindex(regextract(_raw_log,"Z\s\w+\[(\d+)"),0)
// extract source_ip
| alter sourceip2 = arrayindex(regextract(_raw_log,"from\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter sourceip1 = arrayindex(regextract(_raw_log,"rhost\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter sourceip = coalesce(sourceip1,sourceip2)
// end extract source_ip
// extract username
| alter username1 = arrayindex(regextract(_raw_log,"user\=(\w+)"),0)
| alter username2 = arrayindex(regextract(_raw_log,"ruser\=(\w+)"),0)
| alter username = coalesce(username1,username2)
// end extract username
| alter _time = parse_timestamp("%Y-%m-%dT%H:%M:%SZ",Timestamp)
| alter xdm.observer.unique_identifier = service_name
| alter xdm.source.process.pid = To_number(pid)
| alter xdm.alert.description = message
| alter xdm.source.ipv4 = sourceip
| alter xdm.source.user.username = username;