commonfields:
  id: CheckWhitelist
  version: -1
name: CheckWhitelist
script: >
  res = demisto.executeCommand("getList", {"listName": demisto.args()["whitelistname"]})

  if isError(res[0]):
      demisto.results(res)
  else:
      whitelist = res[0]['Contents']
      result = False
      answer = 'no'
      if demisto.args()['item'] in whitelist:
          answer = 'yes'
          result = True
      contextKey = "WhitelistCheck"
      contextValue = demisto.get(demisto.context(), contextKey)
      contextDic = { demisto.args()['item']: result }
      if contextValue:
          contextValue.update(contextDic)
          demisto.setContext(contextKey, contextValue)
      else:
          demisto.setContext(contextKey, contextDic)
      demisto.results(answer)
type: python
subtype: python2
tags:
- whitelist
comment: Deprecated. Check whether the given item is in the whitelist
system: true
args:
- name: item
  required: true
  default: true
  description: Item to check
- name: whitelistname
  defaultValue: Indicators Whitelist
  description: Name of whitelist to check
outputs:
- contextPath: WhitelistCheck
  description: Returns a dictionary of indicators mapped to True if found in whitelist, or False otherwise.
scripttarget: 0
dependson: {}
timeout: 0s
deprecated: true
fromversion: 5.0.0
