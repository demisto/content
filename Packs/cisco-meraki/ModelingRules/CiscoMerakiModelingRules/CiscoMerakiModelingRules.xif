
[MODEL: dataset="Cisco_Meraki_raw", model=Endpoint]
 filter _raw_log contains "security_event" or _raw_log contains "ids_alerted" or _raw_log contains "ids-alerts" or _raw_log contains "disposition=" or _raw_log contains "signature="
| alter epoch_time = arrayindex( regextract(_raw_log, "\>\d\s(\d+)"),0)
| alter appliance_name= arrayindex(regextract(_raw_log ,"\.\d+\s(\w+)\s[security]") ,0)
| alter signuture= arrayindex(regextract(_raw_log ,"signature\=([^\s]+)") ,0)
| alter mac_address1= arrayindex(regextract(_raw_log ,"mac\=([^\s]+)") ,0)
| alter mac_address2 = arrayindex(regextract(_raw_log ,"shost\=([^\s]+)") ,0)            
| alter source_mac_address = coalesce(mac_address1,mac_address2)   
| alter direction= arrayindex(regextract(_raw_log ,"direction\=([^\s]+)") ,0)
| alter source_ip = arrayindex(regextract(_raw_log ,"src\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip= arrayindex(regextract(_raw_log ,"dst\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0) 
| alter event_type1 = arrayindex(regextract(_raw_log ,"security\_event\s(\w+)") ,0)
| alter event_type2 = arrayindex(regextract(_raw_log ,"\d+\.\d+\s\w+\s(\S+)\ssignature") ,0)
| alter event_type= coalesce(event_type1,event_type2)  
| alter message= arrayindex(regextract(_raw_log ,"message\:\s([^\$]+)") ,0)
| alter sha_256 = arrayindex(regextract(_raw_log ,"sha256\=([^\s]+)") ,0)
| alter found_malisious = arrayindex(regextract(_raw_log ,"disposition\=(\w+)") ,0)
| alter url = arrayindex(regextract(_raw_log ,"url\=(https?\:[^\s]+)") ,0)
| alter priority = arrayindex(regextract(_raw_log ,"priority\=(\d+)") ,0)
| alter file_name = arrayindex(regextract(_raw_log ,"name\=\'?([^\'?\s]+)") ,0)
| alter action1= arrayindex(regextract(_raw_log ,"action\=(\w+)") ,0)
| alter action2 = arrayindex(regextract(_raw_log,"decision\=(\w+)") ,0)
| alter action = coalesce(action1,action2) 
| alter XDM.Endpoint.observation_timestamp= parse_timestamp("%s", epoch_time)
| alter XDM.Endpoint.Observer.name= appliance_name
| alter XDM.Endpoint.Actor.process.identifier = signuture
| alter XDM.Endpoint.Actor.host.mac_addresses = arraycreate(coalesce(source_mac_address , ""))
| alter XDM.Endpoint.original_event_description = direction 
| alter XDM.Endpoint.Target.host.ipv4_addresses =  arraycreate(coalesce(source_ip, ""))
| alter XDM.Endpoint.Actor.host.ipv4_addresses = arraycreate(coalesce(destination_ip, ""))
| alter XDM.Endpoint.original_event_type = event_type
| alter XDM.Endpoint.outcome  = action
| alter XDM.Endpoint.reason = message
| alter XDM.Endpoint.Actor.process.executable.sha256 = sha_256 
| alter XDM.Endpoint.Actor.process.executable.filename = found_malisious 
| alter XDM.Endpoint.Actor.process.executable.path = url 
| alter XDM.Endpoint.threat.severity = priority
| alter XDM.Endpoint.Target.file.filename = file_name;

[MODEL: dataset="Cisco_Meraki_raw", model=Network]
 filter _raw_log contains "urls src=" or (_raw_log contains "flows" and _raw_log contains "src=") or _raw_log contains "vpn_connectivity_change" or _raw_log contains "events dhcp" or _raw_log contains "Site-to-site VPN" or _raw_log contains "events"
| alter epoch_time= arrayindex( regextract(_raw_log, "\s(\d+\.\d+)\s"),0)
| alter appliance_name1= arrayindex(regextract(_raw_log ,"\.\d+\s(\w+)\s[events]") ,0)
| alter appliance_name2 = arrayindex(regextract(_raw_log ,"\.\d+\s(\w+)\s[flows|\s?urls]") ,0)
| alter appliance_name = coalesce(appliance_name1,appliance_name2) 
| alter source_ip1= arrayindex(regextract(_raw_log ,"\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter source_ip2= arrayindex(regextract(_raw_log ,"src\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter source_ip = coalesce(source_ip1,source_ip2) 
| alter source_port1 = arrayindex(regextract(_raw_log ,"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:(\d+)") ,0)
| alter source_port2 = arrayindex(regextract(_raw_log ,"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\[(\d+)\]\-?\<?") ,0)
| alter source_port3 = arrayindex(regextract(_raw_log ,"src\=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:(\d+)") ,0)
| alter source_port4 = arrayindex(regextract(_raw_log ,"sport\=(\d+)"),0)
| alter source_port =coalesce(source_port1,source_port2,source_port3,source_port4)
| alter destination_ip1= arrayindex(regextract(_raw_log ,"\-(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip2= arrayindex(regextract(_raw_log ,"\>(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip3= arrayindex(regextract(_raw_log ,"peer\_contact\=\'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip4 = arrayindex(regextract(_raw_log ,"ip\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip5= arrayindex(regextract(_raw_log ,"dst\=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter destination_ip = coalesce(destination_ip1,destination_ip2,destination_ip3,destination_ip4,destination_ip5) 
| alter destination_port1 = arrayindex(regextract(_raw_log ,"dst\=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:(\d+)") ,0)
| alter destination_port2 = arrayindex(regextract(_raw_log ,"dport\=(\d+)") ,0)
| alter destination_port = coalesce(destination_port1,destination_port2) 
| alter source_mac1 = arrayindex(regextract(_raw_log ,"mac\s(\w+\:\w+\:\w+\:\w+\:\w+\:\w+)") ,0)
| alter source_mac2 = arrayindex(regextract(_raw_log ,"mac\=([^\s]+)") ,0)
| alter source_mac= coalesce(source_mac1,source_mac2) 
| alter destination_mac = arrayindex(regextract(_raw_log ,"client\smac\s(\w+\:\w+\:\w+\:\w+\:\w+\:\w+)") ,0)
| alter Message1= arrayindex(regextract(_raw_log ,"VPN\:([^\#]+)") ,0)
| alter Message2= arrayindex(regextract(_raw_log ,"events\s([A-Z]\D+)") ,0)
| alter Message3= arrayindex(regextract(_raw_log ,"events\s\w+\sto?\s\w+") ,0)
| alter Message4= arrayindex(regextract(_raw_log ,"events\s(dhcp[^\!]+)") ,0) 
| alter Message = coalesce(Message1,Message2,Message3,Message4) 
| alter Dns_server_ips= arrayindex(regextract(_raw_log ,"dns(\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\,?\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})") ,0)
| alter connectivity= arrayindex(regextract(_raw_log ,"connectivity\=\'(\w+)") ,0)  
| alter vpn_type= arrayindex(regextract(_raw_log ,"vpn\_type\=\'(\S+)\'") ,0) 
| alter spi_unique_identifier= arrayindex(regextract(_raw_log ,"spi\:?\=?([^\s]+)") ,0) 
| alter peer_unique_identifier= arrayindex(regextract(_raw_log ,"peer\_ident\=\'([^\']+)") ,0)
| alter subnet_mask= arrayindex(regextract(_raw_log ,"subnet\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d)") ,0)
| alter user_agent = arrayindex(regextract(_raw_log ,"agent\=\'([^\']+)") ,0)
| alter url= arrayindex(regextract(_raw_log ,"request\:\s\w+\s([^\@]+)") ,0)
| alter http_method= arrayindex(regextract(_raw_log ,"request\:\s(\w+)") ,0)
| alter action= arrayindex(regextract(_raw_log ,"flows\s(\w+)") ,0)
| alter protocl= arrayindex(regextract(_raw_log ,"protocol\=(\w+)") ,0)
| alter protocl_type= arrayindex(regextract(_raw_log ,"type\=(\d+)") ,0)
| alter XDM.Network.observation_timestamp= parse_timestamp("%s", epoch_time)
| alter XDM.Network.Observer.product = appliance_name
| alter XDM.Network.Source.ipv4 = source_ip
| alter XDM.Network.Source.port = to_number(source_port)
| alter XDM.Network.Destination.ipv4 = destination_ip
| alter XDM.Network.Destination.port = to_number(destination_port)
| alter XDM.Network.Source.host.mac_addresses =arraycreate(coalesce(source_mac , "")) 
| alter XDM.Network.Destination.interface= destination_mac
| alter XDM.Network.threat.description =Message
| alter XDM.Network.dhcp.dns_server =  arraycreate(coalesce(Dns_server_ips , ""))
| alter XDM.Network.outcome = connectivity
| alter XDM.Network.original_event_sub_type = vpn_type
| alter XDM.Network.session_id = spi_unique_identifier
| alter XDM.Network.Observer.unique_identifier = peer_unique_identifier
| alter XDM.Network.Source.subnet= subnet_mask
| alter XDM.Network.Observer.product = user_agent
| alter XDM.Network.http.url = url
| alter XDM.Network.http.method = http_method
| alter XDM.Network.rule= action
| alter XDM.Network.ip_protocol = protocl
| alter XDM.Network.icmp.type = to_number (protocl_type);
