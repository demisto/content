args:
- default: true
  description: Job sample id
  name: sample_id
  required: true
comment: Deprecated, use "Detonate File - VMRay playbook instead"
commonfields:
  id: vmray_getResults
  version: -1
dependson:
  must:
  - VMRay|||get_job_sample
deprecated: true
enabled: true
name: vmray_getResults
runonce: false
script: |-
  import json
  dArgs = {}
  dArgs["sample_id"] = demisto.args()["sample_id"]
  res_jobs = demisto.executeCommand("get_job_sample", dArgs)[0]['Contents']['data']
  if not res_jobs:
    demisto.results("Hurray no jobs found, maybe the analysis is completed. Let's see!")
    my_data = demisto.executeCommand("get_results", dArgs)[0]['Contents']['data']

    parent_id = demisto.parentEntry()["id"]
    if my_data:
        res = '## VMRay Analysed info'
        tmp_data = {}
        tmp_data["vti-score"] = []
        tmp_data["analysis-id"] = []
        for entry in my_data:
            tmp_data["vti-score"].append(entry['analysis_id'])
            tmp_data["analysis-id"].append(entry['analysis_vti_score'])
            if tmp_data:
                res += '\nAnalysed-ID: ' + str(entry['analysis_id'])
                res += '\nVTI-Score:   ' + str(entry['analysis_vti_score'])
            else:
                res.append({"Type": entryTypes["error"], "ContentsFormat": formats["text"],
                            "Contents": "Could not extract result list from response: " + json.dumps(entry["Contents"])})
        demisto.executeCommand("scheduleEntry", {"id":parent_id, "cancel":"cancel"})

        demisto.results({'ContentsFormat': formats['markdown'], 'Type': entryTypes['note'], 'Contents': res})
scripttarget: 0
system: true
tags: []
type: python
