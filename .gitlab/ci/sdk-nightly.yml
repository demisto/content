.sdk-nightly-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule)$/ && $DEMISTO_SDK_NIGHTLY'


.upload-entities-to-cortex-xsoar: &upload-entities-to-cortex-xsoar
  - demisto-sdk upload -i Packs/HelloWorld/Integrations/ --insecure
  - demisto-sdk upload -i Packs/HelloWorld/TestPlaybooks/playbook-HelloWorld-Test.yml --insecure
  - demisto-sdk upload -i Packs/HelloWorld/Layouts/layoutscontainer-Hello_World_Test_Layout.json --insecure
  - demisto-sdk upload -i Packs/HelloWorld/IncidentFields/incidentfield-Hello_World_Incident_Test.json --insecure
  - demisto-sdk upload -i Packs/HelloWorld/IncidentTypes/incidenttype-Hello_World_Alert_Test.json --insecure
  - demisto-sdk upload -i Packs/HelloWorld/Classifiers/classifier-mapper-incoming-HelloWorldTest.json --insecure


#### Commented Out Until Resolve Running Docker in Docker #### 
# demisto-sdk-nightly:run-unittests-and-lint:
#   extends:
#     - .run-unittests-and-lint
#     - .sdk-nightly-schedule-rule
#   variables:
#     DEMISTO_SDK_NIGHTLY: "true"
#     SLACK_TEST_TYPE: "sdk_unittests"
#     SLACK_ENV_RESULTS: ${ARTIFACTS_FOLDER}/env_results.json
#     SLACK_ONLY_IF: "true"


demisto-sdk-nightly:run-validations:
  extends:
    - .run-validations
    - .sdk-nightly-schedule-rule
  variables:
    DEMISTO_SDK_NIGHTLY: "true"
    SLACK_TEST_TYPE: "sdk_unittests"
    SLACK_ENV_RESULTS: ${ARTIFACTS_FOLDER}/env_results.json
    SLACK_ONLY_IF: "true"


demisto-sdk-nightly:create-instance:
  extends: 
    - .default-job-settings
    - .sdk-nightly-schedule-rule
  variables:
    DEMISTO_SDK_NIGHTLY: "true"
    IFRA_ENV_TYPE: "Server Master"
  cache:
    policy: pull-push
  needs: []
  stage: create-instances
  script:
    - !reference [.download-demisto-conf]
    - |
      [ -n "${TIME_TO_LIVE}" ] && TTL=${TIME_TO_LIVE} || TTL=300
      python3 ./Tests/scripts/awsinstancetool/aws_instance_tool.py -envType "$IFRA_ENV_TYPE" -timetolive $TTL -outfile "$ARTIFACTS_FOLDER/env_results.json"


demisto-sdk-nightly:run-commands-against-instance:
  extends:
    - .default-job-settings
    - .sdk-nightly-schedule-rule
  variables:
    DEMISTO_SDK_NIGHTLY: "true"
    DESTROY_INSTANCES: "true"
    INSTANCE_ROLE: "Server Master"
    SLACK_TEST_TYPE: "sdk_run_against_failed_steps"
    SLACK_ENV_RESULTS: ${ARTIFACTS_FOLDER}/env_results.json
    SLACK_ONLY_IF: "true"
  needs: ["demisto-sdk-nightly:create-instance"]
  dependencies:
    - demisto-sdk-nightly:create-instance
  stage: run-instances
  script:
    - !reference [.open-ssh-tunnel]
    - python3 ./Tests/scripts/wait_until_server_ready.py "$INSTANCE_ROLE"
    - !reference [.download-demisto-conf]
    - |
      export DEMISTO_API_KEY=$(cat $SECRET_CONF_PATH | jq -r '.temp_apikey')
      export DEMISTO_BASE_URL="https://localhost:$(cat $ARTIFACTS_FOLDER/env_results.json | jq -r '.[0].TunnelPort')"
      echo "Server URL: $DEMISTO_BASE_URL"
    - section_start "Unlock HelloWorld Integration and Playbook"
    - python3 Tests/sdknightly/unlock_entity.py integration "HelloWorld,HelloWorld Feed"
    - section_end "Unlock HelloWorld Integration and Playbook"
    - section_start "Create & Upload Entities to XSOAR Instance"
    - python3 Tests/sdknightly/create_entities_for_nightly_sdk.py HelloWorld --artifacts-folder $ARTIFACTS_FOLDER
    - *upload-entities-to-cortex-xsoar
    - section_end "Create & Upload Entities to XSOAR Instance"
    - section_start "Download Entities from XSOAR Instance"
    - demisto-sdk download -o Packs/HelloWorld/ -i HelloWorld --insecure -f
    - demisto-sdk download -o Packs/HelloWorld/ -i HelloWorld-Test --insecure -f
    - demisto-sdk download -o Packs/HelloWorld/ -i "Hello World Incident Test" --insecure -f
    - demisto-sdk download -o Packs/HelloWorld/ -i "Hello World Alert Test" --insecure -f
    - demisto-sdk download -o Packs/HelloWorld/ -i "Hello World Test - Incoming Mapper" --insecure -f
    - section_end "Download Entities from XSOAR Instance"
    - echo "Format Content Items"
    - demisto-sdk format -i Packs/HelloWorld/ -nv -ud -y
    - echo "Run Validate"
    - demisto-sdk validate -i Packs/HelloWorld/
    - echo "Run Lint"
    - demisto-sdk lint -i Packs/HelloWorld/
    - *upload-entities-to-cortex-xsoar
