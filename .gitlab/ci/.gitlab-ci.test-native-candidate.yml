.test-native-candidate-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $DEMISTO_TEST_NATIVE_CANDIDATE == "true"'

# used for jobs which we want to run in a pipeline even when previous jobs in the pipeline fail e.g. Slack notification
.test-native-candidate-rule-always:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $DEMISTO_TEST_NATIVE_CANDIDATE == "true"'
      when: always

test-native-candidate:run-lint-with-native-candidate:
  extends:
    - .unittests-and-lint-settings
    - .test-native-candidate-rule
  script:
    - section_start "Versions"
    - |
      echo "demisto-sdk version: $(demisto-sdk --version)"
      echo "mypy version: $(mypy --version)"
      echo "flake8 py2 version: $(python2 -m flake8 --version)"
      echo "flake8 py3 version: $(python3 -m flake8 --version)"
      echo "bandit py2 version: $(python2 -m bandit --version 2>&1)"
      echo "bandit py3 version: $(python3 -m bandit --version 2>&1)"
      echo "vulture py2 version: $(python2 -m vulture --version 2>&1)"
      echo "vulture py3 version: $(python3 -m vulture --version 2>&1)"
    - section_end "Versions"
    - section_start "Run Lint with Native Candidate"
    - |
      mkdir ./unit-tests
      if [[ "$NATIVE_CANDIDATE_IMAGE" == "latest" ]]; then
        echo "----------Getting tag for latest native:dev----------"
        NATIVE_CANDIDATE_IMAGE=$(python3 Tests/scripts/get_latest_docker_image.py -i "demisto/py3-native")
        echo "Found latest image: $NATIVE_CANDIDATE_IMAGE"
      fi
      echo "----------Running lint on specific native candidate image $NATIVE_CANDIDATE_IMAGE----------"
      touch $ARTIFACTS_FOLDER/native_candidate_image.txt
      echo "$NATIVE_CANDIDATE_IMAGE" >> $ARTIFACTS_FOLDER/native_candidate_image.txt

      demisto-sdk lint --console-log-threshold DEBUG -p 10 -a --test-xml ./unit-tests --log-path $ARTIFACTS_FOLDER --failure-report $ARTIFACTS_FOLDER --coverage-report $ARTIFACTS_FOLDER/coverage_report -dt 120 --time-measurements-dir $ARTIFACTS_FOLDER --docker-image native:target --docker-image-target "$NATIVE_CANDIDATE_IMAGE"
      if [[ -f $ARTIFACTS_FOLDER/coverage_report/.coverage ]]; then
        demisto-sdk coverage-analyze -i $ARTIFACTS_FOLDER/coverage_report/.coverage --report-dir $ARTIFACTS_FOLDER/coverage_report --report-type all --allowed-coverage-degradation-percentage 100
      fi
      echo "Native candidate full image name was: $NATIVE_CANDIDATE_IMAGE"
    - section_end "Run Lint with Native Candidate"
    - job-done


test-native-candidate:fan-in:
  tags:
    - gke
  stage: fan-in
  extends:
    - .test-native-candidate-rule-always
  script:
    - echo "fan in"


test-native-candidate:trigger-slack-notify:
  extends:
    - .trigger-slack-notification
    - .test-native-candidate-rule-always
  variables:
    PIPELINE_TO_QUERY: $CI_PIPELINE_ID
    WORKFLOW: 'Test Native Candidate'
    JOB_NAME: 'test-native-candidate:fan-in'
    # Passes the environment variable from the parent pipeline to the child which can be useful for cases
    # when triggering pipeline with alternate env variable value passed in the API call
    SLACK_CHANNEL: $SLACK_CHANNEL
    SLACK_JOB: 'true'