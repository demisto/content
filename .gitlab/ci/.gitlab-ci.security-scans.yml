.auto-secure-cicd-rule:
  rules:
    - if: '$SECURITY_SCANS == "true"'

.auto-secure-cicd-rule-always:
  rules:
    - if: '$SECURITY_SCANS == "true"'
      when: always

stages:
  - security

auto secure cicd:
  stage: security
  variables:
    PYTHONPATH: "/root/prodsec_tools/"
  trigger:
    include:
      - file: "/.gitlab/ci/security-scans.yml"
        ref: master
        project: "${CI_PROJECT_NAMESPACE}/infra"
    strategy: depend
  extends:
    .auto-secure-cicd-rule

fan-in-security-scans:
  tags:
    - gke
  stage: fan-in
  extends:
    - .auto-secure-cicd-rule-always
  script:
    - echo "fan in"


slack-notify-security-scans:
  extends:
    - .trigger-slack-notification
    - .auto-secure-cicd-rule-always
  variables:  # Passes the environment variable from the parent pipeline to the child which can be useful for cases when triggering pipeline with alternate env variable value passed in the API call.
    PIPELINE_TO_QUERY: $CI_PIPELINE_ID
    WORKFLOW: 'Security Scans'
    JOB_NAME: 'fan-in-security-scans'
    SLACK_CHANNEL: $SLACK_CHANNEL
    SLACK_JOB: 'true'
    SLACK_ALLOW_FAILURE: 'false'
    CI_PROJECT_ID: $CI_PROJECT_ID
    CI_SERVER_URL: $CI_SERVER_URL
    JIRA_SERVER_URL: $JIRA_SERVER_URL
    JIRA_VERIFY_SSL: $JIRA_VERIFY_SSL
    JIRA_API_KEY: $JIRA_API_KEY
    JIRA_PROJECT_ID: $JIRA_PROJECT_ID
    JIRA_ISSUE_UNRESOLVED_TRANSITION_NAME: $JIRA_ISSUE_UNRESOLVED_TRANSITION_NAME

