args:
- description: Value of the indicator.
  name: input
- defaultValue: "0.3"
  description: 'Malicious ratio threshold to set indicator as suspicious. '
  name: threshold
comment: |-
  Set indicator reputation to "suspicious" when malicious ratio is above threshold.
  Malicious ratio is the ration between number of "bad" incidents to total number of incidents the indicator appears in.
commonfields:
  id: MaliciousRatioReputation
  version: -1
enabled: true
name: MaliciousRatioReputation
runonce: false
script: |-
  def get_indicator_from_value(indicator_value):
      try:
          res = demisto.executeCommand("findIndicators", {'value': indicator_value})
          indicator = res[0]['Contents'][0]
          return indicator
      except:
          pass

  indicator_value = demisto.args()['input']
  indicator = get_indicator_from_value(indicator_value)
  if indicator:
      res = demisto.executeCommand("maliciousRatio", {'value': indicator['value']})
      try:
          mr_score = res[0]['Contents'][0]['maliciousRatio']
          if mr_score > float(demisto.args()['threshold']):
              ec = {}
              ec['DBotScore'] = {
                  'Type': indicator['indicator_type'].lower(),
                  'Score': 2, #suspicious
                  'Vendor': 'DBot-MaliciousRatio',
                  'Indicator': indicator['value']
              }
              entry = {
                  'Type': entryTypes['note'],
                  'EntryContext': ec,
                  'Contents': ec['DBotScore']['Score'],
                  'ContentsFormat': formats['text'],
                  'HumanReadable': 'Malicious ratio for %s is %.2f' % (indicator['value'], mr_score),
                  'ReadableContentsFormat': formats['markdown']
              }
              demisto.results(entry)
      except:
          pass
scripttarget: 0
system: true
tags:
- reputation
type: python
