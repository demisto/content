args:
- description: Active Directory Distinguished Name for the desired computer
  name: dn
- description: Name of the desired computer
  name: name
- description: Include these AD attributes of the resulting objects in addition to
    the default ones
  name: attributes
comment: Use Active Directory to retrieve the groups in which the specified computer
  is a member. The member computer can be specified by name or by DN.
commonfields:
  id: ADGetComputerGroups
  version: -1
dependson:
  must:
  - ad-search
deprecated: true
name: ADGetComputerGroups
runonce: false
script: |-
  # Optional arguments and default values
  attrs = 'name'
  if demisto.get(demisto.args(), 'attributes'):
      attrs += "," + demisto.args()['attributes']
  memberDN = ''
  if demisto.get(demisto.args(), 'dn'):
      memberDN = demisto.args()['dn']
  elif demisto.get(demisto.args(), 'name'):
      resp = demisto.executeCommand('AdSearch', {'filter':"(&(objectCategory=Computer)(name=" + demisto.args()['name']+"))"})
      if type(resp)==list and len(resp)==1 and type(resp[0])==dict and 'Contents' in resp[0] and type(resp[0]['Contents'])==list and len(resp[0]['Contents'])==1 and type(resp[0]['Contents'][0])==dict and 'dn' in resp[0]['Contents'][0]:
          memberDN = resp[0]['Contents'][0]['dn']
      else:
          demisto.results( { 'Type' : entryTypes['error'], 'ContentsFormat' : formats['text'], 'Contents' : 'Unexpected output from ad command.' } )
          sys.exit(0)
  else:
      demisto.results( { 'Type' : entryTypes['error'], 'ContentsFormat' : formats['text'], 'Contents' : 'You must provide either dn or name as argument!' } )
      sys.exit(0)
  if memberDN:
      filterstr = r"(&(member=" + memberDN + ")(objectcategory=group))"
      demisto.results( demisto.executeCommand( 'AdSearch' , { 'filter' : filterstr, 'attributes' : attrs } ) )
  else:
      demisto.results( { 'Type' : entryTypes['error'], 'ContentsFormat' : formats['text'], 'Contents' : 'Computer not found.' } )
scripttarget: 0
system: true
tags:
- active directory
type: python
