description: |-
  Detonates one or more remote files using the ANYRUN sandbox integration.
  Returns relevant reports to the War Room and file reputations to the context data.
  This type of analysis works only for direct download links.
id: Detonate File From URL - ANYRUN
inputs:
- description: URL of the web file to detonate.
  key: URL
  required: false
  value:
    complex:
      root: URL
- description: Duration for executing the pooling (in minutes)
  key: Interval
  required: false
  value:
    simple: "1"
- description: The duration after which to stop pooling and to resume the playbook
    (in minutes)
  key: Timeout
  required: false
  value:
    simple: "15"
name: Detonate File From URL - ANYRUN
outputs:
- contextPath: ANYRUN.Task.AnalysisDate
  description: Date and time the analysis was executed.
  type: String
- contextPath: ANYRUN.Task.Behavior.Category
  description: Category of a process behavior.
  type: String
- contextPath: ANYRUN.Task.Behavior.Action
  description: Actions performed by a process.
  type: String
- contextPath: ANYRUN.Task.Behavior.ThreatLevel
  description: Threat score associated with a process behavior.
  type: Number
- contextPath: ANYRUN.Task.Behavior.ProcessUUID
  description: Unique ID of the process whose behaviors are being profiled.
  type: String
- contextPath: ANYRUN.Task.Connection.Reputation
  description: Connection reputation.
  type: String
- contextPath: ANYRUN.Task.Connection.ProcessUUID
  description: ID of the process that created the connection.
  type: String
- contextPath: ANYRUN.Task.Connection.ASN
  description: Connection autonomous system network.
  type: String
- contextPath: ANYRUN.Task.Connection.Country
  description: Connection country.
  type: String
- contextPath: ANYRUN.Task.Connection.Protocol
  description: Connection protocol.
  type: String
- contextPath: ANYRUN.Task.Connection.Port
  description: Connection port number.
  type: Number
- contextPath: ANYRUN.Task.Connection.IP
  description: Connection IP number.
  type: String
- contextPath: ANYRUN.Task.DnsRequest.Reputation
  description: Reputation of the DNS request.
  type: String
- contextPath: ANYRUN.Task.DnsRequest.IP
  description: IP addresses associated with a DNS request.
  type: Unknown
- contextPath: ANYRUN.Task.DnsRequest.Domain
  description: Domain resolution of a DNS request.
  type: String
- contextPath: ANYRUN.Task.Threat.ProcessUUID
  description: Unique process ID from where the threat originated.
  type: String
- contextPath: ANYRUN.Task.Threat.Msg
  description: Threat message.
  type: String
- contextPath: ANYRUN.Task.Threat.Class
  description: Class of the threat.
  type: String
- contextPath: ANYRUN.Task.Threat.SrcPort
  description: Port on which the threat originated.
  type: Number
- contextPath: ANYRUN.Task.Threat.DstPort
  description: Destination port of the threat.
  type: Number
- contextPath: ANYRUN.Task.Threat.SrcIP
  description: Source IP address where the threat originated.
  type: String
- contextPath: ANYRUN.Task.Threat.DstIP
  description: Destination IP address of the threat.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.Reputation
  description: Reputation of the HTTP request.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.Country
  description: HTTP request country.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.ProcessUUID
  description: ID of the process making the HTTP request.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.Body
  description: HTTP request body parameters and details.
  type: Unknown
- contextPath: ANYRUN.Task.HttpRequest.HttpCode
  description: HTTP request response code.
  type: Number
- contextPath: ANYRUN.Task.HttpRequest.Status
  description: Status of the HTTP request.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.ProxyDetected
  description: Whether the HTTP request was made through a proxy.
  type: Boolean
- contextPath: ANYRUN.Task.HttpRequest.Port
  description: HTTP request port.
  type: Number
- contextPath: ANYRUN.Task.HttpRequest.IP
  description: HTTP request IP address.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.URL
  description: HTTP request URL.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.Host
  description: HTTP request host.
  type: String
- contextPath: ANYRUN.Task.HttpRequest.Method
  description: HTTP request method type.
  type: String
- contextPath: ANYRUN.Task.FileInfo
  description: Details of the submitted file.
  type: String
- contextPath: ANYRUN.Task.OS
  description: OS of the sandbox in which the file was analyzed.
  type: String
- contextPath: ANYRUN.Task.ID
  description: The unique ID of the task.
  type: String
- contextPath: ANYRUN.Task.MIME
  description: The MIME of the file submitted for analysis.
  type: String
- contextPath: ANYRUN.Task.MD5
  description: The MD5 hash of the file submitted for analysis.
  type: String
- contextPath: ANYRUN.Task.SHA1
  description: The SHA1 hash of the file submitted for analysis.
  type: String
- contextPath: ANYRUN.Task.SHA256
  description: The SHA256 hash of the file submitted for analysis.
  type: String
- contextPath: ANYRUN.Task.SSDeep
  description: SSDeep hash of the file submitted for analysis.
  type: String
- contextPath: ANYRUN.Task.Verdict
  description: ANY.RUN verdict for the maliciousness of the submitted file or URL.
  type: String
- contextPath: ANYRUN.Task.Process.FileName
  description: File name of the process.
  type: String
- contextPath: ANYRUN.Task.Process.PID
  description: Process identification number.
  type: Number
- contextPath: ANYRUN.Task.Process.PPID
  description: Parent process identification number.
  type: Number
- contextPath: ANYRUN.Task.Process.ProcessUUID
  description: Unique process ID (used by ANY.RUN).
  type: String
- contextPath: ANYRUN.Task.Process.CMD
  description: Process command.
  type: String
- contextPath: ANYRUN.Task.Process.Path
  description: Path of the executed command.
  type: String
- contextPath: ANYRUN.Task.Process.User
  description: User who executed the command.
  type: String
- contextPath: ANYRUN.Task.Process.IntegrityLevel
  description: The process integrity level.
  type: String
- contextPath: ANYRUN.Task.Process.ExitCode
  description: Process exit code.
  type: Number
- contextPath: ANYRUN.Task.Process.MainProcess
  description: Whether the process is the main process.
  type: Boolean
- contextPath: ANYRUN.Task.Process.Version.Company
  description: Company responsible for the program executed.
  type: String
- contextPath: ANYRUN.Task.Process.Version.Description
  description: Description of the type of program.
  type: String
- contextPath: ANYRUN.Task.Process.Version.Version
  description: Version of the program executed.
  type: String
- contextPath: DBotScore.Indicator
  description: The indicator that was tested.
  type: String
- contextPath: DBotScore.Score
  description: The actual score.
  type: Number
- contextPath: DBotScore.Type
  description: Type of indicator.
  type: String
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score.
  type: String
- contextPath: File.Extension
  description: Extension of the file submitted for analysis.
  type: String
- contextPath: File.Name
  description: The name of the file submitted for analysis.
  type: String
- contextPath: File.MD5
  description: MD5 hash of the file submitted for analysis.
  type: String
- contextPath: File.SHA1
  description: SHA1 hash of the file submitted for analysis.
  type: String
- contextPath: File.SHA256
  description: SHA256 hash of the file submitted for analysis.
  type: String
- contextPath: File.SSDeep
  description: SSDeep hash of the file submitted for analysis.
  type: String
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision.
  type: String
- contextPath: File.Malicious.Description
  description: For malicious files, the reason that the vendor made the decision.
  type: String
- contextPath: ANYRUN.Task.Status
  description: Task analysis status.
  type: String
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Start
      id: b04c121d-294e-4dd0-8148-d9fe0f44be04
      iscommand: false
      name: ""
      version: -1
    taskid: b04c121d-294e-4dd0-8148-d9fe0f44be04
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    scriptarguments:
      env_bitness: {}
      env_type: {}
      env_version: {}
      file: {}
      obj_type:
        simple: download
      obj_url:
        complex:
          accessor: Data
          root: inputs.URL
      opt_kernel_heavyevasion: {}
      opt_network_connect: {}
      opt_privacy_type: {}
    separatecontext: false
    task:
      brand: ANYRUN
      description: Submit a file or url for analysis.
      id: 1abf1e54-1633-41fb-80b5-00a994d7c4b5
      iscommand: true
      name: ANYRUN Submit File from URL for Analysis
      script: ANYRUN|||anyrun-run-analysis
      type: regular
      version: -1
    taskid: 1abf1e54-1633-41fb-80b5-00a994d7c4b5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "3"
    note: false
    scriptarguments:
      Ids:
        complex:
          accessor: Task.ID
          root: ANYRUN
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: task
      PollingCommandName:
        simple: anyrun-get-report
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: ANYRUN.Task(val.Status != 'done').ID
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: faf98979-d9b0-4fcd-86e5-0004f3b98603
      iscommand: false
      name: GenericPolling
      playbookName: GenericPolling
      type: playbook
      version: -1
    taskid: faf98979-d9b0-4fcd-86e5-0004f3b98603
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    scriptarguments:
      task:
        complex:
          accessor: Task.ID
          root: ANYRUN
    separatecontext: false
    task:
      brand: ANYRUN
      description: Get the report for a task created for a submitted file or url.
      id: 371e111a-9263-4708-86ae-961495255ff9
      iscommand: true
      name: ANYRUN Get Report
      script: ANYRUN|||anyrun-get-report
      type: regular
      version: -1
    taskid: 371e111a-9263-4708-86ae-961495255ff9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Done
      id: 7e59cb60-98d6-49a0-8c7f-522c1247ee73
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 7e59cb60-98d6-49a0-8c7f-522c1247ee73
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
  "6":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.URL
          operator: isExists
      label: "yes"
    id: "6"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Look for file URLs to detonate
      id: a1d00028-5388-4ea3-8877-cb5b7fb2a5d0
      iscommand: false
      name: Is there a download URL to detonate?
      type: condition
      version: -1
    taskid: a1d00028-5388-4ea3-8877-cb5b7fb2a5d0
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
  "7":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: ANYRUN
                root: modules
                transformers:
                - args:
                    field:
                      value:
                        simple: state
                  operator: getField
          operator: isEqualString
          right:
            value:
              simple: active
      label: "yes"
    id: "7"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "6"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Check if integration instance is enabled
      id: 57c1be55-35b0-4527-83e8-66cc23fc33c9
      iscommand: false
      name: Is ANYRUN sandbox enabled?
      type: condition
      version: -1
    taskid: 57c1be55-35b0-4527-83e8-66cc23fc33c9
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
