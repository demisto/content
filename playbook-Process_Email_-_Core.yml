description: Add email details to the relevant context entities and handle the case
  where original emails are attached.
id: Process Email - Core
inputs:
- description: An EML or MSG file
  key: File
  required: false
  value:
    complex:
      root: File
- description: The receiving email address
  key: Email
  required: false
  value:
    complex:
      accessor: labels.Email
      root: incident
- description: CC addresses
  key: Email/cc
  required: false
  value:
    complex:
      accessor: labels.CC
      root: incident
- description: The originator of the email
  key: Email/from
  required: false
  value:
    complex:
      accessor: labels.Email/from
      root: incident
- description: The email’s subject
  key: Email/subject
  required: false
  value:
    complex:
      accessor: labels.Email/subject
      root: incident
- description: The email text
  key: Email/text
  required: false
  value:
    complex:
      accessor: labels.Email/text
      root: incident
- description: The html version of the email.
  key: Email/html
  required: false
  value:
    complex:
      accessor: labels.Email/html
      root: incident
- description: The email’s headers
  key: Email/headers
  required: false
  value:
    complex:
      accessor: labels.Email/headers
      root: incident
- description: The email’s format
  key: Email/format
  required: false
  value:
    complex:
      accessor: labels.Email/format
      root: incident
name: Process Email - Core
outputs:
- contextPath: Email.HTML
  description: Email 'html' body, if exists
  type: string
- contextPath: Email
  description: Email object
  type: unknown
- contextPath: Email.CC
  description: Email 'cc' addresses
  type: string
- contextPath: Email.From
  description: Email 'from' sender
  type: string
- contextPath: Email.Subject
  description: Email subject
  type: string
- contextPath: Email.To
  description: Email 'to' addresses
  type: string
- contextPath: Email.Text
  description: Email 'text' body, if exists
  type: string
- contextPath: Email.Headers
  description: The full email headers as a single string
  type: string
- contextPath: Email.Attachments
  description: The list of attachment names in the email
  type: string
- contextPath: Email.Format
  description: The format of the email, if available
  type: string
- contextPath: File
  description: The File object
  type: unknown
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: ccd00127-175c-4a93-8edb-14e71f7d47ea
      iscommand: false
      name: ""
      version: -1
    taskid: ccd00127-175c-4a93-8edb-14e71f7d47ea
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 265,
          "y": 50
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      "no":
      - "2"
      "yes":
      - "3"
    note: false
    reputationcalc: 1
    results:
    - reportedemailentryid
    scriptarguments:
      entryid:
        complex:
          accessor: EntryID
          root: inputs.File
          transformers:
          - operator: uniq
    separatecontext: false
    task:
      brand: ""
      description: Identifies whether the incident includes an email message attached
        as an eml or msg file, and returns the answer to the playbook. Also saves
        the identified entry ID to context for later use. Commonly used in automated
        playbooks that handle phishing reports sent to a special phishing mailbox
        set up by the security team.
      id: 64fb00a1-ae02-41d5-8dc0-7659d01f90cc
      iscommand: false
      name: Is there an email file attached?
      scriptName: IdentifyAttachedEmail
      type: condition
      version: -1
    taskid: 64fb00a1-ae02-41d5-8dc0-7659d01f90cc
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "6"
    note: false
    reputationcalc: 2
    scriptarguments:
      append: {}
      key:
        simple: Email
      value:
        simple: '${inputs={To: val[''Email''], CC: val[''Email/cc''], From: val[''Email/from''],
          Subject: val[''Email/subject''], Text: val[''Email/text''], HTML: val[''Email/html''],
          Headers: val[''Email/headers''], Format: val[''Email/format'']}}'
    separatecontext: false
    task:
      brand: ""
      description: Saves the email data extracted by the configured email listener
        integration to the context. Also extracts indicators from the email message.
      id: 523c57ff-ad78-4aa1-8d24-6ee2518d84ef
      iscommand: false
      name: Save email details
      scriptName: Set
      type: regular
      version: -1
    taskid: 523c57ff-ad78-4aa1-8d24-6ee2518d84ef
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    reputationcalc: 2
    results:
    - AttachmentName
    scriptarguments:
      entryid:
        complex:
          root: reportedemailentryid
          transformers:
          - operator: uniq
      max_depth: {}
      parse_only_headers: {}
    separatecontext: false
    task:
      brand: ""
      description: Parses an email from an EML or MSG file and populates all relevant
        context data to investigate the email. Also extracts indicators from the email
        messages.
      id: aad80f9a-e552-43ae-88fc-81ab3ef53c11
      iscommand: false
      name: Extract and save email details
      scriptName: ParseEmailFiles
      type: regular
      version: -1
    taskid: aad80f9a-e552-43ae-88fc-81ab3ef53c11
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
  "6":
    id: "6"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: dd0d5106-965e-4a81-8e67-79392ea47d7f
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: dd0d5106-965e-4a81-8e67-79392ea47d7f
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
  "19":
    id: "19"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "6"
    note: false
    reputationcalc: 1
    scriptarguments:
      1longtexttest: {}
      aaaa: {}
      addLabels: {}
      adgroupname: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedhosts: {}
      affectedindividualscontactinformation: {}
      affectedips: {}
      alertlevel: {}
      amarkdownsection: {}
      anothernumberpleasejusttomakesure: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arcsightcaseid: {}
      assetid: {}
      attach: {}
      attachamenthash: {}
      attachmentcount:
        complex:
          accessor: |
            Attachment.Count
          root: Email
      attachmentextension:
        complex:
          accessor: Attachment.Extension
          root: Email
      attachmenthash:
        complex:
          accessor: Attachment.Hash
          root: Email
      attachmentid:
        complex:
          accessor: Attachment.ID
          root: Email
      attachmentitem:
        complex:
          accessor: Attachment.Item
          root: Email
      attachmentname:
        complex:
          accessor: Attachment.Name
          root: Email
      attachmentsize:
        complex:
          accessor: Attachment.Size
          root: Email
      attachmenttype:
        complex:
          accessor: Attachment.Type
          root: Email
      awsinstancename: {}
      backupowner: {}
      bbb: {}
      blah: {}
      bool1: {}
      bool2: {}
      booleansummary: {}
      booleantest: {}
      boolfield: {}
      booltest: {}
      bugtraq: {}
      campaigntargetcount: {}
      campaigntargets: {}
      casenumber: {}
      ccc: {}
      ccipaddress: {}
      city: {}
      cleanname: {}
      closeNotes: {}
      closeReason: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      compliance: {}
      constvalue: {}
      contactaddress: {}
      contactname: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      customfield: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      date2: {}
      datepicker: {}
      datetimeofthebreach: {}
      daysbetweenreportcreation: {}
      deleteEmptyField:
        simple: "True"
      department: {}
      departmentadmin: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      detectedusers: {}
      dpoemailaddress: {}
      dstip: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailbcc:
        complex:
          accessor: HeadersMap.BCC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          accessor: Text
          root: Email
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          accessor: BodyFormat
          root: Email
      emailbodyhtml:
        complex:
          accessor: HTML
          root: Email
          transformers:
          - operator: Stringify
      emailbodyhtmlraw: {}
      emailcc:
        complex:
          accessor: CC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclassification: {}
      emailclientname:
        complex:
          accessor: ClientName
          root: Email
      emailfrom:
        complex:
          accessor: From
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailfromdisplayname: {}
      emailhtml:
        complex:
          accessor: HTML
          root: Email
          transformers:
          - operator: uniq
      emailimage:
        complex:
          accessor: Image
          root: Email
      emailinreplyto:
        complex:
          accessor: InReplyTo
          root: Email
      emailkeywords:
        complex:
          accessor: Keywords
          root: Email
      emailmessageid:
        complex:
          accessor: HeadersMap.Message-ID
          root: Email
          transformers:
          - operator: uniq
      emailreceived: {}
      emailreplyto:
        complex:
          accessor: HeadersMap.Reply-To
          root: Email
          transformers:
          - operator: uniq
      emailreturnpath:
        complex:
          accessor: HeadersMap.Return-Path
          root: Email
          transformers:
          - operator: uniq
      emailsenderdomain: {}
      emailsenderip:
        complex:
          accessor: SenderIP
          root: Email
          transformers:
          - operator: uniq
      emailsize:
        complex:
          accessor: Size
          root: Email
          transformers:
          - operator: uniq
      emailsource:
        complex:
          accessor: Source
          root: Email
          transformers:
          - operator: uniq
      emailsubject:
        complex:
          accessor: Subject
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailsubjectlanguage: {}
      emailto:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
      emailtocount:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
          - operator: count
      emailurlclicked:
        complex:
          root: EmailUrlClicked
      enisacategory: {}
      escalationdate: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      field1: {}
      field2: {}
      field3: {}
      field4: {}
      filehash: {}
      filename: {}
      filepath: {}
      fwlogs: {}
      gatenumber: {}
      hash: {}
      hjhj: {}
      host: {}
      hostid: {}
      hostname: {}
      htmlimage: {}
      htmlrenderedimage: {}
      htmltypefield: {}
      id: {}
      important: {}
      importantfield: {}
      infectedhost: {}
      intelblockcomment: {}
      intelblockurl: {}
      internalemail: {}
      internalusage: {}
      isthedatasubjecttodpia: {}
      itaytestfield: {}
      jiraticketid: {}
      killchain: {}
      labels: {}
      likelyimpact: {}
      lob: {}
      longtextone: {}
      longtexttoo: {}
      mailbody: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      mdtest: {}
      measurestomitigate: {}
      mitigated: {}
      mttd: {}
      multilinetext: {}
      mydate: {}
      myfield: {}
      myname: {}
      myseverity: {}
      name: {}
      newmarkdownfield: {}
      newtextfield: {}
      noatext: {}
      numberplease: {}
      objecttype: {}
      occurred: {}
      originalhtml: {}
      oriwithspace: {}
      owner: {}
      phase: {}
      phishingsender: {}
      phishingsenderdomain: {}
      phishingsubtype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      priority: {}
      qradaroffenceid: {}
      queues: {}
      relateddomain: {}
      relatedincidentssummary: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      riskmitigationactionrequirements: {}
      riskscore: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      sectorofaffectedparty: {}
      selector: {}
      sender: {}
      sensitive: {}
      severity: {}
      shift: {}
      shiftnotes: {}
      signature: {}
      single: {}
      single2: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      sla: {}
      slaField: {}
      source: {}
      sourceip: {}
      sourceip1: {}
      src: {}
      srcip: {}
      srcntdomain: {}
      srcuser: {}
      subcat: {}
      subcategory: {}
      summary: {}
      systems: {}
      targethostname: {}
      team: {}
      telefield: {}
      telephoneno: {}
      teleselect: {}
      test: {}
      test2: {}
      test111: {}
      testassociationdumpme: {}
      testfield: {}
      testguy: {}
      testhtml: {}
      thisismysuperlongfield: {}
      tier2owner: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      timetomitigate: {}
      timetotriage: {}
      tldr: {}
      tlp: {}
      tttttt: {}
      type: {}
      uniquefiled: {}
      user: {}
      useremail: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      vvvv: {}
      whereisdatahosted: {}
      xdr: {}
      zattachmentsgeneric: {}
      zmaltegoimage: {}
      zvtfirstseen: {}
      zvtother: {}
      zvtvendorcount: {}
    separatecontext: false
    task:
      brand: Builtin
      description: Updates Demisto incident fields using data from the email object.
      id: 553f9128-f60b-488d-8650-ad9648501964
      iscommand: true
      name: Set incident with the email object data
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 553f9128-f60b-488d-8650-ad9648501964
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "1_2_no": 0.28,
      "1_3_yes": 0.3
    },
    "paper": {
      "dimensions": {
        "height": 735,
        "width": 810,
        "x": 50,
        "y": 50
      }
    }
  }
