name: pre-commit
on: 
  workflow_call:


jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
    - name: Install poetry
      uses: Gr1N/setup-poetry@v9

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'poetry'
    
    - name: Install dependencies
      run: poetry install

    - name: Cache Pre commit
      id: cache-pre-commit
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit
      
    - name: run pre-commit
      env:
        DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        BRANCH_NAME: ${{ github.head_ref }}
      run: |
        source .venv/bin/activate
        if [[ "$BRANCH_NAME" =~ ^AUD-demisto/.* ]]; then
          echo "In docker auto update branch, pre commit on docker_autoupdate mode."
          demisto-sdk pre-commit -g --mode=docker_autoupdate --show-diff-on-failure --verbose
        else
          echo "Not in docker auto update branch, pre commit on CI mode."
          demisto-sdk pre-commit -g --validate --no-secrets --show-diff-on-failure --verbose --mode=ci
        fi

    - name: "Check coverage.xml exists"
      if: always()
      id: check-coverage-xml-exists
      uses: andstor/file-existence-action@v2
      with:
        files: "coverage_report/coverage.xml"

    - name: "Check pytest report exists"
      if: always()
      id: check-pytest-junit-exists
      uses: andstor/file-existence-action@v2
      with:
        files: ".report_pytest.xml"

    - name: Create pack-wise pytest report
      run: poetry run python Utils/github_workflow_scripts/parse_junit_per_pack.py
      if: |
        always() && 
        steps.check-pytest-junit-exists.outputs.files_exists == 'true' && 
        github.event.pull_request.head.repo.fork == false

    - name: Upload junit & pack-wise pytest report
      uses: actions/upload-artifact@v4
      if: |
        always() && 
        steps.check-pytest-junit-exists.outputs.files_exists == 'true' && 
        github.event.pull_request.head.repo.fork == false
      with:
        name: pytest
        path: |
          packwise_pytest_time.csv
          .report_pytest.xml
        if-no-files-found: error

    - name: Pytest coverage comment
      if: |
        always() && 
        steps.check-coverage-xml-exists.outputs.files_exists == 'true' && 
        steps.check-pytest-junit-exists.outputs.files_exists == 'true' && 
        ! github.event.pull_request.head.repo.fork
      uses: MishaKav/pytest-coverage-comment@main
      continue-on-error: true  # may fail on output > 65k chars
      with:
        pytest-xml-coverage-path: coverage_report/coverage.xml
        junitxml-path: .report_pytest.xml
    
    - uses: actions/cache/save@v3
      if: always()
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit
      
