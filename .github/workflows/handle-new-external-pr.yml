name: Handle New External PRs
on:
  pull_request_target:
    types: [opened]

permissions:
  contents: read

jobs:
  handle_new_external_pr:
    runs-on: ubuntu-latest
    if: github.repository == 'demisto/content' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@48b0f77c8c1b1b19cb962f0f00dff7b4be8f81ec # v9
      - name: Print Context
        run: |
          echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Install Python Dependencies
        run: |
          poetry install --with github-actions
      - name: set pythonpath
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Update External PR
        env:
          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}
          EVENT_PAYLOAD: ${{ toJson(github.event) }}
        run: |
          echo "Updating External PR ${{ github.event.pull_request.html_url }}"
          cd .github/github_workflow_scripts
          poetry run ./handle_external_pr.py
          echo "Finished Handling External PR"

      - name: Add Contribution Form Filled for Marketplace Contributions
        if: contains(github.event.pull_request.title, '[Marketplace Contribution]')
        run: gh pr edit "$PR_NUMBER" --add-label "$LABEL"
        env:
          GH_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          LABEL: "Contribution Form Filled"

      - name: Send Notification
        if: startsWith(github.event.pull_request.title, 'test') != true
        env:
          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}
          EVENT_PAYLOAD: ${{ toJson(github.event) }}
          CORTEX_XSOAR_SLACK_TOKEN: ${{ secrets.CORTEX_XSOAR_SLACK_TOKEN }}
        run: |
          echo "Sending notification about External PR ${{ github.event.pull_request.html_url }}"
          cd .github/github_workflow_scripts
          poetry run ./send_slack_message.py
