commonfields:
  id: IdentifyAttachedEmail
  version: -1
name: IdentifyAttachedEmail
script: |-
  entries = demisto.executeCommand('getEntries', {})
  for e in entries:
      t = demisto.get(e, 'FileMetadata.info')
      if t and ('Composite Document File V2 Document'.lower() in t.lower() or 'rfc 822 mail' in t.lower() or (e['File'].endswith('.eml') and 'ascii' in t.lower() and 'crlf' in t.lower())):
          demisto.setContext('reportedemailentryid', e['ID'])
          demisto.results('yes')
          sys.exit()
  demisto.results('no')
type: python
tags:
- phishing
- email
- Condition
comment: Identify whether the incident includes an email message attached as an eml
  or msg file and return the answer to playbook. Also saves the identified entry ID
  to context for use by later scripts such as  ParseEmailFile. Commonly used in automated
  playbooks that handle phishing reports sent to a special phishing mailbox set up
  by the security team.
outputs:
- contextPath: yes
  description: If incident contains an email attachment
- contextPath: no
  description: If incident does not contain an email attachment
system: true
scripttarget: 0
dependson: {}
timeout: 0s
