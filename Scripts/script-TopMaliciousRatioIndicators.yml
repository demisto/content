commonfields:
  id: TopMaliciousRatioIndicators
  version: -1
fromVersion: "4.0.0"
name: TopMaliciousRatioIndicators
script: |
  from datetime import datetime, timedelta
  import json, random

  MAX_INDICATORS = 10000
  MIN_NUMBER_OF_INVS = 3
  MAX_RESULTS = 10

  from_date = demisto.args().get('from', '"30 days ago"')
  res = demisto.executeCommand("findIndicators", {'query':'lastSeen:>=%s' % from_date, 'size': MAX_INDICATORS})
  indicators = res[0]['Contents']
  indicators = [i for i in indicators if len(i.get('investigationIDs') or []) >= MIN_NUMBER_OF_INVS]
  indicators_map = {}
  for i in indicators:
      indicators_map[i['id']] = i

  res = demisto.executeCommand("maliciousRatio", {'id': ",".join(indicators_map.keys())})
  malicious_ratio_result = res[0]['Contents']
  for mr in malicious_ratio_result:
      indicators_map[mr['indicatorId']]['maliciousRatio'] = mr['maliciousRatio']
      indicators_map[mr['indicatorId']]['from_date'] = from_date

  sorted_indicators = sorted(indicators_map.values(), key=lambda x: x['maliciousRatio'], reverse=True)
  sorted_indicators = sorted_indicators[:MAX_RESULTS]
  demisto.results(json.dumps({"total": len(sorted_indicators), "data": sorted_indicators}))
type: python
tags: []
comment: |-
  Find the top malicious ratio indicators.
  Malicious ratio is defined by the ratio between the number of "bad" incidents divided by the number of total number of incidents that the indicators appears in.
enabled: true
scripttarget: 0
runonce: false
releaseNotes: "Add new script"