commonfields:
  id: QRadarGetCorrelationLogs
  version: -1
name: QRadarGetCorrelationLogs
script: |-
  QUERY = "select RULENAME({0}), sourceip, destinationip, eventcount, sourceport, username, starttime, destinationport, magnitude, identityip, CATEGORYNAME(category), PROTOCOLNAME(protocolid), LOGSOURCENAME(logsourceid){1} from events where \"CRE Name\" IS NULL AND INOFFENSE({2}) START '{3}'"

  d_args = demisto.args()

  offense_id = demisto.get(d_args, 'offenseID')
  start_time = demisto.get(d_args, 'startTime')
  correlation_id = demisto.get(d_args, 'qid')
  additional_query_fields = demisto.get(d_args,'additionalQueryFields')

  d_args["query_expression"] = QUERY.format(correlation_id,additional_query_fields,offense_id,start_time)

  resp = demisto.executeCommand('QRadarFullSearch',d_args)
  if isError(resp[0]):
      demisto.results(resp)
  else:
      data = demisto.get(resp[0],'Contents')

      if not data:
          resp[0]['HumanReadable'] = "No logs were found for correlation id {0}".format(correlation_id)
      else:
          data = data if isinstance(data,list) else [data]

          QRadar = {}
          QRadar['Log'] = []

          for corr in data:

              keys = corr.keys()
              log = {}
              log["QID"] = correlation_id
              #Standardized known keys
              log["SourceIP"] = demisto.get(corr,"sourceip")
              keys.remove("sourceip") if "sourceip" in keys else None

              log["DestinationPort"] = demisto.get(corr,"destinationport")
              keys.remove("destinationport") if "destinationport" in keys else ""

              log["SourcePort"] = demisto.get(corr,"sourceport")
              keys.remove("sourceport") if "sourceport" in keys else ""

              log["EventCount"] = demisto.get(corr,"eventcount")
              keys.remove("eventcount") if "eventcount" in keys else ""

              log["DestinationIP"] = demisto.get(corr,"destinationip")
              keys.remove("destinationip") if "destinationip" in keys else ""

              log["Category"] = demisto.get(corr,"categoryname_category")
              keys.remove("categoryname_category") if "categoryname_category" in keys else ""

              log["IdentityIP"] = demisto.get(corr,"identityip")
              keys.remove("identityip") if "identityip" in keys else ""

              log["Username"] = demisto.get(corr,"username")
              keys.remove("username") if "username" in keys else ""

              log["StartTime"] = demisto.get(corr,"starttime")
              keys.remove("starttime") if "starttime" in keys else ""

              log["Magnitude"] = demisto.get(corr,"magnitude")
              keys.remove("magnitude") if "magnitude" in keys else ""

              log["ProtocolName"] = demisto.get(corr,"protocolname_protocolid")
              keys.remove("protocolname_protocolid") if "protocolname_protocolid" in keys else ""

              #Push to context rest of the keys (won't be shown in 'outputs')
              for key in keys:
                  log[''.join(x for x in key.title() if not x.isspace())] = demisto.get(corr,key)

              QRadar['Log'].append(log)

          context = {"QRadar":QRadar}
          resp[0]['EntryContext'] = context

  demisto.results(resp)
type: python
tags:
- QRadar
comment: Return the QRadar Correlation logs if exist
system: true
args:
- name: offenseID
  required: true
  default: true
  description: The offense ID to query.
  defaultValue: ${incident.labels.id}
- name: startTime
  required: true
  description: query from startTime (in timestamp format).
  defaultValue: ${incident.labels.start_time}
- name: headers
  description: Table headers
- name: range
  description: Number of results in return
- name: interval
  description: Interval to poll for results. Default is 10 seconds.
- name: timeout
  description: Timeout in seconds. Default is 10 minutes.
- name: fields
  description: Fields to filter in
- name: qid
  required: true
  description: The Correlation QID to query.
  defaultValue: ${Correlation.QID}
- name: additionalQueryFields
  description: Add more fields for basic query (a list with comma separators)
outputs:
- contextPath: QRadar
  description: QRadar context output
- contextPath: QRadar.Log
  description: The QRadar offense correlation logs
- contextPath: QRadar.Log.QID
  description: The log's correlation ID
- contextPath: QRadar.Log.SourceIP
  description: The log's source IP
- contextPath: QRadar.Log.DestinationPort
  description: The log's destination port
- contextPath: QRadar.Log.SourcePort
  description: The log's source port
- contextPath: QRadar.Log.DestinationIP
  description: The log's destination IP
- contextPath: QRadar.Log.Category
  description: The log's category
- contextPath: QRadar.Log.IdentityIP
  description: The log's identity IP
- contextPath: QRadar.Log.Username
  description: The log's username
- contextPath: QRadar.Log.StartTime
  description: The log's start time
- contextPath: QRadar.Log.Magnitude
  description: The log's magnitude
- contextPath: QRadar.Log.ProtocolName
  description: The log's protocol name
scripttarget: 0
dependson:
  must:
  - qradar-searches
releaseNotes: "-"
tests:
- Forgive me for my sins but I did not create any test
