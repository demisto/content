commonfields:
  id: 7b02fa0f-94ff-48c7-8350-b4e353702e73
  version: 3
name: VMRay
script: |-
  import json
  import time
  res = []
  resCmdName = demisto.executeCommand("getFilePath", {"id": demisto.args()['entry_id']})
  try:
    path = resCmdName[0]['Contents']['path']
    data = json.loads(demisto.executeCommand("upload_sample", {"file_id":path})[0]['Contents'])
    if data:
        open_jobs = data["jobs"]
        sample_id = data["samples"]
        if sample_id:
            sample_id = data["samples"][0]["sample_id"]
            demisto.executeCommand("scheduleEntry", {"command": "!vmray_getResults sample_id={} ".format(str(sample_id)), "cron": "*/1 * * * *"})
        else:
            res.append({"Type": entryTypes["error"], "ContentsFormat": formats["text"],
                            "Contents": "Could not extract result list from response: " + data["errors"][0]["error_msg"]})

  except Exception as ex:
    res.append({"Type": entryTypes["error"], "ContentsFormat": formats["text"],
                "Contents": "Error occurred while parsing output from command. Exception info:\n" + str(ex) + "\n\nInvalid output:\n" + str(resCmdName)})
  demisto.results(res)
type: python
tags:
- file
comment: Upload file and get it retults with VMRay
enabled: true
args:
- name: entry_id
  default: true
  description: The ID of a file entry to upload
scripttarget: 0
dependson:
  must:
  - VMRay|||upload_sample
timeout: 0s
