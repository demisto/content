commonfields:
  id: SlackAskUser
  version: -1
name: SlackAskUser
fromversion: 3.5.0
script: |-
  res = demisto.executeCommand('addEntitlement', {'persistent': demisto.get(demisto.args(), 'persistent'), 'replyEntriesTag': demisto.get(demisto.args(), 'replyEntriesTag')})
  if isError(res[0]):
      demisto.results(res)
      sys.exit(0)
  entitlement = demisto.get(res[0], 'Contents')
  option1 = demisto.get(demisto.args(), 'option1')
  if not option1:
      option1 = 'yes'
  option2 = demisto.get(demisto.args(), 'option2')
  if not option2:
      option2 = 'no'
  entitlementString = entitlement + '@' + demisto.investigation()['id']
  if demisto.get(demisto.args(), 'task'):
      entitlementString += '|' + demisto.get(demisto.args(), 'task')
  message = '%s - Please reply `%s %s` or `%s %s`' % (demisto.args()['message'], option1, entitlementString, option2, entitlementString)
  demisto.results(demisto.executeCommand('slack-send', {'to': demisto.get(demisto.args(), 'user'), 'message': message, 'IgnoreAddURL': 'true'}))
type: python
tags:
- slack
comment: Ask a user a question on Slack and expect a response. The response can also close a task (might be conditional) in a playbook.
system: true
args:
- name: user
  required: true
  default: true
  description: The slack user to ask - can be either email or slack username
- name: message
  required: true
  description: The message ask the user
- name: option1
  description: First option for a user reply. "yes" is the default.
- name: option2
  description: Second option for the user reply. "no" is the default.
- name: task
  description: Which task should we close with the reply. If none then no playbook tasks will be closed.
- name: replyEntriesTag
  description: Tag to add on email reply entries
- name: persistent
  description: Indicates whether to use one-time entitlement or a persistent one
  auto: PREDEFINED
  predefined:
  - "true"
  - "false"
  defaultValue: "false"
scripttarget: 0
dependson:
  must:
  - slack-send
timeout: 0s
