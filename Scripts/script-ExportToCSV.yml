commonfields:
  id: ExportToCSV
  version: -1
name: ExportToCSV
script: |-
  function convertToCSV(objArray) {
      var array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;
      var str = '';
      var line = '';
      var headersInOrder = [];

      // export the headers of csv
      if (array.length > 0) {
          line = '';
          for (var property in array[0]) {
              if (array[0].hasOwnProperty(property)) {
                  if (line !== '') {
                      line += ',';
                  }
                  line += property;
                  headersInOrder.push(property)
              }
          }
          str += line + '\r\n';
      }

      for (var i = 0; i < array.length; i++) {
          line = '';
          for (var headerIdx = 0; headerIdx < headersInOrder.length; headerIdx++) {
              header = headersInOrder[headerIdx];
              if (line !== '') {
                  line += ',';
              }

              var value = array[i][header];

              if (typeof value === 'object') {
                  // use JSON.stringify instead toString that convert to [object Object]
                  value = JSON.stringify(value);
              } else {
                  value = value + '';
              }
              value = value.trim().replace(/\n/g, '\\n').replace(/"/g, '""');
              if (value && value.indexOf(',') > -1) {
                  line += '"' + value + '"';
              } else {
                  line += value;
              }
          }

          str += line + '\n';
      }

      return str;
  }

  if (!Array.isArray(args.csvArray)) {
      return {
          Type: entryTypes.error,
          ContentFormat: formats.text,
          Contents: 'The csvArray that was passed was not array!'
      }
  }

  var csvString = convertToCSV(args.csvArray);
  var createdFileID = saveFile(csvString);

  return {
      Type: 3,
      FileID: createdFileID,
      File: args.fileName,
      Contents: args.fileName
  };
type: javascript
comment: Export given array to csv file
tags:
- Utility
- csv
args:
- name: fileName
  description: output filename
  required: true
  default: true
- name: csvArray
  description: Array to export
  required: true
  isArray: true
scripttarget: 0
