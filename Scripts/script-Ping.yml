commonfields:
  id: Ping
  version: -1
name: Ping
script: |-
  import pyping
  try:
      r = pyping.ping(demisto.args()['address'])
      res = {}
      res['ret_code'] = r.ret_code
      res['destination'] = r.destination
      res['max_rtt'] = r.max_rtt
      res['avg_rtt'] = r.avg_rtt
      res['min_rtt'] = r.min_rtt
      res['destination_ip'] = r.destination_ip
      demisto.results({
          'Type': entryTypes['note'],
          'Contents': res,
          'ContentsFormat': formats['json'],
          'HumanReadable': tableToMarkdown("Ping Results", res),
          'ReadableContentsFormat' : formats['markdown'],
          'EntryContext': { "Ping": res }
      })
  except Exception as e:
      demisto.results( { "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : str(e) } )
type: python
tags:
- Utility
comment: Pings an IP or url address, to verify it's up
enabled: true
args:
- name: address
  required: true
  default: true
  description: Address to ping
outputs:
- contextPath: Ping.ret_code
  description: Ping return code
  type: number
- contextPath: Ping.destination
  description: Ping destination address
  type: string
- contextPath: Ping.max_rtt
  description: Ping max round trip time
  type: number
- contextPath: Ping.avg_rtt
  description: Ping average round trip time
  type: number
- contextPath: Ping.min_rtt
  description: Ping minimum round trip time
  type: number
- contextPath: Ping.destination_ip
  description: Ping destination IP
  type: string
scripttarget: 0
runonce: false
dockerimage: demisto/pyping
