commonfields:
  id: MaliciousRatioReputation
  version: -1
name: MaliciousRatioReputation
fromversion: "4.0.0"
script: |-
  def get_indicator_from_value(indicator_value):
      try:
          res = demisto.executeCommand("findIndicators", {'value': indicator_value})
          indicator = res[0]['Contents'][0]
          return indicator
      except:
          pass

  indicator_value = demisto.args()['input']
  indicator = get_indicator_from_value(indicator_value)
  res = demisto.executeCommand("maliciousRatio", {'value': indicator['value']})
  mr_score = res[0]['Contents'][0]['maliciousRatio']
  if mr_score > float(demisto.args()['threshold']):
      ec = {}
      ec['DBotScore'] = {
          'Type': indicator['indicator_type'].lower(),
          'Score': 2, #suspicious
          'Vendor': 'MaliciousRatio',
          'Indicator': indicator['value']
      }
      demisto.results({
          'Type': entryTypes['note'],
          'EntryContext': ec,
          'Contents': 'Malicious ratio for %s is %.2f' % (indicator['value'], mr_score),
          'ContentsFormat': formats['text']
      })
type: python
tags:
- reputation
comment: |
  Set indicator reputation to "suspicious" when malicious ratio is above threshold.
  Malicious ratio is the ration between number of "bad" incidents to total number of incidents the indicator appears in.
enabled: true
args:
- name: input
  description: Value of the indicator.
- name: threshold
  description: 'Malicious ratio threshold to set indicator as suspicious. '
  defaultValue: "0.5"
scripttarget: 0
runonce: false
releaseNotes: "Add malicious ratio reputation script"