commonfields:
  id: 7e050a0e-4ad5-4d09-84d7-3df88d037d5c
  version: 53
name: MatchRegex
script: |-
  var data = (typeof args.data) === 'string' ? args.data : JSON.stringify(args.data);
  var flags = args.flags ? args.flags : 'im';
  var r = new RegExp(args.regex, flags);
  var m;
  var vals = [];
  while ((m = r.exec(data)) !== null) {
      if (m && m.length > 0) {
          var val = m[0];
          var group = parseInt(args.group);
          if (args.group && m.length > group) {
              val = m[group];
          }
          var ec = {};
          if (args.contextKey) {
              ec[args.contextKey] = val;
          }
      }
  }
  if (vals.length) {
      setContext('MatchRegex.results', vals)
      return {Type: entryTypes.note, Contents: vals, ContentsFormat: formats.text, EntryContext: ec};
  }
  setContext('MatchRegex.results', vals)
  return {Type: entryTypes.note, Contents: 'Regex does not match', ContentsFormat: formats.text};
type: javascript
tags:
- Utility
comment: Extract regex data from given text - supports groups and looping as well.
  May need to provide 'g' in flags argument.
enabled: true
args:
- name: data
  required: true
  description: The text date we should extract regex from
- name: regex
  required: true
  description: The regex to match and extract
- name: group
  description: The matching group to return (if not provided the full match will be
    returned), group value should start at 1
- name: contextKey
  description: The context key to populate with the result
- name: flags
  description: The regex flags to match. Default is -i.
  defaultValue: 
outputs:
- contextPath: MatchRegex.results
  description: List of Regex matches
  type: string
scripttarget: 0
runonce: false
