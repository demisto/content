commonfields:
  id: fb45fb17-eaf7-435f-874d-f4fa43b4c58a
  version: 108
name: GetFieldsByIncidentType
script: |
  def get_field_by_long_name(fields, name):
      for field in fields:
          if field['name'] == name:
              return field
      return None


  def get_field_by_short_name(fields, name):
      for field in fields:
          if field['cliName'] == name:
              return field
      return None


  def main():
      # get incident fields
      res = demisto.executeCommand('demisto-api-get', {'uri': '/incidentfields'})
      if is_error(res):
          return_error(res[0]['Contents'])

      fields = res[0]['Contents']['response']

      # 'fields' contains non-incident fields, as well, so let's make a version containing only incident fields
      incident_fields = [field for field in fields if field['id'].startswith('incident_')]

      # get arguments
      args = demisto.args()

      incident_type = args['incident_type']

      exclude_system = False
      if 'custom' in args and argToBoolean(args['custom']) is True:
          exclude_system = True

      name_key = 'name'
      if 'short_names' in args and argToBoolean(args['short_names']) is True:
          name_key = 'cliName'

      explicit_only = False
      if 'explicit_only' in args and argToBoolean(args['explicit_only']) is True:
          explicit_only = True

      # generate results
      types = []
      if exclude_system is True:
          # only return non-system fields
          for field in incident_fields: # using multiple if statements for readability
              if field['system'] is False: # exclude system fields
                  if field['associatedToAll'] is True and explicit_only is False: # if explicit_only is false, include fields associated to all incident types
                       types.append(field[name_key])
                  elif field['associatedTypes'] is not None and incident_type in field['associatedTypes']: # include fields where incident type is in associatedTypes
                      types.append(field[name_key])

      else:
          # return all fields
          for field in incident_fields: # using multiple if statements for readability
              if field['associatedToAll'] is True and explicit_only is False: # if explicit_only is false, include fields associated to all incident types
                   types.append(field[name_key])
              elif field['associatedTypes'] is not None and incident_type in field['associatedTypes']: # include fields where incident type is in associatedTypes
                  types.append(field[name_key])

      # output results
      demisto.results(pformat(types))


  if __name__ in ["__builtin__", "builtins"]:
      main()
type: python
tags: []
comment: Returns incident field names for a given incident type.
enabled: true
args:
- name: incident_type
  required: true
  description: The incident type to search for
- name: short_names
  auto: PREDEFINED
  predefined:
  - "true"
  - "false"
  description: If true, will cause output to use shortened field names.
  defaultValue: "false"
- name: exclude_system
  auto: PREDEFINED
  predefined:
  - "true"
  - "false"
  description: If true, will only output non-system fields.
  defaultValue: "false"
- name: explicit_only
  auto: PREDEFINED
  predefined:
  - "true"
  - "false"
  description: If  true, only fields which are explicitly associated to the incident
    type will be included (i.e. excludes fields associated to all incident types)
  defaultValue: "false"
scripttarget: 0
subtype: python3
dependson:
  must:
  - '|||demisto-api-get'
runonce: false
dockerimage: demisto/python3:3.7.5.4583
runas: DBotWeakRole
