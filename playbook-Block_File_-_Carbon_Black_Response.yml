description: |-
  This playbook receives an MD5 hash and adds it to the blacklist in Carbon Black Enterprise Response. Files with that MD5 hash are blocked from execution on the managed endpoints.

  If the integration is disabled at the time of running, or if the hash is already on the blacklist, no action is taken on the MD5.
id: block_file_-_carbon_black_response
inputs:
- description: The MD5 hash of the file you want to block.
  key: MD5
  required: false
  value:
    complex:
      accessor: MD5
      root: File
name: Block File - Carbon Black Response
outputs:
- contextPath: CbResponse.BlockedHashes.LastBlock.Time
  description: Last block time
- contextPath: CbResponse.BlockedHashes.LastBlock.Hostname
  description: Last block hostname
- contextPath: CbResponse.BlockedHashes.LastBlock.CbSensorID
  description: Last block sensor ID
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 5e4385e3-76c2-48e2-80a4-c3798cdae027
      iscommand: false
      name: ""
      version: -1
    taskid: 5e4385e3-76c2-48e2-80a4-c3798cdae027
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": -340
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    scriptarguments:
      banCount: {}
      lastBanHost: {}
      lastBanTime: {}
      md5hash:
        simple: ${inputs.MD5}
      text:
        simple: Malicious hash detected and will be blocked
    separatecontext: false
    task:
      brand: ""
      description: Adds the MD5 hash to the blacklist in Carbon Black, which blocks
        the execution of files with that hash on the managed endpoints.
      id: 0ee119bc-c1cf-435e-866c-69c8273f8e0d
      iscommand: true
      name: Add the MD5 to the blacklist
      script: '|||cb-block-hash'
      type: regular
      version: -1
    taskid: 0ee119bc-c1cf-435e-866c-69c8273f8e0d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 230,
          "y": 570
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    scriptarguments:
      filter:
        complex:
          root: inputs.MD5
          transformers:
          - args:
              prefix:
                value:
                  simple: md5hash==
              suffix: {}
            operator: concat
    separatecontext: false
    task:
      brand: ""
      description: Returns a list of blacklisted hashes, with each list entry describing
        one blacklisted hash.
      id: f4665f30-1aca-401f-8011-8f6b76ee97ca
      iscommand: true
      name: Get a list of blacklisted hashes
      script: '|||cb-get-hash-blacklist'
      type: regular
      version: -1
    taskid: f4665f30-1aca-401f-8011-8f6b76ee97ca
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 200
        }
      }
  "4":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: CbResponse.BlockedHashes.MD5
          operator: isEqualString
          right:
            iscontext: true
            value:
              simple: inputs.MD5
      - - left:
            iscontext: true
            value:
              simple: CbResponse.BlockedHashes.Enabled
          operator: isTrue
      label: "yes"
    id: "4"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "1"
      "yes":
      - "5"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks whether the MD5 is already on the blacklist. This prevents
        blacklisting an MD5 hash that is already blacklisted.
      id: 82a3b953-f23a-4292-8662-14f58fe4e337
      iscommand: false
      name: Is the MD5 currently blacklisted?
      type: condition
      version: -1
    taskid: 82a3b953-f23a-4292-8662-14f58fe4e337
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 370
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 1447c8cb-2fa3-43ee-80d6-128a35bdcefa
      iscommand: false
      name: Hash Is Already Blocked
      type: title
      version: -1
    taskid: 1447c8cb-2fa3-43ee-80d6-128a35bdcefa
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 700,
          "y": 570
        }
      }
  "6":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                accessor: brand
                filters:
                - - ignorecase: true
                    left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: carbonblack-v2
                - - ignorecase: true
                    left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
      label: "yes"
    id: "6"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "2"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if Carbon Black Enterprise Response integration is enabled.
      id: 351582dc-a7a4-4ea0-843a-59c6770d0285
      iscommand: false
      name: Is Carbon Black Enterprise Response enabled?
      type: condition
      version: -1
    taskid: 351582dc-a7a4-4ea0-843a-59c6770d0285
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 0
        }
      }
  "7":
    id: "7"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: bcd55436-7475-40ae-8cf1-e7e94ca27567
      iscommand: false
      name: No Integration / No MD5
      type: title
      version: -1
    taskid: bcd55436-7475-40ae-8cf1-e7e94ca27567
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1250,
          "y": 360
        }
      }
  "8":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.MD5
          operator: isExists
      label: "yes"
    id: "8"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "6"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if there is a value for the MD5 input field. This task does
        not verify that the value is actually an MD5 hash, just that the value for
        the MD5 field exists.
      id: ff0935b7-054b-4729-82a3-5588d553d9d0
      iscommand: false
      name: Is there an MD5 to block?
      type: condition
      version: -1
    taskid: ff0935b7-054b-4729-82a3-5588d553d9d0
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": -200
        }
      }
  "9":
    id: "9"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 2c14bf01-7fd9-45f8-8554-86d0c1332d81
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 2c14bf01-7fd9-45f8-8554-86d0c1332d81
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 410,
          "y": 830
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1235,
        "width": 1400,
        "x": 230,
        "y": -340
      }
    }
  }
