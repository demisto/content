id: SplunkPy-Test-V2
version: -1
contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
name: SplunkPy-Test-V2
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: "48"
    type: start
    task:
      id: "48"
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "1":
    id: "1"
    taskid: "47"
    type: regular
    task:
      id: "47"
      version: -1
      name: Delete Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
      - "3"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "2":
    id: "2"
    taskid: "116"
    type: regular
    task:
      id: "116"
      version: -1
      name: Splunk search with app
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      app:
        simple: demisto
      batch_limit: {}
      earliest_time:
        simple: "-1000d"
      event_limit:
        simple: "1"
      latest_time: {}
      query:
        simple: sourcetype=pan:threat
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 770,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "3":
    id: "3"
    taskid: "120"
    type: regular
    task:
      id: "120"
      version: -1
      name: Splunk search
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      app: {}
      batch_limit: {}
      earliest_time:
        simple: -1000d
      event_limit: {}
      latest_time: {}
      query:
        simple: '* | head 3'
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 130,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "4":
    id: "4"
    taskid: "123"
    type: condition
    task:
      id: "123"
      version: -1
      name: 'Verify Context '
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: Splunk.Result.app
            iscontext: true
          right:
            value:
              simple: demisto
    view: |-
      {
        "position": {
          "x": 770,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "5":
    id: "5"
    taskid: "117"
    type: condition
    task:
      id: "117"
      version: -1
      name: Verify Context
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "6"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 130,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "6":
    id: "6"
    taskid: "124"
    type: regular
    task:
      id: "124"
      version: -1
      name: Get splunk indexes
      description: Prints all Splunk index names.
      script: '|||splunk-get-indexes'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
      - "9"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "7":
    id: "7"
    taskid: "113"
    type: regular
    task:
      id: "113"
      version: -1
      name: Splunk Create job
      description: Creates a new search job in Splunk.
      script: '|||splunk-job-create'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      app: {}
      query:
        simple: sourcetype=pan:threat
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "8":
    id: "8"
    taskid: "114"
    type: regular
    task:
      id: "114"
      version: -1
      name: Get job results
      description: Returns the results of a previous Splunk search. You can use this
        command in conjunction with the splunk-job-create command.
      script: '|||splunk-results'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      sid:
        simple: ${Splunk.Job}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "9":
    id: "9"
    taskid: "125"
    type: regular
    task:
      id: "125"
      version: -1
      name: Submit event
      description: Creates a new event in Splunk.
      script: '|||splunk-submit-event'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      data:
        simple: test
      host:
        simple: localhost
      index:
        simple: main
      sourcetype:
        simple: demisto-ci
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 900,
          "y": 1000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "10":
    id: "10"
    taskid: "121"
    type: regular
    task:
      id: "121"
      version: -1
      name: Parse raw
      description: Parses the raw part of the event.
      script: '|||splunk-parse-raw'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      raw: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1400
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "11":
    id: "11"
    taskid: "126"
    type: condition
    task:
      id: "126"
      version: -1
      name: Verify Context
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Splunk.Raw.Parsed
            iscontext: true
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "12":
    id: "12"
    taskid: "115"
    type: regular
    task:
      id: "115"
      version: -1
      name: Add raw data
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      append: {}
      key:
        simple: rawEvent
      stringify: {}
      value:
        simple: 1531041382, search_name="0 - Azure AD-Concurrent Access From Different
          GEO", logon_ip="xx.xx.xx.xx", logon_ip="xx.xx.xx.xx", logon_ip="xx.xx.xx.xx",
          logon_source_Country="Egypt", logon_source_Country="Germany", logon_source_info="Potentially_unauthorized",
          logon_source_info="VPN", timestamps="2018-07-08T08:22:41", timestamps="2018-07-08T08:28:50",
          timestamps="2018-07-08T08:35:31", country_count="2", country_in_AD="United
          Arab Emirates", info_max_time="+Infinity", info_min_time="0.000", muid="xx.xx.xx.xx",
          service="AzureActiveDirectory", user="xx.xx.xx.xx", user_type="A regular
          user", users_bunit="xx.xx.xx.xx"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1770
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "13":
    id: "13"
    taskid: "127"
    type: regular
    task:
      id: "127"
      version: -1
      name: Parse raw example
      description: Parses the raw part of the event.
      script: '|||splunk-parse-raw'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      raw:
        simple: ${rawEvent}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "14":
    id: "14"
    taskid: "118"
    type: condition
    task:
      id: "118"
      version: -1
      name: Is the raw parsed?
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "16"
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: Splunk.Raw.Parsed
            iscontext: true
    view: |-
      {
        "position": {
          "x": 60,
          "y": 2120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "15":
    id: "15"
    taskid: "119"
    type: title
    task:
      id: "119"
      version: -1
      name: Success!
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -170,
          "y": 2335
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "16":
    id: "16"
    taskid: "122"
    type: regular
    task:
      id: "122"
      version: -1
      name: Oh No
      description: Prints text to war room (Markdown supported)
      scriptName: Print
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      value:
        simple: Something went wrong
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 330,
          "y": 2335
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2380,
        "width": 1450,
        "x": -170,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
