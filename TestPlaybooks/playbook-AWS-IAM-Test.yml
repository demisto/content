id: d5cb69b1-c81c-4f27-8a40-3106c0cb2620
version: 16
name: AWS - IAM Test Playbook
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 369194e3-c543-432a-881e-17a5d855f077
    type: start
    task:
      id: 369194e3-c543-432a-881e-17a5d855f077
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 50
        }
      }
  "1":
    id: "1"
    taskid: 6829323a-f753-4a87-831c-619e3369dab7
    type: regular
    task:
      id: 6829323a-f753-4a87-831c-619e3369dab7
      version: -1
      name: aws-iam-create-user
      description: Creates a new IAM user for your AWS account.
      script: AWS - IAM|||aws-iam-create-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "57"
      - "58"
      - "61"
    scriptarguments:
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbooktestuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3870
        }
      }
  "2":
    id: "2"
    taskid: d6aac018-d2ba-4cb4-85c5-6a472aa1e721
    type: regular
    task:
      id: d6aac018-d2ba-4cb4-85c5-6a472aa1e721
      version: -1
      name: aws-iam-get-user
      description: Retrieves information about the specified IAM user, including the
        user's creation date, path, unique ID, and ARN.
      script: AWS - IAM|||aws-iam-get-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "62"
      - "63"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 4570
        }
      }
  "3":
    id: "3"
    taskid: b00d1c30-17e6-4c8b-85c9-0784a8d597f2
    type: regular
    task:
      id: b00d1c30-17e6-4c8b-85c9-0784a8d597f2
      version: -1
      name: aws-iam-list-users
      description: Lists the IAM users, returns all users in the AWS account.
      script: AWS - IAM|||aws-iam-list-users
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "64"
      - "65"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 4920
        }
      }
  "4":
    id: "4"
    taskid: 32233c4c-2766-41f7-8a14-856ff54ac66f
    type: regular
    task:
      id: 32233c4c-2766-41f7-8a14-856ff54ac66f
      version: -1
      name: aws-iam-update-user
      description: Updates the name and/or the path of the specified IAM user.
      script: AWS - IAM|||aws-iam-update-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "59"
      - "60"
    scriptarguments:
      newPath: {}
      newUserName:
        simple: playbookuser
      oldUserName:
        simple: playbooktestuser
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 4220
        }
      }
  "5":
    id: "5"
    taskid: 08a5d4b9-41f4-4e44-8b9f-783bca607e1d
    type: regular
    task:
      id: 08a5d4b9-41f4-4e44-8b9f-783bca607e1d
      version: -1
      name: aws-iam-delete-user
      description: Deletes the specified IAM user. The user must not belong to any
        groups or have any access keys, signing certificates, or attached policies.
      script: AWS - IAM|||aws-iam-delete-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 8945
        }
      }
  "6":
    id: "6"
    taskid: 54644e77-91b2-4e90-8ad2-da101c8a772f
    type: regular
    task:
      id: 54644e77-91b2-4e90-8ad2-da101c8a772f
      version: -1
      name: aws-iam-update-login-profile
      description: Changes the password for the specified IAM user.
      script: AWS - IAM|||aws-iam-update-login-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      newPassword:
        simple: '%vm$jY0kpx0s22gY'
      passwordResetRequired:
        simple: "False"
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6845
        }
      }
  "7":
    id: "7"
    taskid: b9b6f5a7-b220-4b10-84f4-a5f6b6cf108c
    type: regular
    task:
      id: b9b6f5a7-b220-4b10-84f4-a5f6b6cf108c
      version: -1
      name: aws-iam-create-group
      description: Creates a new iam group.
      script: AWS - IAM|||aws-iam-create-group
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "68"
      - "69"
    scriptarguments:
      groupName:
        simple: playbookgrp
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 7195
        }
      }
  "8":
    id: "8"
    taskid: 40828136-0be9-4cae-8578-6f6c583cec75
    type: regular
    task:
      id: 40828136-0be9-4cae-8578-6f6c583cec75
      version: -1
      name: aws-iam-list-groups
      description: Lists all the IAM groups in the AWS account
      script: AWS - IAM|||aws-iam-list-groups
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "70"
      - "71"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 7545
        }
      }
  "9":
    id: "9"
    taskid: f56f59ec-149d-4989-88a7-1e7cf9a4aafb
    type: regular
    task:
      id: f56f59ec-149d-4989-88a7-1e7cf9a4aafb
      version: -1
      name: aws-iam-list-groups-for-user
      description: Lists the IAM groups that the specified IAM user belongs to.
      script: AWS - IAM|||aws-iam-list-groups-for-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "72"
      - "73"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 8070
        }
      }
  "10":
    id: "10"
    taskid: e8ff9cc3-7c83-427a-8de6-d82cb88784ab
    type: regular
    task:
      id: e8ff9cc3-7c83-427a-8de6-d82cb88784ab
      version: -1
      name: aws-iam-add-user-to-group
      description: Adds the specified user to the specified group.
      script: AWS - IAM|||aws-iam-add-user-to-group
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 7895
        }
      }
  "11":
    id: "11"
    taskid: 2c3694eb-23e2-43a9-8182-23fff85fecf7
    type: regular
    task:
      id: 2c3694eb-23e2-43a9-8182-23fff85fecf7
      version: -1
      name: aws-iam-create-access-key
      description: Creates a new AWS secret access key and corresponding AWS access
        key ID for the specified user. The default status for new keys is Active .
      script: AWS - IAM|||aws-iam-create-access-key
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "66"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5445
        }
      }
  "12":
    id: "12"
    taskid: be24f901-ccba-437e-8496-c17b8708c119
    type: regular
    task:
      id: be24f901-ccba-437e-8496-c17b8708c119
      version: -1
      name: aws-iam-update-access-key
      description: Changes the status of the specified access key from Active to Inactive,
        or vice versa. This operation can be used to disable a user's key as part
        of a key rotation workflow.
      script: AWS - IAM|||aws-iam-update-access-key
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      accessKeyId:
        simple: ${AWS.IAM.Users.AccessKeys.AccessKeyId}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      status:
        simple: Inactive
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5795
        }
      }
  "13":
    id: "13"
    taskid: 8c8256ed-54f2-4ec7-8c55-dd8bea8f3cbc
    type: regular
    task:
      id: 8c8256ed-54f2-4ec7-8c55-dd8bea8f3cbc
      version: -1
      name: aws-iam-list-access-keys-for-user
      description: Returns information about the access key IDs associated with the
        specified IAM user.
      script: AWS - IAM|||aws-iam-list-access-keys-for-user
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "67"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5970
        }
      }
  "14":
    id: "14"
    taskid: d53bf6fa-8bc2-4426-81f4-6042b8c55862
    type: regular
    task:
      id: d53bf6fa-8bc2-4426-81f4-6042b8c55862
      version: -1
      name: aws-iam-list-policies
      description: Lists all the managed policies that are available in your AWS account,
        including your own customer-defined managed policies and all AWS managed policies.
      script: AWS - IAM|||aws-iam-list-policies
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "35"
      - "36"
      - "37"
    scriptarguments:
      onlyAttached: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      scope:
        simple: AWS
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 195
        }
      }
  "15":
    id: "15"
    taskid: 0759b5fc-2e5c-459e-8097-aef217811138
    type: regular
    task:
      id: 0759b5fc-2e5c-459e-8097-aef217811138
      version: -1
      name: aws-iam-list-roles
      description: Lists all IAM roles
      script: AWS - IAM|||aws-iam-list-roles
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "55"
      - "56"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3345
        }
      }
  "16":
    id: "16"
    taskid: fd614b26-589f-4e9b-8489-27471d110328
    type: regular
    task:
      id: fd614b26-589f-4e9b-8489-27471d110328
      version: -1
      name: aws-iam-attach-policy
      description: Attaches the specified managed policy to the specified IAM Entity.
      script: AWS - IAM|||aws-iam-attach-policy
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      entityName:
        simple: playbookuser
      policyArn:
        simple: ${AWS.IAM.Policies.[0].Arn}
      type:
        simple: User
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5270
        }
      }
  "17":
    id: "17"
    taskid: 64d6cb68-4451-462d-8e7f-76c2d860ed29
    type: regular
    task:
      id: 64d6cb68-4451-462d-8e7f-76c2d860ed29
      version: -1
      name: aws-iam-detach-policy
      description: Removes the specified managed policy from the specified IAM Entity.
      script: AWS - IAM|||aws-iam-detach-policy
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      entityName:
        simple: playbookuser
      policyArn:
        simple: ${AWS.IAM.Policies.[0].Arn}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      type:
        simple: User
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 8770
        }
      }
  "18":
    id: "18"
    taskid: cffa04b1-1f02-4f3d-8aff-60541a6d078d
    type: regular
    task:
      id: cffa04b1-1f02-4f3d-8aff-60541a6d078d
      version: -1
      name: aws-iam-delete-login-profile
      description: Deletes the password for the specified IAM user, which terminates
        the user's ability to access AWS services through the AWS Management Console.
      script: AWS - IAM|||aws-iam-delete-login-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 7020
        }
      }
  "19":
    id: "19"
    taskid: 5dead601-4abf-468f-874a-1d3064ac0445
    type: regular
    task:
      id: 5dead601-4abf-468f-874a-1d3064ac0445
      version: -1
      name: aws-iam-delete-group
      description: Deletes the specified IAM group. The group must not contain any
        users or have any attached policies.
      script: AWS - IAM|||aws-iam-delete-group
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 8595
        }
      }
  "20":
    id: "20"
    taskid: 0c24911e-59c3-4ca1-8af5-8ef5daae1760
    type: regular
    task:
      id: 0c24911e-59c3-4ca1-8af5-8ef5daae1760
      version: -1
      name: aws-iam-remove-user-from-group
      description: Removes the specified user from the specified group.
      script: AWS - IAM|||aws-iam-remove-user-from-group
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 8420
        }
      }
  "21":
    id: "21"
    taskid: 2aa2b9c6-f94b-466e-824b-2cc3063a26bf
    type: regular
    task:
      id: 2aa2b9c6-f94b-466e-824b-2cc3063a26bf
      version: -1
      name: aws-iam-create-login-profile
      description: Creates a password for the specified user, giving the user the
        ability to access AWS services through the AWS Management Console.
      script: AWS - IAM|||aws-iam-create-login-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      password:
        simple: irPr@rh7Lh$lhO8m
      passwordResetRequired:
        simple: "False"
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6495
        }
      }
  "22":
    id: "22"
    taskid: 98e42481-074d-4dd5-8081-9389f781d42b
    type: regular
    task:
      id: 98e42481-074d-4dd5-8081-9389f781d42b
      version: -1
      name: aws-iam-delete-access-key
      description: Deletes the access key pair associated with the specified IAM user.
      script: AWS - IAM|||aws-iam-delete-access-key
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      AccessKeyId:
        simple: ${AWS.IAM.Users.[1].AccessKeys.AccessKeyId}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6320
        }
      }
  "23":
    id: "23"
    taskid: af0f0c50-2e5b-4e6d-8685-dcd415d18005
    type: regular
    task:
      id: af0f0c50-2e5b-4e6d-8685-dcd415d18005
      version: -1
      name: aws-iam-create-instance-profile
      description: Creates a new instance profile.
      script: AWS - IAM|||aws-iam-create-instance-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "42"
      - "41"
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 895
        }
      }
  "24":
    id: "24"
    taskid: c5ed5150-346c-4432-86c5-ffbae9766096
    type: regular
    task:
      id: c5ed5150-346c-4432-86c5-ffbae9766096
      version: -1
      name: aws-iam-delete-instance-profile
      description: Deletes the specified instance profile. The instance profile must
        not have an associated role.
      script: AWS - IAM|||aws-iam-delete-instance-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2820
        }
      }
  "25":
    id: "25"
    taskid: 09cfb140-6caf-48f7-8997-50ffcbe51198
    type: regular
    task:
      id: 09cfb140-6caf-48f7-8997-50ffcbe51198
      version: -1
      name: aws-iam-list-instance-profiles
      description: Lists all the instance profiles tin your AWS account.
      script: AWS - IAM|||aws-iam-list-instance-profiles
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "49"
      - "50"
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1945
        }
      }
  "26":
    id: "26"
    taskid: c2ab6df3-26d8-4582-8c47-9f6646ac979e
    type: regular
    task:
      id: c2ab6df3-26d8-4582-8c47-9f6646ac979e
      version: -1
      name: aws-iam-add-role-to-instance-profile
      description: Adds the specified IAM role to the specified instance profile.
        An instance profile can contain only one role, and this limit cannot be increased.
        You can remove the existing role and then add a different role to an instance
        profile.
      script: AWS - IAM|||aws-iam-add-role-to-instance-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "45"
      - "47"
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1595
        }
      }
  "27":
    id: "27"
    taskid: 3ef7e750-7ad9-4ad7-88ef-d0149086f74d
    type: regular
    task:
      id: 3ef7e750-7ad9-4ad7-88ef-d0149086f74d
      version: -1
      name: aws-iam-remove-role-from-instance-profile
      description: Removes the specified IAM role from the specified EC2 instance
        profile.
      script: AWS - IAM|||aws-iam-remove-role-from-instance-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2645
        }
      }
  "28":
    id: "28"
    taskid: 7ab56f94-4422-46ea-82a8-3e86c20881fa
    type: regular
    task:
      id: 7ab56f94-4422-46ea-82a8-3e86c20881fa
      version: -1
      name: aws-iam-list-instance-profiles-for-role
      description: Lists the instance profiles that have the specified associated
        IAM role.
      script: AWS - IAM|||aws-iam-list-instance-profiles-for-role
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "51"
      - "52"
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2295
        }
      }
  "29":
    id: "29"
    taskid: e6873b40-830f-4478-80c3-a900bc913b20
    type: regular
    task:
      id: e6873b40-830f-4478-80c3-a900bc913b20
      version: -1
      name: aws-iam-get-instance-profile
      description: Retrieves information about the specified instance profile.
      script: AWS - IAM|||aws-iam-get-instance-profile
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "43"
      - "44"
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1245
        }
      }
  "30":
    id: "30"
    taskid: 8912184a-bf7c-4abe-84f9-61f8189aa0b2
    type: regular
    task:
      id: 8912184a-bf7c-4abe-84f9-61f8189aa0b2
      version: -1
      name: aws-iam-get-role
      description: Retrieves information about the specified role.
      script: AWS - IAM|||aws-iam-get-role
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "53"
      - "54"
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 2995
        }
      }
  "31":
    id: "31"
    taskid: 103d125e-ee64-4866-8324-263d4e23fe45
    type: regular
    task:
      id: 103d125e-ee64-4866-8324-263d4e23fe45
      version: -1
      name: aws-iam-delete-role
      description: 'Deletes the specified role. The role must not have any policies
        attached. '
      script: AWS - IAM|||aws-iam-delete-role
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 3695
        }
      }
  "32":
    id: "32"
    taskid: 01f3f26d-58c3-42f9-85f2-354c136f6670
    type: regular
    task:
      id: 01f3f26d-58c3-42f9-85f2-354c136f6670
      version: -1
      name: aws-iam-create-role
      description: Creates a new role for your AWS account.
      script: AWS - IAM|||aws-iam-create-role
      type: regular
      iscommand: true
      brand: AWS - IAM
    nexttasks:
      '#none#':
      - "40"
      - "39"
    scriptarguments:
      assumeRolePolicyDocument:
        simple: |-
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
      description: {}
      maxSessionDuration: {}
      path: {}
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
  "34":
    id: "34"
    taskid: c306a42a-a1bb-493a-8919-aeda6ed620c2
    type: regular
    task:
      id: c306a42a-a1bb-493a-8919-aeda6ed620c2
      version: -1
      name: wait 30 sec
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      seconds:
        simple: "30"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6670
        }
      }
  "35":
    id: "35"
    taskid: 06689984-9e57-40a4-8426-3802e74036d7
    type: regular
    task:
      id: 06689984-9e57-40a4-8426-3802e74036d7
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.PolicyId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
  "36":
    id: "36"
    taskid: d0b6f417-50f3-491d-8e18-358825ebd1ea
    type: regular
    task:
      id: d0b6f417-50f3-491d-8e18-358825ebd1ea
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.PolicyName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
  "37":
    id: "37"
    taskid: 38614631-103f-4177-8a5f-fa6690f43cbd
    type: regular
    task:
      id: 38614631-103f-4177-8a5f-fa6690f43cbd
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 370
        }
      }
  "39":
    id: "39"
    taskid: cf07db63-6a99-48eb-8fe1-b0ef8a713075
    type: regular
    task:
      id: cf07db63-6a99-48eb-8fe1-b0ef8a713075
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
  "40":
    id: "40"
    taskid: 503c85f3-ff19-48a4-80a7-5bbdbc783e4e
    type: regular
    task:
      id: 503c85f3-ff19-48a4-80a7-5bbdbc783e4e
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.RoleName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 720
        }
      }
  "41":
    id: "41"
    taskid: e1697e48-ba06-4a29-8a87-9b62934b7f71
    type: regular
    task:
      id: e1697e48-ba06-4a29-8a87-9b62934b7f71
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1070
        }
      }
  "42":
    id: "42"
    taskid: 91d2f1d7-a89d-4674-8ac7-ab0227bb72c7
    type: regular
    task:
      id: 91d2f1d7-a89d-4674-8ac7-ab0227bb72c7
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1070
        }
      }
  "43":
    id: "43"
    taskid: 8205d2d8-cebd-487d-8717-4cdc9974fa12
    type: regular
    task:
      id: 8205d2d8-cebd-487d-8717-4cdc9974fa12
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1420
        }
      }
  "44":
    id: "44"
    taskid: fd37dc1a-a275-4325-8c0b-4901205ee719
    type: regular
    task:
      id: fd37dc1a-a275-4325-8c0b-4901205ee719
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1420
        }
      }
  "45":
    id: "45"
    taskid: 345347a3-0647-4ea3-8f3e-f23139309213
    type: regular
    task:
      id: 345347a3-0647-4ea3-8f3e-f23139309213
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1770
        }
      }
  "47":
    id: "47"
    taskid: a90a064c-c5da-4d5c-848b-d0628f63ada5
    type: regular
    task:
      id: a90a064c-c5da-4d5c-848b-d0628f63ada5
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 1770
        }
      }
  "49":
    id: "49"
    taskid: a582cfa0-83f4-4150-8e8b-a77bb5012014
    type: regular
    task:
      id: a582cfa0-83f4-4150-8e8b-a77bb5012014
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2120
        }
      }
  "50":
    id: "50"
    taskid: 97111a54-d50b-47f3-835b-461e633f35c6
    type: regular
    task:
      id: 97111a54-d50b-47f3-835b-461e633f35c6
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "28"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Roles.CreateDate
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 2120
        }
      }
  "51":
    id: "51"
    taskid: d1fb370f-f03b-4f99-8f33-40b042a101f0
    type: regular
    task:
      id: d1fb370f-f03b-4f99-8f33-40b042a101f0
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 2470
        }
      }
  "52":
    id: "52"
    taskid: 8f28ba65-4529-4c5e-8191-c070041ead33
    type: regular
    task:
      id: 8f28ba65-4529-4c5e-8191-c070041ead33
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Roles.CreateDate
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 2470
        }
      }
  "53":
    id: "53"
    taskid: 36cf476d-740f-467e-8800-fe629ea8bb3c
    type: regular
    task:
      id: 36cf476d-740f-467e-8800-fe629ea8bb3c
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 3170
        }
      }
  "54":
    id: "54"
    taskid: 31b57cfb-3494-4bc6-8208-d2dbeeddf919
    type: regular
    task:
      id: 31b57cfb-3494-4bc6-8208-d2dbeeddf919
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.RoleName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 3170
        }
      }
  "55":
    id: "55"
    taskid: 3515173e-aa8e-417b-861d-dd1572fbae5e
    type: regular
    task:
      id: 3515173e-aa8e-417b-861d-dd1572fbae5e
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 3520
        }
      }
  "56":
    id: "56"
    taskid: 58268a5f-e7c9-423c-8e2e-ae7f9a965b9d
    type: regular
    task:
      id: 58268a5f-e7c9-423c-8e2e-ae7f9a965b9d
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 3520
        }
      }
  "57":
    id: "57"
    taskid: a3882c70-4d6e-4aaa-880e-fe5cf628d696
    type: regular
    task:
      id: a3882c70-4d6e-4aaa-880e-fe5cf628d696
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 4045
        }
      }
  "58":
    id: "58"
    taskid: 79ca8478-110a-417e-8f89-ff38b3272d18
    type: regular
    task:
      id: 79ca8478-110a-417e-8f89-ff38b3272d18
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 4045
        }
      }
  "59":
    id: "59"
    taskid: dec2b67f-d985-4f8d-8129-c06586032d10
    type: regular
    task:
      id: dec2b67f-d985-4f8d-8129-c06586032d10
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 4395
        }
      }
  "60":
    id: "60"
    taskid: ace1e492-5791-4377-8b3f-053a8e9946b4
    type: regular
    task:
      id: ace1e492-5791-4377-8b3f-053a8e9946b4
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 4395
        }
      }
  "61":
    id: "61"
    taskid: 2460bb52-f0c3-47d9-8b12-32cb5f14d9cd
    type: regular
    task:
      id: 2460bb52-f0c3-47d9-8b12-32cb5f14d9cd
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 4045
        }
      }
  "62":
    id: "62"
    taskid: 68baf0f7-8eae-4512-85f4-a29bacf48369
    type: regular
    task:
      id: 68baf0f7-8eae-4512-85f4-a29bacf48369
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 4745
        }
      }
  "63":
    id: "63"
    taskid: 50cd1faf-f9c6-41ea-83b9-c2ce082b052e
    type: regular
    task:
      id: 50cd1faf-f9c6-41ea-83b9-c2ce082b052e
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 4745
        }
      }
  "64":
    id: "64"
    taskid: 1678e0cc-d020-4406-8ba2-652b4aec9825
    type: regular
    task:
      id: 1678e0cc-d020-4406-8ba2-652b4aec9825
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 5095
        }
      }
  "65":
    id: "65"
    taskid: 6f0598ae-b760-4461-885a-582960de5ec3
    type: regular
    task:
      id: 6f0598ae-b760-4461-885a-582960de5ec3
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 5095
        }
      }
  "66":
    id: "66"
    taskid: 7e661372-7f41-447a-824d-13ad99035358
    type: regular
    task:
      id: 7e661372-7f41-447a-824d-13ad99035358
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.AccessKeys.AccessKeyId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 5620
        }
      }
  "67":
    id: "67"
    taskid: dd32d671-1416-41ee-8e55-7c6c117df5f3
    type: regular
    task:
      id: dd32d671-1416-41ee-8e55-7c6c117df5f3
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.AccessKeys.AccessKeyId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 6145
        }
      }
  "68":
    id: "68"
    taskid: 0dbcc6ca-4b4b-4d9a-86d8-1a6a2c6a5617
    type: regular
    task:
      id: 0dbcc6ca-4b4b-4d9a-86d8-1a6a2c6a5617
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.GroupId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 7370
        }
      }
  "69":
    id: "69"
    taskid: dab4e828-209b-4781-8e32-1c0e817f866d
    type: regular
    task:
      id: dab4e828-209b-4781-8e32-1c0e817f866d
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 7370
        }
      }
  "70":
    id: "70"
    taskid: f44f23ff-9a26-4236-8129-2cffabeaf634
    type: regular
    task:
      id: f44f23ff-9a26-4236-8129-2cffabeaf634
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 7720
        }
      }
  "71":
    id: "71"
    taskid: 35d82c69-6049-47c2-8696-a5388a6e0115
    type: regular
    task:
      id: 35d82c69-6049-47c2-8696-a5388a6e0115
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.GroupId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 7720
        }
      }
  "72":
    id: "72"
    taskid: 67ba6872-209a-4c68-8c47-0e7c431d6bf5
    type: regular
    task:
      id: 67ba6872-209a-4c68-8c47-0e7c431d6bf5
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Groups.Arn
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 8245
        }
      }
  "73":
    id: "73"
    taskid: 129dc85b-22bd-42b8-8fc6-8d47d9eb85ce
    type: regular
    task:
      id: 129dc85b-22bd-42b8-8fc6-8d47d9eb85ce
      version: -1
      name: VerifyContext
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Groups.GroupId
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 8245
        }
      }
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 8990,
        "width": 1240,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
