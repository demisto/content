id: ContextGetters_Test
version: 34
name: ContextGetters_Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 8dac17d4-959a-4040-8ab7-bff50ed7bb63
    type: start
    task:
      id: 8dac17d4-959a-4040-8ab7-bff50ed7bb63
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
      - "3"
      - "2"
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
  "1":
    id: "1"
    taskid: 3b9762a2-4911-4632-8989-f5b7fb534b46
    type: regular
    task:
      id: 3b9762a2-4911-4632-8989-f5b7fb534b46
      version: -1
      name: ExtractEmail
      description: Extract Emails from the given text and place them both as output
        and in the context of a playbook. If given an object, will convert to JSON.
      scriptName: ExtractEmail
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      text: mail1@gmail.com,mail2@yahoo.com,mail3@aol.com
    view: |-
      {
        "position": {
          "x": 450,
          "y": 230
        }
      }
  "2":
    id: "2"
    taskid: cea56ee7-aca9-4240-86b7-e2cc6ad3c97c
    type: regular
    task:
      id: cea56ee7-aca9-4240-86b7-e2cc6ad3c97c
      version: -1
      name: ExtractHash
      description: Extract md5, sha1, sha256 from the given text and place them both
        as output and in the context of a playbook
      scriptName: ExtractHash
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
      - "15"
      - "14"
      - "16"
    scriptarguments:
      text: fe3aacae7fda163c2b628a08ba67585b,427602bfaed3b5bcec58c4957d123cd7312a8f3b,ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561
    view: |-
      {
        "position": {
          "x": 856,
          "y": 229
        }
      }
  "3":
    id: "3"
    taskid: b679f00b-e759-47fc-861b-aa49e9179126
    type: regular
    task:
      id: b679f00b-e759-47fc-861b-aa49e9179126
      version: -1
      name: ExtractIP
      description: Extract IPs from the given text and place them both as output and
        in the context of a playbook.
      scriptName: ExtractIP
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      text: 8.8.8.8,1.2.3.4,32.43.54.65
    view: |-
      {
        "position": {
          "x": 46,
          "y": 231
        }
      }
  "4":
    id: "4"
    taskid: f42ddce3-cb60-47b9-8512-d56bfdabe172
    type: regular
    task:
      id: f42ddce3-cb60-47b9-8512-d56bfdabe172
      version: -1
      name: ContextGetEmails
      description: Gets all email addresses in context, excluding ones given.
      scriptName: ContextGetEmails
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      excludedEmails: ""
      extend-context: testEmail=.
    view: |-
      {
        "position": {
          "x": 450,
          "y": 413
        }
      }
  "5":
    id: "5"
    taskid: 0cad0a19-49b9-4e13-8435-3489e7d70b0b
    type: regular
    task:
      id: 0cad0a19-49b9-4e13-8435-3489e7d70b0b
      version: -1
      name: ContextGetIps
      description: Gets all IP addresses in context, excluding ones given.
      scriptName: ContextGetIps
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      excludedIps: ""
      extend-context: testIP=.
    view: |-
      {
        "position": {
          "x": 46,
          "y": 413
        }
      }
  "6":
    id: "6"
    taskid: 5041c983-a78d-43d8-80b0-d1a6c2a8c1b8
    type: regular
    task:
      id: 5041c983-a78d-43d8-80b0-d1a6c2a8c1b8
      version: -1
      name: ContextGetHashes(MD5)
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      scriptName: ContextGetHashes
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      extend-context: testMD5=.
      hash: MD5
    view: |-
      {
        "position": {
          "x": 856,
          "y": 413
        }
      }
  "7":
    id: "7"
    taskid: 81c666e5-894f-4053-8866-3bab882eb053
    type: condition
    task:
      id: 81c666e5-894f-4053-8866-3bab882eb053
      version: -1
      name: VerifyResponse(Email)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "10"
    scriptarguments:
      expectedValue: mail1@gmail.com,mail2@yahoo.com,mail3@aol.com
      fields: ""
      path: ""
      value: ${.=val.testEmail.join() === 'mail1@gmail.com,mail2@yahoo.com,mail3@aol.com'}
    view: |-
      {
        "position": {
          "x": 450,
          "y": 593
        }
      }
  "8":
    id: "8"
    taskid: 6ae3ae12-7238-4427-88d9-529cd3185714
    type: condition
    task:
      id: 6ae3ae12-7238-4427-88d9-529cd3185714
      version: -1
      name: VerifyResponse(IP)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "11"
    scriptarguments:
      expectedValue: 8.8.8.8,1.2.3.4,32.43.54.65
      fields: ""
      path: testIP
      value: ${.=val.testIP.join() === '8.8.8.8,1.2.3.4,32.43.54.65'}
    view: |-
      {
        "position": {
          "x": 46,
          "y": 593
        }
      }
  "9":
    id: "9"
    taskid: e08fc913-0b23-41ac-8061-6d405fc8e9e8
    type: condition
    task:
      id: e08fc913-0b23-41ac-8061-6d405fc8e9e8
      version: -1
      name: VerifyResponse(MD5)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: c99a11a53a3748269e3f86d7ac38df11
      fields: ""
      path: ""
      value: ${.=val.testMD5.join() === 'fe3aacae7fda163c2b628a08ba67585b'}
    view: |-
      {
        "position": {
          "x": 856,
          "y": 593
        }
      }
  "10":
    id: "10"
    taskid: e5a0e7dd-69f4-4e4c-8aed-f374c7bd78f5
    type: regular
    task:
      id: e5a0e7dd-69f4-4e4c-8aed-f374c7bd78f5
      version: -1
      name: ContextGetExcludedEmails
      description: Gets all email addresses in context, excluding ones given.
      scriptName: ContextGetEmails
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      excludedEmails: mail3@aol.com
      extend-context: testExcludedEmail=.
    view: |-
      {
        "position": {
          "x": 450,
          "y": 783
        }
      }
  "11":
    id: "11"
    taskid: c0c75a1f-4ee0-48d6-88b9-a7ea4474c03f
    type: regular
    task:
      id: c0c75a1f-4ee0-48d6-88b9-a7ea4474c03f
      version: -1
      name: ContextGetExcludedIps
      description: Gets all IP addresses in context, excluding ones given.
      scriptName: ContextGetIps
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    scriptarguments:
      excludedIps: 1.2.3.4
      extend-context: testExcludedIP=.
    view: |-
      {
        "position": {
          "x": 46,
          "y": 783
        }
      }
  "12":
    id: "12"
    taskid: bfdada19-2faf-4238-842c-3f347cb78713
    type: condition
    task:
      id: bfdada19-2faf-4238-842c-3f347cb78713
      version: -1
      name: VerifyResponse(excludedIP)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: 8.8.8.8,32.43.54.65
      fields: ""
      path: ""
      value: ${.=val.testExcludedIP.join() === '8.8.8.8,32.43.54.65'}
    view: |-
      {
        "position": {
          "x": 46,
          "y": 974
        }
      }
  "13":
    id: "13"
    taskid: c93ced11-8d73-4329-8e49-58999304c4b7
    type: condition
    task:
      id: c93ced11-8d73-4329-8e49-58999304c4b7
      version: -1
      name: VerifyResponse(excludedEmail)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: mail1@gmail.com,mail2@yahoo.com
      fields: ""
      path: ""
      value: ${.=val.testExcludedEmail.join() === 'mail1@gmail.com,mail2@yahoo.com'}
    view: |-
      {
        "position": {
          "x": 450,
          "y": 974
        }
      }
  "14":
    id: "14"
    taskid: c7f0c056-e5ea-4843-8ee7-134e161c3c24
    type: regular
    task:
      id: c7f0c056-e5ea-4843-8ee7-134e161c3c24
      version: -1
      name: ContextGetHashes(SHA256)
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      scriptName: ContextGetHashes
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      extend-context: testSHA256=.
      hash: SHA256
    view: |-
      {
        "position": {
          "x": 1679,
          "y": 413
        }
      }
  "15":
    id: "15"
    taskid: 3b376106-4161-4521-8d56-0b525ad332dd
    type: regular
    task:
      id: 3b376106-4161-4521-8d56-0b525ad332dd
      version: -1
      name: ContextGetHashes(SHA1)
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      scriptName: ContextGetHashes
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      extend-context: testSHA1=.
      hash: SHA1
    view: |-
      {
        "position": {
          "x": 1269,
          "y": 413
        }
      }
  "16":
    id: "16"
    taskid: 2146fa23-7efe-4d59-85e9-70d1353914d3
    type: regular
    task:
      id: 2146fa23-7efe-4d59-85e9-70d1353914d3
      version: -1
      name: ContextGetHashes(all)
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      scriptName: ContextGetHashes
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      extend-context: testHash=.
      hash: ""
    view: |-
      {
        "position": {
          "x": 2089,
          "y": 413
        }
      }
  "17":
    id: "17"
    taskid: 44aaeefe-fe7a-4831-898c-c9ee9c7dee98
    type: condition
    task:
      id: 44aaeefe-fe7a-4831-898c-c9ee9c7dee98
      version: -1
      name: VerifyResponse(all hash)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: 2e6d76b398ef59f3041ef7eb30060a787e3c8d594747ed08b096d7eab608682d
      fields: ""
      path: ""
      value: ${.=val.testHash.join() === 'fe3aacae7fda163c2b628a08ba67585b,427602bfaed3b5bcec58c4957d123cd7312a8f3b,ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561'}
    view: |-
      {
        "position": {
          "x": 2089,
          "y": 593
        }
      }
  "19":
    id: "19"
    taskid: 56898e08-611e-4b73-8854-024a016ac20b
    type: condition
    task:
      id: 56898e08-611e-4b73-8854-024a016ac20b
      version: -1
      name: VerifyResponse(SHA256)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: ""
      fields: ""
      path: ""
      value: ${.=val.testSHA256.join() === 'ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561'}
    view: |-
      {
        "position": {
          "x": 1679,
          "y": 593
        }
      }
  "20":
    id: "20"
    taskid: 1e5affe0-c2dc-480f-8348-007b11c5a076
    type: condition
    task:
      id: 1e5affe0-c2dc-480f-8348-007b11c5a076
      version: -1
      name: VerifyResponse(SHA1)
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: IsTrue
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    scriptarguments:
      expectedValue: DF2EFA060E335F97628CA39C9FEF5469AB3CB837, c99a11a53a3748269e3f86d7ac38df11,2e6d76b398ef59f3041ef7eb30060a787e3c8d594747ed08b096d7eab608682d
      fields: ""
      path: ""
      value: ${.=val.testSHA1.join() === '427602bfaed3b5bcec58c4957d123cd7312a8f3b'}
    view: |-
      {
        "position": {
          "x": 1269,
          "y": 593
        }
      }
  "21":
    id: "21"
    taskid: e946d6e8-c7a7-46bf-8fd7-df4e246c826c
    type: title
    task:
      id: e946d6e8-c7a7-46bf-8fd7-df4e246c826c
      version: -1
      name: End
      type: title
      iscommand: false
      brand: ""
    view: |-
      {
        "position": {
          "x": 714,
          "y": 1200
        }
      }
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1215,
        "width": 2423,
        "x": 46,
        "y": 50
      }
    }
  }
inputs: []
