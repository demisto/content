id: DuoAdmin API test playbook
version: -1
name: DuoAdmin API test playbook
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 8e16b379-cb61-4031-8228-94da2c3c1e80
    type: start
    task:
      id: 8e16b379-cb61-4031-8228-94da2c3c1e80
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: e6d73b39-e595-44e9-857b-8d44e6c48354
    type: regular
    task:
      id: e6d73b39-e595-44e9-857b-8d44e6c48354
      version: -1
      name: Get Users Detail
      script: '|||duoadmin-get-users'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
      - "17"
      - "19"
      - "30"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 7ed5425d-04fa-48a9-8785-7337a94c3e7a
    type: regular
    task:
      id: 7ed5425d-04fa-48a9-8785-7337a94c3e7a
      version: -1
      name: Get User2 Logs
      script: '|||duoadmin-get-authentication-logs-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      from:
        simple: 10_years_ago
      limit: {}
      username:
        simple: ${DuoAdmin.UserDetails.[2].username}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 970,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 26dcdc13-0858-4d4d-8f85-a909410cfd0f
    type: title
    task:
      id: 26dcdc13-0858-4d4d-8f85-a909410cfd0f
      version: -1
      name: Check if two different users have different auth logs
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1500
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "13":
    id: "13"
    taskid: d23c0bac-e60f-4314-8217-09d5c2de460b
    type: regular
    task:
      id: d23c0bac-e60f-4314-8217-09d5c2de460b
      version: -1
      name: Delete Context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -40
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: 37576cdb-912a-41f6-8bb8-0416199da432
    type: condition
    task:
      id: 37576cdb-912a-41f6-8bb8-0416199da432
      version: -1
      name: Are auth logs a part of user details?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "9"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[2].auth_logs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 970,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 7509e240-1086-4f3f-820f-a3e67f25c55a
    type: title
    task:
      id: 7509e240-1086-4f3f-820f-a3e67f25c55a
      version: -1
      name: User Devices Operations
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -100,
          "y": 315
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: fae485d6-5428-4224-848c-0ad7fe3dd3d4
    type: title
    task:
      id: fae485d6-5428-4224-848c-0ad7fe3dd3d4
      version: -1
      name: User Logs
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 970,
          "y": 315
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "19":
    id: "19"
    taskid: 9ca2449b-24e4-4d1d-839b-8016aacc3af5
    type: title
    task:
      id: 9ca2449b-24e4-4d1d-839b-8016aacc3af5
      version: -1
      name: Devices
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 315
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "20":
    id: "20"
    taskid: cf5efc6f-123e-493f-8ab0-13847fc24676
    type: regular
    task:
      id: cf5efc6f-123e-493f-8ab0-13847fc24676
      version: -1
      name: Get All Devices
      script: '|||duoadmin-get-devices'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "21":
    id: "21"
    taskid: 013c40e8-5522-4dde-8751-e68c34dd27e0
    type: condition
    task:
      id: 013c40e8-5522-4dde-8751-e68c34dd27e0
      version: -1
      name: Are phones a part of the DuoAdmin object?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "9"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: Phones.phone_id
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: Phones.number
            iscontext: true
      - - operator: isExists
          left:
            value:
              simple: DuoAdmin.Phones.platform
            iscontext: true
      - - operator: isExists
          left:
            value:
              simple: DuoAdmin.Phones.last_seen
            iscontext: true
    view: |-
      {
        "position": {
          "x": 450,
          "y": 920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "23":
    id: "23"
    taskid: d21d1b45-1728-47a6-8c00-05b0dd65e63c
    type: regular
    task:
      id: d21d1b45-1728-47a6-8c00-05b0dd65e63c
      version: -1
      name: Get User Phones
      script: '|||duoadmin-get-devices-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -100,
          "y": 635
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: 3c21a874-4644-4d8e-8201-4c136bd5d58b
    type: condition
    task:
      id: 3c21a874-4644-4d8e-8201-4c136bd5d58b
      version: -1
      name: Does the user have a phone?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "28"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: phones
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": -100,
          "y": 800
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "27":
    id: "27"
    taskid: 4ff8939c-5e45-4426-8b8d-25183b980fa2
    type: regular
    task:
      id: 4ff8939c-5e45-4426-8b8d-25183b980fa2
      version: -1
      name: Get User Phones
      script: '|||duoadmin-get-devices-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -100,
          "y": 1140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "28":
    id: "28"
    taskid: 6c7cf726-e235-4dae-8d13-b9182c13b9f1
    type: regular
    task:
      id: 6c7cf726-e235-4dae-8d13-b9182c13b9f1
      version: -1
      name: Dissociate the phone from the user
      script: '|||duoadmin-dissociate-device-from-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      device_id:
        simple: DPQ5YSXIRTLG4QO561J9
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -100,
          "y": 980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "29":
    id: "29"
    taskid: 00aeed1b-e5f3-4ae4-840e-e82442ff4157
    type: condition
    task:
      id: 00aeed1b-e5f3-4ae4-840e-e82442ff4157
      version: -1
      name: Does the user still has a phone?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "9"
    separatecontext: false
    conditions:
    - label: "no"
      condition:
      - - operator: isNotExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: phones
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": -100,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "30":
    id: "30"
    taskid: cd37b4f8-654d-4c1b-86ad-4201abe4ea6d
    type: title
    task:
      id: cd37b4f8-654d-4c1b-86ad-4201abe4ea6d
      version: -1
      name: U2F Tokens
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 315
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "31":
    id: "31"
    taskid: b44b8cd7-b424-44e9-8960-1b64cdfe8a3d
    type: regular
    task:
      id: b44b8cd7-b424-44e9-8960-1b64cdfe8a3d
      version: -1
      name: Get User Tokens
      description: |-
        Notice that for the test to actually test something the user has to have a token assigned to it.
        To create a "dummy token" (for tests and such) use SOFTU2F with the duo admin site (available at https://github.com/github/SoftU2F).
        You might have to kill it's process a few times and press "approve" for it to work (about 4 or 5 times)
      script: '|||duoadmin-get-u2f-tokens-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "32":
    id: "32"
    taskid: 6d98f7a5-f2c2-4225-8ec3-9c5d14bd5d4b
    type: condition
    task:
      id: 6d98f7a5-f2c2-4225-8ec3-9c5d14bd5d4b
      version: -1
      name: Does the user have a U2F token?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "9"
      "yes":
      - "33"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: u2ftokens
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 635
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "33":
    id: "33"
    taskid: 3be53fa9-8801-40d8-860a-7e9e8cb3c6e2
    type: regular
    task:
      id: 3be53fa9-8801-40d8-860a-7e9e8cb3c6e2
      version: -1
      name: Delete the token
      script: '|||duoadmin-delete-u2f-token'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "35"
    scriptarguments:
      token_id:
        complex:
          root: DuoAdmin
          accessor: UserDetails
          transformers:
          - operator: WhereFieldEquals
            args:
              equalTo:
                value:
                  simple: winitzky
              field:
                value:
                  simple: username
              getField: {}
          - operator: getField
            args:
              field:
                value:
                  simple: u2ftokens
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
          - operator: getField
            args:
              field:
                value:
                  simple: registration_id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "34":
    id: "34"
    taskid: 01258beb-207d-499e-8dff-3c952959a5aa
    type: condition
    task:
      id: 01258beb-207d-499e-8dff-3c952959a5aa
      version: -1
      name: Does the user still have a token
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "9"
    separatecontext: false
    conditions:
    - label: "no"
      condition:
      - - operator: isNotExists
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails
                transformers:
                - operator: WhereFieldEquals
                  args:
                    equalTo:
                      value:
                        simple: winitzky
                    field:
                      value:
                        simple: username
                    getField: {}
                - operator: getField
                  args:
                    field:
                      value:
                        simple: u2ftokens
                - operator: atIndex
                  args:
                    index:
                      value:
                        simple: "0"
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 1235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "35":
    id: "35"
    taskid: ac577d09-66b9-4521-8e47-cdf21e5cbd9e
    type: regular
    task:
      id: ac577d09-66b9-4521-8e47-cdf21e5cbd9e
      version: -1
      name: Get User Tokens
      description: |-
        Notice that for the test to actually test something the user has to have a token assigned to it.
        To create a "dummy token" (for tests and such) use SOFTU2F with the duo admin site (available at https://github.com/github/SoftU2F).
        You might have to kill it's process a few times and press "approve" for it to work (about 4 or 5 times)
      script: '|||duoadmin-get-u2f-tokens-by-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1410,
          "y": 1055
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "36":
    id: "36"
    taskid: c046658c-d2df-4350-8b64-4c69a3c1bcd0
    type: regular
    task:
      id: c046658c-d2df-4350-8b64-4c69a3c1bcd0
      version: -1
      name: Associate a dummy phone
      script: '|||duoadmin-associate-device-to-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      device_id:
        simple: DPQ5YSXIRTLG4QO561J9
      username:
        simple: winitzky
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -100,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "40":
    id: "40"
    taskid: 9efcf80c-6ec7-4c27-83a3-16735e0eb8ad
    type: regular
    task:
      id: 9efcf80c-6ec7-4c27-83a3-16735e0eb8ad
      version: -1
      name: Get User0 Logs
      description: Returns authentication logs associated with a user. Limited to
        30 at a time
      script: DUO Admin|||duoadmin-get-authentication-logs-by-user
      type: regular
      iscommand: true
      brand: DUO Admin
    nexttasks:
      '#none#':
      - "45"
    scriptarguments:
      from:
        simple: 5_years_ago
      limit: {}
      username:
        simple: ${DuoAdmin.UserDetails.[0].username}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "43":
    id: "43"
    taskid: f5ae69a7-0a39-484d-8eb4-8c68eed25435
    type: title
    task:
      id: f5ae69a7-0a39-484d-8eb4-8c68eed25435
      version: -1
      name: done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 2030
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "45":
    id: "45"
    taskid: 6d2ab6bd-cf01-47b6-87ba-a640566d8e58
    type: condition
    task:
      id: 6d2ab6bd-cf01-47b6-87ba-a640566d8e58
      version: -1
      name: Check if User0 doesn't exist and User2 does exist
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "46"
      "yes":
      - "43"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEmpty
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[0].auth_logs
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: DuoAdmin
                accessor: UserDetails.[2].auth_logs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1830
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "46":
    id: "46"
    taskid: 09668ea7-38b0-4527-8ca9-8ad7a2fd04d7
    type: regular
    task:
      id: 09668ea7-38b0-4527-8ca9-8ad7a2fd04d7
      version: -1
      name: Print Error in case of two users have the same auth logs
      description: Prints an error entry with a given message
      scriptName: PrintErrorEntry
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      message:
        simple: There are two users with the same logs. The bug haven't been fixed
          (issue 19141).
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 940,
          "y": 1920
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2255,
        "width": 1890,
        "x": -100,
        "y": -160
      }
    }
  }
inputs: []
outputs: []
