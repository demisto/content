id: ParseEmailFiles-test
version: -1
name: ParseEmailFiles-test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: b79f5886-9be1-4654-8dbe-70e848ec98a6
    type: start
    task:
      id: b79f5886-9be1-4654-8dbe-70e848ec98a6
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: f363e319-8198-4437-8a16-a49dc2debc6c
    type: regular
    task:
      id: f363e319-8198-4437-8a16-a49dc2debc6c
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      all:
        simple: "yes"
      key: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 230
        }
      }
    note: false
  "2":
    id: "2"
    taskid: e43b6306-b986-44f0-8fb9-2d2ff75cb53a
    type: regular
    task:
      id: e43b6306-b986-44f0-8fb9-2d2ff75cb53a
      version: -1
      name: http
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      body: {}
      filename:
        simple: ParseEmailFiles_test_email.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://raw.githubusercontent.com/demisto/content/master/TestData/ParseEmailFiles_test_email.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 410
        }
      }
    note: false
  "3":
    id: "3"
    taskid: 4e90d035-4b3f-4bad-8cc9-7358f800d775
    type: regular
    task:
      id: 4e90d035-4b3f-4bad-8cc9-7358f800d775
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
      - "8"
      - "11"
      - "13"
      - "14"
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: ParseEmailFiles_test_email.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 590
        }
      }
    note: false
  "4":
    id: "4"
    taskid: f9662dc6-a77b-4b55-8dd9-39ebd7bcbade
    type: regular
    task:
      id: f9662dc6-a77b-4b55-8dd9-39ebd7bcbade
      version: -1
      name: VerifyContext - To
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      expectedValue:
        simple: shachar@demisto.com, yaakovi@demisto.com
      fields: {}
      path:
        simple: Email.To
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 352,
          "y": 769
        }
      }
    note: false
  "8":
    id: "8"
    taskid: a9de755b-3555-4fcb-838d-e6b73793a5b2
    type: regular
    task:
      id: a9de755b-3555-4fcb-838d-e6b73793a5b2
      version: -1
      name: VerifyContext - Subject
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      expectedValue:
        simple: ParseEmail test email
      fields: {}
      path:
        simple: Email.Subject
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -120,
          "y": 769
        }
      }
    note: false
  "11":
    id: "11"
    taskid: 002cb083-3e33-4b49-8d4c-543f9bd27a83
    type: condition
    task:
      id: 002cb083-3e33-4b49-8d4c-543f9bd27a83
      version: -1
      name: AreValuesEqual - verify pdf attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pdf
          accessor: MD5
      right:
        simple: 9060c2d4f48745de19a5690d8e6cabe1
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1213,
          "y": 769
        }
      }
    note: false
  "12":
    id: "12"
    taskid: b83af118-a4b9-4d06-8d07-605433515286
    type: title
    task:
      id: b83af118-a4b9-4d06-8d07-605433515286
      version: -1
      name: Validate Non-Unicode parsing
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
      - "16"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1107
        }
      }
    note: false
  "13":
    id: "13"
    taskid: f25d6873-b1c0-4ed6-8765-e11192c2bebd
    type: condition
    task:
      id: f25d6873-b1c0-4ed6-8765-e11192c2bebd
      version: -1
      name: AreValuesEqual - verify docx attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: docx
          accessor: MD5
      right:
        simple: b842aa8664f41a2dd7fe0d47a9fd4724
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 769
        }
      }
    note: false
  "14":
    id: "14"
    taskid: f0266c84-ee00-40d4-8708-b96a6cb146f1
    type: regular
    task:
      id: f0266c84-ee00-40d4-8708-b96a6cb146f1
      version: -1
      name: VerifyContext - From
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      expectedValue:
        simple: shachar@demisto.com
      fields: {}
      path:
        simple: Email.From
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -558,
          "y": 769
        }
      }
    note: false
  "15":
    id: "15"
    taskid: 6b488ece-4fc6-4564-875f-f66941d8350c
    type: regular
    task:
      id: 6b488ece-4fc6-4564-875f-f66941d8350c
      version: -1
      name: Non Unicode Subject
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonUnicodeSubject.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonUnicodeSubject.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1280
        }
      }
    note: false
  "16":
    id: "16"
    taskid: 2a8e2a49-d105-40b1-8577-9c6d64a46e0d
    type: regular
    task:
      id: 2a8e2a49-d105-40b1-8577-9c6d64a46e0d
      version: -1
      name: Non Unicode Attachment Name
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonUnicodeAttachmentName.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonUnicodeAttachmentName.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1280
        }
      }
    note: false
  "17":
    id: "17"
    taskid: ff9146b3-3316-43ba-84f4-db7886a9356a
    type: regular
    task:
      id: ff9146b3-3316-43ba-84f4-db7886a9356a
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonUnicodeAttachmentName.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1470
        }
      }
    note: false
  "18":
    id: "18"
    taskid: 2231c8f8-459f-4c96-8509-9f0ce2c94207
    type: regular
    task:
      id: 2231c8f8-459f-4c96-8509-9f0ce2c94207
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonUnicodeSubject.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 430,
          "y": 1470
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1515,
        "width": 2151,
        "x": -558,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
