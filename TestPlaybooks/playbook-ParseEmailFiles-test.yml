elasticcommonfields: {}
id: ParseEmailFiles-test
version: -1
contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
name: ParseEmailFiles-test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: "6"
    type: start
    task:
      elasticcommonfields: {}
      id: "6"
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: "1"
    type: regular
    task:
      elasticcommonfields: {}
      id: "1"
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      all:
        simple: "yes"
      key: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: "9"
    type: regular
    task:
      elasticcommonfields: {}
      id: "9"
      version: -1
      name: http
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      body: {}
      filename:
        simple: ParseEmailFiles_test_email.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://raw.githubusercontent.com/demisto/content/master/TestData/ParseEmailFiles_test_email.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: "7"
    type: regular
    task:
      elasticcommonfields: {}
      id: "7"
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
      - "8"
      - "11"
      - "13"
      - "14"
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: ParseEmailFiles_test_email.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: "10"
    type: condition
    task:
      elasticcommonfields: {}
      id: "10"
      version: -1
      name: VerifyContext - To
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.To
            iscontext: true
          right:
            value:
              simple: shachar@demisto.com, yaakovi@demisto.com
    view: |-
      {
        "position": {
          "x": 352,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "8":
    id: "8"
    taskid: "2"
    type: condition
    task:
      elasticcommonfields: {}
      id: "2"
      version: -1
      name: VerifyContext - Subject
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.Subject
            iscontext: true
          right:
            value:
              simple: ParseEmail test email
    view: |-
      {
        "position": {
          "x": -120,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "11":
    id: "11"
    taskid: "3"
    type: condition
    task:
      elasticcommonfields: {}
      id: "3"
      version: -1
      name: AreValuesEqual - verify pdf attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pdf
          accessor: MD5
      right:
        simple: 9060c2d4f48745de19a5690d8e6cabe1
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1213,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "12":
    id: "12"
    taskid: "4"
    type: title
    task:
      elasticcommonfields: {}
      id: "4"
      version: -1
      name: Validate Non-Unicode parsing
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
      - "16"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1107
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: "5"
    type: condition
    task:
      elasticcommonfields: {}
      id: "5"
      version: -1
      name: AreValuesEqual - verify docx attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: docx
          accessor: MD5
      right:
        simple: b842aa8664f41a2dd7fe0d47a9fd4724
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "14":
    id: "14"
    taskid: "11"
    type: condition
    task:
      elasticcommonfields: {}
      id: "11"
      version: -1
      name: VerifyContext - From
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.From
            iscontext: true
          right:
            value:
              simple: shachar@demisto.com
    view: |-
      {
        "position": {
          "x": -558,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: "12"
    type: regular
    task:
      elasticcommonfields: {}
      id: "12"
      version: -1
      name: Non Unicode Subject
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonAsciiSubject.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonAsciiSubject.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: "13"
    type: regular
    task:
      elasticcommonfields: {}
      id: "13"
      version: -1
      name: Non Unicode Attachment Name
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonAsciiAttachmentName.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonAsciiAttachmentName.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: "8"
    type: regular
    task:
      elasticcommonfields: {}
      id: "8"
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonAsciiAttachmentName.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: "14"
    type: regular
    task:
      elasticcommonfields: {}
      id: "14"
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonAsciiSubject.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 430,
          "y": 1470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: "177"
    type: regular
    task:
      elasticcommonfields: {}
      id: "177"
      version: -1
      name: http (No Content Type)
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      body: {}
      filename:
        simple: ParseEmailFiles_test_email.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://raw.githubusercontent.com/demisto/content/master/TestData/no_content_type.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "20":
    id: "20"
    taskid: "178"
    type: regular
    task:
      elasticcommonfields: {}
      id: "178"
      version: -1
      name: ParseEmailFiles Ignore Content Type
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: ParseEmailFiles_test_email.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
      ignore_content_type:
        simple: "true"
      max_depth: {}
      parse_only_headers: {}
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: "176"
    type: regular
    task:
      elasticcommonfields: {}
      id: "176"
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      all:
        simple: "yes"
      key: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "22":
    id: "22"
    taskid: "179"
    type: condition
    task:
      elasticcommonfields: {}
      id: "179"
      version: -1
      name: Verify Headers
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "21"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: Email.Headers.value
            iscontext: true
          right:
            value:
              simple: '"woo@demisto.com" <woo@demisto.com>'
      - - operator: isEqualString
          left:
            value:
              simple: Email.Headers.value
            iscontext: true
          right:
            value:
              simple: '"Demisto Dbot" <woo@demisto.com>'
      - - operator: isEqualString
          left:
            value:
              simple: Email.Headers.value
            iscontext: true
          right:
            value:
              simple: from prod.outlook.com
    view: |-
      {
        "position": {
          "x": 450,
          "y": 60
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2155,
        "width": 2151,
        "x": -558,
        "y": -590
      }
    }
  }
inputs: []
outputs: []
