id: ParseEmailFiles-test
version: -1
name: ParseEmailFiles-test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: da85dd34-c60b-49f1-8464-0731764289b6
    type: start
    task:
      id: da85dd34-c60b-49f1-8464-0731764289b6
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: e01e58a1-1bc0-424a-88a8-95ea1f48248c
    type: regular
    task:
      id: e01e58a1-1bc0-424a-88a8-95ea1f48248c
      version: -1
      name: DeleteContext
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      all:
        simple: "yes"
      key: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: e0cff5b4-cc6b-4f8c-8551-f8bd72689d48
    type: regular
    task:
      id: e0cff5b4-cc6b-4f8c-8551-f8bd72689d48
      version: -1
      name: http
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      body: {}
      filename:
        simple: ParseEmailFiles_test_email.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://raw.githubusercontent.com/demisto/content/master/TestData/ParseEmailFiles_test_email.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 4c389915-ed10-4ff7-8935-41aec26dda02
    type: regular
    task:
      id: 4c389915-ed10-4ff7-8935-41aec26dda02
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
      - "8"
      - "11"
      - "13"
      - "14"
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: ParseEmailFiles_test_email.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 61922105-0031-4ac1-80c0-85bcb9e4fc09
    type: condition
    task:
      id: 61922105-0031-4ac1-80c0-85bcb9e4fc09
      version: -1
      name: VerifyContext - To
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.To
            iscontext: true
          right:
            value:
              simple: shachar@demisto.com, yaakovi@demisto.com
    view: |-
      {
        "position": {
          "x": 352,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: 47eac82f-cd7d-46d7-86a0-d9dc4597242c
    type: condition
    task:
      id: 47eac82f-cd7d-46d7-86a0-d9dc4597242c
      version: -1
      name: VerifyContext - Subject
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.Subject
            iscontext: true
          right:
            value:
              simple: ParseEmail test email
    view: |-
      {
        "position": {
          "x": -120,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: 671be5b8-78b3-41b4-8f4f-320fc4636142
    type: condition
    task:
      id: 671be5b8-78b3-41b4-8f4f-320fc4636142
      version: -1
      name: AreValuesEqual - verify pdf attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: pdf
          accessor: MD5
      right:
        simple: 9060c2d4f48745de19a5690d8e6cabe1
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1213,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "12":
    id: "12"
    taskid: f8bc4774-85d5-4fc0-8591-3c5bb08291cb
    type: title
    task:
      id: f8bc4774-85d5-4fc0-8591-3c5bb08291cb
      version: -1
      name: Validate Non-Unicode parsing
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "15"
      - "16"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1107
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "13":
    id: "13"
    taskid: 95e2575e-15d7-485c-861c-aae010fd66e9
    type: condition
    task:
      id: 95e2575e-15d7-485c-861c-aae010fd66e9
      version: -1
      name: AreValuesEqual - verify docx attachment
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      scriptName: AreValuesEqual
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    scriptarguments:
      left:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: docx
          accessor: MD5
      right:
        simple: b842aa8664f41a2dd7fe0d47a9fd4724
    results:
    - AreValuesEqual
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "14":
    id: "14"
    taskid: f1233388-a26f-4aee-843a-af17a7294dc3
    type: condition
    task:
      id: f1233388-a26f-4aee-843a-af17a7294dc3
      version: -1
      name: VerifyContext - From
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "12"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: containsGeneral
          left:
            value:
              simple: Email.From
            iscontext: true
          right:
            value:
              simple: shachar@demisto.com
    view: |-
      {
        "position": {
          "x": -558,
          "y": 769
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: a98a8bc6-2669-4ecb-82b6-0f77be1402ae
    type: regular
    task:
      id: a98a8bc6-2669-4ecb-82b6-0f77be1402ae
      version: -1
      name: Non Unicode Subject
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonAsciiSubject.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonAsciiSubject.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 400,
          "y": 1280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: fb6eb6fa-8329-4df9-87b7-908cd44463aa
    type: regular
    task:
      id: fb6eb6fa-8329-4df9-87b7-908cd44463aa
      version: -1
      name: Non Unicode Attachment Name
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      body: {}
      filename:
        simple: EmailWithNonAsciiAttachmentName.eml
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: "yes"
      unsecure: {}
      url:
        simple: https://github.com/demisto/content/raw/master/TestData/EmailWithNonAsciiAttachmentName.eml
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 5ff2ec18-4d88-4f91-87a0-dafa6e23a463
    type: regular
    task:
      id: 5ff2ec18-4d88-4f91-87a0-dafa6e23a463
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonAsciiAttachmentName.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 12777162-fb27-40d0-89ed-bb4eb19494a9
    type: regular
    task:
      id: 12777162-fb27-40d0-89ed-bb4eb19494a9
      version: -1
      name: ParseEmailFiles
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook. Requires pip and access to python repository to install "olefile"
        package.
      scriptName: ParseEmailFiles
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      entryid:
        complex:
          root: File
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: EmailWithNonAsciiSubject.eml
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: EntryID
    results:
    - AttachmentName
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 430,
          "y": 1470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1515,
        "width": 2151,
        "x": -558,
        "y": 50
      }
    }
  }
inputs: []
outputs: []