id: Recorded Future Test
version: -1
name: Recorded Future Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 552dc470-85da-4fe9-8b43-de1115d16cbb
    type: start
    task:
      id: 552dc470-85da-4fe9-8b43-de1115d16cbb
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: eb4e9484-cc92-448e-834b-993b103924a1
    type: regular
    task:
      id: eb4e9484-cc92-448e-834b-993b103924a1
      version: -1
      name: recorded-future-get-related-entities
      description: Look up threat intel context for an indicator in Recorded Future.
      script: Recorded Future|||recorded-future-get-related-entities
      type: regular
      iscommand: true
      brand: Recorded Future
    nexttasks:
      '#none#':
      - "2"
      - "3"
      - "4"
      - "9"
    scriptarguments:
      entityType:
        simple: domain
      entityValue:
        simple: google.com
      resultEntityType:
        simple: All
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 195
        }
      }
    note: false
  "2":
    id: "2"
    taskid: 212a5c7e-ecca-4ea3-834b-b1702d36ea74
    type: regular
    task:
      id: 212a5c7e-ecca-4ea3-834b-b1702d36ea74
      version: -1
      name: ip
      description: Look up threat intel information for an IP in Recorded Future.
      script: Recorded Future|||ip
      type: regular
      iscommand: true
      brand: Recorded Future
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      detailed: {}
      enclave-ids: {}
      fullResponse: {}
      ip:
        simple: ${Domain.RecordedFuture.RelatedEntities.IPAddress.[0].Name}
      long: {}
      retries: {}
      sampleSize: {}
      threshold: {}
      wait: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
  "3":
    id: "3"
    taskid: e1892bfc-c8c2-496f-8a96-2ba343954e8d
    type: regular
    task:
      id: e1892bfc-c8c2-496f-8a96-2ba343954e8d
      version: -1
      name: domain
      description: Look up threat intel information for a domain or DNS in Recorded
        Future.
      script: Recorded Future|||domain
      type: regular
      iscommand: true
      brand: Recorded Future
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      detailed:
        simple: "true"
      domain:
        simple: ${Domain.RecordedFuture.RelatedEntities.Domain.[0].Name}
      enclave-ids: {}
      long: {}
      threshold: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
    note: false
  "4":
    id: "4"
    taskid: 4c018bdf-5072-4893-8e88-5a883cf59fd5
    type: regular
    task:
      id: 4c018bdf-5072-4893-8e88-5a883cf59fd5
      version: -1
      name: file
      description: Look up threat intel information for a file in Recorded Future.
      script: Recorded Future|||file
      type: regular
      iscommand: true
      brand: Recorded Future
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      detailed: {}
      enclave-ids: {}
      file:
        simple: ${Domain.RecordedFuture.RelatedEntities.Hash.[0].Name}
      long: {}
      retries: {}
      threshold: {}
      wait: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 370
        }
      }
    note: false
  "5":
    id: "5"
    taskid: f47b44dd-5645-4ca3-81ad-4d0f188f9a4e
    type: regular
    task:
      id: f47b44dd-5645-4ca3-81ad-4d0f188f9a4e
      version: -1
      name: VerifyContext IP
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      expectedValue: {}
      fields:
        simple: Criticality,FirstSeen,LastSeen
      path:
        simple: IP.RecordedFuture
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 9e6f3df4-6acc-42ce-8a94-395ffb7e19b4
    type: regular
    task:
      id: 9e6f3df4-6acc-42ce-8a94-395ffb7e19b4
      version: -1
      name: VerifyContext - Domain
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      expectedValue: {}
      fields:
        simple: Criticality,FirstSeen,LastSeen
      path:
        simple: Domain.[1].RecordedFuture
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
  "7":
    id: "7"
    taskid: 435d1446-4696-4aac-8db2-23c3de4cd460
    type: regular
    task:
      id: 435d1446-4696-4aac-8db2-23c3de4cd460
      version: -1
      name: VerifyContext - File
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      expectedValue: {}
      fields:
        simple: Indicator,Type,Vendor,Score
      path:
        simple: DBotScore
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 545
        }
      }
    note: false
  "8":
    id: "8"
    taskid: f7a155c9-79e2-483d-8388-3c065b2ca732
    type: title
    task:
      id: f7a155c9-79e2-483d-8388-3c065b2ca732
      version: -1
      name: Success!
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 695,
          "y": 720
        }
      }
    note: false
  "9":
    id: "9"
    taskid: 81ae7b8c-06ec-410b-87f3-8267a4212b4f
    type: regular
    task:
      id: 81ae7b8c-06ec-410b-87f3-8267a4212b4f
      version: -1
      name: domain
      description: Look up threat intel information for a domain or DNS in Recorded
        Future.
      script: Recorded Future|||domain
      type: regular
      iscommand: true
      brand: Recorded Future
    nexttasks:
      '#none#':
      - "10"
    scriptarguments:
      detailed:
        simple: "true"
      domain:
        simple: blah
      enclave-ids: {}
      long: {}
      threshold: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 370
        }
      }
    note: false
  "10":
    id: "10"
    taskid: a1b417ff-65dc-4ced-8ca1-f46fe5c57b34
    type: condition
    task:
      id: a1b417ff-65dc-4ced-8ca1-f46fe5c57b34
      version: -1
      name: Verify DBot Score=0
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualNumber
          left:
            value:
              complex:
                root: DBotScore
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: DBotScore.Indicator
                      iscontext: true
                    right:
                      value:
                        simple: blah
                accessor: Score
            iscontext: true
          right:
            value:
              simple: "0"
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 545
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 735,
        "width": 1670,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
