id: Google-Vault-Generic-Test
version: -1
name: Google Vault Generic Test
description: This is a test for the Google Vault integration. It calls a variety of
  commands of the integration. If the whole playbook succeeds, then the integration
  is working correctly.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 84da32d3-2769-407c-8c01-6593e0ca01ce
    type: start
    task:
      id: 84da32d3-2769-407c-8c01-6593e0ca01ce
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 25
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 4b2f4d73-2377-4906-80ea-a7fc0e2823a3
    type: regular
    task:
      id: 4b2f4d73-2377-4906-80ea-a7fc0e2823a3
      version: -1
      name: Create matter "playbook test matter 1"
      description: Creates a new matter with the given name and description. The initial
        state is open, and the owner is the method caller. First, checks if a matter
        with the same name already exists.
      script: '|||gvault-create-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
      - "3"
    scriptarguments:
      description:
        simple: wow
      name:
        simple: ${.='playbook test matter ' +  new Date()}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: f43da280-2de9-4730-8c6c-9b621762efad
    type: regular
    task:
      id: f43da280-2de9-4730-8c6c-9b621762efad
      version: -1
      name: Verify matter name
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: GoogleVault.Matter.Name
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 90c1fb94-fb4c-4d95-84a3-9ad69986f3e8
    type: regular
    task:
      id: 90c1fb94-fb4c-4d95-84a3-9ad69986f3e8
      version: -1
      name: Verify matter ID
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: GoogleVault.Matter.MatterID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 87705353-bbc9-4167-8aaa-dcbd4b360dc0
    type: regular
    task:
      id: 87705353-bbc9-4167-8aaa-dcbd4b360dc0
      version: -1
      name: Get matter "playbook test matter 1"
      description: Checks if we can get the matter information of the matter that
        was previously created.
      script: '|||gvault-get-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      matterID: {}
      matterName:
        simple: playbook test matter 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: bd8078f1-9941-439b-81cd-961c7e465da9
    type: regular
    task:
      id: bd8078f1-9941-439b-81cd-961c7e465da9
      version: -1
      name: Delete Context
      description: Deletes the current context to prevent interference of previous
        data with the rest of the playbook.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: 7b9d062b-a95e-43ec-89f2-ce570fb5c457
    type: regular
    task:
      id: 7b9d062b-a95e-43ec-89f2-ce570fb5c457
      version: -1
      name: Delete Context
      description: Deletes the current context to prevent interference of old remaining
        data from failing the playbook. You can ignore this part, as it is only a
        preventative measure for technical purposes.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "13":
    id: "13"
    taskid: d82bf06f-3680-4c34-8605-73729b6f8728
    type: regular
    task:
      id: d82bf06f-3680-4c34-8605-73729b6f8728
      version: -1
      name: Delete Context
      description: Deleting context so that we can get an updated list of matters
        later
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "14"
      - "24"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1085
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "14":
    id: "14"
    taskid: 40a9a9b8-043e-4b60-8a2e-95947b9f8030
    type: regular
    task:
      id: 40a9a9b8-043e-4b60-8a2e-95947b9f8030
      version: -1
      name: Get "First matter" Matter
      script: '|||gvault-get-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      matterID: {}
      matterName:
        simple: First matter
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1310
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: 52d8916b-f246-4780-8ca3-22143791d171
    type: regular
    task:
      id: 52d8916b-f246-4780-8ca3-22143791d171
      version: -1
      name: Create Hold For Account ID 116238185592796178843
      script: '|||gvault-create-hold'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      corpus:
        simple: Mail
      endTime: {}
      holdName:
        simple: Test Playbook Hold 1
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      startTime: {}
      terms: {}
      timeFrame: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 75905f67-d6d2-4647-8cb0-b69ccf5eee17
    type: regular
    task:
      id: 75905f67-d6d2-4647-8cb0-b69ccf5eee17
      version: -1
      name: Add Held Account 103020731686044834269
      script: '|||gvault-add-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
      - "18"
    scriptarguments:
      account: {}
      accountID:
        simple: "103020731686044834269"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1695
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 27af4152-d2cd-4fc3-8671-872a17ced35b
    type: regular
    task:
      id: 27af4152-d2cd-4fc3-8671-872a17ced35b
      version: -1
      name: Remove Held Account
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 627a0daa-3152-44e1-8b09-05f757209865
    type: regular
    task:
      id: 627a0daa-3152-44e1-8b09-05f757209865
      version: -1
      name: 'Remove Held Account '
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "103020731686044834269"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 120,
          "y": 1870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "19":
    id: "19"
    taskid: be980b62-097d-4185-832b-c746134c12a6
    type: regular
    task:
      id: be980b62-097d-4185-832b-c746134c12a6
      version: -1
      name: Delete Hold
      script: '|||gvault-delete-hold'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 2045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "20":
    id: "20"
    taskid: 2288d52e-6785-490d-828b-8baa950d5592
    type: regular
    task:
      id: 2288d52e-6785-490d-828b-8baa950d5592
      version: -1
      name: Create mail export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      IncludeDrafts: {}
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com,dbot@demistodev.com
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='email_test_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      includeDrafts:
        simple: "true"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Specific Accounts(requires emails argument)
      startTime: {}
      terms:
        simple: subject:test
      timeFrame:
        simple: 7 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2060
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "21":
    id: "21"
    taskid: 4b923e23-6505-4f11-8642-50ebbd426f2c
    type: regular
    task:
      id: 4b923e23-6505-4f11-8642-50ebbd426f2c
      version: -1
      name: Get Export Status
      description: ""
      script: '|||gvault-export-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      exportID:
        complex:
          root: GoogleVault
          accessor: Matter.Export.ExportID
      exportIDS:
        simple: ${GoogleVault.Matter.Export.ExportID}
      matterId:
        simple: ${GoogleVault.Matter.MatterID}
      queryIDS: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3050
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: dbc6b740-f0ab-4039-8556-af1b1e868444
    type: title
    task:
      id: dbc6b740-f0ab-4039-8556-af1b1e868444
      version: -1
      name: Create Exports
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "26":
    id: "26"
    taskid: 5fdff004-b194-4406-84bb-e6ce1a92a108
    type: regular
    task:
      id: 5fdff004-b194-4406-84bb-e6ce1a92a108
      version: -1
      name: GeneratePassword
      description: "This function generates a password and allows various parameters
        to customize the properties of the password depending on the use case (e.g.
        password complexity requirements).  The default behavior is to generate a
        password of  *random length* including all four character classes (upper,
        lower, digits, symbols) with at least five and at most ten characters per
        class. \n\nThe min_* values all default to 0. This means that if the command
        is executed in this way:\n!GeneratePassword max_lcase=10\nIt is possible that
        a password of length zero could be generated. It is therefore recommended
        to always include a min_* parameter that matches. \n\nThe debug parameter
        will print certain properties of the command into the WarRoom for easy diagnostics."
      scriptName: GeneratePassword
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      debug: {}
      max_digits:
        simple: "2"
      max_lcase:
        simple: "2"
      max_symbols:
        simple: "0"
      max_ucase:
        simple: "2"
      min_digits:
        simple: "2"
      min_lcase:
        simple: "2"
      min_symbols: {}
      min_ucase:
        simple: "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "27":
    id: "27"
    taskid: 4c7d4623-3ca2-4840-854b-eb2c8f8289c1
    type: regular
    task:
      id: 4c7d4623-3ca2-4840-854b-eb2c8f8289c1
      version: -1
      name: Create groups export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='groups_test_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      groups:
        simple: maya-group-test@demistodev.com,ido-group-test@demistodev.com
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      startTime: {}
      terms: {}
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "29":
    id: "29"
    taskid: 2dc4b4c5-e275-454a-87fc-acd41e5cfe89
    type: regular
    task:
      id: 2dc4b4c5-e275-454a-87fc-acd41e5cfe89
      version: -1
      name: Create drive export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-drive'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com
      endTime: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='drive_test_export_' + val +'_time_' + Date.now()
      includeTeamDrives:
        simple: "false"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Team Drive
      startTime: {}
      teamDrive:
        simple: 0ANbMMsaWJNw2Uk9PVA,0AOM4L2G2JU4NUk9PVA
      terms: {}
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "30":
    id: "30"
    taskid: 7607fc0f-a069-475c-85a0-0458475b4b57
    type: regular
    task:
      id: 7607fc0f-a069-475c-85a0-0458475b4b57
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 1690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "31":
    id: "31"
    taskid: d9d6e9d6-fd75-4ec9-8b0b-2981bcaef9ea
    type: regular
    task:
      id: d9d6e9d6-fd75-4ec9-8b0b-2981bcaef9ea
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "32":
    id: "32"
    taskid: 918b18b7-d7b5-44bc-8597-00adc1f1d4f0
    type: regular
    task:
      id: 918b18b7-d7b5-44bc-8597-00adc1f1d4f0
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "33":
    id: "33"
    taskid: 2e9aeb92-6017-49e4-80c4-d0fa176fddf5
    type: title
    task:
      id: 2e9aeb92-6017-49e4-80c4-d0fa176fddf5
      version: -1
      name: Get results
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
      - "35"
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "34":
    id: "34"
    taskid: f579f39f-60ff-4317-8679-84f0adcce357
    type: regular
    task:
      id: f579f39f-60ff-4317-8679-84f0adcce357
      version: -1
      name: Get Drive Results
      script: '|||gvault-get-drive-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('drive') != -1
          && val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -850,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "35":
    id: "35"
    taskid: 6ea4c93e-cbf5-4b9b-8e15-9544b4cabd46
    type: regular
    task:
      id: 6ea4c93e-cbf5-4b9b-8e15-9544b4cabd46
      version: -1
      name: Get Mail Results
      script: '|||gvault-get-mail-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('mail') != -1 &&
          val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "36":
    id: "36"
    taskid: c0f97951-3694-43d2-8407-b163b4014f96
    type: regular
    task:
      id: c0f97951-3694-43d2-8407-b163b4014f96
      version: -1
      name: Get Groups Results
      script: '|||gvault-get-groups-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('groups') != -1
          && val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 180,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "37":
    id: "37"
    taskid: c9cc5151-8695-4dbc-8641-b747ed46efcd
    type: regular
    task:
      id: c9cc5151-8695-4dbc-8641-b747ed46efcd
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "38"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 2180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "38":
    id: "38"
    taskid: edcf063d-92f3-4d43-8a5e-52a33b017f18
    type: regular
    task:
      id: edcf063d-92f3-4d43-8a5e-52a33b017f18
      version: -1
      name: Create empty drive export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-drive'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "39"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com
      endTime: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='drive_empty_export_' + val +'_time_' + Date.now()
      includeTeamDrives:
        simple: "false"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Team Drive
      startTime: {}
      teamDrive:
        simple: 0ANbMMsaWJNw2Uk9PVA,0AOM4L2G2JU4NUk9PVA
      terms:
        simple: Paris in summer
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "39":
    id: "39"
    taskid: d4525663-3fd2-453d-81c1-5884a38bfcb0
    type: regular
    task:
      id: d4525663-3fd2-453d-81c1-5884a38bfcb0
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 2440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "40":
    id: "40"
    taskid: f6eda315-8bd5-4ca4-8dcd-08d29f6abdb5
    type: regular
    task:
      id: f6eda315-8bd5-4ca4-8dcd-08d29f6abdb5
      version: -1
      name: Create empty groups export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='groups_empty_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      groups:
        simple: maya-group-test@demistodev.com,ido-group-test@demistodev.com
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      startTime: {}
      terms:
        simple: Believe in the power of content
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "41":
    id: "41"
    taskid: b9f2b6b5-a5e5-4a51-8883-bd1e62bd0bf1
    type: regular
    task:
      id: b9f2b6b5-a5e5-4a51-8883-bd1e62bd0bf1
      version: -1
      name: Create empty mail export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      IncludeDrafts: {}
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com,dbot@demistodev.com
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='email_empty_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      includeDrafts:
        simple: "true"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Specific Accounts(requires emails argument)
      startTime: {}
      terms:
        simple: 'Chuck Norris '
      timeFrame:
        simple: 7 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2805
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "42":
    id: "42"
    taskid: d157a502-9c91-4e1c-809d-6f5fb9a941a2
    type: regular
    task:
      id: d157a502-9c91-4e1c-809d-6f5fb9a941a2
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "41"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -750,
          "y": 2670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "43":
    id: "43"
    taskid: 3fb57c36-0cc1-42cc-8af2-f4c346591147
    type: regular
    task:
      id: 3fb57c36-0cc1-42cc-8af2-f4c346591147
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 2925
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3620,
        "width": 1780,
        "x": -850,
        "y": 25
      }
    }
  }
inputs: []
outputs: []
