{
    "scripts": [
        {
            "10cb3486-48f3-4d93-88af-b6be84ffd432": {
                "name": "OktaGetGroups", 
                "deprecated": true, 
                "depends_on": [
                    "okta-get-groups"
                ]
            }
        }, 
        {
            "120c861a-e0ae-417e-8dcf-c3ee1dc15a42": {
                "name": "commentsToContext"
            }
        }, 
        {
            "2aa9f737-8c7c-42f5-815f-4d104bb3af06": {
                "name": "SEPScan", 
                "deprecated": true, 
                "depends_on": [
                    "sep-command-status"
                ], 
                "tests": [
                    "No test - deprecated"
                ]
            }
        }, 
        {
            "34f0498c-d3da-4ac3-8cad-a28804bf1f21": {
                "name": "NetwitnessQuery", 
                "depends_on": [
                    "nw-sdk-query"
                ]
            }
        }, 
        {
            "3b260f00-772c-4d4e-84ea-e47226637497": {
                "name": "VerifyHumanReadableEquals", 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "3dd62013-4fed-43eb-8ae4-91b1b4250599": {
                "name": "OktaSetPassword", 
                "deprecated": true, 
                "depends_on": [
                    "okta-set-password"
                ]
            }
        }, 
        {
            "46e2109c-b735-458e-884f-030229a20830": {
                "name": "SetByIncidentId", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "514ec833-c02c-49a3-8ac6-d982198f5fa0": {
                "name": "OktaUpdateUser", 
                "deprecated": true, 
                "depends_on": [
                    "okta-update-user"
                ]
            }
        }, 
        {
            "5d44a5d9-d91a-4420-801f-755f26b60c47": {
                "name": "cveLatest", 
                "deprecated": true, 
                "depends_on": [
                    "cve-latest"
                ]
            }
        }, 
        {
            "5e125fdd-72f1-455f-89fa-e6f9405174a4": {
                "name": "NotInContextVerification"
            }
        }, 
        {
            "5edd0c8e-4e6e-4afe-8f43-67bb9ebc4fd3": {
                "name": "NetwitnessSearch", 
                "depends_on": [
                    "nw-sdk-search"
                ]
            }
        }, 
        {
            "7b02fa0f-94ff-48c7-8350-b4e353702e73": {
                "name": "VMRay", 
                "depends_on": [
                    "upload_sample"
                ], 
                "script_executions": [
                    "getFilePath", 
                    "scheduleEntry", 
                    "upload_sample"
                ], 
                "command_to_integration": {
                    "upload_sample": "VMRay"
                }
            }
        }, 
        {
            "7b5c080e-f3b1-411a-83b0-e1f53c21bef8": {
                "name": "WhileNotMdLoop", 
                "deprecated": true
            }
        }, 
        {
            "80b5c44c-4eac-4e00-812f-6d409d57be31": {
                "name": "WhoisLookup", 
                "deprecated": true, 
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "82764532-0a4f-4b59-8cf9-fe1a00cabdae": {
                "name": "OktaSearch", 
                "deprecated": true, 
                "depends_on": [
                    "okta-search"
                ]
            }
        }, 
        {
            "840aa9a7-04b2-4505-8238-8fe85f010dde": {
                "name": "OktaActivateUser", 
                "deprecated": true, 
                "depends_on": [
                    "okta-activate-user"
                ]
            }
        }, 
        {
            "8bb47409-fffb-40c4-8601-d5fd20384e26": {
                "name": "SetTime", 
                "script_executions": [
                    "setIncident"
                ]
            }
        }, 
        {
            "9364c36f-b1d6-4233-88c2-75008b106c31": {
                "name": "vmray_getResults", 
                "depends_on": [
                    "get_job_sample"
                ], 
                "script_executions": [
                    "get_job_sample", 
                    "get_results", 
                    "scheduleEntry"
                ], 
                "command_to_integration": {
                    "get_job_sample": "VMRay"
                }
            }
        }, 
        {
            "94f72ed9-49c8-40e5-89bb-7c98f914d2cc": {
                "name": "OktaDeactivateUser", 
                "deprecated": true, 
                "depends_on": [
                    "okta-deactivate-user"
                ]
            }
        }, 
        {
            "a18ff76e-c462-4daa-8be2-6a1b5308713f": {
                "name": "TestCreateDuplicates", 
                "script_executions": [
                    "createNewIncident"
                ]
            }
        }, 
        {
            "a6e348f4-1e40-4365-870c-52139c60779a": {
                "name": "OktaGetUser", 
                "deprecated": true, 
                "depends_on": [
                    "okta-get-user"
                ]
            }
        }, 
        {
            "AbuseIPDBPopulateIndicators": {
                "name": "AbuseIPDBPopulateIndicators", 
                "depends_on": [
                    "abuseipdb-get-blacklist", 
                    "createNewIndicator"
                ], 
                "command_to_integration": {
                    "createNewIndicator": "Builtin"
                }, 
                "tests": [
                    "AbuseIPDB PopulateIndicators Test"
                ]
            }
        }, 
        {
            "ActiveUsersD2": {
                "name": "ActiveUsersD2", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "ad7de731-cadc-4f49-81cd-522cd4b7bfa5": {
                "name": "CheckpointFWCreateBackup", 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "AddEvidence": {
                "name": "AddEvidence", 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "ADExpirePassword": {
                "name": "ADExpirePassword", 
                "deprecated": true, 
                "depends_on": [
                    "ad-expire-password"
                ]
            }
        }, 
        {
            "ADGetAllUsersEmail": {
                "name": "ADGetAllUsersEmail", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetCommonGroups": {
                "name": "ADGetCommonGroups", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ], 
                "script_executions": [
                    "ADGetUserGroups"
                ]
            }
        }, 
        {
            "ADGetComputer": {
                "name": "ADGetComputer", 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetComputerGroups": {
                "name": "ADGetComputerGroups", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ], 
                "script_executions": [
                    "AdSearch"
                ]
            }
        }, 
        {
            "ADGetEmailForAllUsers": {
                "name": "ADGetEmailForAllUsers", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetEmailForUser": {
                "name": "ADGetEmailForUser", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetGroupComputers": {
                "name": "ADGetGroupComputers", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetGroupMembers": {
                "name": "ADGetGroupMembers", 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetGroupUsers": {
                "name": "ADGetGroupUsers", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetUser": {
                "name": "ADGetUser", 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetUserGroups": {
                "name": "ADGetUserGroups", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADGetUsersByEmail": {
                "name": "ADGetUsersByEmail", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADIsUserMember": {
                "name": "ADIsUserMember", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ], 
                "script_executions": [
                    "ADGetUserGroups", 
                    "AdSearch"
                ]
            }
        }, 
        {
            "ADListComputers": {
                "name": "ADListComputers", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADListUsers": {
                "name": "ADListUsers", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADListUsersEx": {
                "name": "ADListUsersEx", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "AdSearch": {
                "name": "AdSearch", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADSetNewPassword": {
                "name": "ADSetNewPassword", 
                "deprecated": true, 
                "depends_on": [
                    "ad-set-new-password"
                ]
            }
        }, 
        {
            "ADUserLogonInfo": {
                "name": "ADUserLogonInfo", 
                "deprecated": true, 
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "AggregateIOCs": {
                "name": "AggregateIOCs", 
                "deprecated": true
            }
        }, 
        {
            "AlgosecCreateTicket": {
                "name": "AlgosecCreateTicket", 
                "depends_on": [
                    "algosec-create-ticket"
                ]
            }
        }, 
        {
            "AlgosecGetApplications": {
                "name": "AlgosecGetApplications", 
                "depends_on": [
                    "algosec-get-applications"
                ]
            }
        }, 
        {
            "AlgosecGetNetworkObject": {
                "name": "AlgosecGetNetworkObject", 
                "depends_on": [
                    "algosec-get-network-object"
                ]
            }
        }, 
        {
            "AlgosecGetTicket": {
                "name": "AlgosecGetTicket", 
                "depends_on": [
                    "algosec-get-ticket"
                ]
            }
        }, 
        {
            "AlgosecQuery": {
                "name": "AlgosecQuery", 
                "depends_on": [
                    "algosec-query"
                ]
            }
        }, 
        {
            "AnalyzeMemImage": {
                "name": "AnalyzeMemImage"
            }
        }, 
        {
            "AnalyzeOSX": {
                "name": "AnalyzeOSX", 
                "depends_on": [
                    "url", 
                    "file"
                ], 
                "tests": [
                    "No test - need to revisit"
                ]
            }
        }, 
        {
            "AquatoneDiscover": {
                "name": "AquatoneDiscover"
            }
        }, 
        {
            "ArcherCreateSecurityIncident": {
                "name": "ArcherCreateSecurityIncident", 
                "depends_on": [
                    "archer-create-record"
                ]
            }
        }, 
        {
            "ArcherUpdateSecurityIncident": {
                "name": "ArcherUpdateSecurityIncident", 
                "depends_on": [
                    "archer-update-record"
                ]
            }
        }, 
        {
            "AreValuesEqual": {
                "name": "AreValuesEqual"
            }
        }, 
        {
            "AssignAnalystToIncident": {
                "name": "AssignAnalystToIncident"
            }
        }, 
        {
            "ATDDetonate": {
                "name": "ATDDetonate", 
                "depends_on": [
                    "atd-get-report", 
                    "atd-file-upload", 
                    "atd-check-status"
                ]
            }
        }, 
        {
            "Autoruns": {
                "name": "Autoruns"
            }
        }, 
        {
            "AwsCreateImage": {
                "name": "AwsCreateImage", 
                "depends_on": [
                    "create-image"
                ]
            }
        }, 
        {
            "AwsCreateVolumeSnapshot": {
                "name": "AwsCreateVolumeSnapshot", 
                "depends_on": [
                    "create-volume-snapshot"
                ]
            }
        }, 
        {
            "AwsGetInstanceInfo": {
                "name": "AwsGetInstanceInfo", 
                "depends_on": [
                    "get-instance-info", 
                    "get-ebs-volume-info", 
                    "get-sg-info"
                ]
            }
        }, 
        {
            "AwsRunInstance": {
                "name": "AwsRunInstance", 
                "depends_on": [
                    "run-instance"
                ]
            }
        }, 
        {
            "AwsStartInstance": {
                "name": "AwsStartInstance", 
                "depends_on": [
                    "start-instance"
                ]
            }
        }, 
        {
            "AwsStopInstance": {
                "name": "AwsStopInstance", 
                "depends_on": [
                    "stop-instance"
                ]
            }
        }, 
        {
            "b695f044-fbdd-4d4b-89ce-9066cb0e165a": {
                "name": "cveReputation", 
                "depends_on": [
                    "cve-search"
                ]
            }
        }, 
        {
            "Base64Encode": {
                "name": "Base64Encode"
            }
        }, 
        {
            "Base64ListToFile": {
                "name": "Base64ListToFile", 
                "script_executions": [
                    "getList"
                ]
            }
        }, 
        {
            "bffdcf72-2061-4767-83d5-3ff2a9e8afe7": {
                "name": "BlockIP", 
                "tests": [
                    "blockip_test_playbook"
                ]
            }
        }, 
        {
            "BinaryReputationPy": {
                "name": "BinaryReputationPy", 
                "deprecated": true, 
                "depends_on": [
                    "file"
                ], 
                "script_executions": [
                    "file", 
                    "getEntries"
                ]
            }
        }, 
        {
            "BinarySearchPy": {
                "name": "BinarySearchPy", 
                "depends_on": [
                    "cb-process"
                ], 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "BuildEWSQuery": {
                "name": "BuildEWSQuery", 
                "tests": [
                    "buildewsquery_test"
                ]
            }
        }, 
        {
            "c0eb84c3-8771-4f9f-833e-1017112d6215": {
                "name": "ThrowException"
            }
        }, 
        {
            "c5cb179f-d6d2-4d87-8857-b224689d5b00": {
                "name": "VerifyTreeToFlatObject"
            }
        }, 
        {
            "c99e196b-e05e-41f2-82cb-6798f33cb653": {
                "name": "cveSearch", 
                "deprecated": true, 
                "depends_on": [
                    "cve-search"
                ]
            }
        }, 
        {
            "CarbonBlackResponseFilterSensors": {
                "name": "CarbonBlackResponseFilterSensors"
            }
        }, 
        {
            "CBAlerts": {
                "name": "CBAlerts", 
                "depends_on": [
                    "cb-alert"
                ]
            }
        }, 
        {
            "CBEvents": {
                "name": "CBEvents", 
                "depends_on": [
                    "cb-process", 
                    "process-events"
                ]
            }
        }, 
        {
            "CBFindHash": {
                "name": "CBFindHash", 
                "deprecated": true, 
                "depends_on": [
                    "cb-binary"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CBFindIP": {
                "name": "CBFindIP", 
                "depends_on": [
                    "CBSearch"
                ], 
                "script_executions": [
                    "CBSearch"
                ]
            }
        }, 
        {
            "CBLiveFetchFiles": {
                "name": "CBLiveFetchFiles", 
                "depends_on": [
                    "CBLiveGetFile"
                ], 
                "script_executions": [
                    "CBLiveGetFile"
                ]
            }
        }, 
        {
            "CBLiveGetFile": {
                "name": "CBLiveGetFile", 
                "depends_on": [
                    "cb-session-create", 
                    "cb-sensor-info", 
                    "cb-command-create", 
                    "cb-session-info", 
                    "cb-file-get", 
                    "cb-command-info", 
                    "cb-list-sessions"
                ]
            }
        }, 
        {
            "CBLiveProcessList": {
                "name": "CBLiveProcessList", 
                "depends_on": [
                    "cb-command-info", 
                    "cb-command-create"
                ]
            }
        }, 
        {
            "CBPApproveHash": {
                "name": "CBPApproveHash", 
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        }, 
        {
            "CBPBanHash": {
                "name": "CBPBanHash", 
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        }, 
        {
            "CBPCatalogFindHash": {
                "name": "CBPCatalogFindHash", 
                "depends_on": [
                    "cbp-fileCatalog-search"
                ]
            }
        }, 
        {
            "CBPFindComputer": {
                "name": "CBPFindComputer", 
                "depends_on": [
                    "cbp-computer-search"
                ]
            }
        }, 
        {
            "CBPFindRule": {
                "name": "CBPFindRule", 
                "depends_on": [
                    "cbp-fileRule-search"
                ]
            }
        }, 
        {
            "CBSearch": {
                "name": "CBSearch"
            }
        }, 
        {
            "CBSensors": {
                "name": "CBSensors", 
                "depends_on": [
                    "cb-list-sensors"
                ]
            }
        }, 
        {
            "CBSessions": {
                "name": "CBSessions", 
                "depends_on": [
                    "cb-list-sessions"
                ]
            }
        }, 
        {
            "CBWatchlists": {
                "name": "CBWatchlists", 
                "depends_on": [
                    "cb-watchlist-get"
                ]
            }
        }, 
        {
            "CEFParser": {
                "name": "CEFParser"
            }
        }, 
        {
            "changeremediationslaonsevchange": {
                "name": "ChangeRemediationSLAOnSevChange", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "setIncident"
                ], 
                "tests": [
                    "SLA Scripts - Test"
                ]
            }
        }, 
        {
            "CheckFiles": {
                "name": "CheckFiles", 
                "deprecated": true, 
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "CheckFilesWildfirePy": {
                "name": "CheckFilesWildfirePy", 
                "depends_on": [
                    "wildfire-upload", 
                    "wildfire-report"
                ], 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "CheckIPs": {
                "name": "CheckIPs", 
                "deprecated": true, 
                "script_executions": [
                    "ip"
                ]
            }
        }, 
        {
            "CheckpointFWBackupStatus": {
                "name": "CheckpointFWBackupStatus", 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "CheckSender": {
                "name": "CheckSender", 
                "depends_on": [
                    "pipl-search"
                ]
            }
        }, 
        {
            "CheckSenderDomainDistance": {
                "name": "CheckSenderDomainDistance"
            }
        }, 
        {
            "CheckURLs": {
                "name": "CheckURLs", 
                "deprecated": true, 
                "script_executions": [
                    "url"
                ]
            }
        }, 
        {
            "checkValue": {
                "name": "checkValue"
            }
        }, 
        {
            "CheckWhitelist": {
                "name": "CheckWhitelist", 
                "deprecated": true, 
                "script_executions": [
                    "getList"
                ]
            }
        }, 
        {
            "ClassifierNotifyAdmin": {
                "name": "ClassifierNotifyAdmin", 
                "depends_on": [
                    "send-mail"
                ]
            }
        }, 
        {
            "CloseInvestigation": {
                "name": "CloseInvestigation", 
                "deprecated": true
            }
        }, 
        {
            "CloseInvestigationAsDuplicate": {
                "name": "CloseInvestigationAsDuplicate", 
                "script_executions": [
                    "linkIncidents"
                ]
            }
        }, 
        {
            "CommonD2": {
                "name": "CommonD2"
            }
        }, 
        {
            "CommonIntegration": {
                "name": "CommonIntegration", 
                "deprecated": true
            }
        }, 
        {
            "CommonIntegrationPython": {
                "name": "CommonIntegrationPython", 
                "deprecated": true
            }
        }, 
        {
            "CommonServer": {
                "name": "CommonServer"
            }
        }, 
        {
            "CommonServerPython": {
                "name": "CommonServerPython", 
                "tests": [
                    "TestPYCommonServer"
                ]
            }
        }, 
        {
            "CommonServerUserPython": {
                "name": "CommonServerUserPython"
            }
        }, 
        {
            "CommonUserServer": {
                "name": "CommonUserServer"
            }
        }, 
        {
            "CompleteManualTask": {
                "name": "CompleteManualTask", 
                "script_executions": [
                    "DemistoGetIncidentTasksByState", 
                    "taskComplete"
                ]
            }
        }, 
        {
            "ConferIncidentDetails": {
                "name": "ConferIncidentDetails", 
                "depends_on": [
                    "confer"
                ]
            }
        }, 
        {
            "ConferSetSeverity": {
                "name": "ConferSetSeverity", 
                "depends_on": [
                    "confer"
                ], 
                "script_executions": [
                    "setSeverity"
                ]
            }
        }, 
        {
            "ContainsCreditCardInfo": {
                "name": "ContainsCreditCardInfo"
            }
        }, 
        {
            "ContextContains": {
                "name": "ContextContains"
            }
        }, 
        {
            "ContextFilter": {
                "name": "ContextFilter"
            }
        }, 
        {
            "ContextGetEmails": {
                "name": "ContextGetEmails"
            }
        }, 
        {
            "ContextGetHashes": {
                "name": "ContextGetHashes"
            }
        }, 
        {
            "ContextGetIps": {
                "name": "ContextGetIps"
            }
        }, 
        {
            "ContextGetPathForString": {
                "name": "ContextGetPathForString"
            }
        }, 
        {
            "ContextSearchForString": {
                "name": "ContextSearchForString"
            }
        }, 
        {
            "ConvertKeysToTableFieldFormat": {
                "name": "ConvertKeysToTableFieldFormat"
            }
        }, 
        {
            "ConvertTableToHTML": {
                "name": "ConvertTableToHTML"
            }
        }, 
        {
            "ConvertXmlFileToJson": {
                "name": "ConvertXmlFileToJson"
            }
        }, 
        {
            "ConvertXmlToJson": {
                "name": "ConvertXmlToJson"
            }
        }, 
        {
            "CopyContextToField": {
                "name": "CopyContextToField", 
                "script_executions": [
                    "getContext", 
                    "getIncidents", 
                    "setIncident"
                ], 
                "tests": [
                    "CopyContextToFieldTest"
                ]
            }
        }, 
        {
            "CopyFileD2": {
                "name": "CopyFileD2", 
                "tests": [
                    "No test - D2 test are not supported yet in content tests"
                ]
            }
        }, 
        {
            "CountArraySize": {
                "name": "CountArraySize"
            }
        }, 
        {
            "CPBlockIP": {
                "name": "CPBlockIP", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ], 
                "tests": [
                    "blockip_test_playbook"
                ]
            }
        }, 
        {
            "CPCreateBackup": {
                "name": "CPCreateBackup", 
                "deprecated": true, 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "CPDeleteRule": {
                "name": "CPDeleteRule", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "CPSetRule": {
                "name": "CPSetRule", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "CPShowAccessRulebase": {
                "name": "CPShowAccessRulebase", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "CPShowBackupStatus": {
                "name": "CPShowBackupStatus", 
                "deprecated": true, 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "CPShowHosts": {
                "name": "CPShowHosts", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "CPTaskStatus": {
                "name": "CPTaskStatus", 
                "deprecated": true, 
                "depends_on": [
                    "checkpoint"
                ], 
                "script_executions": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "CreateArray": {
                "name": "CreateArray"
            }
        }, 
        {
            "CreateBinaryFile": {
                "name": "CreateBinaryFile"
            }
        }, 
        {
            "CreateDuplicateIncident": {
                "name": "CreateDuplicateIncident", 
                "script_executions": [
                    "createNewIncident"
                ]
            }
        }, 
        {
            "CreateEmailHtmlBody": {
                "name": "CreateEmailHtmlBody", 
                "tests": [
                    "CreateEmailHtmlBody_test_pb"
                ]
            }
        }, 
        {
            "CrowdStrikeStreamingPreProcessing": {
                "name": "CrowdStrikeStreamingPreProcessing", 
                "script_executions": [
                    "addEntries"
                ]
            }
        }, 
        {
            "CrowdStrikeUrlParse": {
                "name": "CrowdStrikeUrlParse"
            }
        }, 
        {
            "CSActors": {
                "name": "CSActors", 
                "deprecated": true, 
                "depends_on": [
                    "cs-actors"
                ]
            }
        }, 
        {
            "CSCountDevicesForIOC": {
                "name": "CSCountDevicesForIOC", 
                "deprecated": true, 
                "depends_on": [
                    "cs-device-count-ioc"
                ]
            }
        }, 
        {
            "CSHuntByIOC": {
                "name": "CSHuntByIOC", 
                "deprecated": true, 
                "depends_on": [
                    "cs-device-ran-on"
                ], 
                "tests": [
                    "No Test"
                ]
            }
        }, 
        {
            "CSIndicators": {
                "name": "CSIndicators", 
                "deprecated": true, 
                "depends_on": [
                    "cs-indicators"
                ]
            }
        }, 
        {
            "CuckooDetonateFile": {
                "name": "CuckooDetonateFile", 
                "depends_on": [
                    "cuckoo-create-task-from-file"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CuckooDetonateURL": {
                "name": "CuckooDetonateURL", 
                "depends_on": [
                    "cuckoo-create-task-from-url"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CuckooDisplayReport": {
                "name": "CuckooDisplayReport", 
                "depends_on": [
                    "ck-report"
                ], 
                "script_executions": [
                    "getEntry", 
                    "getFilePath"
                ]
            }
        }, 
        {
            "CuckooGetReport": {
                "name": "CuckooGetReport", 
                "depends_on": [
                    "cuckoo-get-task-report"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CuckooGetScreenshot": {
                "name": "CuckooGetScreenshot", 
                "depends_on": [
                    "cuckoo-task-screenshot"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CuckooTaskStatus": {
                "name": "CuckooTaskStatus", 
                "depends_on": [
                    "cuckoo-view-task"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CybereasonPreProcessingExample": {
                "name": "CybereasonPreProcessingExample", 
                "script_executions": [
                    "getIncidents", 
                    "setIncident"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CYFileRep": {
                "name": "CYFileRep", 
                "depends_on": [
                    "file", 
                    "cy-upload"
                ], 
                "script_executions": [
                    "file", 
                    "getEntry"
                ], 
                "command_to_integration": {
                    "file": "cylance"
                }, 
                "tests": [
                    "No test - no instance"
                ]
            }
        }, 
        {
            "D2ActiveUsers": {
                "name": "D2ActiveUsers"
            }
        }, 
        {
            "D2Autoruns": {
                "name": "D2Autoruns"
            }
        }, 
        {
            "D2Drop": {
                "name": "D2Drop", 
                "tests": [
                    "No test - D2 tests are not supported yet in content tests"
                ]
            }
        }, 
        {
            "D2Exec": {
                "name": "D2Exec"
            }
        }, 
        {
            "D2ExecuteCommand": {
                "name": "D2ExecuteCommand"
            }
        }, 
        {
            "D2GetFile": {
                "name": "D2GetFile"
            }
        }, 
        {
            "D2GetSystemLog": {
                "name": "D2GetSystemLog"
            }
        }, 
        {
            "D2Hardware": {
                "name": "D2Hardware"
            }
        }, 
        {
            "D2O365ComplianceSearch": {
                "name": "D2O365ComplianceSearch"
            }
        }, 
        {
            "D2O365SearchAndDelete": {
                "name": "D2O365SearchAndDelete"
            }
        }, 
        {
            "D2PEDump": {
                "name": "D2PEDump"
            }
        }, 
        {
            "D2Processes": {
                "name": "D2Processes"
            }
        }, 
        {
            "D2RegQuery": {
                "name": "D2RegQuery"
            }
        }, 
        {
            "D2Rekall": {
                "name": "D2Rekall"
            }
        }, 
        {
            "D2Services": {
                "name": "D2Services"
            }
        }, 
        {
            "D2Users": {
                "name": "D2Users"
            }
        }, 
        {
            "D2Winpmem": {
                "name": "D2Winpmem"
            }
        }, 
        {
            "d98506ea-fd06-49d6-8f1e-bb29ab06766e": {
                "name": "VerifyContext", 
                "deprecated": true, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "da330ce7-3a93-430c-8454-03b96cf5184e": {
                "name": "OktaCreateUser", 
                "deprecated": true, 
                "depends_on": [
                    "okta-create-user"
                ]
            }
        }, 
        {
            "da8594b8-0b57-4cb2-8578-94754bb577c6": {
                "name": "NetwitnessSAListIncidents", 
                "depends_on": [
                    "nw-list-incidents"
                ]
            }
        }, 
        {
            "DamSensorDown": {
                "name": "DamSensorDown", 
                "depends_on": [
                    "dam-get-latest-by-rule"
                ]
            }
        }, 
        {
            "DataDomainReputation": {
                "name": "DataDomainReputation", 
                "fromversion": "3.1.0"
            }
        }, 
        {
            "DataDomainReputation": {
                "name": "DataDomainReputation", 
                "toversion": "3.0.1"
            }
        }, 
        {
            "DataHashReputation": {
                "name": "DataHashReputation", 
                "toversion": "3.0.1", 
                "deprecated": true, 
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "DataHashReputation": {
                "name": "DataHashReputation", 
                "deprecated": true, 
                "depends_on": [
                    "file"
                ], 
                "tests": [
                    "No test - deprecated old script"
                ]
            }
        }, 
        {
            "DataIPReputation": {
                "name": "DataIPReputation", 
                "deprecated": true
            }
        }, 
        {
            "DataIPReputation": {
                "name": "DataIPReputation", 
                "toversion": "3.0.1"
            }
        }, 
        {
            "DataURLReputation": {
                "name": "DataURLReputation", 
                "toversion": "3.0.1"
            }
        }, 
        {
            "DataURLReputation": {
                "name": "DataURLReputation", 
                "deprecated": true
            }
        }, 
        {
            "dbbdc2e4-6105-4ee9-8e83-563a4b991a89": {
                "name": "VirustotalIsMalicious", 
                "deprecated": true, 
                "depends_on": [
                    "file"
                ], 
                "script_executions": [
                    "file"
                ], 
                "command_to_integration": {
                    "file": "VirusTotal"
                }
            }
        }, 
        {
            "DBotAverageScore": {
                "name": "DBotAverageScore"
            }
        }, 
        {
            "DBotClosedIncidentsPercentage": {
                "name": "DBotClosedIncidentsPercentage"
            }
        }, 
        {
            "DBotPredictPhishingEvaluation": {
                "name": "DBotPredictPhishingEvaluation", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "DBotPreparePhishingData", 
                    "setIncident"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DBotPredictPhishingLabel": {
                "name": "DBotPredictPhishingLabel", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "DBotPredictTextLabel"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DBotPredictTextLabel": {
                "name": "DBotPredictTextLabel", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "WordTokenizer", 
                    "getList"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DBotPreparePhishingData": {
                "name": "DBotPreparePhishingData", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "WordTokenizer", 
                    "createList", 
                    "getContext", 
                    "getIncidents"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DBotTrainTextClassifier": {
                "name": "DBotTrainTextClassifier", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "createList", 
                    "getFilePath"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DecodeMimeHeader": {
                "name": "DecodeMimeHeader"
            }
        }, 
        {
            "DefaultIncidentClassifier": {
                "name": "DefaultIncidentClassifier"
            }
        }, 
        {
            "DeleteContext": {
                "name": "DeleteContext"
            }
        }, 
        {
            "DemistoCreateList": {
                "name": "DemistoCreateList", 
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "DemistoDeleteIncident": {
                "name": "DemistoDeleteIncident", 
                "deprecated": true, 
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "DemistoGetIncidentTasksByState": {
                "name": "DemistoGetIncidentTasksByState", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "DemistoLinkIncidents": {
                "name": "DemistoLinkIncidents", 
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "DemistoLogsBundle": {
                "name": "DemistoLogsBundle", 
                "depends_on": [
                    "demisto-api-download"
                ]
            }
        }, 
        {
            "DemistoSendInvite": {
                "name": "DemistoSendInvite", 
                "depends_on": [
                    "demisto-api-post", 
                    "demisto-api-get"
                ]
            }
        }, 
        {
            "DemistoUploadFile": {
                "name": "DemistoUploadFile", 
                "depends_on": [
                    "demisto-api-multipart"
                ]
            }
        }, 
        {
            "DemistoUploadFileToIncident": {
                "name": "DemistoUploadFileToIncident", 
                "depends_on": [
                    "demisto-api-multipart"
                ], 
                "tests": [
                    "DemistoUploadFileToIncident Test"
                ]
            }
        }, 
        {
            "dfa728bb-8291-4f8c-8185-53fad210f1b5": {
                "name": "VerifyHumanReadableContains"
            }
        }, 
        {
            "displayhtml": {
                "name": "DisplayHTML"
            }
        }, 
        {
            "DocumentationAutomation": {
                "name": "DocumentationAutomation", 
                "tests": [
                    "DocumentationTest"
                ]
            }
        }, 
        {
            "DomainReputation": {
                "name": "DomainReputation", 
                "script_executions": [
                    "domain"
                ]
            }
        }, 
        {
            "DT": {
                "name": "DT", 
                "tests": [
                    "No tests - script used for testing"
                ]
            }
        }, 
        {
            "DumpJSON": {
                "name": "DumpJSON"
            }
        }, 
        {
            "ed24d63f-4134-49c4-82c0-96885a7a1cc3": {
                "name": "VerifyContextFields", 
                "deprecated": true
            }
        }, 
        {
            "Elasticsearch": {
                "name": "Elasticsearch", 
                "depends_on": [
                    "search"
                ], 
                "script_executions": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "elasticsearch"
                }
            }
        }, 
        {
            "ElasticSearchDisplay": {
                "name": "ElasticSearchDisplay", 
                "depends_on": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "elasticsearch"
                }
            }
        }, 
        {
            "EmailAskUser": {
                "name": "EmailAskUser", 
                "toversion": "3.1.0"
            }
        }, 
        {
            "EmailAskUser": {
                "name": "EmailAskUser", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "EmailAskUser": {
                "name": "EmailAskUser", 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "EmailAskUserResponse": {
                "name": "EmailAskUserResponse"
            }
        }, 
        {
            "EmailDomainSquattingReputation": {
                "name": "EmailDomainSquattingReputation"
            }
        }, 
        {
            "emailFieldTriggered": {
                "name": "emailFieldTriggered"
            }
        }, 
        {
            "EmailReputation": {
                "name": "EmailReputation", 
                "script_executions": [
                    "email"
                ]
            }
        }, 
        {
            "EncodeToAscii": {
                "name": "EncodeToAscii"
            }
        }, 
        {
            "EPOCheckLatestDAT": {
                "name": "EPOCheckLatestDAT", 
                "deprecated": true
            }
        }, 
        {
            "EPODetermineRepository": {
                "name": "EPODetermineRepository", 
                "deprecated": true
            }
        }, 
        {
            "EPOFindSystem": {
                "name": "EPOFindSystem", 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EPORepoList": {
                "name": "EPORepoList", 
                "deprecated": true, 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EPORepositoryComplianceCheck": {
                "name": "EPORepositoryComplianceCheck", 
                "deprecated": true, 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EPORetrieveCurrentDATVersion": {
                "name": "EPORetrieveCurrentDATVersion", 
                "deprecated": true, 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EPOUpdateEndpoints": {
                "name": "EPOUpdateEndpoints", 
                "deprecated": true, 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EPOUpdateRepository": {
                "name": "EPOUpdateRepository", 
                "deprecated": true, 
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "EsmExample": {
                "name": "EsmExample", 
                "depends_on": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "esm"
                }
            }
        }, 
        {
            "ExampleJSScript": {
                "name": "ExampleJSScript"
            }
        }, 
        {
            "ExchangeAssignRole": {
                "name": "ExchangeAssignRole"
            }
        }, 
        {
            "ExchangeDeleteIDsFromContext": {
                "name": "ExchangeDeleteIDsFromContext", 
                "deprecated": true, 
                "depends_on": [
                    "ews-delete-items"
                ]
            }
        }, 
        {
            "ExchangeDeleteMail": {
                "name": "ExchangeDeleteMail"
            }
        }, 
        {
            "ExchangeSearch": {
                "name": "ExchangeSearch", 
                "deprecated": true, 
                "depends_on": [
                    "ews-search-mailbox"
                ]
            }
        }, 
        {
            "ExchangeSearchMailbox": {
                "name": "ExchangeSearchMailbox"
            }
        }, 
        {
            "ExifRead": {
                "name": "ExifRead"
            }
        }, 
        {
            "Exists": {
                "name": "Exists"
            }
        }, 
        {
            "ExportToCSV": {
                "name": "ExportToCSV"
            }
        }, 
        {
            "ExposeIncidentOwner": {
                "name": "ExposeIncidentOwner"
            }
        }, 
        {
            "ExposeList": {
                "name": "ExposeList", 
                "deprecated": true
            }
        }, 
        {
            "ExposeModules": {
                "name": "ExposeModules", 
                "deprecated": true
            }
        }, 
        {
            "ExposeUsers": {
                "name": "ExposeUsers", 
                "deprecated": true
            }
        }, 
        {
            "ExtractDomain": {
                "name": "ExtractDomain", 
                "toversion": "3.0.0"
            }
        }, 
        {
            "ExtractDomain": {
                "name": "ExtractDomain"
            }
        }, 
        {
            "ExtractDomainFromURL": {
                "name": "ExtractDomainFromURL", 
                "deprecated": true
            }
        }, 
        {
            "ExtractDomainFromUrlAndEmail": {
                "name": "ExtractDomainFromUrlAndEmail"
            }
        }, 
        {
            "ExtractEmail": {
                "name": "ExtractEmail"
            }
        }, 
        {
            "ExtractHash": {
                "name": "ExtractHash"
            }
        }, 
        {
            "ExtractHTMLTables": {
                "name": "ExtractHTMLTables"
            }
        }, 
        {
            "ExtractIndicatorsFromTextFile": {
                "name": "ExtractIndicatorsFromTextFile", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "extractIndicators", 
                    "getFilePath"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "ExtractIndicatorsFromTextFile": {
                "name": "ExtractIndicatorsFromTextFile", 
                "toversion": "4.0.9", 
                "fromversion": "3.6.0", 
                "script_executions": [
                    "ExtractDomain", 
                    "ExtractEmail", 
                    "ExtractHash", 
                    "ExtractIP", 
                    "ExtractURL", 
                    "getFilePath"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "ExtractIndicatorsFromWordFile": {
                "name": "ExtractIndicatorsFromWordFile", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "extractIndicators", 
                    "getFilePath"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "ExtractIP": {
                "name": "ExtractIP"
            }
        }, 
        {
            "ExtractURL": {
                "name": "ExtractURL"
            }
        }, 
        {
            "f99a85a6-c572-4c3a-8afd-5b4ac539000a": {
                "name": "WhileNotExistLoop", 
                "deprecated": true
            }
        }, 
        {
            "FailedInstances": {
                "name": "FailedInstances", 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "FetchFileD2": {
                "name": "FetchFileD2"
            }
        }, 
        {
            "FetchFromInstance": {
                "name": "FetchFromInstance", 
                "fromversion": "4.0.0", 
                "deprecated": true, 
                "tests": [
                    "No test - cannot create a dummy integration inorder to test that"
                ]
            }
        }, 
        {
            "FileCreateAndUpload": {
                "name": "FileCreateAndUpload"
            }
        }, 
        {
            "FileReputation": {
                "name": "FileReputation", 
                "script_executions": [
                    "file"
                ]
            }
        }, 
        {
            "FilterByList": {
                "name": "FilterByList", 
                "script_executions": [
                    "getList"
                ]
            }
        }, 
        {
            "findIncidentsWithIndicator": {
                "name": "findIncidentsWithIndicator", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "FindSimilarIncidents": {
                "name": "FindSimilarIncidents", 
                "script_executions": [
                    "getContext"
                ]
            }
        }, 
        {
            "FindSimilarIncidentsByText": {
                "name": "FindSimilarIncidentsByText"
            }
        }, 
        {
            "FireEyeDetonateFile": {
                "name": "FireEyeDetonateFile", 
                "depends_on": [
                    "fe-submit", 
                    "fe-submit-result", 
                    "fe-submit-status"
                ], 
                "script_executions": [
                    "IsIntegrationAvailable"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "FPDeleteRule": {
                "name": "FPDeleteRule", 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "FPSetRule": {
                "name": "FPSetRule", 
                "depends_on": [
                    "ssh"
                ], 
                "script_executions": [
                    "ssh"
                ]
            }
        }, 
        {
            "GenerateEmail": {
                "name": "GenerateEmail"
            }
        }, 
        {
            "GenerateImageFileEntry": {
                "name": "GenerateImageFileEntry"
            }
        }, 
        {
            "GenerateInvestigationSummaryReport": {
                "name": "GenerateInvestigationSummaryReport", 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "GenerateIP": {
                "name": "GenerateIP"
            }
        }, 
        {
            "GeneratePassword": {
                "name": "GeneratePassword"
            }
        }, 
        {
            "GenerateRandomString": {
                "name": "GenerateRandomString", 
                "tests": [
                    "RandomStringGenerateTest"
                ]
            }
        }, 
        {
            "GenerateUUID": {
                "name": "GenerateUUID"
            }
        }, 
        {
            "GenericPollingScheduledTask": {
                "name": "GenericPollingScheduledTask"
            }
        }, 
        {
            "GetContextValue": {
                "name": "GetContextValue", 
                "deprecated": true
            }
        }, 
        {
            "GetDuplicatesMl": {
                "name": "GetDuplicatesMl", 
                "fromversion": "3.5.0", 
                "deprecated": true, 
                "script_executions": [
                    "findIndicators", 
                    "getIncidents"
                ]
            }
        }, 
        {
            "GetDuplicatesMlv2": {
                "name": "GetDuplicatesMlv2", 
                "fromversion": "3.5.0", 
                "script_executions": [
                    "findIndicators", 
                    "getIncidents"
                ]
            }
        }, 
        {
            "GetFirstObject": {
                "name": "GetFirstObject"
            }
        }, 
        {
            "GetIndicatorDBotScore": {
                "name": "GetIndicatorDBotScore", 
                "fromversion": "3.5.0", 
                "script_executions": [
                    "getIndicator"
                ]
            }
        }, 
        {
            "getMlFeatures": {
                "name": "getMlFeatures", 
                "fromversion": "3.5.0", 
                "script_executions": [
                    "findIndicators", 
                    "getIncidents"
                ]
            }
        }, 
        {
            "GetStringsDistance": {
                "name": "GetStringsDistance"
            }
        }, 
        {
            "GetTime": {
                "name": "GetTime", 
                "tests": [
                    "GetTime-Test"
                ]
            }
        }, 
        {
            "GoogleappsGetUser": {
                "name": "GoogleappsGetUser", 
                "deprecated": true, 
                "depends_on": [
                    "googleapps-get-user"
                ]
            }
        }, 
        {
            "GoogleappsGetUserRoles": {
                "name": "GoogleappsGetUserRoles", 
                "deprecated": true, 
                "depends_on": [
                    "googleapps-get-user-roles"
                ]
            }
        }, 
        {
            "GoogleappsGmailGetMail": {
                "name": "GoogleappsGmailGetMail", 
                "deprecated": true, 
                "depends_on": [
                    "googleapps-gmail-get-mail"
                ]
            }
        }, 
        {
            "GoogleappsGmailSearch": {
                "name": "GoogleappsGmailSearch", 
                "deprecated": true, 
                "depends_on": [
                    "googleapps-gmail-search"
                ]
            }
        }, 
        {
            "GoogleappsListUsers": {
                "name": "GoogleappsListUsers", 
                "deprecated": true, 
                "depends_on": [
                    "googleapps-list-users"
                ]
            }
        }, 
        {
            "GoogleappsRevokeUserRole": {
                "name": "GoogleappsRevokeUserRole", 
                "depends_on": [
                    "googleapps-revoke-user-role"
                ]
            }
        }, 
        {
            "GoogleAuthURL": {
                "name": "GoogleAuthURL"
            }
        }, 
        {
            "GrrGetFiles": {
                "name": "GrrGetFiles", 
                "depends_on": [
                    "grr_get_files"
                ], 
                "script_executions": [
                    "grr_get_files"
                ]
            }
        }, 
        {
            "GrrGetFlows": {
                "name": "GrrGetFlows", 
                "depends_on": [
                    "grr_get_flows"
                ], 
                "script_executions": [
                    "grr_get_flows"
                ]
            }
        }, 
        {
            "GrrGetHunt": {
                "name": "GrrGetHunt", 
                "depends_on": [
                    "grr_get_hunt"
                ], 
                "script_executions": [
                    "grr_get_hunt"
                ]
            }
        }, 
        {
            "GrrGetHunts": {
                "name": "GrrGetHunts", 
                "depends_on": [
                    "grr_get_hunts"
                ], 
                "script_executions": [
                    "grr_get_hunts"
                ]
            }
        }, 
        {
            "GrrSetFlows": {
                "name": "GrrSetFlows", 
                "depends_on": [
                    "grr_set_flows"
                ], 
                "script_executions": [
                    "grr_set_flows"
                ]
            }
        }, 
        {
            "GrrSetHunts": {
                "name": "GrrSetHunts", 
                "depends_on": [
                    "grr_set_hunts"
                ], 
                "script_executions": [
                    "grr_set_hunts"
                ]
            }
        }, 
        {
            "hideFieldsOnNewIncident": {
                "name": "hideFieldsOnNewIncident", 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "HighlightWords": {
                "name": "HighlightWords", 
                "tests": [
                    "HighlightWords_Test"
                ]
            }
        }, 
        {
            "http": {
                "name": "http", 
                "toversion": "3.1.0"
            }
        }, 
        {
            "http": {
                "name": "http", 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "HTTPListRedirects": {
                "name": "HTTPListRedirects"
            }
        }, 
        {
            "IdentifyAttachedEmail": {
                "name": "IdentifyAttachedEmail", 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "ImpSfListEndpoints": {
                "name": "ImpSfListEndpoints", 
                "depends_on": [
                    "imp-sf-list-endpoints"
                ]
            }
        }, 
        {
            "ImpSfRevokeUnaccessedDevices": {
                "name": "ImpSfRevokeUnaccessedDevices", 
                "depends_on": [
                    "ImpSfSetEndpointStatus", 
                    "ImpSfListEndpoints"
                ], 
                "script_executions": [
                    "ImpSfListEndpoints", 
                    "ImpSfSetEndpointStatus", 
                    "SendEmail"
                ]
            }
        }, 
        {
            "ImpSfScheduleTask": {
                "name": "ImpSfScheduleTask", 
                "depends_on": [
                    "ImpSfRevokeUnaccessedDevices", 
                    "scheduleEntry"
                ], 
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        }, 
        {
            "ImpSfSetEndpointStatus": {
                "name": "ImpSfSetEndpointStatus", 
                "depends_on": [
                    "imp-sf-set-endpoint-status"
                ]
            }
        }, 
        {
            "IncapGetAppInfo": {
                "name": "IncapGetAppInfo", 
                "depends_on": [
                    "incap-get-app-info"
                ]
            }
        }, 
        {
            "IncapGetDomainApproverEmail": {
                "name": "IncapGetDomainApproverEmail", 
                "depends_on": [
                    "incap-get-domain-approver-email"
                ]
            }
        }, 
        {
            "IncapListSites": {
                "name": "IncapListSites", 
                "depends_on": [
                    "incap-list-sites"
                ]
            }
        }, 
        {
            "IncapScheduleTask": {
                "name": "IncapScheduleTask", 
                "depends_on": [
                    "scheduleEntry", 
                    "IncapWhitelistCompliance"
                ], 
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        }, 
        {
            "IncapWhitelistCompliance": {
                "name": "IncapWhitelistCompliance", 
                "depends_on": [
                    "incap-get-domain-approver-email", 
                    "RemoteExec", 
                    "incap-list-sites", 
                    "SendEmail"
                ], 
                "script_executions": [
                    "RemoteExec", 
                    "SendEmail"
                ]
            }
        }, 
        {
            "IncidentAddSystem": {
                "name": "IncidentAddSystem"
            }
        }, 
        {
            "IncidentSet": {
                "name": "IncidentSet", 
                "toversion": "3.5.0", 
                "script_executions": [
                    "setIncident", 
                    "setOwner", 
                    "setPlaybook", 
                    "setStage"
                ]
            }
        }, 
        {
            "IncidentSet": {
                "name": "IncidentSet", 
                "fromversion": "3.5.1", 
                "deprecated": true, 
                "script_executions": [
                    "setIncident", 
                    "setOwner", 
                    "setPlaybook", 
                    "setStage"
                ]
            }
        }, 
        {
            "IncidentToContext": {
                "name": "IncidentToContext", 
                "deprecated": true
            }
        }, 
        {
            "IndicatorMaliciousRatioCalculation": {
                "name": "IndicatorMaliciousRatioCalculation", 
                "fromversion": "3.5.0", 
                "script_executions": [
                    "findIndicators", 
                    "getIncidents"
                ]
            }
        }, 
        {
            "IngestCSV": {
                "name": "IngestCSV", 
                "deprecated": true, 
                "script_executions": [
                    "getEntries", 
                    "getFilePath"
                ]
            }
        }, 
        {
            "InRange": {
                "name": "InRange"
            }
        }, 
        {
            "InviteUser": {
                "name": "InviteUser"
            }
        }, 
        {
            "ip_to_host": {
                "name": "IPToHost"
            }
        }, 
        {
            "IPExtract": {
                "name": "IPExtract", 
                "deprecated": true
            }
        }, 
        {
            "IPInfoQuery": {
                "name": "IPInfoQuery", 
                "deprecated": true, 
                "depends_on": [
                    "ipinfo_field"
                ], 
                "script_executions": [
                    "ip", 
                    "ipinfo_field"
                ]
            }
        }, 
        {
            "IPReputation": {
                "name": "IPReputation", 
                "script_executions": [
                    "ip"
                ]
            }
        }, 
        {
            "IsContextSet": {
                "name": "IsContextSet", 
                "deprecated": true
            }
        }, 
        {
            "IsEmailAddressInternal": {
                "name": "IsEmailAddressInternal"
            }
        }, 
        {
            "isError": {
                "name": "isError"
            }
        }, 
        {
            "IsGreaterThan": {
                "name": "IsGreaterThan"
            }
        }, 
        {
            "IsIntegrationAvailable": {
                "name": "IsIntegrationAvailable"
            }
        }, 
        {
            "IsIPInRanges": {
                "name": "IsIPInRanges"
            }
        }, 
        {
            "IsIPInSubnet": {
                "name": "IsIPInSubnet", 
                "deprecated": true
            }
        }, 
        {
            "IsListExist": {
                "name": "IsListExist", 
                "script_executions": [
                    "getList"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "IsMaliciousIndicatorFound": {
                "name": "IsMaliciousIndicatorFound", 
                "tests": [
                    "Test-IsMaliciousIndicatorFound"
                ]
            }
        }, 
        {
            "IsTrue": {
                "name": "IsTrue"
            }
        }, 
        {
            "IsValueInArray": {
                "name": "IsValueInArray"
            }
        }, 
        {
            "JiraCreateIssue": {
                "name": "JiraCreateIssue", 
                "deprecated": true, 
                "depends_on": [
                    "jira-create-issue"
                ]
            }
        }, 
        {
            "JiraCreateIssue-example": {
                "name": "JiraCreateIssue-example", 
                "depends_on": [
                    "jira-create-issue", 
                    "jira-delete-issue"
                ], 
                "tests": [
                    "JiraCreateIssue-example-test"
                ]
            }
        }, 
        {
            "JiraGetIssue": {
                "name": "JiraGetIssue", 
                "deprecated": true, 
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        }, 
        {
            "JiraIssueAddComment": {
                "name": "JiraIssueAddComment", 
                "deprecated": true, 
                "depends_on": [
                    "jira-issue-add-comment"
                ]
            }
        }, 
        {
            "JiraIssueAddLink": {
                "name": "JiraIssueAddLink", 
                "deprecated": true, 
                "depends_on": [
                    "jira-issue-add-link"
                ]
            }
        }, 
        {
            "JiraIssueQuery": {
                "name": "JiraIssueQuery", 
                "deprecated": true, 
                "depends_on": [
                    "jira-issue-query"
                ]
            }
        }, 
        {
            "JiraIssueUploadFile": {
                "name": "JiraIssueUploadFile", 
                "deprecated": true, 
                "depends_on": [
                    "jira-issue-upload-file"
                ]
            }
        }, 
        {
            "JIRAPrintIssue": {
                "name": "JIRAPrintIssue", 
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        }, 
        {
            "JoinIfSingleElementOnly": {
                "name": "JoinIfSingleElementOnly"
            }
        }, 
        {
            "JSONFileToCSV": {
                "name": "JSONFileToCSV", 
                "script_executions": [
                    "getFilePath"
                ], 
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        }, 
        {
            "JSONtoCSV": {
                "name": "JSONtoCSV", 
                "script_executions": [
                    "getEntry"
                ], 
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        }, 
        {
            "LanguageDetect": {
                "name": "LanguageDetect"
            }
        }, 
        {
            "LCMAcknowledgeHost": {
                "name": "LCMAcknowledgeHost", 
                "depends_on": [
                    "lcm-acknowledge-host"
                ], 
                "script_executions": [
                    "LCMHosts"
                ]
            }
        }, 
        {
            "LCMDetectedEntities": {
                "name": "LCMDetectedEntities", 
                "depends_on": [
                    "lcm-entities"
                ]
            }
        }, 
        {
            "LCMDetectedIndicators": {
                "name": "LCMDetectedIndicators", 
                "depends_on": [
                    "lcm-indicators"
                ]
            }
        }, 
        {
            "LCMHosts": {
                "name": "LCMHosts"
            }
        }, 
        {
            "LCMIndicatorsForEntity": {
                "name": "LCMIndicatorsForEntity", 
                "depends_on": [
                    "lcm-indicatorsforentity"
                ]
            }
        }, 
        {
            "LCMPathFinderScanHost": {
                "name": "LCMPathFinderScanHost", 
                "depends_on": [
                    "lcm-pathfinder-scan"
                ]
            }
        }, 
        {
            "LCMResolveHost": {
                "name": "LCMResolveHost", 
                "depends_on": [
                    "lcm-resolve-host"
                ]
            }
        }, 
        {
            "LCMSetHostComment": {
                "name": "LCMSetHostComment", 
                "depends_on": [
                    "lcm-set-host-comment"
                ], 
                "script_executions": [
                    "LCMHosts"
                ]
            }
        }, 
        {
            "LessThanPercentage": {
                "name": "LessThanPercentage"
            }
        }, 
        {
            "LinkIncidentsWithRetry": {
                "name": "LinkIncidentsWithRetry", 
                "script_executions": [
                    "linkIncidents"
                ]
            }
        }, 
        {
            "listExecutedCommands": {
                "name": "listExecutedCommands"
            }
        }, 
        {
            "LoadJSON": {
                "name": "LoadJSON", 
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        }, 
        {
            "LocateAttachment": {
                "name": "LocateAttachment", 
                "deprecated": true, 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "MaliciousRatioReputation": {
                "name": "MaliciousRatioReputation", 
                "fromversion": "4.0.0", 
                "script_executions": [
                    "findIndicators", 
                    "maliciousRatio"
                ]
            }
        }, 
        {
            "MapValues": {
                "name": "MapValues"
            }
        }, 
        {
            "MarkAsNoteByTag": {
                "name": "MarkAsNoteByTag", 
                "script_executions": [
                    "getEntries", 
                    "markAsNote"
                ]
            }
        }, 
        {
            "MarkRelatedIncidents": {
                "name": "MarkRelatedIncidents"
            }
        }, 
        {
            "MatchRegex": {
                "name": "MatchRegex"
            }
        }, 
        {
            "MathUtil": {
                "name": "MathUtil"
            }
        }, 
        {
            "MattermostAskUser": {
                "name": "MattermostAskUser", 
                "depends_on": [
                    "mattermost-send"
                ], 
                "script_executions": [
                    "addEntitlement"
                ]
            }
        }, 
        {
            "MD5Extract": {
                "name": "MD5Extract", 
                "deprecated": true
            }
        }, 
        {
            "MimecastFindEmail": {
                "name": "MimecastFindEmail", 
                "depends_on": [
                    "mimecast-query"
                ]
            }
        }, 
        {
            "MimecastQuery": {
                "name": "MimecastQuery", 
                "depends_on": [
                    "mimecast-query"
                ]
            }
        }, 
        {
            "misp_download_sample": {
                "name": "misp_download_sample", 
                "deprecated": true, 
                "tests": [
                    "MISP V2 Test"
                ]
            }
        }, 
        {
            "misp_upload_sample": {
                "name": "misp_upload_sample", 
                "deprecated": true, 
                "script_executions": [
                    "getFilePath"
                ], 
                "tests": [
                    "MISP V2 Test"
                ]
            }
        }, 
        {
            "NessusCreateScan": {
                "name": "NessusCreateScan", 
                "deprecated": true, 
                "depends_on": [
                    "scan-create"
                ], 
                "command_to_integration": {
                    "scan-create": "Nessus"
                }
            }
        }, 
        {
            "NessusGetReport": {
                "name": "NessusGetReport", 
                "deprecated": true, 
                "depends_on": [
                    "scan-report-download", 
                    "scan-export", 
                    "scan-export-status"
                ], 
                "command_to_integration": {
                    "scan-report-download": "Nessus", 
                    "scan-export": "Nessus", 
                    "scan-export-status": "Nessus"
                }
            }
        }, 
        {
            "NessusHostDetails": {
                "name": "NessusHostDetails", 
                "deprecated": true, 
                "depends_on": [
                    "scan-host-details"
                ], 
                "command_to_integration": {
                    "scan-host-details": "Nessus"
                }
            }
        }, 
        {
            "NessusLaunchScan": {
                "name": "NessusLaunchScan", 
                "deprecated": true, 
                "depends_on": [
                    "scan-launch"
                ], 
                "command_to_integration": {
                    "scan-launch": "Nessus"
                }
            }
        }, 
        {
            "NessusListScans": {
                "name": "NessusListScans", 
                "deprecated": true, 
                "depends_on": [
                    "scans-list"
                ], 
                "command_to_integration": {
                    "scans-list": "Nessus"
                }
            }
        }, 
        {
            "NessusScanDetails": {
                "name": "NessusScanDetails", 
                "deprecated": true, 
                "depends_on": [
                    "scan-details"
                ], 
                "command_to_integration": {
                    "scan-details": "Nessus"
                }
            }
        }, 
        {
            "NessusScanStatus": {
                "name": "NessusScanStatus", 
                "deprecated": true, 
                "depends_on": [
                    "scan-details"
                ], 
                "command_to_integration": {
                    "scan-details": "Nessus"
                }
            }
        }, 
        {
            "NessusShowEditorTemplates": {
                "name": "NessusShowEditorTemplates", 
                "deprecated": true, 
                "depends_on": [
                    "nessus-get-scans-editors"
                ]
            }
        }, 
        {
            "NetwitnessSAAddEventsToIncident": {
                "name": "NetwitnessSAAddEventsToIncident", 
                "depends_on": [
                    "nw-add-events-to-incident"
                ]
            }
        }, 
        {
            "NetwitnessSACreateIncident": {
                "name": "NetwitnessSACreateIncident", 
                "depends_on": [
                    "nw-create-incident"
                ]
            }
        }, 
        {
            "NetwitnessSAGetAvailableAssignees": {
                "name": "NetwitnessSAGetAvailableAssignees", 
                "depends_on": [
                    "nw-get-available-assignees"
                ]
            }
        }, 
        {
            "NetwitnessSAGetComponents": {
                "name": "NetwitnessSAGetComponents", 
                "depends_on": [
                    "nw-get-components"
                ]
            }
        }, 
        {
            "NetwitnessSAGetEvents": {
                "name": "NetwitnessSAGetEvents", 
                "depends_on": [
                    "nw-get-events"
                ]
            }
        }, 
        {
            "NetwitnessSAUpdateIncident": {
                "name": "NetwitnessSAUpdateIncident", 
                "deprecated": true, 
                "depends_on": [
                    "nw-update-incident"
                ]
            }
        }, 
        {
            "nexpose_create_incidents_from_assets": {
                "name": "NexposeCreateIncidentsFromAssets", 
                "depends_on": [
                    "nexpose-get-asset"
                ], 
                "script_executions": [
                    "getIncidents"
                ]
            }
        }, 
        {
            "NexposeEmailParser": {
                "name": "NexposeEmailParser", 
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "NexposeEmailParserForVuln": {
                "name": "NexposeEmailParserForVuln", 
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "NexposeVulnExtractor": {
                "name": "NexposeVulnExtractor", 
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "O365SearchEmails": {
                "name": "O365SearchEmails", 
                "script_executions": [
                    "D2O365ComplianceSearch", 
                    "D2O365SearchAndDelete"
                ]
            }
        }, 
        {
            "OSQueryBasicQuery": {
                "name": "OSQueryBasicQuery", 
                "depends_on": [
                    "RemoteExec"
                ], 
                "script_executions": [
                    "RemoteExec"
                ]
            }
        }, 
        {
            "OSQueryLoggedInUsers": {
                "name": "OSQueryLoggedInUsers", 
                "depends_on": [
                    "OSQueryBasicQuery"
                ], 
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "OSQueryOpenSockets": {
                "name": "OSQueryOpenSockets", 
                "depends_on": [
                    "OSQueryBasicQuery"
                ], 
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "OSQueryProcesses": {
                "name": "OSQueryProcesses", 
                "depends_on": [
                    "OSQueryBasicQuery"
                ], 
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "OSQueryUsers": {
                "name": "OSQueryUsers", 
                "depends_on": [
                    "OSQueryBasicQuery"
                ], 
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "Osxcollector": {
                "name": "Osxcollector"
            }
        }, 
        {
            "PagerDutyAlertOnIncident": {
                "name": "PagerDutyAlertOnIncident", 
                "depends_on": [
                    "PagerDuty-submit-event"
                ], 
                "tests": [
                    "PagerDuty Test"
                ]
            }
        }, 
        {
            "PagerDutyAssignOnCallUser": {
                "name": "PagerDutyAssignOnCallUser", 
                "depends_on": [
                    "PagerDuty-get-users-on-call-now"
                ]
            }
        }, 
        {
            "PanoramaBlockIP": {
                "name": "PanoramaBlockIP", 
                "deprecated": true, 
                "depends_on": [
                    "panorama"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb", 
                    "blockip_test_playbook"
                ]
            }
        }, 
        {
            "PanoramaCommit": {
                "name": "PanoramaCommit", 
                "deprecated": true, 
                "depends_on": [
                    "panorama"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "PanoramaConfig": {
                "name": "PanoramaConfig", 
                "deprecated": true, 
                "depends_on": [
                    "panorama"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "PanoramaDynamicAddressGroup": {
                "name": "PanoramaDynamicAddressGroup", 
                "deprecated": true, 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "PanoramaMove": {
                "name": "PanoramaMove", 
                "deprecated": true, 
                "depends_on": [
                    "panorama"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "PanoramaPcaps": {
                "name": "PanoramaPcaps", 
                "deprecated": true, 
                "depends_on": [
                    "panorama"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "ParseCSV": {
                "name": "ParseCSV", 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "ParseEmailFile": {
                "name": "ParseEmailFile", 
                "deprecated": true, 
                "script_executions": [
                    "getEntry", 
                    "getFilePath"
                ]
            }
        }, 
        {
            "ParseEmailFiles": {
                "name": "ParseEmailFiles", 
                "script_executions": [
                    "getEntry", 
                    "getFilePath"
                ], 
                "tests": [
                    "ParseEmailFiles-test"
                ]
            }
        }, 
        {
            "ParseEmailHeader": {
                "name": "ParseEmailHeaders", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "ParseExcel": {
                "name": "ParseExcel", 
                "script_executions": [
                    "getFilePath"
                ], 
                "tests": [
                    "ParseExcel-test"
                ]
            }
        }, 
        {
            "ParseJSON": {
                "name": "ParseJSON", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "ParseWordDoc": {
                "name": "ParseWordDoc", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "PCAPMiner": {
                "name": "PCAPMiner", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "PDFUnlocker": {
                "name": "PDFUnlocker", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "PhishingIncident": {
                "name": "PhishingIncident", 
                "script_executions": [
                    "setIncident"
                ]
            }
        }, 
        {
            "Ping": {
                "name": "Ping", 
                "tests": [
                    "Ping Test Playbook"
                ]
            }
        }, 
        {
            "PortListenCheck": {
                "name": "PortListenCheck"
            }
        }, 
        {
            "Print": {
                "name": "Print"
            }
        }, 
        {
            "PrintContext": {
                "name": "PrintContext"
            }
        }, 
        {
            "PrintErrorEntry": {
                "name": "PrintErrorEntry", 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "ProofpointDecodeURL": {
                "name": "ProofpointDecodeURL"
            }
        }, 
        {
            "PTEnrich": {
                "name": "PTEnrich", 
                "depends_on": [
                    "pt-osint", 
                    "pt-whois", 
                    "pt-malware", 
                    "pt-enrichment", 
                    "pt-get-subdomains", 
                    "pt-ssl-cert", 
                    "pt-passive-dns"
                ]
            }
        }, 
        {
            "PublishEntriesToContext": {
                "name": "PublishEntriesToContext"
            }
        }, 
        {
            "PWEventDetails": {
                "name": "PWEventDetails", 
                "deprecated": true, 
                "depends_on": [
                    "pw-event-get"
                ]
            }
        }, 
        {
            "PWEventPcapDownload": {
                "name": "PWEventPcapDownload", 
                "depends_on": [
                    "event-pcap-download"
                ], 
                "command_to_integration": {
                    "event-pcap-download": "ProtectWise"
                }
            }
        }, 
        {
            "PWEventPcapInfo": {
                "name": "PWEventPcapInfo", 
                "deprecated": true, 
                "depends_on": [
                    "event-pcap-info"
                ], 
                "command_to_integration": {
                    "event-pcap-info": "ProtectWise"
                }
            }
        }, 
        {
            "PWEvents": {
                "name": "PWEvents", 
                "deprecated": true, 
                "depends_on": [
                    "search"
                ], 
                "script_executions": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "ProtectWise"
                }
            }
        }, 
        {
            "PWFindEvents": {
                "name": "PWFindEvents", 
                "deprecated": true, 
                "depends_on": [
                    "search"
                ], 
                "script_executions": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "ProtectWise"
                }
            }
        }, 
        {
            "PWObservationDetails": {
                "name": "PWObservationDetails", 
                "deprecated": true, 
                "depends_on": [
                    "pw-observation-get"
                ]
            }
        }, 
        {
            "PWObservationPcapDownload": {
                "name": "PWObservationPcapDownload", 
                "depends_on": [
                    "observation-pcap-download"
                ], 
                "command_to_integration": {
                    "observation-pcap-download": "ProtectWise"
                }
            }
        }, 
        {
            "PWObservationPcapInfo": {
                "name": "PWObservationPcapInfo", 
                "deprecated": true, 
                "depends_on": [
                    "observation-pcap-info"
                ], 
                "command_to_integration": {
                    "observation-pcap-info": "ProtectWise"
                }
            }
        }, 
        {
            "PWObservations": {
                "name": "PWObservations", 
                "deprecated": true, 
                "depends_on": [
                    "observation-search"
                ], 
                "command_to_integration": {
                    "observation-search": "ProtectWise"
                }
            }
        }, 
        {
            "PWSensors": {
                "name": "PWSensors", 
                "deprecated": true, 
                "depends_on": [
                    "sensors"
                ], 
                "script_executions": [
                    "sensors"
                ], 
                "command_to_integration": {
                    "sensors": "ProtectWise"
                }
            }
        }, 
        {
            "QRadarClassifier": {
                "name": "QRadarClassifier", 
                "deprecated": true, 
                "depends_on": [
                    "qradar-searches"
                ]
            }
        }, 
        {
            "QRadarFullSearch": {
                "name": "QRadarFullSearch", 
                "deprecated": true, 
                "depends_on": [
                    "qradar-get-search", 
                    "qradar-get-search-results", 
                    "qradar-searches"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "QRadarGetCorrelationLogs": {
                "name": "QRadarGetCorrelationLogs", 
                "depends_on": [
                    "qradar-searches"
                ], 
                "script_executions": [
                    "QRadarFullSearch"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "QRadarGetOffenseCorrelations": {
                "name": "QRadarGetOffenseCorrelations", 
                "depends_on": [
                    "qradar-searches"
                ], 
                "script_executions": [
                    "QRadarFullSearch"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "QrFullSearch": {
                "name": "QrFullSearch", 
                "deprecated": true, 
                "depends_on": [
                    "QrGetSearchResults", 
                    "qr-get-search", 
                    "qr-searches"
                ], 
                "script_executions": [
                    "QrGetSearchResults"
                ]
            }
        }, 
        {
            "QrGetSearch": {
                "name": "QrGetSearch", 
                "deprecated": true, 
                "depends_on": [
                    "qr-get-search"
                ]
            }
        }, 
        {
            "QrGetSearchResults": {
                "name": "QrGetSearchResults", 
                "deprecated": true, 
                "depends_on": [
                    "qr-get-search-results"
                ]
            }
        }, 
        {
            "QrOffenses": {
                "name": "QrOffenses", 
                "deprecated": true, 
                "depends_on": [
                    "qr-offenses"
                ]
            }
        }, 
        {
            "QrSearches": {
                "name": "QrSearches", 
                "deprecated": true, 
                "depends_on": [
                    "qr-searches"
                ]
            }
        }, 
        {
            "QualysCreateIncidentFromReport": {
                "name": "QualysCreateIncidentFromReport", 
                "depends_on": [
                    "qualys-host-list"
                ], 
                "script_executions": [
                    "getIncidents"
                ]
            }
        }, 
        {
            "RaiseError": {
                "name": "RaiseError"
            }
        }, 
        {
            "ReadFile": {
                "name": "ReadFile", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "ReadPDFFile": {
                "name": "ReadPDFFile", 
                "toversion": "4.0.9", 
                "fromversion": "3.6.0", 
                "script_executions": [
                    "getFilePath"
                ], 
                "tests": [
                    "ReadPDFFile-Test"
                ]
            }
        }, 
        {
            "ReadPDFFile": {
                "name": "ReadPDFFile", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "extractIndicators", 
                    "getFilePath"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "RecordedFutureDomainRiskList": {
                "name": "RecordedFutureDomainRiskList", 
                "script_executions": [
                    "createNewIndicator", 
                    "deleteIndicators"
                ], 
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        }, 
        {
            "RecordedFutureHashRiskList": {
                "name": "RecordedFutureHashRiskList", 
                "script_executions": [
                    "createNewIndicator"
                ], 
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        }, 
        {
            "RecordedFutureIPRiskList": {
                "name": "RecordedFutureIPRiskList", 
                "script_executions": [
                    "createNewIndicator", 
                    "deleteIndicators"
                ], 
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        }, 
        {
            "RecordedFutureURLRiskList": {
                "name": "RecordedFutureURLRiskList", 
                "script_executions": [
                    "createNewIndicator", 
                    "deleteIndicators"
                ], 
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        }, 
        {
            "RecordedFutureVulnerabilityRiskList": {
                "name": "RecordedFutureVulnerabilityRiskList", 
                "script_executions": [
                    "createNewIndicator", 
                    "deleteIndicators"
                ], 
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        }, 
        {
            "RegCollectValues": {
                "name": "RegCollectValues"
            }
        }, 
        {
            "RegexGroups": {
                "name": "RegexGroups", 
                "tests": [
                    "RegexGroups Test"
                ]
            }
        }, 
        {
            "RegPathReputationBasicLists": {
                "name": "RegPathReputationBasicLists", 
                "tests": [
                    "RegPathReputationBasicLists_test"
                ]
            }
        }, 
        {
            "RegProbeBasic": {
                "name": "RegProbeBasic"
            }
        }, 
        {
            "RemoteExec": {
                "name": "RemoteExec", 
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "RepopulateFiles": {
                "name": "RepopulateFiles", 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "ResolveShortenedURL": {
                "name": "ResolveShortenedURL", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "ReverseList": {
                "name": "ReverseList"
            }
        }, 
        {
            "RSAArcherManualFetch": {
                "name": "RSAArcherManualFetch", 
                "depends_on": [
                    "archer-manually-fetch-incident"
                ], 
                "script_executions": [
                    "createNewIncident"
                ]
            }
        }, 
        {
            "RunDockerCommand": {
                "name": "RunDockerCommand"
            }
        }, 
        {
            "RunPollingCommand": {
                "name": "RunPollingCommand", 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "RunSqlQuery": {
                "name": "RunSqlQuery", 
                "deprecated": true, 
                "depends_on": [
                    "query"
                ], 
                "script_executions": [
                    "query"
                ]
            }
        }, 
        {
            "SalesforceAskUser": {
                "name": "SalesforceAskUser", 
                "depends_on": [
                    "salesforce-push-comment"
                ], 
                "script_executions": [
                    "addEntitlement"
                ]
            }
        }, 
        {
            "SandboxDetonateFile": {
                "name": "SandboxDetonateFile", 
                "script_executions": [
                    "CuckooDetonateFile", 
                    "CuckooGetReport", 
                    "CuckooTaskStatus", 
                    "IsIntegrationAvailable", 
                    "getEntry"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "SbDownload": {
                "name": "SbDownload", 
                "depends_on": [
                    "sb-download"
                ]
            }
        }, 
        {
            "SbQuery": {
                "name": "SbQuery", 
                "depends_on": [
                    "sb-query"
                ]
            }
        }, 
        {
            "SbQuota": {
                "name": "SbQuota", 
                "depends_on": [
                    "sb-quota"
                ]
            }
        }, 
        {
            "SbUpload": {
                "name": "SbUpload", 
                "depends_on": [
                    "sb-upload"
                ]
            }
        }, 
        {
            "ScheduleCommand": {
                "name": "ScheduleCommand"
            }
        }, 
        {
            "ScheduleGenericPolling": {
                "name": "ScheduleGenericPolling", 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "SCPPullFiles": {
                "name": "SCPPullFiles", 
                "depends_on": [
                    "copy-from"
                ]
            }
        }, 
        {
            "SearchIncidents": {
                "name": "SearchIncidents"
            }
        }, 
        {
            "SendEmail": {
                "name": "SendEmail", 
                "depends_on": [
                    "send-mail"
                ]
            }
        }, 
        {
            "SendEmailOnSLABreach": {
                "name": "SendEmailOnSLABreach", 
                "script_executions": [
                    "getUserByUsername"
                ], 
                "tests": [
                    "No test - Can't test script that triggers on SLA breach. Need a field to trigger it and need a configured mail sender. Also errors aren't accounted."
                ]
            }
        }, 
        {
            "SendEmailToManager": {
                "name": "SendEmailToManager", 
                "fromversion": "3.5.0", 
                "depends_on": [
                    "ad-search", 
                    "send-mail"
                ], 
                "script_executions": [
                    "AdSearch", 
                    "addEntitlement"
                ]
            }
        }, 
        {
            "SendEmailToManager": {
                "name": "SendEmailToManager", 
                "toversion": "3.1.0", 
                "depends_on": [
                    "ad-search", 
                    "send-mail"
                ], 
                "script_executions": [
                    "AdSearch", 
                    "addOneTimeEntitlement"
                ]
            }
        }, 
        {
            "SendMessageToOnlineUsers": {
                "name": "SendMessageToOnlineUsers", 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "SEPCheckOutdatedEndpoints": {
                "name": "SEPCheckOutdatedEndpoints", 
                "depends_on": [
                    "sep-client-content"
                ], 
                "tests": [
                    "No test - postpone for later"
                ]
            }
        }, 
        {
            "ServiceNowCreateIncident": {
                "name": "ServiceNowCreateIncident", 
                "depends_on": [
                    "servicenow-query-table", 
                    "servicenow-create-record"
                ], 
                "command_to_integration": {
                    "servicenow-query-table": "ServiceNow", 
                    "servicenow-create-record": "ServiceNow"
                }, 
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        }, 
        {
            "ServiceNowQueryIncident": {
                "name": "ServiceNowQueryIncident", 
                "depends_on": [
                    "servicenow-query-table"
                ], 
                "command_to_integration": {
                    "servicenow-query-table": "ServiceNow"
                }, 
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        }, 
        {
            "ServiceNowUpdateIncident": {
                "name": "ServiceNowUpdateIncident", 
                "depends_on": [
                    "servicenow-query-table", 
                    "servicenow-update-record"
                ], 
                "command_to_integration": {
                    "servicenow-query-table": "ServiceNow", 
                    "servicenow-update-record": "ServiceNow"
                }, 
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        }, 
        {
            "Set": {
                "name": "Set"
            }
        }, 
        {
            "SetContext": {
                "name": "SetContext", 
                "deprecated": true
            }
        }, 
        {
            "SetDateField": {
                "name": "SetDateField", 
                "script_executions": [
                    "setIncident"
                ]
            }
        }, 
        {
            "SetIncidentCustomFields": {
                "name": "SetIncidentCustomFields", 
                "deprecated": true, 
                "tests": [
                    "No test - script should be phased out of use"
                ]
            }
        }, 
        {
            "SetMultipleValues": {
                "name": "SetMultipleValues"
            }
        }, 
        {
            "SetSeverityByScore": {
                "name": "SetSeverityByScore", 
                "script_executions": [
                    "IncidentSet"
                ]
            }
        }, 
        {
            "ShowOnMap": {
                "name": "ShowOnMap"
            }
        }, 
        {
            "ShowScheduledEntries": {
                "name": "ShowScheduledEntries"
            }
        }, 
        {
            "SlackAskUser": {
                "name": "SlackAskUser", 
                "toversion": "3.1.0", 
                "depends_on": [
                    "slack-send"
                ], 
                "script_executions": [
                    "addOneTimeEntitlement"
                ]
            }
        }, 
        {
            "SlackAskUser": {
                "name": "SlackAskUser", 
                "fromversion": "3.5.0", 
                "depends_on": [
                    "slack-send"
                ], 
                "script_executions": [
                    "addEntitlement"
                ]
            }
        }, 
        {
            "SlackMirror": {
                "name": "SlackMirror", 
                "deprecated": true, 
                "depends_on": [
                    "slack-mirror-investigation"
                ]
            }
        }, 
        {
            "SlackSend": {
                "name": "SlackSend", 
                "deprecated": true, 
                "depends_on": [
                    "slack-send"
                ]
            }
        }, 
        {
            "Sleep": {
                "name": "Sleep"
            }
        }, 
        {
            "SNListTickets": {
                "name": "SNListTickets", 
                "deprecated": true, 
                "depends_on": [
                    "servicenow-incidents-query"
                ]
            }
        }, 
        {
            "SNOpenTicket": {
                "name": "SNOpenTicket", 
                "deprecated": true, 
                "depends_on": [
                    "servicenow-incident-create"
                ]
            }
        }, 
        {
            "SNUpdateTicket": {
                "name": "SNUpdateTicket", 
                "deprecated": true, 
                "depends_on": [
                    "servicenow-incident-update"
                ]
            }
        }, 
        {
            "SplunkEmailParser": {
                "name": "SplunkEmailParser", 
                "depends_on": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        }, 
        {
            "SplunkPySearch": {
                "name": "SplunkPySearch", 
                "deprecated": true, 
                "depends_on": [
                    "splunk-search"
                ]
            }
        }, 
        {
            "SplunkSearch": {
                "name": "SplunkSearch", 
                "deprecated": true, 
                "depends_on": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        }, 
        {
            "SplunkSearchJsonPy": {
                "name": "SplunkSearchJsonPy", 
                "deprecated": true, 
                "depends_on": [
                    "search"
                ], 
                "script_executions": [
                    "search"
                ], 
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        }, 
        {
            "SSDeepReputation": {
                "name": "SSDeepReputation", 
                "script_executions": [
                    "findIndicators", 
                    "getContext", 
                    "similarSsdeep"
                ]
            }
        }, 
        {
            "SsdeepReputationTest": {
                "name": "SsdeepReputationTest", 
                "script_executions": [
                    "createNewIndicator", 
                    "findIndicators"
                ]
            }
        }, 
        {
            "StaticAnalyze": {
                "name": "StaticAnalyze"
            }
        }, 
        {
            "StixParser": {
                "name": "StixParser"
            }
        }, 
        {
            "StopScheduledTask": {
                "name": "StopScheduledTask", 
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        }, 
        {
            "stoptimetoassignonownerchange": {
                "name": "StopTimeToAssignOnOwnerChange", 
                "fromversion": "4.1.0", 
                "script_executions": [
                    "stopTimer"
                ], 
                "tests": [
                    "SLA Scripts - Test"
                ]
            }
        }, 
        {
            "StringContains": {
                "name": "StringContains", 
                "deprecated": true, 
                "tests": [
                    "No test - deprecated, didn't have a test prior"
                ]
            }
        }, 
        {
            "StringContainsArray": {
                "name": "StringContainsArray", 
                "tests": [
                    "StringContainsArray_test"
                ]
            }
        }, 
        {
            "StringLength": {
                "name": "StringLength"
            }
        }, 
        {
            "StringReplace": {
                "name": "StringReplace"
            }
        }, 
        {
            "Strings": {
                "name": "Strings", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }, 
        {
            "StripChars": {
                "name": "StripChars"
            }
        }, 
        {
            "TaniumApprovePendingActions": {
                "name": "TaniumApprovePendingActions", 
                "deprecated": true, 
                "depends_on": [
                    "tn-add-object", 
                    "tn-get-object"
                ]
            }
        }, 
        {
            "TaniumAskQuestion": {
                "name": "TaniumAskQuestion", 
                "deprecated": true, 
                "depends_on": [
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "TaniumAskQuestionComplex": {
                "name": "TaniumAskQuestionComplex", 
                "deprecated": true, 
                "depends_on": [
                    "tn-add-question-complex", 
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "TaniumDeployAction": {
                "name": "TaniumDeployAction", 
                "deprecated": true, 
                "depends_on": [
                    "tn-deploy-package"
                ]
            }
        }, 
        {
            "TaniumFilterComputersByIndexQueryFileDetails": {
                "name": "TaniumFilterComputersByIndexQueryFileDetails", 
                "depends_on": [
                    "tn-ask-manual-question"
                ]
            }
        }, 
        {
            "TaniumFindRunningProcesses": {
                "name": "TaniumFindRunningProcesses", 
                "deprecated": true, 
                "depends_on": [
                    "tn-add-question-complex", 
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "TaniumShowPendingActions": {
                "name": "TaniumShowPendingActions", 
                "deprecated": true, 
                "depends_on": [
                    "tn-get-object"
                ]
            }
        }, 
        {
            "TestCreateIncidents": {
                "name": "TestCreateIncidents", 
                "script_executions": [
                    "createNewIncident"
                ]
            }
        }, 
        {
            "TestCreateTagTextFile": {
                "name": "TestCreateTagTextFile", 
                "script_executions": [
                    "createList"
                ]
            }
        }, 
        {
            "TestCreateWordFile": {
                "name": "TestCreateWordFile"
            }
        }, 
        {
            "TestFormatTableValues": {
                "name": "TestFormatTableValues"
            }
        }, 
        {
            "TestPYCommonServer": {
                "name": "TestPYCommonServer", 
                "tests": [
                    "Test CommonServer"
                ]
            }
        }, 
        {
            "TestXml2JSON": {
                "name": "TestXml2JSON"
            }
        }, 
        {
            "TextFromHTML": {
                "name": "TextFromHTML"
            }
        }, 
        {
            "ticksToTime": {
                "name": "ticksToTime"
            }
        }, 
        {
            "TimeStampToDate": {
                "name": "TimeStampToDate"
            }
        }, 
        {
            "TopMaliciousRatioIndicators": {
                "name": "TopMaliciousRatioIndicators", 
                "fromversion": "4.0.0", 
                "script_executions": [
                    "findIndicators", 
                    "maliciousRatio"
                ]
            }
        }, 
        {
            "ToTable": {
                "name": "ToTable"
            }
        }, 
        {
            "TrendmicroAlertStatus": {
                "name": "TrendmicroAlertStatus", 
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        }, 
        {
            "TrendmicroAntiMalwareEventRetrieve": {
                "name": "TrendmicroAntiMalwareEventRetrieve", 
                "depends_on": [
                    "trendmicro-anti-malware-event-retrieve"
                ]
            }
        }, 
        {
            "TrendMicroClassifier": {
                "name": "TrendMicroClassifier", 
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        }, 
        {
            "TrendMicroGetHostID": {
                "name": "TrendMicroGetHostID", 
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ], 
                "script_executions": [
                    "TrendmicroHostRetrieveAll"
                ]
            }
        }, 
        {
            "TrendMicroGetPolicyID": {
                "name": "TrendMicroGetPolicyID", 
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ], 
                "script_executions": [
                    "TrendmicroSecurityProfileRetrieveAll"
                ]
            }
        }, 
        {
            "TrendmicroHostAntimalwareScan": {
                "name": "TrendmicroHostAntimalwareScan", 
                "depends_on": [
                    "trendmicro-host-antimalware-scan"
                ]
            }
        }, 
        {
            "TrendmicroHostRetrieveAll": {
                "name": "TrendmicroHostRetrieveAll", 
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ]
            }
        }, 
        {
            "TrendmicroSecurityProfileAssignToHost": {
                "name": "TrendmicroSecurityProfileAssignToHost", 
                "depends_on": [
                    "trendmicro-security-profile-assign-to-host"
                ]
            }
        }, 
        {
            "TrendmicroSecurityProfileRetrieveAll": {
                "name": "TrendmicroSecurityProfileRetrieveAll", 
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ]
            }
        }, 
        {
            "TrendmicroSystemEventRetrieve": {
                "name": "TrendmicroSystemEventRetrieve", 
                "depends_on": [
                    "trendmicro-system-event-retrieve"
                ]
            }
        }, 
        {
            "TriagePhishing": {
                "name": "TriagePhishing", 
                "deprecated": true
            }
        }, 
        {
            "UnEscapeIPs": {
                "name": "UnEscapeIPs"
            }
        }, 
        {
            "UnEscapeURLs": {
                "name": "UnEscapeURLs", 
                "tests": [
                    "UnEscapeURLs-Test"
                ]
            }
        }, 
        {
            "UnPackFile": {
                "name": "UnPackFile", 
                "script_executions": [
                    "getEntries", 
                    "getFilePath"
                ]
            }
        }, 
        {
            "UnzipFile": {
                "name": "UnzipFile", 
                "script_executions": [
                    "getEntries", 
                    "getFilePath"
                ], 
                "tests": [
                    "ZipFile-Test"
                ]
            }
        }, 
        {
            "URLDecode": {
                "name": "URLDecode", 
                "tests": [
                    "URLDecode-Test"
                ]
            }
        }, 
        {
            "URLExtract": {
                "name": "URLExtract", 
                "deprecated": true
            }
        }, 
        {
            "URLNumberOfAds": {
                "name": "URLNumberOfAds"
            }
        }, 
        {
            "URLReputation": {
                "name": "URLReputation", 
                "script_executions": [
                    "url"
                ]
            }
        }, 
        {
            "URLSSLVerification": {
                "name": "URLSSLVerification"
            }
        }, 
        {
            "UserEnrichAD": {
                "name": "UserEnrichAD", 
                "depends_on": [
                    "ad-search"
                ], 
                "script_executions": [
                    "ADGetUser"
                ]
            }
        }, 
        {
            "UtilAnyResults": {
                "name": "UtilAnyResults"
            }
        }, 
        {
            "ValidateErrorExistence": {
                "name": "ValidateErrorExistence", 
                "script_executions": [
                    "getEntries"
                ]
            }
        }, 
        {
            "VectraClassifier": {
                "name": "VectraClassifier", 
                "deprecated": true, 
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "VectraDetections": {
                "name": "VectraDetections", 
                "deprecated": true, 
                "depends_on": [
                    "vec-detections"
                ]
            }
        }, 
        {
            "VectraGetDetetctionsById": {
                "name": "VectraGetDetetctionsById", 
                "deprecated": true, 
                "depends_on": [
                    "vec-get-detetctions-by-id"
                ]
            }
        }, 
        {
            "VectraGetHostById": {
                "name": "VectraGetHostById", 
                "deprecated": true, 
                "depends_on": [
                    "vec-get-host-by-id"
                ]
            }
        }, 
        {
            "VectraHealth": {
                "name": "VectraHealth", 
                "deprecated": true, 
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "VectraHosts": {
                "name": "VectraHosts", 
                "deprecated": true, 
                "depends_on": [
                    "vec-hosts"
                ]
            }
        }, 
        {
            "VectraSensors": {
                "name": "VectraSensors", 
                "deprecated": true, 
                "depends_on": [
                    "vec-sensors"
                ]
            }
        }, 
        {
            "VectraSettings": {
                "name": "VectraSettings", 
                "deprecated": true, 
                "depends_on": [
                    "vec-settings"
                ]
            }
        }, 
        {
            "VectraSummary": {
                "name": "VectraSummary", 
                "deprecated": true, 
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "VectraTriage": {
                "name": "VectraTriage", 
                "deprecated": true, 
                "depends_on": [
                    "vec-triage"
                ]
            }
        }, 
        {
            "VerifyTableToMarkDown": {
                "name": "VerifyTableToMarkDown"
            }
        }, 
        {
            "VolApihooks": {
                "name": "VolApihooks"
            }
        }, 
        {
            "Volatility": {
                "name": "Volatility"
            }
        }, 
        {
            "VolConnscan": {
                "name": "VolConnscan"
            }
        }, 
        {
            "VolDlllist": {
                "name": "VolDlllist"
            }
        }, 
        {
            "VolGetProcWithMalNetConn": {
                "name": "VolGetProcWithMalNetConn"
            }
        }, 
        {
            "VolImageinfo": {
                "name": "VolImageinfo"
            }
        }, 
        {
            "VolJson": {
                "name": "VolJson"
            }
        }, 
        {
            "VolLDRModules": {
                "name": "VolLDRModules"
            }
        }, 
        {
            "VolMalfind": {
                "name": "VolMalfind"
            }
        }, 
        {
            "VolMalfindDumpAgent": {
                "name": "VolMalfindDumpAgent"
            }
        }, 
        {
            "VolNetworkConnections": {
                "name": "VolNetworkConnections"
            }
        }, 
        {
            "VolPSList": {
                "name": "VolPSList"
            }
        }, 
        {
            "VolRaw": {
                "name": "VolRaw"
            }
        }, 
        {
            "VolRunCmds": {
                "name": "VolRunCmds"
            }
        }, 
        {
            "WhereFieldEquals": {
                "name": "WhereFieldEquals"
            }
        }, 
        {
            "WhileLoop": {
                "name": "WhileLoop", 
                "deprecated": true
            }
        }, 
        {
            "Whois": {
                "name": "Whois", 
                "deprecated": true, 
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "WhoisSummary": {
                "name": "WhoisSummary", 
                "deprecated": true, 
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "WildfireReport": {
                "name": "WildfireReport", 
                "deprecated": true, 
                "depends_on": [
                    "wildfire-report"
                ]
            }
        }, 
        {
            "WildfireUpload": {
                "name": "WildfireUpload", 
                "deprecated": true, 
                "depends_on": [
                    "wildfire-upload"
                ]
            }
        }, 
        {
            "WordTokenizer": {
                "name": "WordTokenizer", 
                "tests": [
                    "WordTokenizeTest"
                ]
            }
        }, 
        {
            "XBInfo": {
                "name": "XBInfo"
            }
        }, 
        {
            "XBLockouts": {
                "name": "XBLockouts", 
                "depends_on": [
                    "xb-lockouts"
                ]
            }
        }, 
        {
            "XBNotable": {
                "name": "XBNotable", 
                "depends_on": [
                    "xb-notable"
                ]
            }
        }, 
        {
            "XBTimeline": {
                "name": "XBTimeline", 
                "depends_on": [
                    "xb-timeline"
                ]
            }
        }, 
        {
            "XBTriggeredRules": {
                "name": "XBTriggeredRules", 
                "depends_on": [
                    "xb-triggered-rules"
                ]
            }
        }, 
        {
            "XBUser": {
                "name": "XBUser", 
                "depends_on": [
                    "xb-user"
                ]
            }
        }, 
        {
            "ZipFile": {
                "name": "ZipFile", 
                "script_executions": [
                    "getFilePath"
                ]
            }
        }
    ], 
    "playbooks": [
        {
            "access_investigation_-_generic": {
                "name": "Access Investigation - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "ADGetUser", 
                    "EmailAskUser"
                ], 
                "implementing_playbooks": [
                    "IP Enrichment - Generic", 
                    "Account Enrichment - Generic"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "access_investigation_-_qradar": {
                "name": "Access Investigation - QRadar", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "QRadar - Get offense correlations", 
                    "Access Investigation - Generic"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Account Enrichment": {
                "name": "Account Enrichment", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "ADGetUser", 
                    "Exists"
                ]
            }
        }, 
        {
            "Account Enrichment": {
                "name": "Account Enrichment", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "ADGetUser", 
                    "Exists"
                ]
            }
        }, 
        {
            "account_enrichment_-_generic": {
                "name": "Account Enrichment - Generic", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "ADGetUser", 
                    "Exists"
                ]
            }
        }, 
        {
            "add_indicator_to_miner_-_palo_alto_mineMeld": {
                "name": "Add Indicator to Miner - Palo Alto MineMeld", 
                "fromversion": "4.0.0", 
                "command_to_integration": {
                    "minemeld-add-to-miner": "Palo Alto Minemeld"
                }, 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "Archer initiate incident": {
                "name": "Archer initiate incident", 
                "fromversion": "3.5.0", 
                "command_to_integration": {
                    "archer-get-file": "RSA Archer"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Arcsight - Get events related to the Case": {
                "name": "Arcsight - Get events related to the Case", 
                "implementing_scripts": [
                    "IncidentSet", 
                    "Set", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "as-get-security-events", 
                    "as-get-case", 
                    "as-get-case-event-ids"
                ]
            }
        }, 
        {
            "ATD - Detonate File": {
                "name": "ATD - Detonate File", 
                "toversion": "3.6.0", 
                "implementing_scripts": [
                    "Exists"
                ], 
                "implementing_commands": [
                    "detonate-file"
                ]
            }
        }, 
        {
            "ATD - Detonate File": {
                "name": "ATD - Detonate File", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "atd-get-report": "", 
                    "atd-file-upload": "", 
                    "atd-check-status": ""
                }, 
                "tests": [
                    "Test Playbook McAfee ATD", 
                    "Detonate File - Generic Test"
                ]
            }
        }, 
        {
            "block_account_-_generic": {
                "name": "Block Account - Generic", 
                "fromversion": "4.0.0", 
                "command_to_integration": {
                    "ad-disable-account": "activedir"
                }, 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "block_endpoint_-_carbon_black_response": {
                "name": "Block Endpoint - Carbon Black Response", 
                "fromversion": "3.5.0", 
                "command_to_integration": {
                    "cb-sensor-info": "carbonblack", 
                    "cb-quarantine-device": "carbonblack"
                }
            }
        }, 
        {
            "block_file_-_carbon_black_response": {
                "name": "Block File - Carbon Black Response", 
                "fromversion": "4.0.0", 
                "command_to_integration": {
                    "cb-get-hash-blacklist": "", 
                    "cb-block-hash": ""
                }, 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "block_file_-_generic": {
                "name": "Block File - Generic", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "Block File - Carbon Black Response"
                ], 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "block_indicators_-_generic": {
                "name": "Block Indicators - Generic", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "Block URL - Generic", 
                    "Block File - Generic", 
                    "Block IP - Generic", 
                    "Block Account - Generic"
                ], 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "block_ip_-_generic": {
                "name": "Block IP - Generic", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "PanoramaBlockIP"
                ], 
                "implementing_playbooks": [
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ], 
                "command_to_integration": {
                    "zscaler-blacklist-ip": "Zscaler", 
                    "checkpoint-block-ip": ""
                }, 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "block_url_-_generic": {
                "name": "Block URL - Generic", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ], 
                "command_to_integration": {
                    "zscaler-blacklist-url": ""
                }, 
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "Calculate Severity - Indicators DBotScore", 
                    "Calculate Severity - 3rd-party integrations", 
                    "Calculate Severity - Critical assets"
                ]
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "StringContains", 
                    "Exists"
                ]
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Print", 
                    "StringContains", 
                    "Exists"
                ], 
                "tests": [
                    "No test - tested manually"
                ]
            }
        }, 
        {
            "calculate_severity_-_3rd-party_integrations": {
                "name": "Calculate Severity - 3rd-party integrations", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "Set"
                ]
            }
        }, 
        {
            "calculate_severity_-_critical_assets": {
                "name": "Calculate Severity - Critical assets", 
                "toversion": "3.6.1", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "StringContains", 
                    "Set", 
                    "Exists"
                ]
            }
        }, 
        {
            "calculate_severity_-_critical_assets": {
                "name": "Calculate Severity - Critical assets", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "tests": [
                    "calculate_severity_-_critical_assets_-_test"
                ]
            }
        }, 
        {
            "calculate_severity_-_indicators_dbotscore": {
                "name": "Calculate Severity - Indicators DBotScore", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "Set"
                ]
            }
        }, 
        {
            "Carbon Black Rapid IOC Hunting": {
                "name": "Carbon Black Rapid IOC Hunting", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CBFindHash", 
                    "Exists"
                ]
            }
        }, 
        {
            "close_incident_if_duplicate_found": {
                "name": "DeDup incidents", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "FindSimilarIncidents", 
                    "CloseInvestigationAsDuplicate"
                ]
            }
        }, 
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "name": "CrowdStrike Falcon Sandbox - Detonate file", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "command_to_integration": {
                    "crowdstrike-detonate-file": "VxStream"
                }
            }
        }, 
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "name": "CrowdStrike Falcon Sandbox - Detonate file", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "crowdstrike-submit-sample": "VxStream", 
                    "crowdstrike-scan": "VxStream"
                }, 
                "tests": [
                    "VxStream Test", 
                    "detonate_file_-_generic_test"
                ]
            }
        }, 
        {
            "crowdstrike_endpoint_enrichment": {
                "name": "CrowdStrike Endpoint Enrichment", 
                "fromversion": "3.5.0", 
                "command_to_integration": {
                    "cs-device-search": "", 
                    "cs-device-details": ""
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "cve_enrichment_-_generic": {
                "name": "CVE Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "cveReputation"
                ], 
                "command_to_integration": {
                    "cve-search": "CVE Search"
                }
            }
        }, 
        {
            "D2 - Endpoint data collection": {
                "name": "D2 - Endpoint data collection", 
                "implementing_scripts": [
                    "D2ExecuteCommand", 
                    "ActiveUsersD2", 
                    "Exists", 
                    "IncidentAddSystem", 
                    "FetchFileD2", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "dbot_indicator_enrichment_-_generic": {
                "name": "DBot Indicator Enrichment - Generic", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "GetIndicatorDBotScore"
                ]
            }
        }, 
        {
            "DBotCreatePhishingClassifier": {
                "name": "DBot Create Phishing Classifier", 
                "fromversion": "4.1.0", 
                "implementing_scripts": [
                    "DBotTrainTextClassifier", 
                    "Base64ListToFile", 
                    "DBotPredictPhishingEvaluation", 
                    "DBotPreparePhishingData"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "DBotCreatePhishingClassifierJob": {
                "name": "DBot Create Phishing Classifier Job", 
                "fromversion": "4.1.0", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ], 
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        }, 
        {
            "dedup_-_generic": {
                "name": "Dedup - Generic", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "FindSimilarIncidentsByText", 
                    "GetDuplicatesMlv2", 
                    "CloseInvestigationAsDuplicate", 
                    "FindSimilarIncidents"
                ]
            }
        }, 
        {
            "dedup_incidents_-_ml": {
                "name": "DeDup incidents - ML", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Print", 
                    "CloseInvestigationAsDuplicate", 
                    "GetDuplicatesMlv2"
                ], 
                "tests": [
                    "No Test"
                ]
            }
        }, 
        {
            "Demisto_Self-Defense_-_Account_policy_monitoring_playbook": {
                "name": "Demisto Self-Defense - Account policy monitoring playbook", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation"
                ], 
                "command_to_integration": {
                    "TwilioSendSMS": "Twilio", 
                    "slack-send": "slack", 
                    "demisto-api-get": "Demisto REST API"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Detonate File - BitDam": {
                "name": "Detonate File - BitDam", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "bitdam-upload-file": "", 
                    "bitdam-get-verdict": ""
                }, 
                "tests": [
                    "Detonate File - BitDam Test"
                ]
            }
        }, 
        {
            "Detonate File - Cuckoo": {
                "name": "Detonate File - Cuckoo", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Sleep"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "cuckoo-task-screenshot": "", 
                    "cuckoo-get-task-report": "", 
                    "cuckoo-view-task": "", 
                    "cuckoo-create-task-from-file": ""
                }, 
                "tests": [
                    "CuckooTest"
                ]
            }
        }, 
        {
            "Detonate File - Generic": {
                "name": "Detonate File - Generic", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "implementing_playbooks": [
                    "CrowdStrike Falcon Sandbox - Detonate file", 
                    "WildFire - Detonate file"
                ]
            }
        }, 
        {
            "Detonate File - Generic": {
                "name": "Detonate File - Generic", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "CrowdStrike Falcon Sandbox - Detonate file", 
                    "Detonate File - HybridAnalysis", 
                    "ATD - Detonate File", 
                    "WildFire - Detonate file", 
                    "Detonate File - Cuckoo", 
                    "Detonate File - Lastline", 
                    "Detonate File - JoeSecurity", 
                    "Detonate File - SNDBOX", 
                    "Detonate File - ThreatGrid"
                ], 
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        }, 
        {
            "Detonate File - HybridAnalysis": {
                "name": "Detonate File - HybridAnalysis", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "hybrid-analysis-submit-sample": "", 
                    "hybrid-analysis-scan": ""
                }, 
                "tests": [
                    "Detonate File - HybridAnalysis - Test"
                ]
            }
        }, 
        {
            "Detonate File - Lastline": {
                "name": "Detonate File - Lastline", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "lastline-upload-file": "", 
                    "lastline-get-report": "Lastline"
                }, 
                "tests": [
                    "Lastline - testplaybook"
                ]
            }
        }, 
        {
            "Detonate File - SNDBOX": {
                "name": "Detonate File - SNDBOX", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "sndbox-analysis-info": "", 
                    "sndbox-analysis-submit-sample": "", 
                    "sndbox-download-report": ""
                }, 
                "tests": [
                    "Detonate File - SNDBOX - Test"
                ]
            }
        }, 
        {
            "Detonate files": {
                "name": "Detonate files", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Print", 
                    "SandboxDetonateFile", 
                    "Exists"
                ]
            }
        }, 
        {
            "Detonate URL - Cuckoo": {
                "name": "Detonate URL - Cuckoo", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Sleep"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "cuckoo-view-task": "", 
                    "cuckoo-get-task-report": "", 
                    "cuckoo-create-task-from-url": ""
                }, 
                "tests": [
                    "CuckooTest"
                ]
            }
        }, 
        {
            "Detonate URL - Lastline": {
                "name": "Detonate URL - Lastline", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "lastline-get-report": "Lastline", 
                    "lastline-upload-url": "Lastline"
                }, 
                "tests": [
                    "Lastline - testplaybook"
                ]
            }
        }, 
        {
            "Detonate URL - Phish.AI": {
                "name": "Detonate URL - Phish.AI", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "phish-ai-check-status": "", 
                    "phish-ai-scan-url": ""
                }, 
                "tests": [
                    "Test-Detonate URL - Phish.AI"
                ]
            }
        }, 
        {
            "detonate_file_-_threatgrid": {
                "name": "Detonate File - ThreatGrid", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "threat-grid-upload-sample": "", 
                    "threat-grid-get-samples-state": ""
                }, 
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        }, 
        {
            "detonate_file_from_url_-_joesecurity": {
                "name": "Detonate File From URL - JoeSecurity", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "joe-download-report": "Joe Security", 
                    "joe-analysis-submit-sample": "Joe Security"
                }
            }
        }, 
        {
            "detonate_file_from_url_-_wildfire": {
                "name": "Detonate File From URL - WildFire", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "wildfire-upload-file-remote": "WildFire", 
                    "wildfire-report": "WildFire"
                }
            }
        }, 
        {
            "detonate_url_-_crowdstrike": {
                "name": "Detonate URL - CrowdStrike", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "crowdstrike-submit-url": "VxStream", 
                    "crowdstrike-scan": "VxStream"
                }, 
                "tests": [
                    "Test-Detonate URL - Crowdstrike"
                ]
            }
        }, 
        {
            "detonate_url_-_generic": {
                "name": "Detonate URL - Generic", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "Detonate URL - CrowdStrike", 
                    "Detonate URL - JoeSecurity", 
                    "Detonate URL - Cuckoo", 
                    "Detonate URL - Lastline", 
                    "Detonate URL - ThreatGrid", 
                    "Detonate URL - McAfee ATD"
                ], 
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        }, 
        {
            "detonate_url_-_joesecurity": {
                "name": "Detonate URL - JoeSecurity", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "joe-download-report": "Joe Security", 
                    "joe-analysis-submit-url": "Joe Security", 
                    "joe-analysis-info": "Joe Security"
                }
            }
        }, 
        {
            "detonate_url_-_mcafee_atd": {
                "name": "Detonate URL - McAfee ATD", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "atd-get-report": "", 
                    "atd-check-status": "", 
                    "atd-file-upload": ""
                }, 
                "tests": [
                    "Test Playbook McAfee ATD", 
                    "Detonate URL - Generic Test"
                ]
            }
        }, 
        {
            "detonate_url_-_threatgrid": {
                "name": "Detonate URL - ThreatGrid", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "threat-grid-upload-sample": "Threat Grid", 
                    "threat-grid-get-samples-state": "Threat Grid", 
                    "threat-grid-url-to-file": "Threat Grid"
                }, 
                "tests": [
                    "Test-Detonate URL - ThreatGrid"
                ]
            }
        }, 
        {
            "detonatefile_-_joesecurity": {
                "name": "Detonate File - JoeSecurity", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "joe-download-report": "Joe Security", 
                    "joe-analysis-info": "Joe Security", 
                    "joe-analysis-submit-sample": "Joe Security"
                }
            }
        }, 
        {
            "domain_enrichment_generic": {
                "name": "Domain Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DomainReputation"
                ]
            }
        }, 
        {
            "domain_enrichment_generic": {
                "name": "Domain Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "DomainReputation"
                ], 
                "command_to_integration": {
                    "vt-private-get-domain-report": "VirusTotal - Private API"
                }
            }
        }, 
        {
            "email_address_enrichment_-_generic": {
                "name": "Email Address Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "IsEmailAddressInternal", 
                    "EmailReputation", 
                    "ADGetUser", 
                    "Exists", 
                    "EmailDomainSquattingReputation"
                ]
            }
        }, 
        {
            "email_address_enrichment_-_generic": {
                "name": "Email Address Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "IsEmailAddressInternal", 
                    "EmailReputation", 
                    "ADGetUser", 
                    "Exists", 
                    "EmailDomainSquattingReputation"
                ]
            }
        }, 
        {
            "Endpoint data collection": {
                "name": "Endpoint data collection", 
                "implementing_scripts": [
                    "AreValuesEqual"
                ], 
                "implementing_playbooks": [
                    "Sentinel One - Endpoint data collection", 
                    "MAR - Endpoint data collection", 
                    "D2 - Endpoint data collection"
                ]
            }
        }, 
        {
            "endpoint_enrichment_-_generic": {
                "name": "Endpoint Enrichment - Generic", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "EPOFindSystem", 
                    "Exists", 
                    "ADGetComputer"
                ], 
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ], 
                "command_to_integration": {
                    "cylance-protect-get-devices": "Cylance Protect", 
                    "cb-sensor-info": "carbonblack", 
                    "so-agents-query": "sentinelOne"
                }
            }
        }, 
        {
            "Enrich DXL with ATD verdict": {
                "name": "Enrich DXL with ATD verdict", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Exists"
                ], 
                "implementing_playbooks": [
                    "ATD - Detonate File"
                ], 
                "command_to_integration": {
                    "dxl-send-event": "McAfee DXL"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Enrich McAfee DXL using 3rd party sandbox": {
                "name": "Enrich McAfee DXL using 3rd party sandbox", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Exists"
                ], 
                "implementing_playbooks": [
                    "WildFire - Detonate file"
                ], 
                "implementing_commands": [
                    "dxl-send-event"
                ]
            }
        }, 
        {
            "Enrichment Playbook": {
                "name": "Enrichment Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Print", 
                    "FileReputation", 
                    "IPReputation", 
                    "Exists", 
                    "URLReputation"
                ]
            }
        }, 
        {
            "entity_enrichment_generic": {
                "name": "Entity Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "Account Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "Email Address Enrichment - Generic", 
                    "URL Enrichment - Generic", 
                    "File Enrichment - Generic", 
                    "Domain Enrichment - Generic", 
                    "IP Enrichment - Generic"
                ]
            }
        }, 
        {
            "entity_enrichment_generic": {
                "name": "Entity Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_playbooks": [
                    "Account Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "DBot Indicator Enrichment - Generic", 
                    "Email Address Enrichment - Generic", 
                    "URL Enrichment - Generic", 
                    "File Enrichment - Generic", 
                    "Domain Enrichment - Generic", 
                    "IP Enrichment - Generic"
                ]
            }
        }, 
        {
            "extract_indicators_-_generic": {
                "name": "Extract Indicators - Generic", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "ExtractHash", 
                    "ExtractDomain", 
                    "ExtractURL", 
                    "ExtractEmail", 
                    "ExtractIP"
                ]
            }
        }, 
        {
            "extract_indicators_from_file_-_generic": {
                "name": "Extract Indicators From File - Generic", 
                "fromversion": "4.1.0", 
                "implementing_scripts": [
                    "ExtractIndicatorsFromWordFile", 
                    "Set", 
                    "ReadPDFFile", 
                    "ExtractIndicatorsFromTextFile"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "extract_indicators_from_file_-_generic": {
                "name": "Extract Indicators From File - Generic", 
                "toversion": "4.0.9", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "ReadPDFFile", 
                    "Set", 
                    "ExtractIndicatorsFromTextFile"
                ], 
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        }, 
        {
            "Failed Login Playbook With Slack": {
                "name": "Failed Login Playbook With Slack", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "IncidentSet", 
                    "ADExpirePassword", 
                    "SlackAskUser"
                ], 
                "command_to_integration": {
                    "slack-send": "slack"
                }
            }
        }, 
        {
            "File Enrichment - Generic": {
                "name": "File Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "File Enrichment - File reputation", 
                    "File Enrichment - Virus Total Private API"
                ], 
                "command_to_integration": {
                    "cylance-protect-get-threat": "Cylance Protect v2", 
                    "pan-appframework-search-by-file-hash": "Palo Alto AppFramework"
                }
            }
        }, 
        {
            "File Enrichment - Generic": {
                "name": "File Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "FileReputation"
                ]
            }
        }, 
        {
            "file_enrichment_-_file_reputation": {
                "name": "File Enrichment - File reputation", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "FileReputation"
                ]
            }
        }, 
        {
            "file_enrichment_-_virus_total_private_api": {
                "name": "File Enrichment - Virus Total Private API", 
                "fromversion": "3.6.0", 
                "command_to_integration": {
                    "vt-private-check-file-behaviour": "VirusTotal - Private API", 
                    "vt-private-get-file-report": "VirusTotal - Private API"
                }
            }
        }, 
        {
            "GenericPolling": {
                "name": "GenericPolling", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "ScheduleGenericPolling", 
                    "RunPollingCommand", 
                    "PrintErrorEntry"
                ]
            }
        }, 
        {
            "Get File Sample From Hash - Carbon Black Enterprise Response": {
                "name": "Get File Sample From Hash - Carbon Black Enterprise Response", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Exists"
                ], 
                "command_to_integration": {
                    "cb-binary-get": "carbonblack"
                }
            }
        }, 
        {
            "Get File Sample From Hash - Cylance Protect": {
                "name": "Get File Sample From Hash - Cylance Protect", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "http", 
                    "UnzipFile", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "cylance-protect-download-threat": "Cylance Protect"
                }
            }
        }, 
        {
            "Get File Sample From Hash - Generic": {
                "name": "Get File Sample From Hash - Generic", 
                "toversion": "3.1.0", 
                "implementing_playbooks": [
                    "Get File Sample From Hash - Cylance Protect", 
                    "Get File Sample From Hash - Carbon Black Enterprise Response"
                ]
            }
        }, 
        {
            "get_file_sample_by_hash_-_carbon_black_enterprise_Response": {
                "name": "Get File Sample By Hash - Carbon Black Enterprise Response", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Exists"
                ], 
                "command_to_integration": {
                    "cb-binary-get": "carbonblack"
                }
            }
        }, 
        {
            "get_file_sample_by_hash_-_cylance_protect": {
                "name": "Get File Sample By Hash - Cylance Protect", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "http", 
                    "UnzipFile", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "cylance-protect-download-threat": "Cylance Protect v2"
                }
            }
        }, 
        {
            "get_file_sample_by_hash_-_generic": {
                "name": "Get File Sample By Hash - Generic", 
                "fromversion": "3.5.0", 
                "implementing_playbooks": [
                    "Get File Sample By Hash - Cylance Protect", 
                    "Get File Sample By Hash - Carbon Black Enterprise Response"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_carbon_black_enterprise_response": {
                "name": "Get File Sample From Path - Carbon Black Enterprise Response", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "CBLiveGetFile", 
                    "Exists"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_d2": {
                "name": "Get File Sample From Path - D2", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "IncidentAddSystem", 
                    "FetchFileD2"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_generic": {
                "name": "Get File Sample From Path - Generic", 
                "fromversion": "3.5.0", 
                "implementing_playbooks": [
                    "Get File Sample From Path - Carbon Black Enterprise Response", 
                    "Get File Sample From Path - D2"
                ]
            }
        }, 
        {
            "get_original_email_-_ews": {
                "name": "Get Original Email - EWS", 
                "fromversion": 4.0, 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set"
                ], 
                "command_to_integration": {
                    "ews-search-mailbox": "EWS v2", 
                    "ews-get-attachment": "EWS v2", 
                    "ews-get-items": "EWS v2"
                }, 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "get_original_email_-_generic": {
                "name": "Get Original Email - Generic", 
                "fromversion": 4.0, 
                "implementing_playbooks": [
                    "Get Original Email - Gmail", 
                    "Get Original Email - EWS"
                ], 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "get_original_email_-_gmail": {
                "name": "Get Original Email - Gmail", 
                "fromversion": 4.0, 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "gmail-get-attachments": "Gmail", 
                    "gmail-search": "Gmail", 
                    "gmail-get-mail": "Gmail"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Google-Vault-Display-Results": {
                "name": "Google Vault - Display Results", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "PrintErrorEntry"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "gvault-get-drive-results": "", 
                    "gvault-get-groups-results": "", 
                    "gvault-download-results": "", 
                    "gvault-export-status": "", 
                    "gvault-get-mail-results": ""
                }, 
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        }, 
        {
            "Google-Vault-Search-Drive": {
                "name": "Google Vault - Search Drive", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "PrintErrorEntry"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "gvault-create-export-drive": "", 
                    "gvault-get-drive-results": "", 
                    "gvault-export-status": "", 
                    "gvault-download-results": ""
                }, 
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        }, 
        {
            "Google-Vault-Search-Groups": {
                "name": "Google Vault - Search Groups", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "PrintErrorEntry"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "gvault-export-status": "", 
                    "gvault-download-results": "", 
                    "gvault-create-export-groups": "", 
                    "gvault-get-groups-results": ""
                }, 
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        }, 
        {
            "Google-Vault-Search-Mail": {
                "name": "Google Vault - Search Mail", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "PrintErrorEntry"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "gvault-get-mail-results": "", 
                    "gvault-create-export-mail": "", 
                    "gvault-export-status": "", 
                    "gvault-download-results": ""
                }, 
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        }, 
        {
            "Hunt for bad IOCs": {
                "name": "Hunt for bad IOCs", 
                "fromversion": "2.5.0", 
                "implementing_playbooks": [
                    "CrowdStrike Rapid IOC Hunting", 
                    "Carbon Black Rapid IOC Hunting", 
                    "TIE - IOC Hunt", 
                    "Carbon black Protection Rapid IOC Hunting"
                ]
            }
        }, 
        {
            "Incident Enrichment": {
                "name": "Incident Enrichment", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "ExtractURL", 
                    "ExtractHash", 
                    "ExtractIP"
                ], 
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ]
            }
        }, 
        {
            "ip_enrichment_generic": {
                "name": "IP Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "IsIPInRanges", 
                    "IPToHost", 
                    "IPReputation"
                ], 
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ], 
                "command_to_integration": {
                    "vt-private-get-ip-report": "VirusTotal - Private API"
                }
            }
        }, 
        {
            "ip_enrichment_generic": {
                "name": "IP Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "IsIPInRanges", 
                    "IPReputation", 
                    "Exists"
                ]
            }
        }, 
        {
            "malware_investigation-_generic": {
                "name": "Malware Investigation - Generic", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "AssignAnalystToIncident"
                ], 
                "implementing_playbooks": [
                    "Malware Investigation - Generic - Setup", 
                    "Extract Indicators - Generic", 
                    "Calculate Severity - Generic", 
                    "Entity Enrichment - Generic", 
                    "Detonate File - Generic"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "malware_investigation-_generic": {
                "name": "Malware Investigation - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "AssignAnalystToIncident"
                ], 
                "implementing_playbooks": [
                    "Malware Investigation - Generic - Setup", 
                    "Calculate Severity - Generic", 
                    "Entity Enrichment - Generic", 
                    "Detonate File - Generic"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "malware_investigation-_generic_-_setup": {
                "name": "Malware Investigation - Generic - Setup", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Get File Sample From Path - Generic", 
                    "Get File Sample By Hash - Generic", 
                    "Search Endpoints By Hash - Generic"
                ], 
                "tests": [
                    "No test - Deprecated playbook"
                ]
            }
        }, 
        {
            "MAR - Endpoint data collection": {
                "name": "MAR - Endpoint data collection", 
                "implementing_scripts": [
                    "EPOFindSystem", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "mar-search-multiple"
                ]
            }
        }, 
        {
            "Office 365 Search and Delete": {
                "name": "Office 365 Search and Delete", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "ews-o365-remove-compliance-search": "", 
                    "ews-o365-purge-compliance-search-results": "", 
                    "ews-o365-get-compliance-search": "", 
                    "ews-o365-start-compliance-search": ""
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "PanoramaCommitConfiguration": {
                "name": "PanoramaCommitConfiguration", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "panorama-push-to-device-group": "", 
                    "panorama-push-status": "", 
                    "panorama-commit": "", 
                    "panorama-commit-status": ""
                }, 
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic", 
                "fromversion": "4.1.0", 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "Set", 
                    "SendEmail"
                ], 
                "implementing_playbooks": [
                    "Search And Delete Emails - Generic", 
                    "Detonate File - Generic", 
                    "Extract Indicators From File - Generic", 
                    "Entity Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Block Indicators - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "command_to_integration": {
                    "send-mail": ""
                }, 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic", 
                "toversion": "3.5.9", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "AssignAnalystToIncident", 
                    "Set", 
                    "SendEmail"
                ], 
                "implementing_playbooks": [
                    "Detonate File - Generic", 
                    "Extract Indicators - Generic", 
                    "Entity Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Calculate Severity - Generic", 
                    "Email Address Enrichment - Generic"
                ]
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic", 
                "toversion": "4.0.9", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "Set", 
                    "SendEmail"
                ], 
                "implementing_playbooks": [
                    "Search And Delete Emails - Generic", 
                    "Detonate File - Generic", 
                    "Extract Indicators From File - Generic", 
                    "Entity Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Block Indicators - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "command_to_integration": {
                    "send-mail": ""
                }, 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic", 
                "toversion": "3.9.9", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "AssignAnalystToIncident", 
                    "Set", 
                    "SendEmail"
                ], 
                "implementing_playbooks": [
                    "Search And Delete Emails - Generic", 
                    "Detonate File - Generic", 
                    "Extract Indicators From File - Generic", 
                    "Process Email - Generic", 
                    "Entity Enrichment - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "playbook0": {
                "name": "Default", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "TrendMicroClassifier", 
                    "Exists", 
                    "IncidentSet", 
                    "SplunkEmailParser", 
                    "QRadarClassifier", 
                    "MapValues", 
                    "Print", 
                    "VectraClassifier", 
                    "NexposeEmailParser"
                ], 
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ]
            }
        }, 
        {
            "playbook0": {
                "name": "Default", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "AssignAnalystToIncident"
                ], 
                "implementing_playbooks": [
                    "Extract Indicators - Generic", 
                    "Entity Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "playbook1": {
                "name": "Malware Playbook - Manual", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "ExposeModules", 
                    "Autoruns", 
                    "Exists"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "playbook10": {
                "name": "Rapid IOC Hunting Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "ExtractHash", 
                    "Exists", 
                    "ReadFile", 
                    "ExtractIP", 
                    "Print", 
                    "ExtractURL"
                ], 
                "implementing_playbooks": [
                    "Hunt for bad IOCs"
                ]
            }
        }, 
        {
            "playbook11": {
                "name": "McAfee ePO Repository Compliance Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "IncidentSet", 
                    "Sleep", 
                    "AreValuesEqual", 
                    "SendEmail"
                ], 
                "command_to_integration": {
                    "epo-update-repository": "epo", 
                    "epo-get-latest-dat": "epo", 
                    "epo-get-current-dat": "epo"
                }
            }
        }, 
        {
            "playbook12": {
                "name": "McAfee ePO Endpoint Compliance Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "IncidentSet", 
                    "commentsToContext"
                ], 
                "command_to_integration": {
                    "epo-update-client-dat": "epo", 
                    "servicenow-incidents-query": "ServiceNow", 
                    "epo-get-latest-dat": "epo", 
                    "epo-get-current-dat": "epo", 
                    "servicenow-incident-create": "ServiceNow"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "playbook13": {
                "name": "McAfee ePO Endpoint Connectivity Diagnostics Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "commentsToContext", 
                    "Ping"
                ], 
                "command_to_integration": {
                    "servicenow-incident-create": "ServiceNow"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "playbook14": {
                "name": "Checkpoint Firewall Configuration Backup Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "UtilAnyResults", 
                    "SendEmail", 
                    "CPShowBackupStatus", 
                    "CloseInvestigation", 
                    "SNOpenTicket", 
                    "SCPPullFiles", 
                    "CPCreateBackup"
                ]
            }
        }, 
        {
            "playbook15": {
                "name": "Tanium Demo Playbook", 
                "fromversion": "2.5.0", 
                "command_to_integration": {
                    "tn-deploy-package": "Tanium", 
                    "tn-ask-question": "Tanium", 
                    "tn-get-saved-question": "Tanium"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "playbook16": {
                "name": "CrowdStrike Rapid IOC Hunting", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Exists", 
                    "SendEmail"
                ], 
                "command_to_integration": {
                    "cs-device-ran-on": "FalconHost", 
                    "cs-device-search": "FalconHost"
                }
            }
        }, 
        {
            "playbook17": {
                "name": "Carbon black Protection Rapid IOC Hunting", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "CBPFindRule", 
                    "CBPCatalogFindHash", 
                    "Exists"
                ]
            }
        }, 
        {
            "playbook2": {
                "name": "Phishing Playbook - Manual", 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "playbook3": {
                "name": "Ransomware Playbook - Manual", 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "playbook5": {
                "name": "Phishing Playbook - Automated", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "SendEmail", 
                    "CheckSenderDomainDistance", 
                    "CloseInvestigation", 
                    "ExtractIP", 
                    "IsMaliciousIndicatorFound", 
                    "ExtractURL"
                ], 
                "implementing_playbooks": [
                    "Process Email", 
                    "Enrichment Playbook", 
                    "Hunt for bad IOCs", 
                    "Account Enrichment", 
                    "Detonate File - Generic"
                ], 
                "tests": [
                    "No test - Deprecated playbook"
                ]
            }
        }, 
        {
            "playbook5": {
                "name": "Phishing Playbook - Automated", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "SendEmail", 
                    "CheckSenderDomainDistance", 
                    "CloseInvestigation", 
                    "ExtractIP", 
                    "IsMaliciousIndicatorFound", 
                    "ExtractURL"
                ], 
                "implementing_playbooks": [
                    "Process Email", 
                    "Detonate files", 
                    "Hunt for bad IOCs", 
                    "Account Enrichment", 
                    "Enrichment Playbook"
                ]
            }
        }, 
        {
            "playbook7": {
                "name": "Hunting C&C Communication Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "IsIntegrationAvailable", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "slack-send": "slack", 
                    "ExposeModules": "ExposeModules"
                }
            }
        }, 
        {
            "playbook8": {
                "name": "Lost / Stolen Device Playbook", 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Process Email": {
                "name": "Process Email", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "ParseEmailFiles"
                ]
            }
        }, 
        {
            "process_email_-_add_custom_fields": {
                "name": "Process Email - Add custom fields", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "IncidentSet"
                ]
            }
        }, 
        {
            "process_email_-_ews": {
                "name": "Process Email - EWS", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "command_to_integration": {
                    "ews-get-attachment": "EWS v2"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic", 
                "toversion": "3.6.0", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "ParseEmailFiles"
                ], 
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                }, 
                "tests": [
                    "Phishing test - attachment", 
                    "Phishing test - Inline"
                ]
            }
        }, 
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic", 
                "toversion": "3.5.9", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "ParseEmailFiles"
                ], 
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                }
            }
        }, 
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set", 
                    "Exists", 
                    "ParseEmailFiles"
                ], 
                "implementing_playbooks": [
                    "Get Original Email - Generic"
                ], 
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "QRadar - Get offense correlations ": {
                "name": "QRadar - Get offense correlations ", 
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "QRadarGetCorrelationLogs", 
                    "QRadarGetOffenseCorrelations", 
                    "Exists"
                ]
            }
        }, 
        {
            "QRadar - Get offense correlations ": {
                "name": "QRadar - Get offense correlations", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "QRadarGetCorrelationLogs", 
                    "QRadarGetOffenseCorrelations"
                ]
            }
        }, 
        {
            "QRadarFullSearch": {
                "name": "QRadarFullSearch", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "qradar-get-search": "", 
                    "qradar-get-search-results": "", 
                    "qradar-searches": ""
                }, 
                "tests": [
                    "test_Qradar"
                ]
            }
        }, 
        {
            "scan_assets_nexpose": {
                "name": "Scan Assets - Nexpose", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "nexpose-start-assets-scan": "Rapid7 Nexpose", 
                    "nexpose-get-scan": "Rapid7 Nexpose"
                }
            }
        }, 
        {
            "scan_site_nexpose": {
                "name": "Scan Site - Nexpose", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "nexpose-start-site-scan": "Rapid7 Nexpose", 
                    "nexpose-get-scan": "Rapid7 Nexpose"
                }
            }
        }, 
        {
            "search_and_delete_emails_-_ews": {
                "name": "Search And Delete Emails - EWS", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "BuildEWSQuery"
                ], 
                "command_to_integration": {
                    "ews-search-mailboxes": "EWS v2", 
                    "ews-delete-items": "EWS v2"
                }, 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "search_and_delete_emails_-_generic": {
                "name": "Search And Delete Emails - Generic", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "Search And Delete Emails - EWS"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_protection": {
                "name": "Search Endpoints By Hash - Carbon Black Protection", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "CBPFindRule", 
                    "Set", 
                    "CBPCatalogFindHash", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "cbp-computer-get": "carbonblackprotection"
                }
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_response": {
                "name": "Search Endpoints By Hash - Carbon Black Response", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "CBFindHash"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_crowdstrike": {
                "name": "Search Endpoints By Hash - CrowdStrike", 
                "fromversion": "3.5.0", 
                "command_to_integration": {
                    "cs-device-ran-on": "FalconHost", 
                    "cs-device-details": "FalconHost"
                }
            }
        }, 
        {
            "search_endpoints_by_hash_-_generic": {
                "name": "Search Endpoints By Hash - Generic", 
                "fromversion": "3.5.0", 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Response", 
                    "Search Endpoints By Hash - CrowdStrike", 
                    "Search Endpoints By Hash - TIE", 
                    "Search Endpoints By Hash - Carbon Black Protection"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_tie": {
                "name": "Search Endpoints By Hash - TIE", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "EPOFindSystem"
                ], 
                "command_to_integration": {
                    "tie-file-references": "McAfee Threat Intelligence Exchange"
                }
            }
        }, 
        {
            "Sentinel One - Endpoint data collection": {
                "name": "Sentinel One - Endpoint data collection", 
                "implementing_scripts": [
                    "Print", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "so-agents-query", 
                    "so-get-agent-processes"
                ]
            }
        }, 
        {
            "tenable-sc-scan": {
                "name": "Launch Scan - Tenable.sc", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "tenable-sc-get-scan-report": "Tenable.sc", 
                    "tenable-sc-launch-scan": "Tenable.sc"
                }, 
                "tests": [
                    "tenable-sc-test"
                ]
            }
        }, 
        {
            "Tenable.io Scan": {
                "name": "Tenable.io Scan", 
                "fromversion": "4.0.0", 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "tenable-io-launch-scan": "", 
                    "tenable-io-get-scan-report": "", 
                    "tenable-io-get-scan-status": ""
                }, 
                "tests": [
                    "Tenable.io Scan Test"
                ]
            }
        }, 
        {
            "TIE - IOC Hunt": {
                "name": "TIE - IOC Hunt", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "EPOFindSystem", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "tie-file-references": "McAfee Threat Intelligence Exchange"
                }
            }
        }, 
        {
            "TrendMicro Malware Alert Playbook": {
                "name": "TrendMicro Malware Alert Playbook", 
                "fromversion": "2.5.0", 
                "implementing_scripts": [
                    "TrendMicroGetPolicyID", 
                    "TrendmicroSecurityProfileAssignToHost", 
                    "TrendmicroAntiMalwareEventRetrieve", 
                    "TrendMicroGetHostID"
                ]
            }
        }, 
        {
            "url_enrichment_-_generic": {
                "name": "URL Enrichment - Generic", 
                "toversion": "3.5.1", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "URLSSLVerification", 
                    "Exists", 
                    "URLReputation"
                ], 
                "command_to_integration": {
                    "rasterize": "Rasterize"
                }
            }
        }, 
        {
            "url_enrichment_-_generic": {
                "name": "URL Enrichment - Generic", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "URLSSLVerification", 
                    "Exists", 
                    "URLReputation"
                ], 
                "command_to_integration": {
                    "vt-private-get-url-report": "VirusTotal - Private API", 
                    "rasterize": "Rasterize"
                }
            }
        }, 
        {
            "vulnerability_handling_-_nexpose": {
                "name": "Vulnerability Handling - Nexpose", 
                "fromversion": "3.6.0", 
                "implementing_playbooks": [
                    "CVE Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "command_to_integration": {
                    "nexpose-get-asset-vulnerability": "Rapid7 Nexpose", 
                    "nexpose-get-asset": "Rapid7 Nexpose"
                }, 
                "tests": [
                    "No test - Should review soon"
                ]
            }
        }, 
        {
            "vulnerability_handling_-_qualys": {
                "name": "Vulnerability Handling - Qualys", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "DisplayHTML"
                ], 
                "implementing_playbooks": [
                    "CVE Enrichment - Generic", 
                    "Vulnerability Handling - Qualys - Add custom fields to default layout", 
                    "Endpoint Enrichment - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "command_to_integration": {
                    "qualys-host-list": "Qualys", 
                    "qualys-vulnerability-list": "Qualys"
                }, 
                "tests": [
                    "No test - Should review soon"
                ]
            }
        }, 
        {
            "vulnerability_handling_-_qualys_-_add _ustom_fields_to_default_layout": {
                "name": "Vulnerability Handling - Qualys - Add custom fields to default layout", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "IncidentSet"
                ]
            }
        }, 
        {
            "vulnerability_management_-_nexpose_job": {
                "name": "Vulnerability Management - Nexpose (Job)", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "NexposeCreateIncidentsFromAssets"
                ], 
                "command_to_integration": {
                    "nexpose-create-assets-report": "Rapid7 Nexpose", 
                    "nexpose-search-assets": "Rapid7 Nexpose"
                }
            }
        }, 
        {
            "vulnerability_management_-_qualys_Job": {
                "name": "Vulnerability Management - Qualys (Job)", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "QualysCreateIncidentFromReport", 
                    "Set"
                ], 
                "command_to_integration": {
                    "qualys-report-fetch": "Qualys", 
                    "qualys-report-list": "Qualys"
                }
            }
        }, 
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file", 
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "Exists"
                ], 
                "implementing_commands": [
                    "wildfire-upload", 
                    "wildfire-report"
                ]
            }
        }, 
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "command_to_integration": {
                    "wildfire-report": "WildFire", 
                    "detonate-file": "WildFire"
                }
            }
        }, 
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set"
                ], 
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "command_to_integration": {
                    "wildfire-upload": "WildFire", 
                    "wildfire-report": ""
                }, 
                "tests": [
                    "Wildfire Test"
                ]
            }
        }
    ], 
    "integrations": [
        {
            "AbuseIPDB": {
                "name": "AbuseIPDB", 
                "commands": [
                    "ip", 
                    "abuseipdb-check-cidr-block", 
                    "abuseipdb-report-ip", 
                    "abuseipdb-get-blacklist", 
                    "abuseipdb-get-categories"
                ], 
                "tests": [
                    "AbuseIPDB Test"
                ]
            }
        }, 
        {
            "ActiveMQ": {
                "name": "ActiveMQ", 
                "commands": [
                    "activemq-send", 
                    "activemq-subscribe"
                ], 
                "tests": [
                    "ActiveMQ Test"
                ]
            }
        }, 
        {
            "Aella Star Light": {
                "name": "Aella Star Light", 
                "commands": [
                    "aella-get-event"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Alexa Rank Indicator": {
                "name": "Alexa Rank Indicator", 
                "fromversion": "3.5.0", 
                "commands": [
                    "domain"
                ], 
                "tests": [
                    "Alexa Test Playbook"
                ]
            }
        }, 
        {
            "AlgoSec": {
                "name": "AlgoSec", 
                "commands": [
                    "algosec-get-ticket", 
                    "algosec-create-ticket", 
                    "algosec-get-applications", 
                    "algosec-get-network-object", 
                    "algosec-query"
                ]
            }
        }, 
        {
            "AlienValut OTX": {
                "name": "AlienValut OTX", 
                "toversion": "3.0.1", 
                "commands": [
                    "ip", 
                    "domain", 
                    "ipv6", 
                    "hostname", 
                    "file", 
                    "alienvault-query-file", 
                    "alienvault-search-pulses", 
                    "alienvault-get-pulse-details", 
                    "url"
                ]
            }
        }, 
        {
            "AlienVault OTX": {
                "name": "AlienVault OTX", 
                "fromversion": "3.0.1", 
                "commands": [
                    "ip", 
                    "domain", 
                    "ipv6", 
                    "hostname", 
                    "file", 
                    "alienvault-query-file", 
                    "alienvault-search-pulses", 
                    "alienvault-get-pulse-details", 
                    "url"
                ]
            }
        }, 
        {
            "AlphaSOC Network Behavior Analytics": {
                "name": "AlphaSOC Network Behavior Analytics"
            }
        }, 
        {
            "AlphaSOC Wisdom": {
                "name": "AlphaSOC Wisdom", 
                "commands": [
                    "wisdom-domain-flags", 
                    "wisdom-ip-flags"
                ]
            }
        }, 
        {
            "Amazon Web Services": {
                "name": "Amazon Web Services", 
                "fromversion": "1.6.2", 
                "commands": [
                    "aws-run-instance", 
                    "aws-stop-instance", 
                    "aws-create-image", 
                    "aws-start-instance", 
                    "aws-create-volume-snapshot", 
                    "aws-get-instance-info", 
                    "aws-get-sg-info", 
                    "aws-get-ebs-volume-info"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "AMP": {
                "name": "AMP", 
                "commands": [
                    "amp_get_computers", 
                    "amp_get_computer_by_connector", 
                    "amp_get_computer_trajctory", 
                    "amp_move_computer", 
                    "amp_get_computer_actvity", 
                    "amp_get_events", 
                    "amp_get_event_types", 
                    "amp_get_application_blocking", 
                    "amp_get_file_list_by_guid", 
                    "amp_get_simple_custom_detections", 
                    "amp_get_file_list_files", 
                    "amp_get_file_list_files_by_sha", 
                    "amp_set_file_list_files_by_sha", 
                    "amp_delete_file_list_files_by_sha", 
                    "amp_get_groups", 
                    "amp_get_group", 
                    "amp_set_group_policy", 
                    "amp_get_policies", 
                    "amp_get_policy", 
                    "amp_get_version"
                ]
            }
        }, 
        {
            "Anomali ThreatStream": {
                "name": "Anomali ThreatStream", 
                "commands": [
                    "threatstream-intelligence", 
                    "domain", 
                    "file", 
                    "threatstream-email-reputation", 
                    "ip"
                ]
            }
        }, 
        {
            "ArcSight ESM": {
                "name": "ArcSight ESM", 
                "commands": [
                    "as-get-all-cases", 
                    "as-get-case", 
                    "as-get-matrix-data", 
                    "as-add-entries", 
                    "as-clear-entries", 
                    "as-get-entries", 
                    "as-get-security-events", 
                    "as-get-case-event-ids", 
                    "as-update-case", 
                    "as-get-all-query-viewers", 
                    "as-case-delete"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "ArcSight Logger": {
                "name": "ArcSight Logger", 
                "commands": [
                    "as-search-events", 
                    "as-status", 
                    "as-drilldown", 
                    "as-events", 
                    "as-close", 
                    "as-stop", 
                    "as-search"
                ]
            }
        }, 
        {
            "ArcSight XML": {
                "name": "ArcSight XML", 
                "commands": [
                    "arcsight-update-case", 
                    "arcsight-fetch-xml"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Attivo Botsink": {
                "name": "Attivo Botsink", 
                "commands": [
                    "attivo-check-user", 
                    "attivo-check-host", 
                    "attivo-run-playbook", 
                    "attivo-deploy-decoy", 
                    "attivo-get-events", 
                    "attivo-list-playbooks", 
                    "attivo-list-hosts", 
                    "attivo-list-users"
                ], 
                "tests": [
                    "AttivoBotsinkTest"
                ]
            }
        }, 
        {
            "Autofocus": {
                "name": "Autofocus", 
                "commands": [
                    "autofocus-search-samples", 
                    "autofocus-search-sessions", 
                    "autofocus-session", 
                    "autofocus-sample-analysis", 
                    "file"
                ]
            }
        }, 
        {
            "Awake Security": {
                "name": "Awake Security", 
                "commands": [
                    "awake-query-devices", 
                    "awake-query-activities", 
                    "awake-query-domains", 
                    "awake-pcap-download", 
                    "domain", 
                    "ip", 
                    "email", 
                    "device"
                ], 
                "tests": [
                    "awake_security_test_pb"
                ]
            }
        }, 
        {
            "AWS - CloudTrail": {
                "name": "AWS - CloudTrail", 
                "commands": [
                    "aws-cloudtrail-create-trail", 
                    "aws-cloudtrail-delete-trail", 
                    "aws-cloudtrail-describe-trails", 
                    "aws-cloudtrail-update-trail", 
                    "aws-cloudtrail-start-logging", 
                    "aws-cloudtrail-stop-logging", 
                    "aws-cloudtrail-lookup-events"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "AWS - CloudWatchLogs": {
                "name": "AWS - CloudWatchLogs", 
                "commands": [
                    "aws-logs-create-log-group", 
                    "aws-logs-create-log-stream", 
                    "aws-logs-delete-log-group", 
                    "aws-logs-delete-log-stream", 
                    "aws-logs-filter-log-events", 
                    "aws-logs-describe-log-groups", 
                    "aws-logs-describe-log-streams", 
                    "aws-logs-put-retention-policy", 
                    "aws-logs-delete-retention-policy", 
                    "aws-logs-put-log-events", 
                    "aws-logs-put-metric-filter", 
                    "aws-logs-delete-metric-filter", 
                    "aws-logs-describe-metric-filters"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "AWS - EC2": {
                "name": "AWS - EC2", 
                "commands": [
                    "aws-ec2-describe-instances", 
                    "aws-ec2-describe-images", 
                    "aws-ec2-describe-regions", 
                    "aws-ec2-describe-addresses", 
                    "aws-ec2-describe-snapshots", 
                    "aws-ec2-describe-launch-templates", 
                    "aws-ec2-describe-key-pairs", 
                    "aws-ec2-describe-volumes", 
                    "aws-ec2-describe-vpcs", 
                    "aws-ec2-describe-subnets", 
                    "aws-ec2-describe-security-groups", 
                    "aws-ec2-allocate-address", 
                    "aws-ec2-associate-address", 
                    "aws-ec2-create-snapshot", 
                    "aws-ec2-delete-snapshot", 
                    "aws-ec2-create-image", 
                    "aws-ec2-deregister-image", 
                    "aws-ec2-modify-volume", 
                    "aws-ec2-create-tags", 
                    "aws-ec2-disassociate-address", 
                    "aws-ec2-release-address", 
                    "aws-ec2-start-instances", 
                    "aws-ec2-stop-instances", 
                    "aws-ec2-terminate-instances", 
                    "aws-ec2-create-volume", 
                    "aws-ec2-attach-volume", 
                    "aws-ec2-detach-volume", 
                    "aws-ec2-delete-volume", 
                    "aws-ec2-run-instances", 
                    "aws-ec2-waiter-instance-running", 
                    "aws-ec2-waiter-instance-status-ok", 
                    "aws-ec2-waiter-instance-stopped", 
                    "aws-ec2-waiter-instance-terminated", 
                    "aws-ec2-waiter-image-available", 
                    "aws-ec2-waiter-snapshot_completed", 
                    "aws-ec2-get-latest-ami", 
                    "aws-ec2-create-security-group", 
                    "aws-ec2-delete-security-group", 
                    "aws-ec2-authorize-security-group-ingress-rule", 
                    "aws-ec2-revoke-security-group-ingress-rule", 
                    "aws-ec2-copy-image", 
                    "aws-ec2-copy-snapshot", 
                    "aws-ec2-describe-reserved-instances", 
                    "aws-ec2-monitor-instances", 
                    "aws-ec2-unmonitor-instances", 
                    "aws-ec2-reboot-instances", 
                    "aws-ec2-get-password-data", 
                    "aws-ec2-modify-network-interface-attribute", 
                    "aws-ec2-modify-instance-attribute"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "AWS - GuardDuty": {
                "name": "AWS - GuardDuty", 
                "commands": [
                    "aws-gd-create-detector", 
                    "aws-gd-delete-detector", 
                    "aws-gd-get-detector", 
                    "aws-gd-update-detector", 
                    "aws-gd-create-ip-set", 
                    "aws-gd-delete-ip-set", 
                    "aws-gd-list-detectors", 
                    "aws-gd-update-ip-set", 
                    "aws-gd-get-ip-set", 
                    "aws-gd-list-ip-sets", 
                    "aws-gd-create-threatintel-set", 
                    "aws-gd-delete-threatintel-set", 
                    "aws-gd-get-threatintel-set", 
                    "aws-gd-list-threatintel-sets", 
                    "aws-gd-update-threatintel-set", 
                    "aws-gd-list-findings", 
                    "aws-gd-get-findings", 
                    "aws-gd-create-sample-findings", 
                    "aws-gd-archive-findings", 
                    "aws-gd-unarchive-findings", 
                    "aws-gd-update-findings-feedback"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "AWS - IAM": {
                "name": "AWS - IAM", 
                "commands": [
                    "aws-iam-create-user", 
                    "aws-iam-get-user", 
                    "aws-iam-list-users", 
                    "aws-iam-update-user", 
                    "aws-iam-delete-user", 
                    "aws-iam-update-login-profile", 
                    "aws-iam-create-group", 
                    "aws-iam-list-groups", 
                    "aws-iam-list-groups-for-user", 
                    "aws-iam-add-user-to-group", 
                    "aws-iam-create-access-key", 
                    "aws-iam-update-access-key", 
                    "aws-iam-list-access-keys-for-user", 
                    "aws-iam-list-policies", 
                    "aws-iam-list-roles", 
                    "aws-iam-attach-policy", 
                    "aws-iam-detach-policy", 
                    "aws-iam-delete-login-profile", 
                    "aws-iam-delete-group", 
                    "aws-iam-remove-user-from-group", 
                    "aws-iam-create-login-profile", 
                    "aws-iam-delete-access-key", 
                    "aws-iam-create-instance-profile", 
                    "aws-iam-delete-instance-profile", 
                    "aws-iam-list-instance-profiles", 
                    "aws-iam-add-role-to-instance-profile", 
                    "aws-iam-remove-role-from-instance-profile", 
                    "aws-iam-list-instance-profiles-for-role", 
                    "aws-iam-get-instance-profile", 
                    "aws-iam-get-role", 
                    "aws-iam-delete-role", 
                    "aws-iam-create-role", 
                    "aws-iam-create-policy", 
                    "aws-iam-delete-policy", 
                    "aws-iam-create-policy-version", 
                    "aws-iam-delete-policy-version", 
                    "aws-iam-list-policy-versions", 
                    "aws-iam-get-policy-version", 
                    "aws-iam-set-default-policy-version", 
                    "aws-iam-create-account-alias", 
                    "aws-iam-delete-account-alias"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "AWS - Route53": {
                "name": "AWS - Route53", 
                "commands": [
                    "aws-route53-create-record", 
                    "aws-route53-delete-record", 
                    "aws-route53-list-hosted-zones", 
                    "aws-route53-list-resource-record-sets", 
                    "aws-route53-waiter-resource-record-sets-changed", 
                    "aws-route53-test-dns-answer", 
                    "aws-route53-upsert-record"
                ]
            }
        }, 
        {
            "AWS - S3": {
                "name": "AWS - S3", 
                "commands": [
                    "aws-s3-create-bucket", 
                    "aws-s3-delete-bucket", 
                    "aws-s3-list-buckets", 
                    "aws-s3-get-bucket-policy", 
                    "aws-s3-delete-bucket-policy", 
                    "aws-s3-download-file", 
                    "aws-s3-list-bucket-objects", 
                    "aws-s3-put-bucket-policy", 
                    "aws-s3-upload-file"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "AWS - Security Hub": {
                "name": "AWS - Security Hub", 
                "commands": [
                    "aws-securityhub-get-findings", 
                    "aws-securityhub-get-master-account", 
                    "aws-securityhub-list-members", 
                    "aws-securityhub-enable-security-hub", 
                    "aws-securityhub-disable-security-hub", 
                    "aws-securityhub-enable-import-findings-for-product", 
                    "aws-securityhub-disable-import-findings-for-product", 
                    "aws-securityhub-list-enabled-products-for-import", 
                    "aws-securityhub-update-finding"
                ], 
                "tests": [
                    "No Tests"
                ]
            }
        }, 
        {
            "AWS - SQS": {
                "name": "AWS - SQS", 
                "commands": [
                    "aws-sqs-get-queue-url", 
                    "aws-sqs-list-queues", 
                    "aws-sqs-send-message", 
                    "aws-sqs-create-queue", 
                    "aws-sqs-delete-queue", 
                    "aws-sqs-purge-queue"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "AWS Sagemaker": {
                "name": "AWS Sagemaker", 
                "commands": [
                    "predict-phishing"
                ], 
                "tests": [
                    "Test_Sagemaker"
                ]
            }
        }, 
        {
            "BigFix": {
                "name": "BigFix", 
                "commands": [
                    "bigfix-get-sites", 
                    "bigfix-get-site", 
                    "bigfix-get-patches", 
                    "bigfix-get-endpoints", 
                    "bigfix-get-endpoint", 
                    "bigfix-deploy-patch", 
                    "bigfix-get-patch", 
                    "bigfix-action-delete", 
                    "bigfix-action-status", 
                    "bigfix-action-stop", 
                    "bigfix-query"
                ]
            }
        }, 
        {
            "BitDam": {
                "name": "BitDam", 
                "commands": [
                    "bitdam-upload-file", 
                    "bitdam-get-verdict"
                ], 
                "tests": [
                    "Detonate File - BitDam Test"
                ]
            }
        }, 
        {
            "Blockade.io": {
                "name": "Blockade.io", 
                "commands": [
                    "blockade-get-indicators", 
                    "blockade-add-indicators"
                ]
            }
        }, 
        {
            "Box": {
                "name": "Box", 
                "commands": [
                    "box_get_current_user", 
                    "box_get_users", 
                    "box_update_user", 
                    "box_add_user", 
                    "box_delete_user", 
                    "box_move_folder", 
                    "box_files_get", 
                    "box_initiate", 
                    "box_files_get_info"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Carbon Black Defense": {
                "name": "Carbon Black Defense", 
                "commands": [
                    "cbd-get-devices-status", 
                    "cbd-get-device-status", 
                    "cbd-change-device-status", 
                    "cbd-find-events", 
                    "cbd-find-event", 
                    "cbd-find-processes", 
                    "cbd-get-alert-details", 
                    "cbd-get-policies", 
                    "cbd-get-policy", 
                    "cbd-create-policy", 
                    "cbd-update-policy", 
                    "cbd-delete-policy", 
                    "cbd-add-rule-to-policy", 
                    "cbd-delete-rule-from-policy", 
                    "cbd-update-rule-in-policy", 
                    "cbd-set-policy"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "carbonblack-v2": {
                "name": "carbonblack-v2", 
                "fromversion": "3.6.0", 
                "commands": [
                    "cb-alert", 
                    "cb-binary", 
                    "cb-binary-get", 
                    "cb-block-hash", 
                    "cb-get-hash-blacklist", 
                    "cb-get-process", 
                    "cb-get-processes", 
                    "cb-list-sensors", 
                    "cb-process-events", 
                    "cb-quarantine-device", 
                    "cb-sensor-info", 
                    "cb-unblock-hash", 
                    "cb-unquarantine-device", 
                    "cb-version", 
                    "cb-watchlist-del", 
                    "cb-watchlist-get", 
                    "cb-watchlist-new", 
                    "cb-watchlist-set", 
                    "cb-alert-update", 
                    "cb-watchlist"
                ], 
                "tests": [
                    "CarbonBlackResponseTest"
                ]
            }
        }, 
        {
            "carbonblackliveresponse": {
                "name": "carbonblackliveresponse", 
                "commands": [
                    "cb-archive", 
                    "cb-command-cancel", 
                    "cb-command-info", 
                    "cb-file-delete", 
                    "cb-file-get", 
                    "cb-file-info", 
                    "cb-file-upload", 
                    "cb-keepalive", 
                    "cb-list-commands", 
                    "cb-list-files", 
                    "cb-list-sessions", 
                    "cb-session-close", 
                    "cb-session-create", 
                    "cb-session-create-and-wait", 
                    "cb-session-info", 
                    "cb-process-kill", 
                    "cb-directory-listing", 
                    "cb-process-execute", 
                    "cb-memdeump", 
                    "cb-command-create", 
                    "cb-command-create-and-wait", 
                    "cb-terminate-process", 
                    "cb-file-delete-from-endpoint", 
                    "cb-registry-get-values", 
                    "cb-registry-query-value", 
                    "cb-registry-create-key", 
                    "cb-registry-delete-key", 
                    "cb-registry-delete-value", 
                    "cb-registry-set-value", 
                    "cb-process-list", 
                    "cb-get-file-from-endpoint", 
                    "cb-push-file-to-endpoint"
                ], 
                "tests": [
                    "CarbonBlackLiveResponseTest"
                ]
            }
        }, 
        {
            "carbonblackliveresponse": {
                "name": "carbonblackliveresponse", 
                "toversion": "3.6.0", 
                "commands": [
                    "cb-archive", 
                    "cb-command-cancel", 
                    "cb-command-create", 
                    "cb-command-create-and-wait", 
                    "cb-command-info", 
                    "cb-file-delete", 
                    "cb-file-get", 
                    "cb-file-info", 
                    "cb-file-upload", 
                    "cb-keepalive", 
                    "cb-list-commands", 
                    "cb-list-files", 
                    "cb-list-sessions", 
                    "cb-session-close", 
                    "cb-session-create", 
                    "cb-session-create-and-wait", 
                    "cb-session-info", 
                    "cb-terminate-process"
                ]
            }
        }, 
        {
            "Censys": {
                "name": "Censys", 
                "commands": [
                    "cen-view", 
                    "cen-search"
                ]
            }
        }, 
        {
            "Centreon": {
                "name": "Centreon", 
                "commands": [
                    "centreon-get-host-status", 
                    "centreon-get-service-status"
                ], 
                "tests": [
                    "Centreon-Test-Playbook"
                ]
            }
        }, 
        {
            "Check Point": {
                "name": "Check Point", 
                "commands": [
                    "checkpoint-show-access-rule-base", 
                    "checkpoint-set-rule", 
                    "checkpoint-task-status", 
                    "checkpoint-show-hosts", 
                    "checkpoint-block-ip", 
                    "checkpoint", 
                    "checkpoint-delete-rule"
                ]
            }
        }, 
        {
            "Check Point Sandblast": {
                "name": "Check Point Sandblast", 
                "toversion": "3.1.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download", 
                    "sb-quota", 
                    "sandblast-quota"
                ]
            }
        }, 
        {
            "Check Point Sandblast": {
                "name": "Check Point Sandblast", 
                "fromversion": "3.5.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download", 
                    "sb-quota", 
                    "sandblast-quota"
                ], 
                "tests": [
                    "Sandblast_malicious_test"
                ]
            }
        }, 
        {
            "Check Point Sandblast Appliance": {
                "name": "Check Point Sandblast Appliance", 
                "toversion": "3.1.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download"
                ]
            }
        }, 
        {
            "Check Point Sandblast Appliance": {
                "name": "Check Point Sandblast Appliance", 
                "fromversion": "3.5.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download"
                ]
            }
        }, 
        {
            "CIRCL": {
                "name": "CIRCL", 
                "commands": [
                    "circl-dns-get", 
                    "circl-ssl-list-certificates", 
                    "circl-ssl-query-certificate", 
                    "circl-ssl-get-certificate"
                ], 
                "tests": [
                    "CirclIntegrationTest"
                ]
            }
        }, 
        {
            "Cisco CloudLock": {
                "name": "Cisco CloudLock", 
                "commands": [
                    "cloudlock-get-users", 
                    "cloudlock-get-user-apps", 
                    "cloudlock-get-activities"
                ]
            }
        }, 
        {
            "Cisco Email Security Appliance (IronPort)": {
                "name": "Cisco Email Security Appliance (IronPort)", 
                "commands": [
                    "ironport-report"
                ]
            }
        }, 
        {
            "Cisco Meraki": {
                "name": "Cisco Meraki", 
                "commands": [
                    "meraki-fetch-organizations", 
                    "meraki-get-organization-license-state", 
                    "meraki-fetch-organization-inventory", 
                    "meraki-fetch-networks", 
                    "meraki-fetch-devices", 
                    "meraki-fetch-device-uplink", 
                    "meraki-fetch-ssids", 
                    "meraki-fetch-clients", 
                    "meraki-fetch-firewall-rules", 
                    "meraki-remove-device", 
                    "meraki-get-device", 
                    "meraki-update-device", 
                    "meraki-claim-device", 
                    "meraki-update-firewall-rules"
                ], 
                "tests": [
                    "Cisco-Meraki-Test"
                ]
            }
        }, 
        {
            "Cisco Spark": {
                "name": "Cisco Spark", 
                "commands": [
                    "cisco-spark-list-people", 
                    "cisco-spark-create-person", 
                    "cisco-spark-get-person-details", 
                    "cisco-spark-update-person", 
                    "cisco-spark-delete-person", 
                    "cisco-spark-get-own-details", 
                    "cisco-spark-list-rooms", 
                    "cisco-spark-create-room", 
                    "cisco-spark-get-room-details", 
                    "cisco-spark-update-room", 
                    "cisco-spark-delete-room", 
                    "cisco-spark-list-memberships", 
                    "cisco-spark-create-membership", 
                    "cisco-spark-get-membership-details", 
                    "cisco-spark-update-membership", 
                    "cisco-spark-delete-membership", 
                    "cisco-spark-list-messages", 
                    "cisco-spark-create-message", 
                    "cisco-spark-get-message-details", 
                    "cisco-spark-delete-message", 
                    "cisco-spark-list-teams", 
                    "cisco-spark-create-team", 
                    "cisco-spark-get-team-details", 
                    "cisco-spark-update-team", 
                    "cisco-spark-delete-team", 
                    "cisco-spark-list-team-memberships", 
                    "cisco-spark-create-team-membership", 
                    "cisco-spark-get-team-membership-details", 
                    "cisco-spark-update-team-membership", 
                    "cisco-spark-delete-team-membership", 
                    "cisco-spark-list-webhooks", 
                    "cisco-spark-create-webhook", 
                    "cisco-spark-get-webhook-details", 
                    "cisco-spark-update-webhook", 
                    "cisco-spark-delete-webhook", 
                    "cisco-spark-list-organizations", 
                    "cisco-spark-get-organization-details", 
                    "cisco-spark-list-licenses", 
                    "cisco-spark-get-license-details", 
                    "cisco-spark-list-roles", 
                    "cisco-spark-get-role-details", 
                    "cisco-spark-send-message-to-person", 
                    "cisco-spark-send-message-to-room"
                ]
            }
        }, 
        {
            "Cisco Umbrella Investigate": {
                "name": "Cisco Umbrella Investigate", 
                "commands": [
                    "umbrella-domain-categorization", 
                    "investigate-umbrella-domain-categorization", 
                    "umbrella-domain-co-occurrences", 
                    "investigate-umbrella-domain-co-occurrences", 
                    "umbrella-domain-related", 
                    "investigate-umbrella-domain-related", 
                    "umbrella-domain-security", 
                    "investigate-umbrella-domain-security", 
                    "umbrella-domain-dns-history", 
                    "investigate-umbrella-domain-dns-history", 
                    "umbrella-ip-dns-history", 
                    "investigate-umbrella-ip-dns-history", 
                    "investigate-umbrella-ip-malicious-domains", 
                    "umbrella-ip-malicious-domains", 
                    "umbrella-domain-search", 
                    "investigate-umbrella-domain-search", 
                    "domain", 
                    "umbrella-get-related-domains", 
                    "umbrella-get-domain-classifiers", 
                    "umbrella-get-domain-queryvolume", 
                    "umbrella-get-domain-details", 
                    "umbrella-get-domains-for-email-registrar", 
                    "umbrella-get-domains-for-nameserver", 
                    "umbrella-get-whois-for-domain", 
                    "umbrella-get-malicious-domains-for-ip", 
                    "umbrella-get-domains-using-regex", 
                    "umbrella-get-domain-timeline", 
                    "umbrella-get-ip-timeline", 
                    "umbrella-get-url-timeline"
                ], 
                "tests": [
                    "Cisco Umbrella Test"
                ]
            }
        }, 
        {
            "Cuckoo Sandbox": {
                "name": "Cuckoo Sandbox", 
                "toversion": "3.1.0", 
                "commands": [
                    "ck-file", 
                    "cuckoo-create-task-from-file", 
                    "ck-report", 
                    "cuckoo-get-task-report", 
                    "ck-list", 
                    "cuckoo-list-tasks", 
                    "ck-url", 
                    "cuckoo-create-task-from-url", 
                    "ck-view", 
                    "cuckoo-view-task", 
                    "ck-del", 
                    "cuckoo-delete-task", 
                    "ck-scrshot", 
                    "cuckoo-task-screenshot", 
                    "ck-machines-list", 
                    "cuckoo-machines-list", 
                    "ck-machine-view", 
                    "cuckoo-machine-view"
                ]
            }
        }, 
        {
            "Cuckoo Sandbox": {
                "name": "Cuckoo Sandbox", 
                "fromversion": "3.5.0", 
                "commands": [
                    "ck-file", 
                    "cuckoo-create-task-from-file", 
                    "ck-report", 
                    "cuckoo-get-task-report", 
                    "ck-list", 
                    "cuckoo-list-tasks", 
                    "ck-url", 
                    "cuckoo-create-task-from-url", 
                    "ck-view", 
                    "cuckoo-view-task", 
                    "ck-del", 
                    "cuckoo-delete-task", 
                    "ck-scrshot", 
                    "cuckoo-task-screenshot", 
                    "ck-machines-list", 
                    "cuckoo-machines-list", 
                    "ck-machine-view", 
                    "cuckoo-machine-view"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "CVE Search": {
                "name": "CVE Search", 
                "commands": [
                    "cve-search", 
                    "cve-latest"
                ]
            }
        }, 
        {
            "Cyber Triage": {
                "name": "Cyber Triage", 
                "commands": [
                    "ct-triage-endpoint"
                ]
            }
        }, 
        {
            "CyberArkAIM": {
                "name": "CyberArkAIM", 
                "commands": [
                    "cyber-ark-aim-query", 
                    "list-credentials", 
                    "reset-credentials", 
                    "account-details"
                ]
            }
        }, 
        {
            "Cybereason": {
                "name": "Cybereason", 
                "commands": [
                    "cybereason-query-processes", 
                    "cybereason-is-probe-connected", 
                    "cybereason-query-connections", 
                    "cybereason-isolate-machine", 
                    "cybereason-unisolate-machine", 
                    "cybereason-query-malops", 
                    "cybereason-malop-processes", 
                    "cybereason-add-comment", 
                    "cybereason-update-malop-status", 
                    "cybereason-prevent-file", 
                    "cybereason-unprevent-file", 
                    "cybereason-query-file", 
                    "cybereason-query-domain", 
                    "cybereason-query-user"
                ], 
                "tests": [
                    "Cybereason Test"
                ]
            }
        }, 
        {
            "Cylance Protect": {
                "name": "Cylance Protect", 
                "fromversion": "2.0.1", 
                "commands": [
                    "cylance-protect-get-list", 
                    "cylance-protect-get-devices", 
                    "cylance-protect-get-threats", 
                    "cylance-protect-download-threat", 
                    "cylance-protect-get-threat-details", 
                    "cylance-protect-device-delete", 
                    "cylance-protect-get-device-threats", 
                    "cylance-protect-update-device-threats", 
                    "cylance-protect-delete-hash-from-lists", 
                    "cylance-protect-update-hash-at-lists", 
                    "cylance-protect-upload-threat", 
                    "cylance-protect-get-threated-devices", 
                    "cylance-protect-get-zones", 
                    "cylance-protect-create-zone", 
                    "cylance-protect-update-zone", 
                    "cylance-protect-get-policies", 
                    "cylance-protect-get-policy-details", 
                    "cp-get-list", 
                    "cp-get-devices", 
                    "cp-get-threats", 
                    "cp-download-threat", 
                    "cp-get-threat-details", 
                    "cp-device-delete", 
                    "cp-get-device-threats", 
                    "cp-update-device-threats", 
                    "cp-delete-hash-from-lists", 
                    "cp-update-hash-at-lists", 
                    "cp-upload-threat", 
                    "cp-get-threated-devices", 
                    "cp-get-zones", 
                    "cp-create-zone", 
                    "cp-update-zone", 
                    "cp-get-policies", 
                    "cp-get-policy-details"
                ]
            }
        }, 
        {
            "Cylance Protect v2": {
                "name": "Cylance Protect v2", 
                "commands": [
                    "cylance-protect-get-devices", 
                    "cylance-protect-get-device", 
                    "cylance-protect-update-device", 
                    "cylance-protect-get-device-threats", 
                    "cylance-protect-get-policies", 
                    "cylance-protect-create-zone", 
                    "cylance-protect-get-zones", 
                    "cylance-protect-get-zone", 
                    "cylance-protect-update-zone", 
                    "cylance-protect-get-threat", 
                    "cylance-protect-get-threat-devices", 
                    "cylance-protect-get-indicators-report", 
                    "cylance-protect-get-threats", 
                    "cylance-protect-update-device-threats", 
                    "cylance-protect-get-list", 
                    "cylance-protect-download-threat", 
                    "cylance-protect-add-hash-to-list", 
                    "cylance-protect-delete-hash-from-lists", 
                    "cylance-protect-get-policy-details", 
                    "cylance-protect-delete-devices"
                ], 
                "tests": [
                    "Cylance Protect v2 Test"
                ]
            }
        }, 
        {
            "Cymon": {
                "name": "Cymon", 
                "commands": [
                    "ip", 
                    "domain"
                ]
            }
        }, 
        {
            "Dell Secureworks": {
                "name": "Dell Secureworks", 
                "toversion": "3.5.1", 
                "fromversion": "3.1.0", 
                "commands": [
                    "secure-works-create-ticket", 
                    "secure-works-update-ticket", 
                    "secure-works-close-ticket", 
                    "secure-works-add-worklogs-ticket", 
                    "secure-works-get-ticket-count", 
                    "secure-works-get-ticket", 
                    "secure-works-assign-ticket", 
                    "secure-works-get-tickets-updates", 
                    "secure-works-get-tickets-ids"
                ]
            }
        }, 
        {
            "Dell Secureworks": {
                "name": "Dell Secureworks", 
                "fromversion": "3.6.0", 
                "commands": [
                    "secure-works-create-ticket", 
                    "secure-works-update-ticket", 
                    "secure-works-close-ticket", 
                    "secure-works-add-worklogs-ticket", 
                    "secure-works-get-ticket", 
                    "secure-works-assign-ticket", 
                    "secure-works-get-tickets-updates", 
                    "secure-works-get-close-codes", 
                    "secure-works-get-tickets-ids", 
                    "secure-works-get-ticket-count"
                ], 
                "tests": [
                    "secureworks_test"
                ]
            }
        }, 
        {
            "Demisto Lock": {
                "name": "Demisto Lock", 
                "commands": [
                    "demisto-lock-get", 
                    "demisto-lock-release", 
                    "demisto-lock-info", 
                    "demisto-lock-release-all"
                ]
            }
        }, 
        {
            "Demisto REST API": {
                "name": "Demisto REST API", 
                "commands": [
                    "demisto-api-post", 
                    "demisto-api-get", 
                    "demisto-api-put", 
                    "demisto-api-delete", 
                    "demisto-api-download", 
                    "demisto-api-multipart", 
                    "demisto-delete-incidents"
                ]
            }
        }, 
        {
            "Devo": {
                "name": "Devo", 
                "commands": [
                    "devo-query"
                ], 
                "tests": [
                    "devo_test_playbook"
                ]
            }
        }, 
        {
            "Digital Shadows": {
                "name": "Digital Shadows", 
                "commands": [
                    "ds-get-breach-reviews", 
                    "ds-snapshot-breach-status", 
                    "ds-find-breach-records", 
                    "ds-get-breach-summary", 
                    "ds-find-breach-usernames", 
                    "ds-get-breach", 
                    "ds-get-breach-records", 
                    "ds-find-data-breaches", 
                    "ds-get-incident", 
                    "ds-get-incident-reviews", 
                    "ds-snapshot-incident-review", 
                    "ds-find-incidents-filtered", 
                    "ds-get-incidents-summary", 
                    "ds-get-apt-report", 
                    "ds-get-intelligence-incident", 
                    "ds-get-intelligence-incident-iocs", 
                    "ds-find-intelligence-incidents", 
                    "ds-find-intelligence-incidents-regional", 
                    "ds-get-intelligence-threat", 
                    "ds-get-intelligence-threat-iocs", 
                    "ds-get-intelligence-threat-activity", 
                    "ds-find-intelligence-threats", 
                    "ds-find-intelligence-threats-regional", 
                    "ds-get-port-reviews", 
                    "ds-snapshot-port-review", 
                    "ds-find-ports", 
                    "ds-find-secure-sockets", 
                    "ds-find-vulnerabilities", 
                    "ds-search", 
                    "ds-get-tags"
                ]
            }
        }, 
        {
            "dnstwist": {
                "name": "dnstwist", 
                "commands": [
                    "dnstwist-domain-variations"
                ]
            }
        }, 
        {
            "DomainTools": {
                "name": "DomainTools", 
                "fromversion": "3.0.0", 
                "commands": [
                    "domain", 
                    "domainSearch", 
                    "reverseIP", 
                    "reverseNameServer", 
                    "reverseWhois", 
                    "whois", 
                    "whoisHistory", 
                    "domainProfile"
                ]
            }
        }, 
        {
            "EasyVista": {
                "name": "EasyVista", 
                "commands": [
                    "easy-vista-search"
                ]
            }
        }, 
        {
            "Endgame": {
                "name": "Endgame", 
                "commands": [
                    "endgame-deploy", 
                    "endgame-get-deployment-profiles", 
                    "endgame-get-unmanaged-endpoints", 
                    "endgame-get-endpoint-status", 
                    "endgame-create-sensor-profile", 
                    "endgame-get-investigations", 
                    "endgame-create-investigation", 
                    "endgame-get-sensor", 
                    "endgame-investigation-results", 
                    "endgame-investigation-status"
                ]
            }
        }, 
        {
            "epo": {
                "name": "epo", 
                "commands": [
                    "epo-help", 
                    "epo-get-latest-dat", 
                    "epo-get-current-dat", 
                    "epo-update-client-dat", 
                    "epo-update-repository", 
                    "epo-get-system-tree-group", 
                    "epo-find-systems", 
                    "epo-command", 
                    "epo-advanced-command", 
                    "epo-wakeup-agent", 
                    "epo-apply-tag", 
                    "epo-clear-tag", 
                    "epo-query-table", 
                    "epo-get-tables", 
                    "epo-find-system", 
                    "epo-get-version"
                ], 
                "tests": [
                    "Test Playbook McAfee ePO"
                ]
            }
        }, 
        {
            "EWS": {
                "name": "EWS", 
                "commands": [
                    "ews-get-folder", 
                    "ews-delete-items", 
                    "ews-delete-attachments", 
                    "ews-get-items", 
                    "ews-search-mailbox", 
                    "ews-get-contacts", 
                    "ews-get-searchable-mailboxes", 
                    "ews-search-mailboxes", 
                    "ews-get-attachment", 
                    "ews-find-folders", 
                    "ews-get-attachment-item", 
                    "ews-move-item"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "EWS Mail Sender": {
                "name": "EWS Mail Sender", 
                "commands": [
                    "send-mail"
                ], 
                "tests": [
                    "EWS Mail Sender Test"
                ]
            }
        }, 
        {
            "EWS v2": {
                "name": "EWS v2", 
                "commands": [
                    "ews-get-attachment", 
                    "ews-delete-attachment", 
                    "ews-get-searchable-mailboxes", 
                    "ews-search-mailboxes", 
                    "ews-move-item", 
                    "ews-delete-items", 
                    "ews-search-mailbox", 
                    "ews-get-contacts", 
                    "ews-get-out-of-office", 
                    "ews-recover-messages", 
                    "ews-create-folder", 
                    "ews-mark-item-as-junk", 
                    "ews-find-folders", 
                    "ews-get-items-from-folder", 
                    "ews-get-items", 
                    "ews-move-item-between-mailboxes", 
                    "ews-get-folder", 
                    "ews-o365-start-compliance-search", 
                    "ews-o365-get-compliance-search", 
                    "ews-o365-purge-compliance-search-results", 
                    "ews-o365-remove-compliance-search", 
                    "ews-o365-get-compliance-search-purge-status", 
                    "ews-get-autodiscovery-config", 
                    "ews-expand-group"
                ], 
                "tests": [
                    "pyEWS_Test", 
                    "EWS search-mailbox test"
                ]
            }
        }, 
        {
            "F5 firewall": {
                "name": "F5 firewall", 
                "commands": [
                    "f5-create-policy", 
                    "f5-create-rule", 
                    "f5-list-rules", 
                    "f5-modify-rule", 
                    "f5-del-rule", 
                    "f5-modify-global-policy", 
                    "f5-show-global-policy", 
                    "f5-del-policy", 
                    "f5-list-all-user-sessions"
                ]
            }
        }, 
        {
            "FalconHost": {
                "name": "FalconHost", 
                "fromversion": "2.5.0", 
                "commands": [
                    "cs-upload-ioc", 
                    "cs-get-ioc", 
                    "cs-update-ioc", 
                    "cs-delete-ioc", 
                    "cs-search-iocs", 
                    "cs-device-search", 
                    "cs-device-details", 
                    "cs-device-count-ioc", 
                    "cs-device-ran-on", 
                    "cs-processes-ran-on", 
                    "cs-process-details", 
                    "cs-resolve-detection", 
                    "cs-detection-search", 
                    "cs-detection-details"
                ], 
                "tests": [
                    "CrowdStrike Endpoint Enrichment - Test", 
                    "crowdstrike_falconhost_test"
                ]
            }
        }, 
        {
            "FalconIntel": {
                "name": "FalconIntel", 
                "commands": [
                    "file", 
                    "url", 
                    "domain", 
                    "ip", 
                    "cs-actors", 
                    "cs-indicators", 
                    "cs-reports", 
                    "cs-report-pdf"
                ], 
                "tests": [
                    "CrowdStrike Falcon Intel v2"
                ]
            }
        }, 
        {
            "FalconIntel": {
                "name": "FalconIntel", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "commands": [
                    "file", 
                    "url", 
                    "domain", 
                    "ip", 
                    "cs-actors", 
                    "cs-indicators", 
                    "cs-reports", 
                    "cs-report-pdf"
                ]
            }
        }, 
        {
            "Farsight DNSDB": {
                "name": "Farsight DNSDB", 
                "commands": [
                    "dnsdb-rdata", 
                    "dnsdb-rrset"
                ]
            }
        }, 
        {
            "Fidelis Elevate Network": {
                "name": "Fidelis Elevate Network", 
                "commands": [
                    "fidelis-get-alert", 
                    "fidelis-delete-alert", 
                    "fidelis-get-malware-data", 
                    "fidelis-get-alert-pcap", 
                    "fidelis-get-alert-report", 
                    "fidelis-sandbox-upload", 
                    "fidelis-list-alerts", 
                    "fidelis-upload-pcap", 
                    "fidelis-list-pcap-components", 
                    "fidelis-run-pcap"
                ], 
                "tests": [
                    "Fidelis-Test"
                ]
            }
        }, 
        {
            "fireeye": {
                "name": "fireeye", 
                "toversion": "3.1.0", 
                "fromversion": "3.0.0", 
                "commands": [
                    "fe-report", 
                    "fe-submit-status", 
                    "fe-alert", 
                    "fe-submit-result", 
                    "fe-submit", 
                    "fe-config"
                ]
            }
        }, 
        {
            "fireeye": {
                "name": "fireeye", 
                "fromversion": "3.5.0", 
                "commands": [
                    "fe-report", 
                    "fe-submit-status", 
                    "fe-alert", 
                    "fe-submit-result", 
                    "fe-submit", 
                    "fe-config", 
                    "fe-submit-url", 
                    "fe-submit-url-status", 
                    "fe-submit-url-result"
                ]
            }
        }, 
        {
            "FireEye ETP": {
                "name": "FireEye ETP", 
                "commands": [
                    "fireeye-etp-search-messages", 
                    "fireeye-etp-get-message", 
                    "fireeye-etp-get-alerts", 
                    "fireeye-etp-get-alert"
                ]
            }
        }, 
        {
            "FireEye HX": {
                "name": "FireEye HX", 
                "commands": [
                    "fireeye-hx-host-containment", 
                    "fireeye-hx-cancel-containment", 
                    "fireeye-hx-get-alerts", 
                    "fireeye-hx-suppress-alert", 
                    "fireeye-hx-get-indicators", 
                    "fireeye-hx-get-indicator", 
                    "fireeye-hx-get-host-information", 
                    "fireeye-hx-get-alert", 
                    "fireeye-hx-file-acquisition", 
                    "fireeye-hx-delete-file-acquisition", 
                    "fireeye-hx-data-acquisition", 
                    "fireeye-hx-delete-data-acquisition", 
                    "fireeye-hx-search", 
                    "fireeye-hx-get-host-set-information", 
                    "fireeye-hx-create-indicator", 
                    "fireeye-hx-append-conditions"
                ], 
                "tests": [
                    "FireEye HX Test"
                ]
            }
        }, 
        {
            "FireEye iSIGHT": {
                "name": "FireEye iSIGHT", 
                "commands": [
                    "ip", 
                    "domain", 
                    "file", 
                    "isight-get-report", 
                    "isight-submit-file"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Forcepoint": {
                "name": "Forcepoint", 
                "commands": [
                    "fp-add-category", 
                    "fp-list-categories", 
                    "fp-get-category-detailes", 
                    "fp-add-address-to-category", 
                    "fp-delete-categories", 
                    "fp-delete-address-from-category"
                ]
            }
        }, 
        {
            "FortiGate": {
                "name": "FortiGate", 
                "commands": [
                    "fortigate-get-addresses", 
                    "fortigate-get-service-groups", 
                    "fortigate-update-service-group", 
                    "fortigate-delete-service-group", 
                    "fortigate-get-firewall-service", 
                    "fortigate-create-firewall-service", 
                    "fortigate-get-policy", 
                    "fortigate-update-policy", 
                    "fortigate-create-policy", 
                    "fortigate-move-policy", 
                    "fortigate-delete-policy", 
                    "fortigate-get-address-groups", 
                    "fortigate-update-address-group", 
                    "fortigate-create-address-group", 
                    "fortigate-delete-address-group"
                ], 
                "tests": [
                    "Fortigate Test"
                ]
            }
        }, 
        {
            "Giphy": {
                "name": "Giphy", 
                "commands": [
                    "giphy"
                ]
            }
        }, 
        {
            "Gmail": {
                "name": "Gmail", 
                "commands": [
                    "gmail-delete-user", 
                    "gmail-get-tokens-for-user", 
                    "gmail-get-user", 
                    "gmail-get-user-roles", 
                    "gmail-get-attachments", 
                    "gmail-get-mail", 
                    "gmail-search", 
                    "gmail-search-all-mailboxes", 
                    "gmail-list-users", 
                    "gmail-revoke-user-role", 
                    "gmail-create-user", 
                    "gmail-delete-mail", 
                    "gmail-get-thread", 
                    "gmail-move-mail", 
                    "gmail-move-mail-to-mailbox", 
                    "gmail-add-delete-filter", 
                    "gmail-add-filter"
                ], 
                "tests": [
                    "Gmail Convert Html Test", 
                    "GmailTest"
                ]
            }
        }, 
        {
            "Google Resource Manager": {
                "name": "Google Resource Manager", 
                "commands": [
                    "grm-create-project", 
                    "grm-get-project", 
                    "grm-list-projects", 
                    "grm-update-project", 
                    "grm-search-organizations", 
                    "grm-get-organization", 
                    "grm-delete-project", 
                    "grm-undelete-project"
                ], 
                "tests": [
                    "GoogleResourceManager-Test"
                ]
            }
        }, 
        {
            "google-vault": {
                "name": "google-vault", 
                "commands": [
                    "gvault-create-export-mail", 
                    "gvault-create-matter", 
                    "gvault-create-export-drive", 
                    "gvault-matter-update-state", 
                    "gvault-create-export-groups", 
                    "gvault-create-hold", 
                    "gvault-add-heldAccount", 
                    "gvault-remove-heldAccount", 
                    "gvault-delete-hold", 
                    "gvault-list-matters", 
                    "gvault-get-matter", 
                    "gvault-list-holds", 
                    "gvault-export-status", 
                    "gvault-download-results", 
                    "gvault-get-drive-results", 
                    "gvault-get-mail-results", 
                    "gvault-get-groups-results"
                ], 
                "tests": [
                    "Google-Vault-Generic-Test"
                ]
            }
        }, 
        {
            "GoogleSafeBrowsing": {
                "name": "GoogleSafeBrowsing", 
                "commands": [
                    "url"
                ]
            }
        }, 
        {
            "GRR": {
                "name": "GRR", 
                "commands": [
                    "grr-set-flows", 
                    "grr-get-flows", 
                    "grr-get-files", 
                    "grr-get-hunts", 
                    "grr-get-hunt", 
                    "grr-set-hunts", 
                    "grr-get-clients", 
                    "grr_set_flows", 
                    "grr_get_flows", 
                    "grr_get_files", 
                    "grr_get_hunts", 
                    "grr_get_hunt", 
                    "grr_set_hunts"
                ]
            }
        }, 
        {
            "GuardiCore": {
                "name": "GuardiCore", 
                "toversion": "3.1.0", 
                "commands": [
                    "guardicore-get-incidents", 
                    "guardicore-uncommon-domains", 
                    "guardicore-unresolved-domains", 
                    "guardicore-show-endpoint", 
                    "guardicore-dns-requests", 
                    "guardicore-search-endpoint", 
                    "guardicore-misconfigurations", 
                    "guardicore-get-incident", 
                    "guardicore-get-incident-iocs", 
                    "guardicore-get-incident-events", 
                    "guardicore-get-incident-pcap", 
                    "guardicore-get-incident-attachments", 
                    "guardicore-search-network-log"
                ]
            }
        }, 
        {
            "GuardiCore": {
                "name": "GuardiCore", 
                "fromversion": "3.5.0", 
                "commands": [
                    "guardicore-get-incidents", 
                    "guardicore-uncommon-domains", 
                    "guardicore-unresolved-domains", 
                    "guardicore-show-endpoint", 
                    "guardicore-dns-requests", 
                    "guardicore-search-endpoint", 
                    "guardicore-misconfigurations", 
                    "guardicore-get-incident", 
                    "guardicore-get-incident-iocs", 
                    "guardicore-get-incident-events", 
                    "guardicore-get-incident-pcap", 
                    "guardicore-get-incident-attachments", 
                    "guardicore-search-network-log"
                ]
            }
        }, 
        {
            "Guidance Encase Endpoint": {
                "name": "Guidance Encase Endpoint", 
                "commands": [
                    "encase-copyjob", 
                    "encase-snapshot", 
                    "encase-verifyhash"
                ]
            }
        }, 
        {
            "HashiCorp Vault": {
                "name": "HashiCorp Vault", 
                "commands": [
                    "hashicorp-list-secrets-engines", 
                    "hashicorp-list-secrets", 
                    "hashicorp-get-secret-metadata", 
                    "hashicorp-delete-secret", 
                    "hashicorp-undelete-secret", 
                    "hashicorp-destroy-secret", 
                    "hashicorp-disable-engine", 
                    "hashicorp-enable-engine", 
                    "hashicorp-list-policies", 
                    "hashicorp-get-policy", 
                    "hashicorp-seal-vault", 
                    "hashicorp-unseal-vault", 
                    "hashicorp-configure-engine", 
                    "hashicorp-reset-configuration", 
                    "hashicorp-create-token"
                ], 
                "tests": [
                    "hashicorp_test"
                ]
            }
        }, 
        {
            "Hybrid Analysis": {
                "name": "Hybrid Analysis", 
                "fromversion": "3.6.1", 
                "commands": [
                    "hybrid-analysis-scan", 
                    "hybrid-analysis-submit-sample", 
                    "hybrid-analysis-search", 
                    "hybrid-analysis-detonate-file", 
                    "hybrid-analysis-get-report-status"
                ], 
                "tests": [
                    "Detonate File - HybridAnalysis - Test"
                ]
            }
        }, 
        {
            "IBM Resilient Systems": {
                "name": "IBM Resilient Systems", 
                "commands": [
                    "rs-search-incidents", 
                    "rs-update-incident", 
                    "rs-incidents-get-members", 
                    "rs-get-incident", 
                    "rs-incidents-update-member", 
                    "rs-get-users", 
                    "rs-close-incident", 
                    "rs-create-incident", 
                    "rs-incident-artifacts", 
                    "rs-incident-attachments", 
                    "rs-related-incidents", 
                    "rs-incidents-get-tasks"
                ]
            }
        }, 
        {
            "icebrg": {
                "name": "icebrg", 
                "commands": [
                    "icebrg-search-events", 
                    "icebrg-get-history", 
                    "icebrg-saved-searches", 
                    "icebrg-get-reports", 
                    "icebrg-get-report-indicators", 
                    "icebrg-get-report-assets"
                ], 
                "tests": [
                    "Icebrg Test"
                ]
            }
        }, 
        {
            "iDefense": {
                "name": "iDefense", 
                "commands": [
                    "ip", 
                    "domain", 
                    "url", 
                    "idefense-general", 
                    "uuid"
                ]
            }
        }, 
        {
            "Imperva Skyfence": {
                "name": "Imperva Skyfence", 
                "commands": [
                    "imp-sf-list-endpoints", 
                    "imp-sf-set-endpoint-status"
                ]
            }
        }, 
        {
            "Incapsula": {
                "name": "Incapsula", 
                "commands": [
                    "incap-add-managed-account", 
                    "incap-list-managed-accounts", 
                    "incap-add-subaccount", 
                    "incap-list-subaccounts", 
                    "incap-get-account-status", 
                    "incap-modify-account-configuration", 
                    "incap-set-account-log-level", 
                    "incap-test-account-s3-connection", 
                    "incap-test-account-sftp-connection", 
                    "incap-set-account-s3-log-storage", 
                    "incap-set-account-sftp-log-storage", 
                    "incap-set-account-default-log-storage", 
                    "incap-get-account-login-token", 
                    "incap-delete-managed-account", 
                    "incap-delete-subaccount", 
                    "incap-get-account-audit-events", 
                    "incap-set-account-default-data-storage-region", 
                    "incap-get-account-default-data-storage-region", 
                    "incap-add-site", 
                    "incap-get-site-status", 
                    "incap-get-domain-approver-email", 
                    "incap-modify-site-configuration", 
                    "incap-modify-site-log-level", 
                    "incap-modify-site-tls-support", 
                    "incap-modify-site-scurity-config", 
                    "incap-modify-site-acl-config", 
                    "incap-modify-site-wl-config", 
                    "incap-delete-site", 
                    "incap-list-sites", 
                    "incap-get-site-report", 
                    "incap-get-site-html-injection-rules", 
                    "incap-add-site-html-injection-rule", 
                    "incap-delete-site-html-injection-rule", 
                    "incap-create-new-csr", 
                    "incap-upload-certificate", 
                    "incap-remove-custom-integration", 
                    "incap-move-site", 
                    "incap-check-compliance", 
                    "incap-set-site-data-storage-region", 
                    "incap-get-site-data-storage-region", 
                    "incap-set-site-data-storage-region-geo-override", 
                    "incap-get-site-data-storage-region-geo-override", 
                    "incap-purge-site-cache", 
                    "incap-modify-cache-mode", 
                    "incap-purge-resources", 
                    "incap-modify-caching-rules", 
                    "incap-set-advanced-caching-settings", 
                    "incap-purge-hostname-from-cache", 
                    "incap-site-get-xray-link", 
                    "incap-list-site-rule-revisions", 
                    "incap-add-site-rule", 
                    "incap-edit-site-rule", 
                    "incap-enable-site-rule", 
                    "incap-delete-site-rule", 
                    "incap-list-site-rules", 
                    "incap-revert-site-rule", 
                    "incap-set-site-rule-priority", 
                    "incap-add-site-datacenter", 
                    "incap-edit-site-datacenter", 
                    "incap-delete-site-datacenter", 
                    "incap-list-site-datacenters", 
                    "incap-add-site-datacenter-server", 
                    "incap-edit-site-datacenter-server", 
                    "incap-delete-site-datacenter-server", 
                    "incap-get-statistics", 
                    "incap-get-visits", 
                    "incap-upload-public-key", 
                    "incap-change-logs-collector-configuration", 
                    "incap-get-infra-protection-statistics", 
                    "incap-get-infra-protection-events", 
                    "incap-add-login-protect", 
                    "incap-edit-login-protect", 
                    "incap-get-login-protect", 
                    "incap-remove-login-protect", 
                    "incap-send-sms-to-user", 
                    "incap-modify-login-protect", 
                    "incap-configure-app", 
                    "incap-get-ip-ranges", 
                    "incap-get-texts", 
                    "incap-get-geo-info", 
                    "incap-get-app-info"
                ]
            }
        }, 
        {
            "InfoArmor VigilanteATI": {
                "name": "InfoArmor VigilanteATI", 
                "commands": [
                    "vigilante-query-infected-host-data", 
                    "vigilante-get-vulnerable-host-data", 
                    "vigilante-query-ecrime-db", 
                    "vigilante-search-leaks", 
                    "vigilante-get-leak", 
                    "vigilante-query-accounts", 
                    "vigilante-query-domains", 
                    "vigilante-watchlist-add-accounts", 
                    "vigilante-watchlist-remove-accounts", 
                    "vigilante-get-watchlist", 
                    "vigilante-account-usage-info"
                ], 
                "tests": [
                    "InfoArmorVigilanteATITest"
                ]
            }
        }, 
        {
            "Intezer": {
                "name": "Intezer", 
                "commands": [
                    "file", 
                    "intezer-upload"
                ]
            }
        }, 
        {
            "IntSights": {
                "name": "IntSights", 
                "commands": [
                    "intsights-get-alert-image", 
                    "intsights-get-alert-activities", 
                    "intsights-assign-alert", 
                    "intsights-unassign-alert", 
                    "intsights-send-mail", 
                    "intsights-ask-the-analyst", 
                    "intsights-add-tag-to-alert", 
                    "intsights-remove-tag-from-alert", 
                    "intsights-add-comment-to-alert", 
                    "intsights-update-alert-severity", 
                    "intsights-get-alert-by-id", 
                    "intsights-get-ioc-by-value", 
                    "intsights-get-iocs", 
                    "intsights-get-alerts", 
                    "intsights-alert-takedown-request", 
                    "intsights-get-alert-takedown-status", 
                    "intsights-update-ioc-blocklist-status", 
                    "intsights-get-ioc-blocklist-status", 
                    "intsights-close-alert", 
                    "intsights-mssp-get-sub-accounts"
                ], 
                "tests": [
                    "IntSights Test"
                ]
            }
        }, 
        {
            "ipinfo": {
                "name": "ipinfo", 
                "commands": [
                    "ip", 
                    "ipinfo_field"
                ]
            }
        }, 
        {
            "IsItPhishing": {
                "name": "IsItPhishing", 
                "commands": [
                    "url"
                ]
            }
        }, 
        {
            "jamf": {
                "name": "jamf", 
                "commands": [
                    "jamf-get-computers", 
                    "jamf-get-computers-match"
                ]
            }
        }, 
        {
            "Jask": {
                "name": "Jask", 
                "commands": [
                    "jask-get-insight-details", 
                    "jask-get-insight-comments", 
                    "jask-get-signal-details", 
                    "jask-get-entity-details", 
                    "jask-get-related-entities", 
                    "jask-get-whitelisted-entities", 
                    "jask-search-insights", 
                    "jask-search-signals", 
                    "jask-search-entities"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "jira": {
                "name": "jira", 
                "fromversion": "2.6.0", 
                "commands": [
                    "jira-issue-query", 
                    "jira-get-issue", 
                    "jira-create-issue", 
                    "jira-issue-upload-file", 
                    "jira-issue-add-comment", 
                    "jira-issue-add-link", 
                    "jira-edit-issue", 
                    "jira-get-comments", 
                    "jira-delete-issue"
                ]
            }
        }, 
        {
            "jira": {
                "name": "jira", 
                "toversion": "2.5.0", 
                "commands": [
                    "jira-issue-query", 
                    "jira-get-issue", 
                    "jira-create-issue", 
                    "jira-issue-upload-file", 
                    "jira-issue-add-comment", 
                    "jira-issue-add-link"
                ]
            }
        }, 
        {
            "Joe Security": {
                "name": "Joe Security", 
                "commands": [
                    "joe-is-online", 
                    "joe-analysis-submit-url", 
                    "joe-detonate-url", 
                    "joe-analysis-info", 
                    "joe-list-analysis", 
                    "joe-analysis-submit-sample", 
                    "joe-download-report", 
                    "joe-detonate-file", 
                    "joe-search", 
                    "joe-download-sample"
                ], 
                "tests": [
                    "JoeSecurityTestPlaybook", 
                    "JoeSecurityTestDetonation"
                ]
            }
        }, 
        {
            "Kenna": {
                "name": "Kenna", 
                "commands": [
                    "kenna-search-vulnerabilities", 
                    "kenna-get-connectors", 
                    "kenna-run-connector", 
                    "kenna-search-fixes", 
                    "kenna-update-asset", 
                    "kenna-update-vulnerability"
                ]
            }
        }, 
        {
            "Koodous": {
                "name": "Koodous", 
                "commands": [
                    "k-check-hash"
                ]
            }
        }, 
        {
            "Lastline": {
                "name": "Lastline", 
                "commands": [
                    "lastline-get", 
                    "url", 
                    "file", 
                    "lastline-upload", 
                    "lastline-upload-url", 
                    "lastline-upload-file", 
                    "lastline-get-report", 
                    "lastline-get-task-list"
                ], 
                "tests": [
                    "Lastline - testplaybook", 
                    "Detonate URL - Generic Test", 
                    "Detonate File - Generic Test"
                ]
            }
        }, 
        {
            "LightCyber Magna": {
                "name": "LightCyber Magna", 
                "commands": [
                    "lcm-version", 
                    "lcm-entities", 
                    "lcm-indicators", 
                    "lcm-hosts", 
                    "lcm-hostbyip", 
                    "lcm-hostbyname", 
                    "lcm-pathfinder-scan", 
                    "lcm-sandbox-report", 
                    "lcm-daily-report", 
                    "lcm-host-artifacts", 
                    "lcm-resolve-host", 
                    "lcm-unresolve-host", 
                    "lcm-set-host-comment", 
                    "lcm-acknowledge-host", 
                    "lcm-resolve-user", 
                    "lcm-unresolve-user", 
                    "lcm-set-user-comment", 
                    "lcm-acknowledge-user", 
                    "lcm-domain", 
                    "lcm-executablebymd5", 
                    "lcm-executablebyname", 
                    "lcm-indicatorsforentity", 
                    "lcm-host-opened-ports", 
                    "lcm-host-suspicious-artifacts", 
                    "lcm-host-processes", 
                    "lcm-host-loaded-modules", 
                    "lcm-host-processes-internet-connections", 
                    "lcm-host-autoruns"
                ]
            }
        }, 
        {
            "Lockpath KeyLight": {
                "name": "Lockpath KeyLight", 
                "toversion": "3.1.0", 
                "commands": [
                    "kl-get-component-list", 
                    "kl-get-component", 
                    "kl-get-component-by-alias", 
                    "kl-get-field-list", 
                    "kl-get-field", 
                    "kl-get-record-count", 
                    "kl-get-record", 
                    "kl-get-records", 
                    "kl-delete-record", 
                    "kl-create-record", 
                    "kl-update-record", 
                    "kl-get-detail-record", 
                    "kl-get-lookup-report-column-fields", 
                    "kl-get-detail-records", 
                    "kl-get-record-attachments", 
                    "kl-get-record-attachment", 
                    "kl-delete-record-attachments"
                ]
            }
        }, 
        {
            "Lockpath KeyLight": {
                "name": "Lockpath KeyLight", 
                "fromversion": "3.5.0", 
                "commands": [
                    "kl-get-component-list", 
                    "kl-get-component", 
                    "kl-get-component-by-alias", 
                    "kl-get-field-list", 
                    "kl-get-field", 
                    "kl-get-record-count", 
                    "kl-get-record", 
                    "kl-get-records", 
                    "kl-delete-record", 
                    "kl-create-record", 
                    "kl-update-record", 
                    "kl-get-detail-record", 
                    "kl-get-lookup-report-column-fields", 
                    "kl-get-detail-records", 
                    "kl-get-record-attachments", 
                    "kl-get-record-attachment", 
                    "kl-delete-record-attachments"
                ]
            }
        }, 
        {
            "LogRhythm": {
                "name": "LogRhythm", 
                "commands": [
                    "lr-add-alarm-comments", 
                    "lr-get-alarm-by-id", 
                    "lr-get-alarm-events-by-id", 
                    "lr-get-alarm-history-by-id", 
                    "lr-update-alarm-status", 
                    "lr-get-alarms"
                ]
            }
        }, 
        {
            "Luminate": {
                "name": "Luminate", 
                "fromversion": "0.0.0", 
                "commands": [
                    "lum-block-user", 
                    "lum-unblock-user", 
                    "lum-destroy-user-session", 
                    "lum-get-http-access-logs", 
                    "lum-get-ssh-access-logs"
                ], 
                "tests": [
                    "Luminate-TestPlaybook"
                ]
            }
        }, 
        {
            "Mail Sender (New)": {
                "name": "Mail Sender (New)", 
                "commands": [
                    "send-mail"
                ]
            }
        }, 
        {
            "malwr": {
                "name": "malwr", 
                "fromversion": "3.0.0", 
                "commands": [
                    "malwr-submit", 
                    "malwr-status", 
                    "malwr-result", 
                    "malwr-detonate"
                ]
            }
        }, 
        {
            "MaxMind GeoIP2": {
                "name": "MaxMind GeoIP2", 
                "commands": [
                    "ip"
                ], 
                "tests": [
                    "MaxMind Test"
                ]
            }
        }, 
        {
            "McAfee Active Response": {
                "name": "McAfee Active Response", 
                "commands": [
                    "mar-search", 
                    "mar-collectors-list", 
                    "mar-search-multiple"
                ]
            }
        }, 
        {
            "McAfee Advanced Threat Defense": {
                "name": "McAfee Advanced Threat Defense", 
                "toversion": "3.1.0", 
                "fromversion": "2.0.4", 
                "commands": [
                    "atd-file-upload", 
                    "atd-get-task-ids", 
                    "atd-check-status", 
                    "atd-get-report", 
                    "atd-list-analyzer-profiles", 
                    "atd-list-user", 
                    "atd-login"
                ]
            }
        }, 
        {
            "McAfee Advanced Threat Defense": {
                "name": "McAfee Advanced Threat Defense", 
                "fromversion": "3.5.0", 
                "commands": [
                    "atd-file-upload", 
                    "atd-get-task-ids", 
                    "atd-get-report", 
                    "atd-list-analyzer-profiles", 
                    "atd-list-user", 
                    "atd-login", 
                    "detonate-file", 
                    "detonate-url", 
                    "atd-check-status"
                ], 
                "tests": [
                    "Test Playbook McAfee ATD"
                ]
            }
        }, 
        {
            "McAfee ESM-v10": {
                "name": "McAfee ESM-v10", 
                "commands": [
                    "esm-fetch-fields", 
                    "esm-search", 
                    "esm-fetch-alarms", 
                    "esm-get-case-list", 
                    "esm-add-case", 
                    "esm-edit-case", 
                    "esm-get-case-statuses", 
                    "esm-edit-case-status", 
                    "esm-get-case-detail", 
                    "esm-get-case-event-list", 
                    "esm-add-case-status", 
                    "esm-delete-case-status", 
                    "esm-get-organization-list", 
                    "esm-get-user-list", 
                    "esm-acknowledge-alarms", 
                    "esm-unacknowledge-alarms", 
                    "esm-delete-alarms", 
                    "esm-get-alarm-event-details", 
                    "esm-list-alarm-events"
                ]
            }
        }, 
        {
            "McAfee NSM": {
                "name": "McAfee NSM", 
                "commands": [
                    "nsm-get-sensors", 
                    "nsm-get-domains", 
                    "nsm-get-alerts", 
                    "nsm-update-alerts", 
                    "nsm-get-alert-details", 
                    "nsm-get-ips-policies", 
                    "nsm-get-ips-policy-details", 
                    "nsm-get-attacks"
                ]
            }
        }, 
        {
            "McAfee Threat Intelligence Exchange": {
                "name": "McAfee Threat Intelligence Exchange", 
                "commands": [
                    "file", 
                    "tie-set-file-reputation", 
                    "tie-file-references"
                ]
            }
        }, 
        {
            "McAfee Web Gateway": {
                "name": "McAfee Web Gateway", 
                "commands": [
                    "mwg-get-available-lists", 
                    "mwg-get-list", 
                    "mwg-get-list-entry", 
                    "mwg-insert-entry", 
                    "mwg-delete-entry"
                ], 
                "tests": [
                    "McAfeeWebGatewayTest"
                ]
            }
        }, 
        {
            "McAfeeDAM": {
                "name": "McAfeeDAM", 
                "commands": [
                    "dam-get-alert-by-id", 
                    "dam-get-latest-by-rule"
                ]
            }
        }, 
        {
            "Microsoft Graph": {
                "name": "Microsoft Graph", 
                "commands": [
                    "msg-search-alerts", 
                    "msg-get-alert-details", 
                    "msg-update-alert", 
                    "msg-get-users", 
                    "msg-get-user"
                ]
            }
        }, 
        {
            "Mimecast": {
                "name": "Mimecast", 
                "fromversion": "1.6.2", 
                "commands": [
                    "mimecast-query"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Mimecast Authentication": {
                "name": "Mimecast Authentication", 
                "commands": [
                    "mimecast-login", 
                    "mimecast-discover", 
                    "mimecast-refresh-token"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "MimecastV2": {
                "name": "MimecastV2", 
                "commands": [
                    "mimecast-query", 
                    "mimecast-list-blocked-sender-policies", 
                    "mimecast-get-policy", 
                    "mimecast-create-policy", 
                    "mimecast-delete-policy", 
                    "mimecast-manage-sender", 
                    "mimecast-list-managed-url", 
                    "mimecast-create-managed-url", 
                    "mimecast-list-messages", 
                    "mimecast-get-attachment-logs", 
                    "mimecast-get-url-logs", 
                    "mimecast-get-impersonation-logs", 
                    "mimecast-url-decode", 
                    "mimecast-discover", 
                    "mimecast-refresh-token", 
                    "mimecast-login", 
                    "mimecast-get-message", 
                    "mimecast-download-attachments"
                ], 
                "tests": [
                    "Mimecast test"
                ]
            }
        }, 
        {
            "MISP": {
                "name": "MISP", 
                "commands": [
                    "internal-misp-upload-sample", 
                    "misp-search", 
                    "file", 
                    "url", 
                    "ip", 
                    "internal-misp-download-sample", 
                    "internal-misp-create-event", 
                    "internal-misp-add-attribute"
                ]
            }
        }, 
        {
            "MISP V2": {
                "name": "MISP V2", 
                "commands": [
                    "misp-search", 
                    "file", 
                    "url", 
                    "ip", 
                    "internal-misp-create-event", 
                    "misp-create-event", 
                    "internal-misp-add-attribute", 
                    "misp-download-sample", 
                    "misp-add-attribute", 
                    "misp-upload-sample", 
                    "misp-delete-event", 
                    "misp-add-tag", 
                    "misp-add-sighting"
                ], 
                "tests": [
                    "MISP V2 Test"
                ]
            }
        }, 
        {
            "Moloch": {
                "name": "Moloch", 
                "toversion": "3.1.0", 
                "commands": [
                    "moloch_connections_json", 
                    "moloch_connections_csv", 
                    "moloch_files_json", 
                    "moloch_sessions_json", 
                    "moloch_sessions_csv", 
                    "moloch_sessions_pcap", 
                    "moloch_spigraph_json", 
                    "moloch_spiview_json", 
                    "moloch_unique_json"
                ]
            }
        }, 
        {
            "Moloch": {
                "name": "Moloch", 
                "fromversion": "3.5.0", 
                "commands": [
                    "moloch_connections_json", 
                    "moloch_connections_csv", 
                    "moloch_files_json", 
                    "moloch_sessions_json", 
                    "moloch_sessions_csv", 
                    "moloch_sessions_pcap", 
                    "moloch_spigraph_json", 
                    "moloch_spiview_json", 
                    "moloch_unique_json"
                ]
            }
        }, 
        {
            "MxToolBox": {
                "name": "MxToolBox", 
                "commands": [
                    "mxtoolbox"
                ]
            }
        }, 
        {
            "Nessus": {
                "name": "Nessus", 
                "commands": [
                    "nessus-list-scans", 
                    "scans-list", 
                    "nessus-launch-scan", 
                    "scan-launch", 
                    "nessus-scan-details", 
                    "scan-details", 
                    "scan-host-details", 
                    "nessus-scan-host-details", 
                    "nessus-scan-export", 
                    "scan-export", 
                    "scan-report-download", 
                    "nessus-scan-report-download", 
                    "scan-create", 
                    "nessus-scan-create", 
                    "nessus-get-scans-editors", 
                    "scan-export-status", 
                    "nessus-scan-export-status", 
                    "nessus-scan-status"
                ]
            }
        }, 
        {
            "Netskope": {
                "name": "Netskope", 
                "commands": [
                    "netskope-events", 
                    "netskope-alerts"
                ], 
                "tests": [
                    "Netskope Test"
                ]
            }
        }, 
        {
            "nmap": {
                "name": "nmap", 
                "commands": [
                    "nmap-scan"
                ]
            }
        }, 
        {
            "okta": {
                "name": "okta", 
                "toversion": "3.5.1", 
                "fromversion": "3.1.0", 
                "commands": [
                    "okta-unlock-user", 
                    "okta-deactivate-user", 
                    "okta-activate-user", 
                    "okta-get-groups", 
                    "okta-set-password", 
                    "okta-search", 
                    "okta-get-user", 
                    "okta-create-user", 
                    "okta-update-user"
                ]
            }
        }, 
        {
            "okta": {
                "name": "okta", 
                "fromversion": "3.6.0", 
                "commands": [
                    "okta-unlock-user", 
                    "okta-deactivate-user", 
                    "okta-activate-user", 
                    "okta-suspend-user", 
                    "okta-unsuspend-user", 
                    "okta-get-user-factors", 
                    "okta-verify-push-factor", 
                    "okta-reset-factor", 
                    "okta-get-groups", 
                    "okta-set-password", 
                    "okta-search", 
                    "okta-get-user", 
                    "okta-create-user", 
                    "okta-update-user", 
                    "okta-get-failed-logins", 
                    "okta-get-group-assignments", 
                    "okta-get-application-assignments", 
                    "okta-get-application-authentication", 
                    "okta-get-logs", 
                    "okta-add-to-group", 
                    "okta-remove-from-group", 
                    "okta-list-groups", 
                    "okta-get-group-members"
                ]
            }
        }, 
        {
            "OpenPhish": {
                "name": "OpenPhish", 
                "commands": [
                    "url", 
                    "openphish-reload", 
                    "openphish-status"
                ]
            }
        }, 
        {
            "OpsGenie": {
                "name": "OpsGenie", 
                "commands": [
                    "opsgenie-get-on-call", 
                    "opsgenie-get-user", 
                    "opsgenie-get-schedules", 
                    "opsgenie-get-schedule-timeline"
                ]
            }
        }, 
        {
            "OPSWAT-Metadefender": {
                "name": "OPSWAT-Metadefender", 
                "commands": [
                    "opswat-hash", 
                    "opswat-scan-file", 
                    "opswat-scan-result"
                ]
            }
        }, 
        {
            "OTRS": {
                "name": "OTRS", 
                "fromversion": "4.1.0", 
                "commands": [
                    "otrs-get-ticket", 
                    "otrs-search-ticket", 
                    "otrs-create-ticket", 
                    "otrs-update-ticket", 
                    "otrs-close-ticket"
                ], 
                "tests": [
                    "OTRS Test"
                ]
            }
        }, 
        {
            "PacketMail": {
                "name": "PacketMail", 
                "commands": [
                    "packetmail-ip"
                ]
            }
        }, 
        {
            "Packetsled": {
                "name": "Packetsled", 
                "commands": [
                    "packetsled-get-incidents", 
                    "packetsled-sensors", 
                    "packetsled-get-flows", 
                    "packetsled-get-files", 
                    "packetsled-get-pcaps", 
                    "packetsled-get-events"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "PagerDuty v2": {
                "name": "PagerDuty v2", 
                "commands": [
                    "PagerDuty-get-all-schedules", 
                    "PagerDuty-get-users-on-call", 
                    "PagerDuty-get-users-on-call-now", 
                    "PagerDuty-incidents", 
                    "PagerDuty-submit-event", 
                    "PagerDuty-get-contact-methods", 
                    "PagerDuty-get-users-notification", 
                    "PagerDuty-resolve-event", 
                    "PagerDuty-acknowledge-event"
                ], 
                "tests": [
                    "PagerDuty Test"
                ]
            }
        }, 
        {
            "Palo Alto AppFramework": {
                "name": "Palo Alto AppFramework", 
                "commands": [
                    "pan-appframework-query-logs", 
                    "pan-appframework-get-critical-threat-logs", 
                    "pan-appframework-get-social-applications", 
                    "pan-appframework-search-by-file-hash"
                ]
            }
        }, 
        {
            "Palo Alto Minemeld": {
                "name": "Palo Alto Minemeld", 
                "commands": [
                    "minemeld-add-to-miner", 
                    "minemeld-remove-from-miner", 
                    "minemeld-retrieve-miner", 
                    "minemeld-get-indicator-from-miner", 
                    "ip", 
                    "file", 
                    "domain", 
                    "url", 
                    "minemeld-get-all-miners-names"
                ], 
                "tests": [
                    "minemeld_test"
                ]
            }
        }, 
        {
            "Panorama": {
                "name": "Panorama", 
                "fromversion": "3.0.0", 
                "commands": [
                    "panorama", 
                    "panorama-commit", 
                    "panorama-push-to-device-group", 
                    "panorama-list-addresses", 
                    "panorama-get-address", 
                    "panorama-create-address", 
                    "panorama-delete-address", 
                    "panorama-list-address-groups", 
                    "panorama-get-address-group", 
                    "panorama-create-address-group", 
                    "panorama-delete-address-group", 
                    "panorama-edit-address-group", 
                    "panorama-list-services", 
                    "panorama-get-service", 
                    "panorama-create-service", 
                    "panorama-delete-service", 
                    "panorama-list-service-groups", 
                    "panorama-get-service-group", 
                    "panorama-create-service-group", 
                    "panorama-delete-service-group", 
                    "panorama-edit-service-group", 
                    "panorama-get-custom-url-category", 
                    "panorama-create-custom-url-category", 
                    "panorama-delete-custom-url-category", 
                    "panorama-edit-custom-url-category", 
                    "panorama-get-url-category", 
                    "panorama-get-url-filter", 
                    "panorama-create-url-filter", 
                    "panorama-edit-url-filter", 
                    "panorama-delete-url-filter", 
                    "panorama-create-rule", 
                    "panorama-custom-block-rule", 
                    "panorama-move-rule", 
                    "panorama-edit-rule", 
                    "panorama-delete-rule", 
                    "panorama-list-applications", 
                    "panorama-commit-status", 
                    "panorama-push-status"
                ], 
                "tests": [
                    "palo_alto_firewall_test_pb", 
                    "palo_alto_panorama_test_pb"
                ]
            }
        }, 
        {
            "PassiveTotal": {
                "name": "PassiveTotal", 
                "commands": [
                    "pt-get-subdomains", 
                    "pt-account", 
                    "pt-monitors", 
                    "pt-passive-dns", 
                    "pt-passive-unique", 
                    "pt-dns-keyword", 
                    "pt-enrichment", 
                    "pt-malware", 
                    "url", 
                    "domain", 
                    "ip", 
                    "pt-osint", 
                    "pt-whois", 
                    "pt-whois-keyword", 
                    "pt-whois-search", 
                    "pt-get-components", 
                    "pt-get-pairs", 
                    "pt-ssl-cert", 
                    "pt-ssl-cert-history", 
                    "pt-ssl-cert-keyword", 
                    "pt-ssl-cert-search"
                ]
            }
        }, 
        {
            "Phish.AI": {
                "name": "Phish.AI", 
                "fromversion": "4.0.0", 
                "commands": [
                    "phish-ai-scan-url", 
                    "phish-ai-check-status"
                ], 
                "tests": [
                    "PhishAi-Test"
                ]
            }
        }, 
        {
            "Phishme Intelligence": {
                "name": "Phishme Intelligence", 
                "commands": [
                    "url", 
                    "file", 
                    "ip", 
                    "phishme-search", 
                    "email"
                ], 
                "tests": [
                    "Test - PhishMe Intelligence"
                ]
            }
        }, 
        {
            "PhishTank": {
                "name": "PhishTank", 
                "commands": [
                    "url", 
                    "phishtank-reload", 
                    "phishtank-status"
                ]
            }
        }, 
        {
            "Pipl": {
                "name": "Pipl", 
                "fromversion": "3.5.0", 
                "commands": [
                    "pipl-search", 
                    "email"
                ]
            }
        }, 
        {
            "PostgreSQL": {
                "name": "PostgreSQL", 
                "commands": [
                    "pgsql-query"
                ]
            }
        }, 
        {
            "Preempt": {
                "name": "Preempt", 
                "commands": [
                    "preempt-add-to-watch-list", 
                    "preempt-remove-from-watch-list", 
                    "preempt-get-activities", 
                    "preempt-get-user-endpoints", 
                    "preempt-get-alerts"
                ]
            }
        }, 
        {
            "Proofpoint TAP": {
                "name": "Proofpoint TAP", 
                "commands": [
                    "proofpoint-get-events"
                ]
            }
        }, 
        {
            "ProtectWise": {
                "name": "ProtectWise", 
                "fromversion": "3.5.0", 
                "commands": [
                    "sensors", 
                    "protectwise-show-sensors", 
                    "search", 
                    "protectwise-search-events", 
                    "pw-event-get", 
                    "protectwise-event-info", 
                    "observation-search", 
                    "protectwise-search-observations", 
                    "pw-observation-get", 
                    "protectwise-observation-info", 
                    "event-pcap-download", 
                    "protectwise-event-pcap-download", 
                    "event-pcap-info", 
                    "protectwise-event-pcap-info", 
                    "observation-pcap-download", 
                    "protectwise-observation-pcap-download", 
                    "observation-pcap-info", 
                    "protectwise-observation-pcap-info", 
                    "get-token"
                ]
            }
        }, 
        {
            "ProtectWise": {
                "name": "ProtectWise", 
                "toversion": "3.1.0", 
                "commands": [
                    "sensors", 
                    "protectwise-show-sensors", 
                    "search", 
                    "protectwise-search-events", 
                    "pw-event-get", 
                    "protectwise-event-info", 
                    "observation-search", 
                    "protectwise-search-observations", 
                    "pw-observation-get", 
                    "protectwise-observation-info", 
                    "event-pcap-download", 
                    "protectwise-event-pcap-download", 
                    "event-pcap-info", 
                    "protectwise-event-pcap-info", 
                    "observation-pcap-download", 
                    "protectwise-observation-pcap-download", 
                    "observation-pcap-info", 
                    "protectwise-observation-pcap-info", 
                    "get-token"
                ]
            }
        }, 
        {
            "Pwned": {
                "name": "Pwned", 
                "commands": [
                    "pwned-email", 
                    "pwned-domain", 
                    "email", 
                    "domain"
                ], 
                "tests": [
                    "Pwned test"
                ]
            }
        }, 
        {
            "QRadar": {
                "name": "QRadar", 
                "commands": [
                    "qradar-offenses", 
                    "qradar-offense-by-id", 
                    "qradar-searches", 
                    "qradar-get-search", 
                    "qradar-get-search-results", 
                    "qradar-update-offense", 
                    "qradar-get-assets", 
                    "qradar-get-asset-by-id", 
                    "qr-searches", 
                    "qr-get-search", 
                    "qr-get-search-results", 
                    "qr-update-offense", 
                    "qr-get-assets", 
                    "qr-offenses", 
                    "qradar-get-closing-reasons", 
                    "qradar-create-note", 
                    "qradar-get-note", 
                    "qradar-get-reference-by-name", 
                    "qradar-create-reference-set", 
                    "qradar-delete-reference-set", 
                    "qradar-create-reference-set-value", 
                    "qradar-update-reference-set-value", 
                    "qradar-delete-reference-set-value"
                ], 
                "tests": [
                    "test_Qradar"
                ]
            }
        }, 
        {
            "Qualys": {
                "name": "Qualys", 
                "toversion": "3.1.0", 
                "commands": [
                    "qualys-report-list", 
                    "qualys-report-cancel", 
                    "qualys-report-delete", 
                    "qualys-scorecard-launch", 
                    "qualys-report-fetch", 
                    "qualys-vm-scan-list", 
                    "qualys-vm-scan-launch", 
                    "qualys-vm-scan-action", 
                    "qualys-scap-scan-list", 
                    "qualys-pc-scan-launch", 
                    "qualys-pc-scan-manage", 
                    "qualys-schedule-scan-list", 
                    "qualys-ip-list", 
                    "qualys-ip-add", 
                    "qualys-ip-update", 
                    "qualys-virtual-host-list", 
                    "qualys-virtual-host-manage", 
                    "qualys-host-excluded-list", 
                    "qualys-host-excluded-manage", 
                    "qualys-scheduled-report-list", 
                    "qualys-scheduled-report-launch", 
                    "qualys-host-list", 
                    "qualys-pc-scan-list", 
                    "qualys-report-template-list", 
                    "qualys-report-launch-map", 
                    "qualys-report-launch-scan-based-findings", 
                    "qualys-report-launch-host-based-findings", 
                    "qualys-report-launch-patch", 
                    "qualys-report-launch-remediation", 
                    "qualys-report-launch-compliance", 
                    "qualys-report-launch-compliance-policy", 
                    "qualys-vulnerability-list", 
                    "qualys-group-list", 
                    "qualys-vm-scan-fetch", 
                    "qualys-pc-scan-fetch"
                ]
            }
        }, 
        {
            "Qualys": {
                "name": "Qualys", 
                "fromversion": "3.5.0", 
                "commands": [
                    "qualys-report-list", 
                    "qualys-report-cancel", 
                    "qualys-report-delete", 
                    "qualys-scorecard-launch", 
                    "qualys-report-fetch", 
                    "qualys-vm-scan-list", 
                    "qualys-vm-scan-launch", 
                    "qualys-vm-scan-action", 
                    "qualys-scap-scan-list", 
                    "qualys-pc-scan-launch", 
                    "qualys-pc-scan-manage", 
                    "qualys-schedule-scan-list", 
                    "qualys-ip-list", 
                    "qualys-ip-add", 
                    "qualys-ip-update", 
                    "qualys-virtual-host-list", 
                    "qualys-virtual-host-manage", 
                    "qualys-host-excluded-list", 
                    "qualys-host-excluded-manage", 
                    "qualys-scheduled-report-list", 
                    "qualys-scheduled-report-launch", 
                    "qualys-host-list", 
                    "qualys-pc-scan-list", 
                    "qualys-report-template-list", 
                    "qualys-report-launch-map", 
                    "qualys-report-launch-scan-based-findings", 
                    "qualys-report-launch-host-based-findings", 
                    "qualys-report-launch-patch", 
                    "qualys-report-launch-remediation", 
                    "qualys-report-launch-compliance", 
                    "qualys-report-launch-compliance-policy", 
                    "qualys-vulnerability-list", 
                    "qualys-group-list", 
                    "qualys-vm-scan-fetch", 
                    "qualys-pc-scan-fetch"
                ]
            }
        }, 
        {
            "Rapid7 Nexpose": {
                "name": "Rapid7 Nexpose", 
                "fromversion": "3.6.0", 
                "commands": [
                    "nexpose-get-asset", 
                    "nexpose-get-assets", 
                    "nexpose-search-assets", 
                    "nexpose-get-scan", 
                    "nexpose-get-asset-vulnerability", 
                    "nexpose-create-site", 
                    "nexpose-delete-site", 
                    "nexpose-get-sites", 
                    "nexpose-get-report-templates", 
                    "nexpose-create-assets-report", 
                    "nexpose-create-sites-report", 
                    "nexpose-create-scan-report", 
                    "nexpose-start-site-scan", 
                    "nexpose-start-assets-scan", 
                    "nexpose-stop-scan", 
                    "nexpose-pause-scan", 
                    "nexpose-resume-scan", 
                    "nexpose-get-scans"
                ]
            }
        }, 
        {
            "Rasterize": {
                "name": "Rasterize", 
                "commands": [
                    "rasterize", 
                    "rasterize-email", 
                    "rasterize-image"
                ]
            }
        }, 
        {
            "Recorded Future": {
                "name": "Recorded Future", 
                "commands": [
                    "domain", 
                    "ip", 
                    "file", 
                    "recorded-future-get-related-entities", 
                    "url", 
                    "recorded-future-get-threats-hash", 
                    "recorded-future-get-threats-ip", 
                    "recorded-future-get-threats-url", 
                    "recorded-future-get-threats-domain", 
                    "recorded-future-get-threats-vulnerabilities", 
                    "recorded-future-get-domain-risklist", 
                    "recorded-future-get-url-risklist", 
                    "recorded-future-get-ip-risklist", 
                    "recorded-future-get-vulnerability-risklist", 
                    "recorded-future-get-hash-risklist", 
                    "recorded-future-get-domain-riskrules", 
                    "recorded-future-get-hash-riskrules", 
                    "recorded-future-get-ip-riskrules", 
                    "recorded-future-get-url-riskrules", 
                    "recorded-future-get-vulnerability-riskrules", 
                    "recorded-future-get-alert-rules", 
                    "recorded-future-get-alerts"
                ], 
                "tests": [
                    "Recorded Future Test"
                ]
            }
        }, 
        {
            "RedCanary": {
                "name": "RedCanary", 
                "commands": [
                    "redcanary-acknowledge-detection", 
                    "redcanary-update-remediation-state", 
                    "redcanary-list-detections", 
                    "redcanary-list-endpoints", 
                    "redcanary-execute-playbook", 
                    "redcanary-get-endpoint", 
                    "redcanary-get-endpoint-detections", 
                    "redcanary-get-detection"
                ], 
                "tests": [
                    "RedCanaryTest"
                ]
            }
        }, 
        {
            "RedLock": {
                "name": "RedLock", 
                "commands": [
                    "redlock-search-alerts", 
                    "redlock-get-alert-details", 
                    "redlock-dismiss-alerts", 
                    "redlock-reopen-alerts", 
                    "redlock-list-alert-filters"
                ]
            }
        }, 
        {
            "Remedy AR": {
                "name": "Remedy AR", 
                "commands": [
                    "remedy-get-server-details"
                ]
            }
        }, 
        {
            "Remedy On-Demand": {
                "name": "Remedy On-Demand", 
                "commands": [
                    "remedy-incident-create", 
                    "remedy-get-incident", 
                    "remedy-fetch-incidents", 
                    "remedy-incident-update"
                ]
            }
        }, 
        {
            "ReversingLabs A1000": {
                "name": "ReversingLabs A1000", 
                "commands": [
                    "file", 
                    "reversinglabs-upload", 
                    "reversinglabs-delete", 
                    "reversinglabs-extracted-files", 
                    "reversinglabs-download", 
                    "reversinglabs-analyze", 
                    "reversinglabs-download-unpacked"
                ]
            }
        }, 
        {
            "ReversingLabs Titanium Cloud": {
                "name": "ReversingLabs Titanium Cloud", 
                "commands": [
                    "file"
                ]
            }
        }, 
        {
            "RSA Archer": {
                "name": "RSA Archer", 
                "commands": [
                    "archer-create-record", 
                    "archer-update-record", 
                    "archer-get-record", 
                    "archer-search-applications", 
                    "archer-search-records", 
                    "archer-get-application-fields", 
                    "archer-delete-record", 
                    "archer-get-field", 
                    "archer-get-reports", 
                    "archer-execute-statistic-search-by-report", 
                    "archer-get-search-options-by-guid", 
                    "archer-search-records-by-report", 
                    "archer-get-mapping-by-level", 
                    "archer-manually-fetch-incident", 
                    "archer-get-file", 
                    "archer-upload-file", 
                    "archer-add-to-detailed-analysis", 
                    "archer-get-user-id", 
                    "archer-get-valuelist"
                ], 
                "tests": [
                    "Archer-Test-Playbook"
                ]
            }
        }, 
        {
            "RSA NetWitness Endpoint": {
                "name": "RSA NetWitness Endpoint", 
                "commands": [
                    "netwitness-get-machines", 
                    "netwitness-get-machine", 
                    "netwitness-get-machine-iocs", 
                    "netwitness-get-machine-modules", 
                    "netwitness-get-machine-module", 
                    "netwitness-blacklist-ips", 
                    "netwitness-blacklist-domains"
                ], 
                "tests": [
                    "NetWitness Endpoint Test"
                ]
            }
        }, 
        {
            "RSA NetWitness Packets and Logs": {
                "name": "RSA NetWitness Packets and Logs", 
                "toversion": "3.1.0", 
                "commands": [
                    "netwitness-msearch", 
                    "netwitness-search", 
                    "netwitness-query", 
                    "netwitness-packets", 
                    "nw-sdk-session", 
                    "nw-sdk-cancel", 
                    "nw-sdk-query", 
                    "nw-sdk-validate", 
                    "nw-sdk-aliases", 
                    "nw-sdk-content", 
                    "nw-sdk-ls", 
                    "nw-sdk-count", 
                    "nw-sdk-timeline", 
                    "nw-sdk-mon", 
                    "nw-sdk-stopMon", 
                    "nw-sdk-msearch", 
                    "nw-sdk-precache", 
                    "nw-sdk-delCache", 
                    "nw-sdk-info", 
                    "nw-sdk-search", 
                    "nw-sdk-language", 
                    "nw-sdk-packets", 
                    "nw-sdk-summary", 
                    "nw-sdk-reconfig", 
                    "nw-sdk-values", 
                    "nw-sdk-xforms", 
                    "nw-database-info", 
                    "nw-database-count", 
                    "nw-database-dbState", 
                    "nw-database-dump", 
                    "nw-database-hashInfo", 
                    "nw-database-resetMax", 
                    "nw-database-optimize", 
                    "nw-database-reconfig", 
                    "nw-database-ls", 
                    "nw-database-timeRoll", 
                    "nw-database-stopMon", 
                    "nw-database-manifest", 
                    "nw-database-wipe", 
                    "nw-database-sizeRoll", 
                    "nw-database-mon", 
                    "nw-decoder-reset", 
                    "nw-decoder-info", 
                    "nw-decoder-reconfig", 
                    "nw-decoder-agg", 
                    "nw-decoder-stop", 
                    "nw-decoder-count", 
                    "nw-decoder-start", 
                    "nw-decoder-meta", 
                    "nw-decoder-ls", 
                    "nw-decoder-stopMon", 
                    "nw-decoder-resetMax", 
                    "nw-decoder-whoAgg", 
                    "nw-decoder-logStats", 
                    "nw-decoder-select", 
                    "nw-decoder-mon", 
                    "nw-index-ls", 
                    "nw-index-mon", 
                    "nw-index-save", 
                    "nw-index-info", 
                    "nw-index-drop", 
                    "nw-index-count", 
                    "nw-index-values", 
                    "nw-index-profile", 
                    "nw-index-stopMon", 
                    "nw-index-inspect", 
                    "nw-index-language", 
                    "nw-index-reconfig", 
                    "nw-index-sizeRoll", 
                    "nw-decoderParsers-ls", 
                    "nw-decoderParsers-mon", 
                    "nw-decoderParsers-feed", 
                    "nw-decoderParsers-info", 
                    "nw-decoderParsers-count", 
                    "nw-decoderParsers-schema", 
                    "nw-decoderParsers-reload", 
                    "nw-decoderParsers-upload", 
                    "nw-decoderParsers-delete", 
                    "nw-decoderParsers-stopMon", 
                    "nw-decoderParsers-devices", 
                    "nw-decoderParsers-content", 
                    "nw-decoderParsers-ipdevice", 
                    "nw-decoderParsers-iptmzone", 
                    "nw-logs-ls", 
                    "nw-logs-mon", 
                    "nw-logs-pull", 
                    "nw-logs-info", 
                    "nw-logs-count", 
                    "nw-logs-stopMon", 
                    "nw-logs-download", 
                    "nw-logs-timeRoll", 
                    "nw-sys-ls", 
                    "nw-sys-mon", 
                    "nw-sys-save", 
                    "nw-sys-info", 
                    "nw-sys-count", 
                    "nw-sys-caCert", 
                    "nw-sys-stopMon", 
                    "nw-sys-shutdown", 
                    "nw-sys-fileEdit", 
                    "nw-sys-peerCert", 
                    "nw-sys-servCert", 
                    "nw-sys-statHist", 
                    "nw-users-ls", 
                    "nw-users-mon", 
                    "nw-users-info", 
                    "nw-users-auths", 
                    "nw-users-count", 
                    "nw-users-delete", 
                    "nw-users-unlock", 
                    "nw-users-stopMon", 
                    "nw-users-addOrMod", 
                    "nw-decoder-import", 
                    "nw-decoder-parsers-upload", 
                    "nw-concentrator-reset", 
                    "nw-concentrator-reconfig", 
                    "nw-concentrator-start", 
                    "nw-concentrator-stop", 
                    "nw-concentrator-count", 
                    "nw-concentrator-edit", 
                    "nw-concentrator-add", 
                    "nw-concentrator-meta", 
                    "nw-concentrator-status", 
                    "nw-concentrator-ls", 
                    "nw-concentrator-resetMax", 
                    "nw-concentrator-stopMon", 
                    "nw-concentrator-delete", 
                    "nw-concentrator-whoAgg", 
                    "nw-concentrator-mon", 
                    "nw-broker-reset", 
                    "nw-broker-start", 
                    "nw-broker-stop", 
                    "nw-broker-count", 
                    "nw-broker-edit", 
                    "nw-broker-add", 
                    "nw-broker-meta", 
                    "nw-broker-status", 
                    "nw-broker-ls", 
                    "nw-broker-resetMax", 
                    "nw-broker-stopMon", 
                    "nw-broker-delete", 
                    "nw-broker-whoAgg", 
                    "nw-broker-mon"
                ]
            }
        }, 
        {
            "RSA NetWitness Packets and Logs": {
                "name": "RSA NetWitness Packets and Logs", 
                "fromversion": "3.5.0", 
                "commands": [
                    "netwitness-msearch", 
                    "netwitness-search", 
                    "netwitness-query", 
                    "netwitness-packets", 
                    "nw-sdk-session", 
                    "nw-sdk-content", 
                    "nw-sdk-summary", 
                    "nw-sdk-values", 
                    "nw-database-dump"
                ]
            }
        }, 
        {
            "RSA NetWitness Security Analytics": {
                "name": "RSA NetWitness Security Analytics", 
                "fromversion": "2.0.0", 
                "commands": [
                    "nw-list-incidents", 
                    "nw-login", 
                    "nw-get-components", 
                    "nw-get-events", 
                    "nw-get-available-assignees", 
                    "nw-create-incident", 
                    "nw-add-events-to-incident", 
                    "nw-update-incident", 
                    "fetch-incidents", 
                    "nw-get-alerts", 
                    "nw-get-alert-details", 
                    "nw-get-event-details", 
                    "nw-get-incident-details", 
                    "nw-get-alert-original", 
                    "netwitness-im-list-incidents", 
                    "netwitness-im-login", 
                    "netwitness-im-get-components", 
                    "netwitness-im-get-events", 
                    "netwitness-im-get-available-assignees", 
                    "netwitness-im-create-incident", 
                    "netwitness-im-add-events-to-incident", 
                    "netwitness-im-update-incident", 
                    "netwitness-im-get-alerts", 
                    "netwitness-im-get-alert-details", 
                    "netwitness-im-get-event-details", 
                    "netwitness-im-get-incident-details", 
                    "netwitness-im-get-alert-original"
                ]
            }
        }, 
        {
            "RSA NetWitness v11.1": {
                "name": "RSA NetWitness v11.1", 
                "commands": [
                    "netwitness-get-incident", 
                    "netwitness-get-incidents", 
                    "netwitness-update-incident", 
                    "netwitness-delete-incident", 
                    "netwitness-get-alerts"
                ], 
                "tests": [
                    "RSA NetWitness Test"
                ]
            }
        }, 
        {
            "RTIR": {
                "name": "RTIR", 
                "commands": [
                    "rtir-create-ticket", 
                    "rtir-search-ticket", 
                    "rtir-resolve-ticket", 
                    "rtir-edit-ticket", 
                    "rtir-ticket-history", 
                    "rtir-get-ticket", 
                    "rtir-ticket-attachments", 
                    "rtir-add-comment", 
                    "rtir-add-reply"
                ], 
                "tests": [
                    "RTIR Test"
                ]
            }
        }, 
        {
            "SafeBreach": {
                "name": "SafeBreach", 
                "commands": [
                    "safebreach-rerun", 
                    "safebreach-get-simulation"
                ]
            }
        }, 
        {
            "Salesforce": {
                "name": "Salesforce", 
                "commands": [
                    "salesforce-search", 
                    "salesforce-query", 
                    "salesforce-get-object", 
                    "salesforce-update-object", 
                    "salesforce-create-object", 
                    "salesforce-push-comment", 
                    "salesforce-get-case", 
                    "salesforce-create-case", 
                    "salesforce-update-case", 
                    "salesforce-get-cases", 
                    "salesforce-close-case", 
                    "salesforce-push-comment-threads", 
                    "salesforce-delete-case"
                ]
            }
        }, 
        {
            "Sample Incident Generator": {
                "name": "Sample Incident Generator"
            }
        }, 
        {
            "SCADAfence CNM": {
                "name": "SCADAfence CNM", 
                "commands": [
                    "scadafence-getAlerts", 
                    "scadafence-getAsset", 
                    "scadafence-setAlertStatus", 
                    "scadafence-getAssetConnections", 
                    "scadafence-getAssetTraffic", 
                    "scadafence-createAlert", 
                    "scadafence-getAllConnections"
                ], 
                "tests": [
                    "SCADAfence_test"
                ]
            }
        }, 
        {
            "Secdo": {
                "name": "Secdo", 
                "commands": [
                    "secdo-add-IOCs"
                ]
            }
        }, 
        {
            "SentinelOne": {
                "name": "SentinelOne", 
                "fromversion": "3.1.0", 
                "commands": [
                    "so-activities", 
                    "so-count-by-filters", 
                    "so-agents-count", 
                    "so-agent-decommission", 
                    "so-get-agent", 
                    "so-agents-query", 
                    "so-get-agent-processes", 
                    "so-agent-recommission", 
                    "so-agent-unquarentine", 
                    "so-agent-shutdown", 
                    "so-agent-uninstall", 
                    "so-agents-broadcast", 
                    "so-agents-connect", 
                    "so-agent-quarentine", 
                    "so-agents-decommission", 
                    "so-agents-disconnect", 
                    "so-agents-fetch-logs", 
                    "so-agents-shutdown", 
                    "so-agents-uninstall", 
                    "so-agents-upgrade-software", 
                    "so-create-exclusion-list", 
                    "so-delete-exclusion-list", 
                    "so-get-exclusion-list", 
                    "so-get-exclusion-lists", 
                    "so-update-exclusion-list", 
                    "so-get-groups", 
                    "so-create-group", 
                    "so-get-group", 
                    "so-update-group", 
                    "so-delete-group", 
                    "so-add-agent-to-group", 
                    "so-set-cloud-intelligence", 
                    "so-create-hash", 
                    "so-delete-hash", 
                    "so-get-hash-reputation", 
                    "so-get-hash", 
                    "so-get-hashes", 
                    "so-update-hash", 
                    "so-get-policies", 
                    "so-create-policy", 
                    "so-get-policy", 
                    "so-update-policy", 
                    "so-delete-policy", 
                    "so-get-threat", 
                    "so-get-threats", 
                    "so-threat-summary", 
                    "so-mark-as-threat", 
                    "so-mitigate-threat", 
                    "so-reslove-threats"
                ]
            }
        }, 
        {
            "Server Message Block (SMB)": {
                "name": "Server Message Block (SMB)", 
                "commands": [
                    "smb-download"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Service Manager": {
                "name": "Service Manager", 
                "commands": [
                    "hpsm-create-incident", 
                    "hpsm-list-incidents", 
                    "hpsm-get-incident-by-id", 
                    "hpsm-list-devices", 
                    "hpsm-get-device"
                ]
            }
        }, 
        {
            "ServiceNow": {
                "name": "ServiceNow", 
                "commands": [
                    "servicenow-get-ticket", 
                    "servicenow-get", 
                    "servicenow-incident-get", 
                    "servicenow-create-ticket", 
                    "servicenow-create", 
                    "servicenow-incident-create", 
                    "servicenow-update-ticket", 
                    "servicenow-update", 
                    "servicenow-incident-update", 
                    "servicenow-delete-ticket", 
                    "servicenow-add-link", 
                    "servicenow-incident-add-link", 
                    "servicenow-add-comment", 
                    "servicenow-incident-add-comment", 
                    "servicenow-query-tickets", 
                    "servicenow-query", 
                    "servicenow-incidents-query", 
                    "servicenow-upload-file", 
                    "servicenow-incident-upload-file", 
                    "servicenow-get-groups", 
                    "servicenow-get-computer", 
                    "servicenow-get-record", 
                    "servicenow-query-table", 
                    "servicenow-create-record", 
                    "servicenow-update-record", 
                    "servicenow-delete-record", 
                    "servicenow-list-table-fields", 
                    "servicenow-query-computers", 
                    "servicenow-query-groups", 
                    "servicenow-query-users", 
                    "servicenow-get-table-name", 
                    "servicenow-get-ticket-notes"
                ], 
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        }, 
        {
            "Shodan": {
                "name": "Shodan", 
                "commands": [
                    "search", 
                    "ip"
                ], 
                "tests": [
                    "ShodanTest"
                ]
            }
        }, 
        {
            "Skyformation": {
                "name": "Skyformation", 
                "commands": [
                    "skyformation-get-accounts", 
                    "skyformation-suspend-user", 
                    "skyformation-unsuspend-user"
                ]
            }
        }, 
        {
            "SNDBOX": {
                "name": "SNDBOX", 
                "commands": [
                    "sndbox-is-online", 
                    "sndbox-analysis-info", 
                    "sndbox-analysis-submit-sample", 
                    "sndbox-download-report", 
                    "sndbox-detonate-file", 
                    "sndbox-download-sample"
                ], 
                "tests": [
                    "SNDBOX_Test"
                ]
            }
        }, 
        {
            "SplunkPy": {
                "name": "SplunkPy", 
                "commands": [
                    "splunk-results", 
                    "splunk-search", 
                    "splunk-submit-event", 
                    "splunk-get-indexes", 
                    "splunk-notable-event-edit", 
                    "splunk-job-create", 
                    "splunk-parse-raw"
                ]
            }
        }, 
        {
            "Stealthwatch Cloud": {
                "name": "Stealthwatch Cloud", 
                "commands": [
                    "sw-show-alert", 
                    "sw-update-alert", 
                    "sw-list-alerts", 
                    "sw-block-domain-or-ip", 
                    "sw-unblock-domain", 
                    "sw-list-blocked-domains", 
                    "sw-list-observations", 
                    "sw-list-sessions"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "SumoLogic": {
                "name": "SumoLogic", 
                "commands": [
                    "search"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Symantec Advanced Threat Protection": {
                "name": "Symantec Advanced Threat Protection", 
                "commands": [
                    "satp-appliances", 
                    "satp-command", 
                    "satp-command-state", 
                    "satp-command-cancel", 
                    "satp-events", 
                    "satp-files", 
                    "satp-incident-events", 
                    "satp-incidents"
                ]
            }
        }, 
        {
            "Symantec Endpoint Protection": {
                "name": "Symantec Endpoint Protection", 
                "commands": [
                    "sep-endpoints-info", 
                    "sep-update-content", 
                    "sep-scan", 
                    "sep-groups-info", 
                    "sep-system-info", 
                    "sep-command-status", 
                    "sep-quarantine", 
                    "sep-client-content"
                ], 
                "tests": [
                    "No test - deprecated integration"
                ]
            }
        }, 
        {
            "Symantec Endpoint Protection V2": {
                "name": "Symantec Endpoint Protection V2", 
                "commands": [
                    "sep-endpoints-info", 
                    "sep-groups-info", 
                    "sep-system-info", 
                    "sep-command-status", 
                    "sep-client-content", 
                    "sep-list-policies", 
                    "sep-assign-policy", 
                    "sep-list-locations", 
                    "sep-endpoint-quarantine", 
                    "sep-scan-endpoint", 
                    "sep-update-endpoint-content", 
                    "sep-move-client-to-group"
                ], 
                "tests": [
                    "SymantecEndpointProtection_Test"
                ]
            }
        }, 
        {
            "Symantec Messaging Gateway": {
                "name": "Symantec Messaging Gateway", 
                "commands": [
                    "smg-block-email", 
                    "smg-unblock-email", 
                    "smg-block-domain", 
                    "smg-block-ip", 
                    "smg-unblock-ip", 
                    "smg-unblock-domain", 
                    "smg-get-blocked-domains", 
                    "smg-get-blocked-ips"
                ]
            }
        }, 
        {
            "Symantec MSS": {
                "name": "Symantec MSS", 
                "commands": [
                    "symantec-mss-update-incident", 
                    "symantec-mss-get-incident", 
                    "symantec-mss-incidents-list"
                ], 
                "tests": [
                    "SymantecMSSTest"
                ]
            }
        }, 
        {
            "Tanium": {
                "name": "Tanium", 
                "commands": [
                    "tn-get-package", 
                    "tn-get-all-packages", 
                    "tn-get-object", 
                    "tn-get-all-saved-questions", 
                    "tn-deploy-package", 
                    "tn-ask-question", 
                    "tn-ask-system", 
                    "tn-get-saved-question", 
                    "tn-create-package", 
                    "tn-approve-pending-action", 
                    "tn-get-all-objects", 
                    "tn-get-all-saved-actions", 
                    "tn-get-all-pending-actions", 
                    "tn-get-all-sensors", 
                    "tn-parse-query", 
                    "tn-ask-manual-question", 
                    "tn-get-sensor", 
                    "tn-get-action"
                ]
            }
        }, 
        {
            "TCPIPUtils": {
                "name": "TCPIPUtils", 
                "commands": [
                    "ip"
                ]
            }
        }, 
        {
            "Tenable.io": {
                "name": "Tenable.io", 
                "commands": [
                    "tenable-io-list-scans", 
                    "tenable-io-launch-scan", 
                    "tenable-io-get-scan-report", 
                    "tenable-io-get-vulnerability-details", 
                    "tenable-io-get-vulnerabilities-by-asset", 
                    "tenable-io-get-scan-status"
                ], 
                "tests": [
                    "Tenable.io test"
                ]
            }
        }, 
        {
            "Tenable.sc": {
                "name": "Tenable.sc", 
                "commands": [
                    "tenable-sc-list-scans", 
                    "tenable-sc-launch-scan", 
                    "tenable-sc-get-vulnerability", 
                    "tenable-sc-get-scan-status", 
                    "tenable-sc-get-scan-report", 
                    "tenable-sc-list-credentials", 
                    "tenable-sc-list-policies", 
                    "tenable-sc-list-report-definitions", 
                    "tenable-sc-list-repositories", 
                    "tenable-sc-list-zones", 
                    "tenable-sc-create-scan", 
                    "tenable-sc-delete-scan", 
                    "tenable-sc-list-assets", 
                    "tenable-sc-create-asset", 
                    "tenable-sc-get-asset", 
                    "tenable-sc-delete-asset", 
                    "tenable-sc-list-alerts", 
                    "tenable-sc-get-alert", 
                    "tenable-sc-get-device", 
                    "tenable-sc-list-users", 
                    "tenable-sc-get-system-licensing", 
                    "tenable-sc-get-system-information"
                ], 
                "tests": [
                    "tenable-sc-test"
                ]
            }
        }, 
        {
            "Threat Crowd": {
                "name": "Threat Crowd", 
                "commands": [
                    "threat-crowd-email", 
                    "threat-crowd-domain", 
                    "threat-crowd-ip", 
                    "threat-crowd-antivirus", 
                    "threat-crowd-file"
                ]
            }
        }, 
        {
            "Threat Grid": {
                "name": "Threat Grid", 
                "commands": [
                    "threat-grid-get-samples", 
                    "threat-grid-get-sample-by-id", 
                    "threat-grid-get-sample-state-by-id", 
                    "threat-grid-upload-sample", 
                    "threat-grid-search-submissions", 
                    "threat-grid-get-video-by-id", 
                    "threat-grid-get-analysis-by-id", 
                    "threat-grid-get-processes-by-id", 
                    "threat-grid-get-pcap-by-id", 
                    "threat-grid-get-warnings-by-id", 
                    "threat-grid-get-summary-by-id", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-html-report-by-id", 
                    "threat-grid-download-sample-by-id", 
                    "threat-grid-get-analysis-iocs", 
                    "threat-grid-download-artifact", 
                    "threat-grid-who-am-i", 
                    "threat-grid-user-get-rate-limit", 
                    "threat-grid-get-specific-feed", 
                    "threat-grid-detonate-file", 
                    "threat-grid-url-to-file", 
                    "threat-grid-organization-get-rate-limit", 
                    "threat-grid-search-ips", 
                    "threat-grid-get-analysis-annotations", 
                    "threat-grid-search-samples", 
                    "threat-grid-search-urls", 
                    "threat-grid-get-samples-state", 
                    "threat-grid-feeds-artifacts", 
                    "threat-grid-feeds-domain", 
                    "threat-grid-feeds-ip", 
                    "threat-grid-feeds-network-stream", 
                    "threat-grid-feeds-path", 
                    "threat-grid-feeds-url", 
                    "threat-grid-get-analysis-artifact", 
                    "threat-grid-get-analysis-artifacts", 
                    "threat-grid-get-analysis-ioc", 
                    "threat-grid-get-analysis-metadata", 
                    "threat-grid-get-analysis-network-stream", 
                    "threat-grid-get-analysis-network-streams", 
                    "threat-grid-get-analysis-process", 
                    "threat-grid-get-analysis-processes"
                ], 
                "tests": [
                    "ThreatGridTest"
                ]
            }
        }, 
        {
            "Threat Grid": {
                "name": "Threat Grid", 
                "toversion": "3.1.0", 
                "commands": [
                    "threat-grid-feeds-ip", 
                    "threat-grid-feeds-domain", 
                    "threat-grid-feeds-url", 
                    "threat-grid-feeds-path", 
                    "threat-grid-feeds-artifacts", 
                    "threat-grid-feeds-network-stream", 
                    "threat-grid-feeds-registry-key", 
                    "threat-grid-get-samples", 
                    "threat-grid-get-sample-by-id", 
                    "threat-grid-get-sample-state-by-id", 
                    "threat-grid-get-samples-state", 
                    "threat-grid-upload-sample", 
                    "threat-grid-search-submissions", 
                    "threat-grid-get-video-by-id", 
                    "threat-grid-get-analysis-by-id", 
                    "threat-grid-get-processes-by-id", 
                    "threat-grid-get-pcap-by-id", 
                    "threat-grid-get-warnings-by-id", 
                    "threat-grid-get-summary-by-id", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-html-report-by-id", 
                    "threat-grid-download-sample-by-id", 
                    "threat-grid-get-analysis-iocs", 
                    "threat-grid-get-analysis-ioc", 
                    "threat-grid-get-analysis-network-streams", 
                    "threat-grid-get-analysis-artifacts", 
                    "threat-grid-get-analysis-network-stream", 
                    "threat-grid-get-analysis-artifact", 
                    "threat-grid-get-analysis-processes", 
                    "threat-grid-get-analysis-process", 
                    "threat-grid-get-analysis-annotations", 
                    "threat-grid-get-analysis-metadata", 
                    "threat-grid-download-artifact", 
                    "threat-grid-who-am-i", 
                    "threat-grid-user-get-rate-limit", 
                    "threat-grid-get-specific-feed"
                ]
            }
        }, 
        {
            "ThreatConnect": {
                "name": "ThreatConnect", 
                "commands": [
                    "ip", 
                    "url", 
                    "file", 
                    "tc-owners", 
                    "tc-indicators", 
                    "tc-get-tags", 
                    "tc-tag-indicator", 
                    "tc-get-indicator", 
                    "tc-get-indicators-by-tag", 
                    "tc-add-indicator", 
                    "tc-create-incident", 
                    "tc-fetch-incidents", 
                    "tc-incident-associate-indicator", 
                    "domain", 
                    "tc-get-incident-associate-indicators", 
                    "tc-update-indicator", 
                    "tc-delete-indicator-tag", 
                    "tc-delete-indicator", 
                    "tc-create-campaign", 
                    "tc-create-event", 
                    "tc-create-threat", 
                    "tc-delete-group"
                ], 
                "tests": [
                    "test-ThreatConnect"
                ]
            }
        }, 
        {
            "ThreatExchange": {
                "name": "ThreatExchange", 
                "fromversion": "2.5.0", 
                "commands": [
                    "file", 
                    "ip", 
                    "url", 
                    "domain", 
                    "threatexchange-query", 
                    "threatexchange-members"
                ]
            }
        }, 
        {
            "ThreatMiner": {
                "name": "ThreatMiner", 
                "commands": [
                    "domain", 
                    "ip", 
                    "file"
                ], 
                "tests": [
                    "ThreatMiner-Test"
                ]
            }
        }, 
        {
            "Trend Micro": {
                "name": "Trend Micro", 
                "commands": [
                    "trendmicro-host-retrieve-all", 
                    "trendmicro-system-event-retrieve", 
                    "trendmicro-host-antimalware-scan", 
                    "trendmicro-alert-status", 
                    "trendmicro-security-profile-retrieve-all", 
                    "trendmicro-security-profile-assign-to-host", 
                    "trendmicro-anti-malware-event-retrieve"
                ]
            }
        }, 
        {
            "TruSTAR": {
                "name": "TruSTAR", 
                "commands": [
                    "trustar-related-indicators", 
                    "trustar-trending-indicators", 
                    "trustar-search-indicators", 
                    "trustar-submit-report", 
                    "trustar-update-report", 
                    "trustar-report-details", 
                    "trustar-delete-report", 
                    "trustar-get-reports", 
                    "trustar-correlated-reports", 
                    "trustar-search-reports", 
                    "trustar-add-to-whitelist", 
                    "trustar-remove-from-whitelist", 
                    "trustar-get-enclaves", 
                    "file", 
                    "ip", 
                    "url", 
                    "domain"
                ]
            }
        }, 
        {
            "Twilio": {
                "name": "Twilio", 
                "fromversion": "2.5.0", 
                "commands": [
                    "TwilioSendSMS"
                ]
            }
        }, 
        {
            "urlscan.io": {
                "name": "urlscan.io", 
                "toversion": "3.1.0", 
                "commands": [
                    "url", 
                    "ip", 
                    "file", 
                    "urlscan-submit"
                ]
            }
        }, 
        {
            "urlscan.io": {
                "name": "urlscan.io", 
                "fromversion": "3.5.0", 
                "commands": [
                    "urlscan-search", 
                    "urlscan-submit", 
                    "url"
                ], 
                "tests": [
                    "urlscan_malicious_Test"
                ]
            }
        }, 
        {
            "Vectra": {
                "name": "Vectra", 
                "commands": [
                    "vec-detections", 
                    "vectra-detections", 
                    "vec-hosts", 
                    "vectra-hosts", 
                    "vec-settings", 
                    "vectra-settings", 
                    "vec-health", 
                    "vectra-health", 
                    "vec-triage", 
                    "vectra-triage", 
                    "vec-sensors", 
                    "vectra-sensors", 
                    "vec-get-host-by-id", 
                    "vec-get-detetctions-by-id"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Venafi": {
                "name": "Venafi", 
                "commands": [
                    "venafi-get-certificates", 
                    "venafi-get-certificate-details"
                ], 
                "tests": [
                    "No test - no instance"
                ]
            }
        }, 
        {
            "Verodin": {
                "name": "Verodin", 
                "commands": [
                    "verodin-get-topology-nodes", 
                    "verodin-get-topology-map", 
                    "verodin-manage-sims-actions", 
                    "verodin-manage-sims-actions-run", 
                    "verodin-get-security-zones", 
                    "verodin-get-security-zone", 
                    "verodin-delete-security-zone", 
                    "verodin-get-sims-of-type", 
                    "verodin-get-sim", 
                    "verodin-delete-sim", 
                    "verodin-get-jobs", 
                    "verodin-get-job", 
                    "verodin-run-job-again", 
                    "verodin-get-job-sim-actions", 
                    "verodin-job-cancel"
                ]
            }
        }, 
        {
            "VirusTotal": {
                "name": "VirusTotal", 
                "commands": [
                    "file", 
                    "ip", 
                    "url", 
                    "domain", 
                    "file-scan", 
                    "file-rescan", 
                    "url-scan", 
                    "vt-comments-add", 
                    "vt-file-scan-upload-url", 
                    "vt-comments-get"
                ], 
                "tests": [
                    "virusTotal-test-playbook"
                ]
            }
        }, 
        {
            "VirusTotal - Private API": {
                "name": "VirusTotal - Private API", 
                "commands": [
                    "vt-private-check-file-behaviour", 
                    "vt-private-get-domain-report", 
                    "vt-private-get-file-report", 
                    "vt-private-get-url-report", 
                    "vt-private-get-ip-report", 
                    "vt-private-search-file", 
                    "vt-private-hash-communication", 
                    "vt-private-download-file"
                ], 
                "tests": [
                    "virusTotalPrivateAPI-test-playbook"
                ]
            }
        }, 
        {
            "vmray": {
                "name": "vmray", 
                "commands": [
                    "upload_sample", 
                    "get_results", 
                    "get_job_sample"
                ]
            }
        }, 
        {
            "VMware": {
                "name": "VMware", 
                "commands": [
                    "vmware-get-vms", 
                    "vmware-poweron", 
                    "vmware-poweroff", 
                    "vmware-hard-reboot", 
                    "vmware-suspend", 
                    "vmware-soft-reboot", 
                    "vmware-create-snapshot", 
                    "vmware-revert-snapshot", 
                    "vmware-get-events"
                ]
            }
        }, 
        {
            "VxStream": {
                "name": "VxStream", 
                "commands": [
                    "vx-scan", 
                    "crowdstrike-scan", 
                    "vx-get-environments", 
                    "crowdstrike-get-environments", 
                    "vx-submit-sample", 
                    "crowdstrike-submit-sample", 
                    "vx-search", 
                    "crowdstrike-search", 
                    "vx-result", 
                    "crowdstrike-result", 
                    "vx-detonate-file", 
                    "crowdstrike-detonate-file", 
                    "crowdstrike-submit-url", 
                    "crowdstrike-get-screenshots", 
                    "crowdstrike-detonate-url", 
                    "crowdstrike-submit-file-by-url"
                ], 
                "tests": [
                    "VxStream Test", 
                    "detonate_file_-_generic_test"
                ]
            }
        }, 
        {
            "WhatsMyBrowser": {
                "name": "WhatsMyBrowser", 
                "commands": [
                    "ua-parse"
                ], 
                "tests": [
                    "WhatsMyBrowser-Test"
                ]
            }
        }, 
        {
            "Where is the egg?": {
                "name": "Where is the egg?", 
                "fromversion": "3.6.0", 
                "commands": [
                    "clue"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Whois": {
                "name": "Whois", 
                "fromversion": "4.1.0", 
                "commands": [
                    "whois"
                ], 
                "tests": [
                    "whois_test"
                ]
            }
        }, 
        {
            "WildFire": {
                "name": "WildFire", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote"
                ]
            }
        }, 
        {
            "WildFire": {
                "name": "WildFire", 
                "fromversion": "4.0.0", 
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote", 
                    "wildfire-upload-file-remote"
                ], 
                "tests": [
                    "Wildfire Test"
                ]
            }
        }, 
        {
            "WildFire": {
                "name": "WildFire", 
                "toversion": "3.1.0", 
                "fromversion": "2.5.0", 
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote"
                ]
            }
        }, 
        {
            "Windows Defender Advanced Threat Protection": {
                "name": "Windows Defender Advanced Threat Protection", 
                "commands": [
                    "microsoft-atp-isolate-machine", 
                    "microsoft-atp-unisolate-machine", 
                    "microsoft-atp-get-machines", 
                    "microsoft-atp-get-file-related-machines", 
                    "microsoft-atp-get-machine-details", 
                    "microsoft-atp-run-antivirus-scan", 
                    "microsoft-atp-list-alerts", 
                    "microsoft-atp-update-alert"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "XFE": {
                "name": "XFE", 
                "fromversion": "2.5.0", 
                "commands": [
                    "url", 
                    "file", 
                    "ip", 
                    "domain", 
                    "cve-search", 
                    "cve-latest"
                ]
            }
        }, 
        {
            "Zendesk": {
                "name": "Zendesk", 
                "fromversion": "3.5.0", 
                "commands": [
                    "zendesk-create-ticket", 
                    "zendesk-list-tickets", 
                    "zendesk-ticket-details", 
                    "zendesk-update-ticket", 
                    "zendesk-add-comment", 
                    "zendesk-list-agents", 
                    "zendesk-get-attachment", 
                    "zendesk-clear-cache", 
                    "zendesk-add-user", 
                    "zendesk-get-article"
                ]
            }
        }, 
        {
            "Zendesk": {
                "name": "Zendesk", 
                "toversion": "3.1.0", 
                "commands": [
                    "zendesk-create-ticket", 
                    "zendesk-list-tickets", 
                    "zendesk-ticket-details", 
                    "zendesk-update-ticket", 
                    "zendesk-add-comment", 
                    "zendesk-list-agents", 
                    "zendesk-get-attachment", 
                    "zendesk-clear-cache", 
                    "zendesk-add-user", 
                    "zendesk-get-article"
                ]
            }
        }, 
        {
            "Zoom": {
                "name": "Zoom", 
                "commands": [
                    "zoom-create-user", 
                    "zoom-create-meeting", 
                    "zoom-fetch-recording", 
                    "zoom-list-users", 
                    "zoom-delete-user"
                ]
            }
        }, 
        {
            "Zscaler": {
                "name": "Zscaler", 
                "commands": [
                    "zscaler-blacklist-url", 
                    "url", 
                    "ip", 
                    "zscaler-undo-blacklist-url", 
                    "zscaler-whitelist-url", 
                    "zscaler-undo-whitelist-url", 
                    "zscaler-undo-whitelist-ip", 
                    "zscaler-whitelist-ip", 
                    "zscaler-undo-blacklist-ip", 
                    "zscaler-blacklist-ip", 
                    "zscaler-category-add-url", 
                    "zscaler-category-add-ip", 
                    "zscaler-category-remove-url", 
                    "zscaler-category-remove-ip", 
                    "zscaler-get-categories", 
                    "zscaler-get-blacklist", 
                    "zscaler-get-whitelist"
                ], 
                "tests": [
                    "Zscaler Test"
                ]
            }
        }
    ], 
    "TestPlaybooks": [
        {
            "113aca8a-ee52-419f-89a6-150ee232d0d1": {
                "name": "S3 Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "aws-s3-create-bucket": "AWS - S3", 
                    "aws-s3-get-bucket-policy": "AWS - S3", 
                    "aws-s3-download-file": "AWS - S3", 
                    "aws-s3-delete-bucket-policy": "AWS - S3", 
                    "aws-s3-describe-buckets": "AWS - S3", 
                    "aws-s3-list-bucket-objects": "AWS - S3", 
                    "aws-s3-set-bucket-policy": "AWS - S3", 
                    "aws-s3-delete-bucket": "AWS - S3"
                }
            }
        }, 
        {
            "150778e9-90ca-4c28-873e-f050f2c6d3a3": {
                "name": "HTTPRedirectList Test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "HTTPListRedirects", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "2142f8de-29d5-4288-8426-0db39abe988b": {
                "name": "AWS - EC2 Test Playbook ", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "aws-ec2-describe-regions": "AWS - EC2", 
                    "aws-ec2-describe-volumes": "AWS - EC2", 
                    "aws-ec2-describe-key-pairs": "AWS - EC2", 
                    "aws-ec2-describe-instances": "AWS - EC2", 
                    "aws-ec2-describe-launch-templates": "AWS - EC2", 
                    "aws-ec2-describe-vpcs": "AWS - EC2", 
                    "aws-ec2-describe-security-groups": "AWS - EC2", 
                    "aws-ec2-describe-subnets": "AWS - EC2", 
                    "aws-ec2-describe-snapshots": "AWS - EC2", 
                    "aws-ec2-describe-images": "AWS - EC2", 
                    "aws-ec2-describe-addresses": "AWS - EC2"
                }
            }
        }, 
        {
            "2cddaacb-4e4c-407e-8ef5-d924867b810c": {
                "name": "AWS - CloudWatchLogs Test Playbook_copy", 
                "implementing_scripts": [
                    "GetTime", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "aws-logs-describe-metric-filters": "AWS - CloudWatchLogs", 
                    "aws-logs-create-log-stream": "AWS - CloudWatchLogs", 
                    "aws-logs-put-retention-policy": "AWS - CloudWatchLogs", 
                    "aws-logs-delete-log-group": "AWS - CloudWatchLogs", 
                    "aws-logs-delete-log-stream": "AWS - CloudWatchLogs", 
                    "aws-logs-create-log-group": "AWS - CloudWatchLogs", 
                    "aws-logs-describe-log-streams": "AWS - CloudWatchLogs", 
                    "aws-logs-delete-metric-filter": "AWS - CloudWatchLogs", 
                    "aws-logs-put-log-events": "AWS - CloudWatchLogs", 
                    "aws-logs-describe-log-groups": "AWS - CloudWatchLogs", 
                    "aws-logs-put-metric-filter": "AWS - CloudWatchLogs", 
                    "aws-logs-delete-retention-policy": "AWS - CloudWatchLogs"
                }
            }
        }, 
        {
            "2e7770c4-8b78-4ee5-84c7-22a9e481b166": {
                "name": "Autofocus_test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "IsMaliciousIndicatorFound", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "autofocus-search-sessions": "Autofocus", 
                    "file": "Autofocus", 
                    "autofocus-search-samples": "Autofocus"
                }
            }
        }, 
        {
            "3010a07c-0a85-480c-87db-cf3f09fcbd7c": {
                "name": "ContextGetters-Test", 
                "implementing_scripts": [
                    "ExtractHash", 
                    "IsTrue", 
                    "ContextGetEmails", 
                    "ExtractIP", 
                    "ContextGetHashes", 
                    "ContextGetIps", 
                    "ExtractEmail"
                ]
            }
        }, 
        {
            "3da2e31b-f114-4d7f-8702-117f3b498de9": {
                "name": "AWS - CloudTrail Test Playbook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "aws-cloudtrail-start-logging": "AWS - CloudTrail", 
                    "aws-cloudtrail-update-trail": "AWS - CloudTrail", 
                    "aws-cloudtrail-describe-trails": "AWS - CloudTrail", 
                    "aws-cloudtrail-lookup-events": "AWS - CloudTrail", 
                    "aws-cloudtrail-delete-trail": "AWS - CloudTrail", 
                    "aws-cloudtrail-create-trail": "AWS - CloudTrail", 
                    "aws-cloudtrail-stop-logging": "AWS - CloudTrail"
                }
            }
        }, 
        {
            "4078d8b6-37c6-42d7-8324-16096a2feb51": {
                "name": "AWS - Route53 Test Playbook", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "aws-route53-waiter-resource-record-sets-changed": "AWS - Route53", 
                    "aws-route53-test-dns-answer": "AWS - Route53", 
                    "aws-route53-upsert-record": "AWS - Route53", 
                    "aws-route53-create-record": "AWS - Route53", 
                    "aws-route53-delete-record": "AWS - Route53", 
                    "aws-route53-list-resource-record-sets": "AWS - Route53", 
                    "aws-route53-list-hosted-zones": "AWS - Route53"
                }
            }
        }, 
        {
            "5dc848e5-a649-4394-8300-386770d39d75": {
                "name": "TestGetDuplicatesIncidentsByMl", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "GetDuplicatesMl", 
                    "TestCreateDuplicates"
                ]
            }
        }, 
        {
            "67b0f25f-b061-4468-8613-43ab13147173": {
                "name": "CbP-PlayBook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cbp-fileUpload-download": "carbonblackprotection", 
                    "cbp-connector-search": "carbonblackprotection", 
                    "cbp-connector-get": "carbonblackprotection", 
                    "cbp-fileAnalysis-createOrUpdate": "carbonblackprotection", 
                    "cbp-fileUpload-createOrUpdate": "carbonblackprotection", 
                    "cbp-fileUpload-get": "carbonblackprotection", 
                    "cbp-fileAnalysis-get": "carbonblackprotection"
                }
            }
        }, 
        {
            "7ab45104-22aa-4e1b-8062-cadcbb28d87f": {
                "name": "Test - urlscan", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "url": "urlscan.io", 
                    "ip": "urlscan.io", 
                    "urlscan-submit": "urlscan.io"
                }
            }
        }, 
        {
            "8984405a-4274-470a-8a34-a437d8e2e1c5": {
                "name": "Test - PhishMe", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "IsGreaterThan", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "url": "Phishme Intelligence", 
                    "phishme-search": "Phishme Intelligence", 
                    "email": "Phishme Intelligence", 
                    "file": "Phishme Intelligence", 
                    "ip": "Phishme Intelligence"
                }
            }
        }, 
        {
            "97393cfc-2fc4-4dfe-8b6e-af64067fc436": {
                "name": "AWS - S3 Test Playbook", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "aws-s3-create-bucket": "AWS - S3v2", 
                    "aws-s3-get-bucket-policy": "AWS - S3v2", 
                    "aws-s3-download-file": "AWS - S3v2", 
                    "aws-s3-delete-bucket-policy": "AWS - S3v2", 
                    "aws-s3-delete-bucket": "AWS - S3v2", 
                    "aws-s3-list-buckets": "AWS - S3v2", 
                    "aws-s3-list-bucket-objects": "AWS - S3v2", 
                    "aws-s3-put-bucket-policy": "AWS - S3v2"
                }
            }
        }, 
        {
            "AbuseIPDB PopulateIndicators Test": {
                "name": "AbuseIPDB PopulateIndicators Test", 
                "implementing_scripts": [
                    "AbuseIPDBPopulateIndicators"
                ]
            }
        }, 
        {
            "AbuseIPDB Test": {
                "name": "AbuseIPDB Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "abuseipdb-check-cidr-block": "", 
                    "ip": "AbuseIPDB", 
                    "abuseipdb-get-blacklist": "", 
                    "abuseipdb-report-ip": ""
                }
            }
        }, 
        {
            "account_enrichment_-_generic_test": {
                "name": "Account Enrichment - Generic Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Account Enrichment - Generic"
                ]
            }
        }, 
        {
            "ActiveMQ Test": {
                "name": "ActiveMQ Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "activemq-send": "ActiveMQ", 
                    "activemq-subscribe": "ActiveMQ"
                }
            }
        }, 
        {
            "af2f5a99-d70b-48c1-8c25-519732b733f2": {
                "name": "nmap-test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Print", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "nmap-scan": "nmap"
                }
            }
        }, 
        {
            "Alexa Test Playbook": {
                "name": "Alexa Test Playbook", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "Alexa Rank Indicator"
                }
            }
        }, 
        {
            "AlphaSOC-Wisdom-Test": {
                "name": "AlphaSOC Wisdom Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "wisdom-ip-flags": "AlphaSOC Wisdom", 
                    "wisdom-domain-flags": "AlphaSOC Wisdom"
                }
            }
        }, 
        {
            "Anomali_ThreatStream_Test": {
                "name": "Anomali ThreatStream Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "Anomali ThreatStream", 
                    "domain": "Anomali ThreatStream", 
                    "threatstream-email-reputation": "Anomali ThreatStream", 
                    "threatstream-intelligence": "Anomali ThreatStream", 
                    "file": "Anomali ThreatStream"
                }
            }
        }, 
        {
            "Archer-Test-Playbook": {
                "name": "Archer-Test-Playbook", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "archer-get-application-fields": "RSA Archer", 
                    "archer-update-record": "RSA Archer", 
                    "archer-search-records": "RSA Archer", 
                    "archer-create-record": "RSA Archer", 
                    "archer-delete-record": "RSA Archer", 
                    "archer-search-applications": "RSA Archer", 
                    "archer-get-record": "RSA Archer"
                }
            }
        }, 
        {
            "ArcSight Logger test": {
                "name": "ArcSight Logger test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "as-search": "ArcSight Logger", 
                    "as-close": "ArcSight Logger", 
                    "as-drilldown": "ArcSight Logger", 
                    "as-search-events": "ArcSight Logger", 
                    "as-status": "ArcSight Logger", 
                    "as-events": "ArcSight Logger"
                }
            }
        }, 
        {
            "AttivoBotsinkTest": {
                "name": "AttivoBotsinkTest", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "attivo-list-hosts": "", 
                    "attivo-list-users": "", 
                    "attivo-check-user": "", 
                    "attivo-run-playbook": "", 
                    "attivo-check-host": "", 
                    "attivo-get-events": "", 
                    "attivo-deploy-decoy": "", 
                    "attivo-list-playbooks": ""
                }
            }
        }, 
        {
            "Autoextract - Test": {
                "name": "Autoextract - Test", 
                "implementing_scripts": [
                    "autoextract_test", 
                    "DeleteContext", 
                    "PrintErrorEntry"
                ]
            }
        }, 
        {
            "awake_security_test_pb": {
                "name": "awake_security_test_pb", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "Awake Security", 
                    "ip": "Awake Security", 
                    "awake-query-activities": "", 
                    "awake-pcap-download": "", 
                    "awake-query-domains": "", 
                    "awake-query-devices": "", 
                    "device": "Awake Security", 
                    "email": "Awake Security"
                }
            }
        }, 
        {
            "Base64 File in List Test": {
                "name": "Base64 File in List Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Base64ListToFile"
                ]
            }
        }, 
        {
            "BigFixTest": {
                "name": "BigFixTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "bigfix-action-delete": "", 
                    "bigfix-action-stop": "", 
                    "bigfix-get-site": "BigFix", 
                    "bigfix-get-sites": "BigFix", 
                    "bigfix-action-status": "", 
                    "bigfix-get-patches": "BigFix", 
                    "bigfix-get-endpoints": "BigFix", 
                    "bigfix-deploy-patch": "BigFix"
                }
            }
        }, 
        {
            "block_endpoint_-_carbon_black_response_-_test": {
                "name": "Block Endpoint - Carbon Black Response - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Block Endpoint - Carbon Black Response"
                ], 
                "command_to_integration": {
                    "cb-list-sensors": "carbonblack", 
                    "cb-unquarantine-device": "carbonblack", 
                    "cb-sensor-info": "carbonblack"
                }
            }
        }, 
        {
            "block_indicators_-_generic_-_test": {
                "name": "Block Indicators - Generic - Test", 
                "implementing_playbooks": [
                    "Block Indicators - Generic"
                ]
            }
        }, 
        {
            "blockip_test_playbook": {
                "name": "blockip_test_playbook", 
                "implementing_scripts": [
                    "BlockIP"
                ]
            }
        }, 
        {
            "buildewsquery_test": {
                "name": "BuildEWSQuery Test", 
                "implementing_scripts": [
                    "BuildEWSQuery", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "c7d68ad5MxToolbox_test": {
                "name": "MxToolbox_test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Exists", 
                    "ToTable"
                ], 
                "command_to_integration": {
                    "mxtoolbox": "MxToolBox"
                }
            }
        }, 
        {
            "calculate_severity_-_critical_assets_-_test": {
                "name": "Calculate Severity - Critical assets - Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "ADGetUser"
                ], 
                "implementing_playbooks": [
                    "Calculate Severity - Critical assets"
                ]
            }
        }, 
        {
            "CarbonBlackLiveResponseTest": {
                "name": "Carbon Black Live Response Test", 
                "implementing_scripts": [
                    "TestCreateWordFile", 
                    "DeleteContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "cb-get-file-from-endpoint": "", 
                    "cb-command-create-and-wait": "carbonblackliveresponse", 
                    "cb-session-create-and-wait": "", 
                    "cb-keepalive": "carbonblackliveresponse", 
                    "cb-file-delete-from-endpoint": "", 
                    "cb-push-file-to-endpoint": "", 
                    "cb-list-sessions": "", 
                    "cb-session-close": "carbonblackliveresponse"
                }
            }
        }, 
        {
            "CarbonBlackResponseTest": {
                "name": "Carbon Black Response Test", 
                "implementing_scripts": [
                    "CarbonBlackResponseFilterSensors", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cb-watchlist-new": "carbonblack-v2", 
                    "cb-get-processes": "carbonblack-v2", 
                    "cb-get-process": "carbonblack-v2", 
                    "cb-watchlist-del": "carbonblack-v2", 
                    "cb-process-events": "carbonblack-v2", 
                    "cb-quarantine-device": "carbonblack-v2", 
                    "cb-sensor-info": "carbonblack-v2", 
                    "cb-binary": "carbonblack-v2", 
                    "cb-binary-get": "carbonblack-v2", 
                    "cb-get-hash-blacklist": "carbonblack-v2", 
                    "cb-watchlist-set": "carbonblack-v2", 
                    "cb-unquarantine-device": "carbonblack-v2", 
                    "cb-unblock-hash": "carbonblack-v2", 
                    "cb-alert-update": "carbonblack-v2", 
                    "cb-block-hash": "carbonblack-v2", 
                    "cb-alert": "carbonblack-v2"
                }
            }
        }, 
        {
            "Centreon-Test-Playbook": {
                "name": "Centreon-Test-Playbook", 
                "command_to_integration": {
                    "centreon-get-host-status": "Centreon"
                }
            }
        }, 
        {
            "CheckpointFW-test": {
                "name": "CheckpointFW-test", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "CheckpointFWBackupStatus", 
                    "DeleteContext", 
                    "Sleep", 
                    "CheckpointFWCreateBackup"
                ], 
                "command_to_integration": {
                    "checkpoint-delete-rule": "Check Point", 
                    "checkpoint-block-ip": "Check Point", 
                    "checkpoint-set-rule": "Check Point", 
                    "checkpoint-show-access-rule-base": "Check Point", 
                    "checkpoint-show-hosts": "Check Point"
                }
            }
        }, 
        {
            "CirclIntegrationTest": {
                "name": "CIRCL Test", 
                "implementing_scripts": [
                    "VerifyHumanReadableContains", 
                    "PrintErrorEntry", 
                    "isError"
                ], 
                "command_to_integration": {
                    "circl-ssl-get-certificate": "", 
                    "circl-ssl-list-certificates": "", 
                    "circl-ssl-query-certificate": "CIRCL", 
                    "circl-dns-get": "CIRCL"
                }
            }
        }, 
        {
            "Cisco Umbrella Test": {
                "name": "Cisco Umbrella Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "umbrella-ip-dns-history": "", 
                    "domain": "Cisco Umbrella Investigate", 
                    "umbrella-domain-related": "", 
                    "umbrella-get-domains-using-regex": "", 
                    "umbrella-domain-dns-history": "", 
                    "umbrella-get-url-timeline": "", 
                    "umbrella-get-domain-classifiers": "", 
                    "umbrella-get-malicious-domains-for-ip": "", 
                    "umbrella-get-domains-for-email-registrar": "", 
                    "umbrella-get-domains-for-nameserver": "", 
                    "umbrella-domain-categorization": "", 
                    "umbrella-domain-security": "", 
                    "umbrella-get-domain-timeline": "", 
                    "umbrella-get-domain-details": "", 
                    "umbrella-ip-malicious-domains": "", 
                    "umbrella-get-related-domains": "", 
                    "umbrella-get-whois-for-domain": "", 
                    "umbrella-domain-search": "", 
                    "umbrella-domain-co-occurrences": "", 
                    "umbrella-get-ip-timeline": "", 
                    "umbrella-get-domain-queryvolume": ""
                }
            }
        }, 
        {
            "cisco-ise-test-playbook": {
                "name": "cisco-ise-test-playbook", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "cisco-ise-get-endpoints": "Cisco pxGrid ISE"
                }
            }
        }, 
        {
            "Cisco-Meraki-Test": {
                "name": "Cisco-Meraki-Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "meraki-get-organization-license-state": "", 
                    "meraki-fetch-networks": "", 
                    "meraki-fetch-organizations": "", 
                    "meraki-fetch-devices": "", 
                    "meraki-fetch-organization-inventory": ""
                }
            }
        }, 
        {
            "Cisco-Umbrella-Test": {
                "name": "Cisco-Umbrella-Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "umbrella-ip-dns-history": "Cisco Umbrella Investigate", 
                    "umbrella-domain-related": "Cisco Umbrella Investigate", 
                    "umbrella-domain-dns-history": "Cisco Umbrella Investigate", 
                    "investigate-umbrella-domain-co-occurrences": "Cisco Umbrella Investigate", 
                    "investigate-umbrella-domain-dns-history": "Cisco Umbrella Investigate", 
                    "umbrella-domain-security": "Cisco Umbrella Investigate", 
                    "investigate-umbrella-domain-search": "Cisco Umbrella Investigate", 
                    "umbrella-domain-search": "Cisco Umbrella Investigate", 
                    "investigate-umbrella-domain-related": "Cisco Umbrella Investigate", 
                    "umbrella-domain-co-occurrences": "Cisco Umbrella Investigate", 
                    "umbrella-domain-categorization": "Cisco Umbrella Investigate"
                }
            }
        }, 
        {
            "ConvertKeysToTableFieldFormat_Test": {
                "name": "ConvertKeysToTableFieldFormat Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry", 
                    "ConvertKeysToTableFieldFormat", 
                    "ParseJSON", 
                    "isError"
                ]
            }
        }, 
        {
            "CopyContextToFieldTest": {
                "name": "CopyContextToFieldTest", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep", 
                    "Set", 
                    "PrintErrorEntry", 
                    "CopyContextToField"
                ]
            }
        }, 
        {
            "CreateEmailHtmlBody_test_pb": {
                "name": "CreateEmailHtmlBody_test_pb", 
                "implementing_scripts": [
                    "CreateEmailHtmlBody", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "CreatePhishingClassifierMLTest": {
                "name": "Create Phishing Classifier ML Test", 
                "implementing_scripts": [
                    "DBotPredictPhishingLabel", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "TestCreateTagTextFile", 
                    "TestCreateIncidents"
                ], 
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ]
            }
        }, 
        {
            "CrowdStrike Endpoint Enrichment - Test": {
                "name": "CrowdStrike Endpoint Enrichment - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry"
                ], 
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ], 
                "command_to_integration": {
                    "cs-device-search": "FalconHost", 
                    "cs-detection-search": "FalconHost"
                }
            }
        }, 
        {
            "CrowdStrike Falcon Intel v2": {
                "name": "CrowdStrike Falcon Intel v2", 
                "implementing_scripts": [
                    "RaiseError", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "FalconIntel", 
                    "url": "FalconIntel", 
                    "ip": "FalconIntel", 
                    "cs-actors": "FalconIntel", 
                    "cs-indicators": "FalconIntel", 
                    "file": "FalconIntel", 
                    "cs-reports": "FalconIntel"
                }
            }
        }, 
        {
            "crowdstrike_falconhost_test": {
                "name": "CrowdStrike FalconHost Test", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cs-device-ran-on": "FalconHost", 
                    "cs-device-search": "FalconHost", 
                    "cs-device-details": "FalconHost"
                }
            }
        }, 
        {
            "CuckooTest": {
                "name": "CuckooTest", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate URL - Cuckoo", 
                    "Detonate File - Cuckoo"
                ]
            }
        }, 
        {
            "cve_enrichment_-_generic_-_test": {
                "name": "CVE Enrichment - Generic - Test", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "CVE Enrichment - Generic"
                ]
            }
        }, 
        {
            "cveReputation Test": {
                "name": "cveReputation Test", 
                "implementing_scripts": [
                    "VerifyHumanReadableContains", 
                    "cveReputation"
                ]
            }
        }, 
        {
            "Cybereason Test": {
                "name": "Cybereason Test", 
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cybereason-query-user": "", 
                    "cybereason-malop-processes": "Cybereason", 
                    "cybereason-query-file": "Cybereason", 
                    "cybereason-query-connections": "Cybereason", 
                    "cybereason-is-probe-connected": "Cybereason", 
                    "cybereason-query-malops": "Cybereason", 
                    "cybereason-query-domain": "", 
                    "cybereason-query-processes": "Cybereason"
                }
            }
        }, 
        {
            "Cylance Protect v2 Test": {
                "name": "Cylance Protect v2 Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cylance-protect-delete-hash-from-lists": "", 
                    "cylance-protect-download-threat": "", 
                    "cylance-protect-get-zones": "", 
                    "cylance-protect-get-devices": "", 
                    "cylance-protect-get-policies": "", 
                    "cylance-protect-get-list": "", 
                    "cylance-protect-get-threat": "", 
                    "cylance-protect-get-device-threats": "", 
                    "cylance-protect-get-policy-details": "", 
                    "cylance-protect-add-hash-to-list": ""
                }
            }
        }, 
        {
            "d5cb69b1-c81c-4f27-8a40-3106c0cb2620": {
                "name": "AWS - IAM Test Playbook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "aws-iam-update-user": "AWS - IAM", 
                    "aws-iam-update-access-key": "AWS - IAM", 
                    "aws-iam-get-user": "AWS - IAM", 
                    "aws-iam-remove-user-from-group": "AWS - IAM", 
                    "aws-iam-add-role-to-instance-profile": "AWS - IAM", 
                    "aws-iam-create-instance-profile": "AWS - IAM", 
                    "aws-iam-list-roles": "AWS - IAM", 
                    "aws-iam-attach-policy": "AWS - IAM", 
                    "aws-iam-create-login-profile": "AWS - IAM", 
                    "aws-iam-create-group": "AWS - IAM", 
                    "aws-iam-get-instance-profile": "AWS - IAM", 
                    "aws-iam-list-instance-profiles-for-role": "AWS - IAM", 
                    "aws-iam-update-login-profile": "AWS - IAM", 
                    "aws-iam-list-policies": "AWS - IAM", 
                    "aws-iam-get-role": "AWS - IAM", 
                    "aws-iam-list-access-keys-for-user": "AWS - IAM", 
                    "aws-iam-list-instance-profiles": "AWS - IAM", 
                    "aws-iam-delete-role": "AWS - IAM", 
                    "aws-iam-list-groups": "AWS - IAM", 
                    "aws-iam-remove-role-from-instance-profile": "AWS - IAM", 
                    "aws-iam-delete-user": "AWS - IAM", 
                    "aws-iam-create-role": "AWS - IAM", 
                    "aws-iam-delete-access-key": "AWS - IAM", 
                    "aws-iam-detach-policy": "AWS - IAM", 
                    "aws-iam-create-access-key": "AWS - IAM", 
                    "aws-iam-delete-group": "AWS - IAM", 
                    "aws-iam-create-user": "AWS - IAM", 
                    "aws-iam-delete-login-profile": "AWS - IAM", 
                    "aws-iam-list-groups-for-user": "AWS - IAM", 
                    "aws-iam-add-user-to-group": "AWS - IAM", 
                    "aws-iam-list-users": "AWS - IAM", 
                    "aws-iam-delete-instance-profile": "AWS - IAM"
                }
            }
        }, 
        {
            "d66e5f86-e045-403f-819e-5058aa603c32": {
                "name": "AWS - EC2 Test Playbook actions", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "aws-ec2-create-snapshot": "AWS - EC2", 
                    "aws-ec2-monitor-instances": "AWS - EC2_copy", 
                    "aws-ec2-modify-volume": "AWS - EC2", 
                    "aws-ec2-waiter-instance-terminated": "AWS - EC2", 
                    "aws-ec2-reboot-instances": "AWS - EC2_copy", 
                    "aws-ec2-delete-snapshot": "AWS - EC2", 
                    "aws-ec2-get-latest-ami": "AWS - EC2", 
                    "aws-ec2-associate-address": "AWS - EC2", 
                    "aws-ec2-create-volume": "AWS - EC2", 
                    "aws-ec2-modify-network-interface-attribute": "AWS - EC2_copy", 
                    "aws-ec2-waiter-instance-stopped": "AWS - EC2", 
                    "aws-ec2-describe-instances": "AWS - EC2", 
                    "aws-ec2-delete-security-group": "AWS - EC2", 
                    "aws-ec2-create-image": "AWS - EC2", 
                    "aws-ec2-allocate-address": "AWS - EC2", 
                    "aws-ec2-attach-volume": "AWS - EC2", 
                    "aws-ec2-run-instances": "AWS - EC2", 
                    "aws-ec2-start-instances": "AWS - EC2", 
                    "aws-ec2-disassociate-address": "AWS - EC2", 
                    "aws-ec2-waiter-image-available": "AWS - EC2", 
                    "aws-ec2-modify-instance-attribute": "AWS - EC2_copy", 
                    "aws-ec2-waiter-instance-status-ok": "AWS - EC2", 
                    "aws-ec2-create-security-group": "AWS - EC2", 
                    "aws-ec2-delete-volume": "AWS - EC2", 
                    "aws-ec2-release-address": "AWS - EC2", 
                    "aws-ec2-copy-snapshot": "AWS - EC2_copy", 
                    "aws-ec2-authorize-security-group-ingress-rule": "AWS - EC2", 
                    "aws-ec2-create-tags": "AWS - EC2", 
                    "aws-ec2-deregister-image": "AWS - EC2", 
                    "aws-ec2-unmonitor-instances": "AWS - EC2_copy", 
                    "aws-ec2-detach-volume": "AWS - EC2", 
                    "aws-ec2-revoke-security-group-ingress-rule": "AWS - EC2", 
                    "aws-ec2-waiter-instance-running": "AWS - EC2", 
                    "aws-ec2-terminate-instances": "AWS - EC2", 
                    "aws-ec2-waiter-snapshot_completed": "AWS - EC2", 
                    "aws-ec2-copy-image": "AWS - EC2_copy", 
                    "aws-ec2-stop-instances": "AWS - EC2"
                }
            }
        }, 
        {
            "d8628445-ff86-40f9-857d-50b3f1d295a6": {
                "name": "Sandblast malicious test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Exists", 
                    "echo"
                ], 
                "command_to_integration": {
                    "sandblast-query": "Check Point Sandblast 2", 
                    "sandblast-upload": "Check Point Sandblast 2"
                }
            }
        }, 
        {
            "decodemimeheader_-_test": {
                "name": "DecodeMimeHeader - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DecodeMimeHeader", 
                    "DeleteContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "dedup_-_generic_-_test": {
                "name": "Dedup - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "CreateDuplicateIncident", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Dedup - Generic"
                ]
            }
        }, 
        {
            "DemistoLockTest": {
                "name": "DemistoLockTest", 
                "implementing_scripts": [
                    "Set", 
                    "Print", 
                    "DeleteContext", 
                    "Sleep", 
                    "isError"
                ], 
                "command_to_integration": {
                    "demisto-lock-release-all": "Demisto Lock", 
                    "demisto-lock-release": "Demisto Lock", 
                    "demisto-lock-get": "Demisto Lock", 
                    "demisto-lock-info": "Demisto Lock"
                }
            }
        }, 
        {
            "DemistoUploadFileToIncident Test": {
                "name": "DemistoUploadFileToIncident Test", 
                "implementing_scripts": [
                    "DemistoUploadFileToIncident", 
                    "http"
                ]
            }
        }, 
        {
            "Detonate File - BitDam Test": {
                "name": "Detonate File - BitDam Test", 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Detonate File - BitDam"
                ]
            }
        }, 
        {
            "Detonate File - Generic Test": {
                "name": "Detonate File - Generic Test", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        }, 
        {
            "Detonate File - HybridAnalysis - Test": {
                "name": "Detonate File - HybridAnalysis - Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate File - HybridAnalysis"
                ]
            }
        }, 
        {
            "Detonate File - No Files test": {
                "name": "Detonate File - No Files test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        }, 
        {
            "Detonate File - SNDBOX - Test": {
                "name": "Detonate File - SNDBOX - Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate File - SNDBOX"
                ]
            }
        }, 
        {
            "Detonate URL - Generic Test": {
                "name": "Detonate URL - Generic Test", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Detonate URL - Generic"
                ]
            }
        }, 
        {
            "detonate_file_-_generic_test": {
                "name": "Detonate File - Generic Test", 
                "toversion": "3.6.0", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        }, 
        {
            "devo_test_playbook": {
                "name": "Devo test playbook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "devo-query": "Devo"
                }
            }
        }, 
        {
            "DNSDBTest": {
                "name": "DNSDBTest", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "dnsdb-rrset": "Farsight DNSDB_copy", 
                    "dnsdb-rdata": "Farsight DNSDB_copy"
                }
            }
        }, 
        {
            "dnstwistTest": {
                "name": "dnstwistTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "dnstwist-domain-variations": "dnstwist"
                }
            }
        }, 
        {
            "DocumentationTest": {
                "name": "DocumentationTest", 
                "implementing_scripts": [
                    "DocumentationAutomation", 
                    "DeleteContext", 
                    "http"
                ]
            }
        }, 
        {
            "domain_enrichment_generic_test": {
                "name": "Domain Enrichment Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Domain Enrichment - Generic"
                ]
            }
        }, 
        {
            "DomainTools-Test": {
                "name": "DomainTools-Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "NotInContextVerification", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "DomainTools", 
                    "whois": "DomainTools", 
                    "reverseWhois": "DomainTools", 
                    "reverseNameServer": "DomainTools", 
                    "domainSearch": "DomainTools", 
                    "domainProfile": "DomainTools", 
                    "whoisHistory": "DomainTools", 
                    "reverseIP": "DomainTools"
                }
            }
        }, 
        {
            "DUO Test Playbook": {
                "name": "DUO Test Playbook", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry", 
                    "AreValuesEqual", 
                    "PrintContext"
                ], 
                "command_to_integration": {
                    "duo-preauth": ""
                }
            }
        }, 
        {
            "efc817d2-6660-4d4f-890d-90513ca1e180": {
                "name": "Cisco Spark Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "cisco-spark-send-message-to-person": "Cisco Spark", 
                    "cisco-spark-list-teams": "Cisco Spark", 
                    "cisco-spark-list-people": "Cisco Spark", 
                    "cisco-spark-create-team": "Cisco Spark", 
                    "cisco-spark-delete-team": "Cisco Spark", 
                    "cisco-spark-delete-message": "Cisco Spark", 
                    "cisco-spark-send-message-to-room": "Cisco Spark", 
                    "cisco-spark-list-messages": "Cisco Spark", 
                    "cisco-spark-list-rooms": "Cisco Spark"
                }
            }
        }, 
        {
            "email_test": {
                "name": "Email Address Enrichment - Generic - Test", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic"
                ]
            }
        }, 
        {
            "endpoint_enrichment_-_generic_test": {
                "name": "Endpoint Enrichment - Generic Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ]
            }
        }, 
        {
            "entity_enrichment_generic_test": {
                "name": "Entity Enrichment - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Entity Enrichment - Generic"
                ]
            }
        }, 
        {
            "EWS Mail Sender Test": {
                "name": "EWS Mail Sender Test", 
                "implementing_scripts": [
                    "http"
                ], 
                "command_to_integration": {
                    "send-mail": "EWS Mail Sender"
                }
            }
        }, 
        {
            "EWS Public Folders Test": {
                "name": "EWS Public Folders Test", 
                "command_to_integration": {
                    "ews-search-mailbox": "", 
                    "ews-get-items-from-folder": "", 
                    "ews-find-folders": "", 
                    "ews-get-folder": ""
                }
            }
        }, 
        {
            "EWS search-mailbox test": {
                "name": "EWS search-mailbox test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "ews-search-mailbox": "", 
                    "ews-move-item": "", 
                    "send-mail": ""
                }
            }
        }, 
        {
            "EWS test": {
                "name": "EWS test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "FileCreateAndUpload", 
                    "SendEmail"
                ], 
                "command_to_integration": {
                    "ews-delete-attachments": "EWS_most_updated", 
                    "ews-get-searchable-mailboxes": "EWS_most_updated", 
                    "ews-search-mailbox": "EWS_most_updated", 
                    "ews-find-folders": "EWS_most_updated", 
                    "ews-get-items": "EWS_most_updated", 
                    "ews-get-folder": "EWS_most_updated", 
                    "ews-get-attachment": "EWS_most_updated", 
                    "ews-delete-items": "EWS_most_updated"
                }
            }
        }, 
        {
            "EWSv2_empty_attachment_test": {
                "name": "EWSv2_empty_attachment_test", 
                "command_to_integration": {
                    "ews-get-attachment": "EWS v2"
                }
            }
        }, 
        {
            "ExifReadTest": {
                "name": "ExifReadTest", 
                "implementing_scripts": [
                    "GenerateImageFileEntry", 
                    "ExifRead", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "exporttocsv_script_test": {
                "name": "ExportToCSV script test", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "ExportToCSV", 
                    "AreValuesEqual", 
                    "ReadFile"
                ]
            }
        }, 
        {
            "ExposeIncidentOwner-Test": {
                "name": "ExposeIncidentOwner-Test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "AssignAnalystToIncident", 
                    "ExposeIncidentOwner", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "Extract Indicators From File - test": {
                "name": "Extract Indicators From File - test", 
                "implementing_scripts": [
                    "PrintErrorEntry", 
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Extract Indicators From File - Generic"
                ]
            }
        }, 
        {
            "extract_indicators_-_generic_-_test": {
                "name": "Extract Indicators - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "IncidentSet", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_playbooks": [
                    "Extract Indicators - Generic"
                ]
            }
        }, 
        {
            "ExtractDomainTest": {
                "name": "ExtractDomainTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "ExtractDomain"
                ]
            }
        }, 
        {
            "ExtractURL Test": {
                "name": "ExtractURL Test", 
                "implementing_scripts": [
                    "Print", 
                    "ExtractURL", 
                    "IsTrue"
                ]
            }
        }, 
        {
            "fd93f620-9a2d-4fb6-85d1-151a6a72e46d": {
                "name": "AWS - SQS Test Playbook", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "aws-sqs-purge-queue": "AWS - SQS", 
                    "aws-sqs-list-queues": "AWS - SQS", 
                    "aws-sqs-send-message": "AWS - SQS", 
                    "aws-sqs-get-queue-url": "AWS - SQS", 
                    "aws-sqs-create-queue": "AWS - SQS", 
                    "aws-sqs-delete-queue": "AWS - SQS"
                }
            }
        }, 
        {
            "Fidelis-Test": {
                "name": "Fidelis-Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry"
                ], 
                "command_to_integration": {
                    "fidelis-list-alerts": "", 
                    "fidelis-get-alert": ""
                }
            }
        }, 
        {
            "File Enrichment - Generic Test": {
                "name": "File Enrichment - Generic Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "File Enrichment - Generic"
                ]
            }
        }, 
        {
            "FireEye HX Test": {
                "name": "FireEye HX Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "fireeye-hx-get-indicators": "FireEye HX", 
                    "fireeye-hx-create-indicator": "FireEye HX", 
                    "fireeye-hx-get-alert": "FireEye HX", 
                    "fireeye-hx-delete-file-acquisition": "FireEye HX", 
                    "fireeye-hx-get-alerts": "FireEye HX", 
                    "fireeye-hx-get-host-information": "FireEye HX", 
                    "fireeye-hx-append-conditions": "", 
                    "fireeye-hx-get-indicator": "FireEye HX", 
                    "fireeye-hx-file-acquisition": "FireEye HX"
                }
            }
        }, 
        {
            "forcepoint test": {
                "name": "forcepoint test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "fp-get-category-detailes": "Forcepoint", 
                    "fp-delete-address-from-category": "Forcepoint", 
                    "fp-add-address-to-category": "Forcepoint", 
                    "fp-add-category": "Forcepoint", 
                    "fp-delete-categories": "Forcepoint"
                }
            }
        }, 
        {
            "Fortigate Test": {
                "name": "Fortigate Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "fortigate-move-policy": "", 
                    "fortigate-create-firewall-service": "", 
                    "fortigate-get-service-groups": "", 
                    "fortigate-get-policy": "", 
                    "fortigate-get-address-groups": "", 
                    "fortigate-get-firewall-service": "", 
                    "fortigate-delete-policy": "", 
                    "fortigate-get-addresses": "", 
                    "fortigate-update-service-group": "", 
                    "fortigate-update-address-group": "", 
                    "fortigate-delete-address-group": "", 
                    "fortigate-create-address-group": "", 
                    "fortigate-create-policy": "", 
                    "fortigate-update-policy": ""
                }
            }
        }, 
        {
            "GeneratePassword-Test": {
                "name": "GeneratePassword-Test", 
                "implementing_scripts": [
                    "Print", 
                    "GeneratePassword", 
                    "DeleteContext", 
                    "Exists"
                ]
            }
        }, 
        {
            "Get File Sample By Hash - Generic - Test": {
                "name": "Get File Sample By Hash - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Get File Sample By Hash - Generic"
                ]
            }
        }, 
        {
            "Get File Sample From Hash - Generic - Test": {
                "name": "Get File Sample From Hash - Generic - Test", 
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Get File Sample From Hash - Generic"
                ]
            }
        }, 
        {
            "get_file_sample_by_hash_-_carbon_black_enterprise_Response_-_test": {
                "name": "Get File Sample By Hash - Carbon Black Enterprise Response - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Get File Sample By Hash - Carbon Black Enterprise Response"
                ]
            }
        }, 
        {
            "get_file_sample_by_hash_-_cylance_protect_-_test": {
                "name": "Get File Sample By Hash - Cylance Protect - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Get File Sample By Hash - Cylance Protect"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_carbon_black_enterprise_response_-_test": {
                "name": "Get File Sample From Path - Carbon Black Enterprise Response - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Get File Sample From Path - Carbon Black Enterprise Response"
                ], 
                "command_to_integration": {
                    "cb-list-sensors": "carbonblack"
                }
            }
        }, 
        {
            "get_file_sample_from_path_-_d2_-_test": {
                "name": "Get File Sample From Path - D2 - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Get File Sample From Path - D2"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_generic_-_test": {
                "name": "Get File Sample From Path - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Get File Sample From Path - Generic"
                ], 
                "command_to_integration": {
                    "cb-list-sensors": "carbonblack"
                }
            }
        }, 
        {
            "get_original_email_-_ews-_test": {
                "name": "Get Original Email - EWS - Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_playbooks": [
                    "Get Original Email - EWS"
                ]
            }
        }, 
        {
            "get_original_email_-_gmail_-_test": {
                "name": "Get Original Email - Gmail - Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_playbooks": [
                    "Get Original Email - Gmail"
                ]
            }
        }, 
        {
            "GetTime-Test": {
                "name": "GetTime-Test", 
                "implementing_scripts": [
                    "GetTime", 
                    "DeleteContext", 
                    "MatchRegex"
                ]
            }
        }, 
        {
            "Gmail Convert Html Test": {
                "name": "Gmail Convert Html Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry", 
                    "PrintContext"
                ], 
                "command_to_integration": {
                    "gmail-search": ""
                }
            }
        }, 
        {
            "GmailTest": {
                "name": "GmailTest", 
                "implementing_scripts": [
                    "GetTime", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "gmail-add-delete-filter": "Gmail", 
                    "gmail-get-thread": "Gmail", 
                    "gmail-get-tokens-for-user": "Gmail", 
                    "gmail-search-all-mailboxes": "Gmail", 
                    "gmail-get-attachments": "Gmail", 
                    "gmail-list-users": "Gmail", 
                    "gmail-delete-user": "Gmail", 
                    "gmail-create-user": "Gmail", 
                    "gmail-get-mail": "Gmail", 
                    "gmail-move-mail": "Gmail", 
                    "gmail-get-user": "Gmail", 
                    "gmail-search": "Gmail"
                }
            }
        }, 
        {
            "Google Safe Browsing Test": {
                "name": "Google Safe Browsing Test", 
                "implementing_scripts": [
                    "RaiseError", 
                    "CloseInvestigation"
                ], 
                "command_to_integration": {
                    "url": "GoogleSafeBrowsing"
                }
            }
        }, 
        {
            "Google-Vault-Generic-Test": {
                "name": "Google Vault Generic Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "GeneratePassword", 
                    "DeleteContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "gvault-add-heldAccount": "", 
                    "gvault-get-matter": "", 
                    "gvault-create-hold": "", 
                    "gvault-export-status": "", 
                    "gvault-get-mail-results": "", 
                    "gvault-remove-heldAccount": "", 
                    "gvault-get-groups-results": "", 
                    "gvault-delete-hold": "", 
                    "gvault-create-export-mail": "", 
                    "gvault-create-matter": "", 
                    "gvault-create-export-drive": "", 
                    "gvault-get-drive-results": "", 
                    "gvault-create-export-groups": ""
                }
            }
        }, 
        {
            "Google_Vault-Search_And_Display_Results_test": {
                "name": "Google Vault - Search And Display Results test", 
                "implementing_scripts": [
                    "GeneratePassword", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Google Vault - Search Groups", 
                    "Google Vault - Search Mail", 
                    "Google Vault - Display Results", 
                    "Google Vault - Search Drive"
                ]
            }
        }, 
        {
            "GoogleResourceManager-Test": {
                "name": "GoogleResourceManager-Test", 
                "implementing_scripts": [
                    "GenerateUUID", 
                    "Print", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "grm-search-organizations": "Google Resource Manager", 
                    "grm-update-project": "Google Resource Manager", 
                    "grm-undelete-project": "Google Resource Manager", 
                    "grm-list-projects": "Google Resource Manager", 
                    "grm-delete-project": "Google Resource Manager", 
                    "grm-create-project": "Google Resource Manager", 
                    "grm-get-project": "Google Resource Manager", 
                    "grm-get-organization": "Google Resource Manager"
                }
            }
        }, 
        {
            "grr_test": {
                "name": "GRR Test", 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "grr-get-hunts": "GRR", 
                    "grr-get-clients": "GRR", 
                    "grr-set-hunts": "GRR", 
                    "grr-set-flows": "GRR", 
                    "grr-get-flows": "GRR"
                }
            }
        }, 
        {
            "GsuiteTest": {
                "name": "test-Gsuite", 
                "implementing_scripts": [
                    "VerifyContextFields"
                ], 
                "command_to_integration": {
                    "googleapps-list-users": "google"
                }
            }
        }, 
        {
            "hashicorp_test": {
                "name": "hashicorp_test", 
                "implementing_scripts": [
                    "GetTime", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "hashicorp-list-policies": "HashiCorp Vault", 
                    "hashicorp-disable-engine": "HashiCorp Vault", 
                    "hashicorp-create-token": "HashiCorp Vault", 
                    "hashicorp-list-secrets": "HashiCorp Vault", 
                    "hashicorp-get-secret-metadata": "HashiCorp Vault", 
                    "hashicorp-configure-engine": "HashiCorp Vault", 
                    "hashicorp-undelete-secret": "HashiCorp Vault", 
                    "hashicorp-destroy-secret": "HashiCorp Vault", 
                    "hashicorp-get-policy": "", 
                    "hashicorp-enable-engine": "HashiCorp Vault", 
                    "hashicorp-list-secrets-engines": "HashiCorp Vault", 
                    "hashicorp-delete-secret": "HashiCorp Vault", 
                    "hashicorp-reset-configuration": "HashiCorp Vault"
                }
            }
        }, 
        {
            "HighlightWords_Test": {
                "name": "HighlightWords - Test", 
                "implementing_scripts": [
                    "VerifyHumanReadableContains", 
                    "HighlightWords"
                ]
            }
        }, 
        {
            "IBM Resilient Systems Test": {
                "name": "IBM Resilient Systems Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "rs-search-incidents": "IBM Resilient Systems", 
                    "rs-related-incidents": "IBM Resilient Systems", 
                    "rs-incidents-get-tasks": "IBM Resilient Systems", 
                    "rs-incident-attachments": "IBM Resilient Systems", 
                    "rs-incident-artifacts": "IBM Resilient Systems"
                }
            }
        }, 
        {
            "Icebrg Test": {
                "name": "Icebrg Test", 
                "command_to_integration": {
                    "icebrg-get-report-assets": "icebrg", 
                    "icebrg-get-reports": "icebrg", 
                    "icebrg-saved-searches": "icebrg", 
                    "icebrg-search-events": "icebrg", 
                    "icebrg-get-history": "icebrg", 
                    "icebrg-get-report-indicators": "icebrg"
                }
            }
        }, 
        {
            "iDefenseTest": {
                "name": "iDefenseTest", 
                "implementing_scripts": [
                    "Print", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "url": "iDefense", 
                    "ip": "iDefense", 
                    "domain": "iDefense", 
                    "uuid": "iDefense"
                }
            }
        }, 
        {
            "InfoArmorVigilanteATITest": {
                "name": "InfoArmorVigilanteATITest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "vigilante-get-leak": "", 
                    "vigilante-query-infected-host-data": "", 
                    "vigilante-query-domains": "", 
                    "vigilante-query-accounts": "", 
                    "vigilante-watchlist-add-accounts": "", 
                    "vigilante-watchlist-remove-accounts": "", 
                    "vigilante-get-watchlist": "", 
                    "vigilante-query-ecrime-db": "", 
                    "vigilante-search-leaks": ""
                }
            }
        }, 
        {
            "Intezer Testing": {
                "name": "Intezer Testing", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "http"
                ], 
                "command_to_integration": {
                    "intezer-upload": "Intezer", 
                    "file": "Intezer"
                }
            }
        }, 
        {
            "IntSights Mssp Test": {
                "name": "IntSights Mssp Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "intsights-mssp-get-sub-accounts": ""
                }
            }
        }, 
        {
            "IntSights Test": {
                "name": "IntSights Test", 
                "implementing_scripts": [
                    "Print", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "Exists", 
                    "IsValueInArray"
                ], 
                "command_to_integration": {
                    "intsights-get-alerts": "", 
                    "intsights-get-iocs": "", 
                    "intsights-add-comment-to-alert": "", 
                    "intsights-add-tag-to-alert": "", 
                    "intsights-update-alert-severity": "", 
                    "intsights-get-alert-activities": ""
                }
            }
        }, 
        {
            "ip_enrichment_generic_test": {
                "name": "IP Enrichment - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "IP Enrichment - Generic"
                ]
            }
        }, 
        {
            "IPInfoTest": {
                "name": "IPInfoTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "ipinfo"
                }
            }
        }, 
        {
            "Jask_Test": {
                "name": "Jask Test", 
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "jask-get-related-entities": "", 
                    "jask-search-signals": "", 
                    "jask-search-entities": "", 
                    "jask-get-insight-details": "", 
                    "jask-search-insights": "", 
                    "jask-get-signal-details": "", 
                    "jask-get-insight-comments": "", 
                    "jask-get-entity-details": ""
                }
            }
        }, 
        {
            "Jira-Test": {
                "name": "Jira-Test", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "FileCreateAndUpload"
                ], 
                "command_to_integration": {
                    "jira-create-issue": "", 
                    "jira-issue-upload-file": "", 
                    "jira-get-comments": "", 
                    "jira-issue-add-comment": "", 
                    "jira-edit-issue": "", 
                    "jira-issue-query": "", 
                    "jira-delete-issue": "", 
                    "jira-issue-add-link": "", 
                    "jira-get-issue": ""
                }
            }
        }, 
        {
            "JiraCreateIssue-example-test": {
                "name": "JiraCreateIssue-example-test", 
                "implementing_scripts": [
                    "JiraCreateIssue-example", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "jira-delete-issue": ""
                }
            }
        }, 
        {
            "JoeSecurityTestDetonation": {
                "name": "JoeSecurityTestDetonation", 
                "fromversion": "4.0.0", 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Detonate File - JoeSecurity", 
                    "Detonate File From URL - JoeSecurity", 
                    "Detonate URL - JoeSecurity"
                ]
            }
        }, 
        {
            "JoeSecurityTestPlaybook": {
                "name": "JoeSecurityTestPlaybook", 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "joe-download-report": "Joe Security", 
                    "joe-is-online": "Joe Security", 
                    "joe-analysis-info": "Joe Security", 
                    "joe-search": "Joe Security", 
                    "joe-analysis-submit-sample": "Joe Security", 
                    "joe-analysis-submit-url": "Joe Security"
                }
            }
        }, 
        {
            "JSONtoCSV-Test": {
                "name": "JSONtoCSV-Test", 
                "implementing_scripts": [
                    "JSONFileToCSV", 
                    "LoadJSON", 
                    "ParseCSV", 
                    "JSONtoCSV", 
                    "FileCreateAndUpload", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Kafka Test": {
                "name": "Kafka Test", 
                "command_to_integration": {
                    "kafka-fetch-partitions": "Kafka V2", 
                    "kafka-consume-msg": "Kafka V2", 
                    "kafka-publish-msg": "Kafka V2", 
                    "kafka-print-topics": "Kafka V2"
                }
            }
        }, 
        {
            "Kenna Test": {
                "name": "Kenna Test", 
                "command_to_integration": {
                    "kenna-update-asset": "Kenna", 
                    "kenna-run-connector": "Kenna", 
                    "kenna-search-vulnerabilities": "Kenna", 
                    "kenna-search-fixes": "Kenna", 
                    "kenna-update-vulnerability": "Kenna", 
                    "kenna-get-connectors": "Kenna"
                }
            }
        }, 
        {
            "LanguageDetect-Test": {
                "name": "LanguageDetect-Test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "LanguageDetect", 
                    "DeleteContext", 
                    "Sleep", 
                    "Exists"
                ]
            }
        }, 
        {
            "Lastline - testplaybook": {
                "name": "Lastline - testplaybook", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Detonate URL - Lastline", 
                    "Detonate File - Lastline"
                ]
            }
        }, 
        {
            "listExecutedCommands-Test": {
                "name": "listExecutedCommands-Test", 
                "implementing_scripts": [
                    "Print", 
                    "listExecutedCommands", 
                    "commentsToContext", 
                    "CloseInvestigation", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "LogRhythm-Test-Playbook": {
                "name": "LogRhythm-Test-Playbook", 
                "command_to_integration": {
                    "lr-get-alarms": "LogRhythm"
                }
            }
        }, 
        {
            "Luminate-TestPlaybook": {
                "name": "Luminate-TestPlaybook", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "lum-block-user": "Luminate", 
                    "lum-destroy-user-session": "Luminate", 
                    "lum-unblock-user": "Luminate", 
                    "lum-get-ssh-access-logs": "Luminate", 
                    "lum-get-http-access-logs": "Luminate"
                }
            }
        }, 
        {
            "Mail Sender (New) Test": {
                "name": "Email Sender Python", 
                "implementing_scripts": [
                    "Set", 
                    "RaiseError", 
                    "DeleteContext", 
                    "Sleep", 
                    "FileCreateAndUpload"
                ], 
                "command_to_integration": {
                    "googleapps-gmail-get-mail": "google", 
                    "googleapps-gmail-search": "google", 
                    "send-mail": "Mail Sender (New)"
                }
            }
        }, 
        {
            "MaxMind Test": {
                "name": "MaxMind Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "MaxMind GeoIP2"
                }
            }
        }, 
        {
            "McAfee-MAR_Test": {
                "name": "McAfee-MAR_Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "mar-collectors-list": "McAfee Active Response", 
                    "mar-search-multiple": "McAfee Active Response", 
                    "mar-search": "McAfee Active Response"
                }
            }
        }, 
        {
            "McAfee-TIE Test": {
                "name": "McAfee-TIE Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "tie-file-references": "McAfee Threat Intelligence Exchange", 
                    "file": "McAfee Threat Intelligence Exchange", 
                    "tie-set-file-reputation": "McAfee Threat Intelligence Exchange"
                }
            }
        }, 
        {
            "McAfeeESMTest": {
                "name": "McAfeeESMTest", 
                "implementing_scripts": [
                    "GetTime", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "esm-edit-case-status": "McAfee ESM-v10", 
                    "esm-get-case-statuses": "McAfee ESM-v10", 
                    "esm-search": "McAfee ESM-v10", 
                    "esm-add-case-status": "McAfee ESM-v10", 
                    "esm-get-alarm-event-details": "McAfee ESM-v10", 
                    "esm-get-organization-list": "McAfee ESM-v10", 
                    "esm-list-alarm-events": "McAfee ESM-v10", 
                    "esm-delete-case-status": "McAfee ESM-v10", 
                    "esm-edit-case": "McAfee ESM-v10", 
                    "esm-get-user-list": "McAfee ESM-v10", 
                    "esm-get-case-detail": "McAfee ESM-v10", 
                    "esm-add-case": "McAfee ESM-v10", 
                    "esm-fetch-alarms": "McAfee ESM-v10"
                }
            }
        }, 
        {
            "McAfeeNSMTest": {
                "name": "McAfeeNSMTest", 
                "command_to_integration": {
                    "nsm-get-domains": "McAfee NSM", 
                    "nsm-get-ips-policy-details": "McAfee NSM", 
                    "nsm-update-alerts": "McAfee NSM", 
                    "nsm-get-ips-policies": "McAfee NSM", 
                    "nsm-get-alerts": "McAfee NSM", 
                    "nsm-get-sensors": "McAfee NSM"
                }
            }
        }, 
        {
            "McAfeeWebGatewayTest": {
                "name": "McAfeeWebGatewayTest", 
                "implementing_scripts": [
                    "ContextContains", 
                    "DeleteContext", 
                    "Sleep", 
                    "PrintContext"
                ], 
                "command_to_integration": {
                    "mwg-insert-entry": "McAfee Web Gateway", 
                    "mwg-get-list-entry": "McAfee Web Gateway", 
                    "mwg-get-list": "McAfee Web Gateway", 
                    "mwg-delete-entry": "McAfee Web Gateway", 
                    "mwg-get-available-lists": "McAfee Web Gateway"
                }
            }
        }, 
        {
            "Microsoft Graph Test": {
                "name": "Microsoft Graph Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "msg-search-alerts": "Microsoft Graph", 
                    "msg-update-alert": "Microsoft Graph", 
                    "msg-get-alert-details": "Microsoft Graph"
                }
            }
        }, 
        {
            "Mimecast test": {
                "name": "Mimecast test", 
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "mimecast-get-impersonation-logs": "", 
                    "mimecast-query": "", 
                    "mimecast-download-attachments": "", 
                    "mimecast-url-decode": "", 
                    "mimecast-refresh-token": "", 
                    "mimecast-create-policy": "", 
                    "mimecast-manage-sender": "", 
                    "mimecast-get-message": "", 
                    "mimecast-discover": "", 
                    "mimecast-list-messages": "", 
                    "mimecast-create-managed-url": "", 
                    "mimecast-list-managed-url": "", 
                    "mimecast-get-attachment-logs": "", 
                    "mimecast-list-blocked-sender-policies": "", 
                    "mimecast-login": "", 
                    "mimecast-delete-policy": "", 
                    "mimecast-get-policy": "", 
                    "mimecast-get-url-logs": ""
                }
            }
        }, 
        {
            "minemeld_test": {
                "name": "Palo Alto MineMeld Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "minemeld-remove-from-miner": "", 
                    "ip": "Palo Alto Minemeld", 
                    "minemeld-add-to-miner": "", 
                    "minemeld-retrieve-miner": "", 
                    "minemeld-get-indicator-from-miner": ""
                }
            }
        }, 
        {
            "MISP V2 Test": {
                "name": "MISP V2 Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http", 
                    "misp_download_sample", 
                    "misp_upload_sample"
                ], 
                "command_to_integration": {
                    "misp-search": "MISP V2", 
                    "misp-add-attribute": "MISP V2", 
                    "misp-add-sighting": "", 
                    "misp-create-event": "MISP V2", 
                    "url": "MISP V2", 
                    "ip": "MISP V2", 
                    "misp-download-sample": "MISP V2", 
                    "misp-upload-sample": "MISP V2", 
                    "file": "MISP V2", 
                    "misp-delete-event": "MISP V2"
                }
            }
        }, 
        {
            "MySQL Test": {
                "name": "MySQL Test", 
                "implementing_scripts": [
                    "PrintErrorEntry", 
                    "DeleteContext", 
                    "TestMysqlQuery", 
                    "PrintContext"
                ], 
                "command_to_integration": {
                    "query": "mysql"
                }
            }
        }, 
        {
            "Nessus - Test": {
                "name": "Nessus - Test", 
                "implementing_scripts": [
                    "WhileLoop"
                ], 
                "command_to_integration": {
                    "nessus-scan-status": "Nessus3", 
                    "nessus-scan-report-download": "Nessus3", 
                    "nessus-scan-create": "Nessus3", 
                    "nessus-scan-export": "Nessus3", 
                    "nessus-launch-scan": "Nessus3", 
                    "nessus-scan-details": "Nessus3"
                }
            }
        }, 
        {
            "Netskope Test": {
                "name": "Netskope Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "netskope-events": "", 
                    "netskope-alerts": ""
                }
            }
        }, 
        {
            "NetWitness Endpoint Test": {
                "name": "NetWitness Endpoint Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "netwitness-get-machines": "RSA NetWitness Endpoint", 
                    "netwitness-blacklist-domains": "", 
                    "netwitness-blacklist-ips": "RSA NetWitness Endpoint", 
                    "netwitness-get-machine-module": "RSA NetWitness Endpoint"
                }
            }
        }, 
        {
            "nexpose_test": {
                "name": "Nexpose test", 
                "implementing_scripts": [
                    "GenerateUUID", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "nexpose-start-site-scan": "Rapid7 Nexpose", 
                    "nexpose-get-asset": "Rapid7 Nexpose", 
                    "nexpose-stop-scan": "Rapid7 Nexpose", 
                    "nexpose-delete-site": "Rapid7 Nexpose", 
                    "nexpose-get-asset-vulnerability": "Rapid7 Nexpose", 
                    "nexpose-create-site": "Rapid7 Nexpose", 
                    "nexpose-get-assets": "Rapid7 Nexpose", 
                    "nexpose-create-assets-report": "Rapid7 Nexpose", 
                    "nexpose-resume-scan": "Rapid7 Nexpose", 
                    "nexpose-pause-scan": "Rapid7 Nexpose", 
                    "nexpose-search-assets": "Rapid7 Nexpose", 
                    "nexpose-get-scans": "Rapid7 Nexpose"
                }
            }
        }, 
        {
            "okta_test_playbook": {
                "name": "Okta test playbook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "okta-get-application-authentication": "okta", 
                    "okta-list-groups": "okta", 
                    "okta-get-application-assignments": "okta", 
                    "okta-get-user-factors": "okta", 
                    "okta-get-groups": "okta", 
                    "okta-suspend-user": "okta", 
                    "okta-add-to-group": "okta", 
                    "okta-update-user": "okta", 
                    "okta-remove-from-group": "okta", 
                    "okta-get-failed-logins": "okta", 
                    "okta-get-group-members": "okta", 
                    "okta-unsuspend-user": "okta", 
                    "okta-get-group-assignments": "okta"
                }
            }
        }, 
        {
            "OpenPhish Test Playbook": {
                "name": "OpenPhish Test Playbook", 
                "implementing_scripts": [
                    "Print", 
                    "CloseInvestigation", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "url": "OpenPhish", 
                    "openphish-status": "OpenPhish"
                }
            }
        }, 
        {
            "OTRS Test": {
                "name": "OTRS Test", 
                "implementing_scripts": [
                    "FetchFromInstance"
                ], 
                "command_to_integration": {
                    "otrs-update-ticket": "", 
                    "otrs-search-ticket": "", 
                    "otrs-create-ticket": "", 
                    "otrs-close-ticket": "", 
                    "otrs-get-ticket": ""
                }
            }
        }, 
        {
            "PagerDuty Test": {
                "name": "PagerDuty Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "PagerDuty-incidents": "", 
                    "PagerDuty-get-all-schedules": "", 
                    "PagerDuty-get-users-on-call-now": ""
                }
            }
        }, 
        {
            "palo_alto_firewall_test_pb": {
                "name": "palo_alto_firewall_test_pb", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep"
                ], 
                "implementing_playbooks": [
                    "PanoramaCommitConfiguration"
                ], 
                "command_to_integration": {
                    "panorama-list-applications": "", 
                    "panorama-create-rule": "", 
                    "panorama-list-address-groups": "", 
                    "panorama-create-address-group": "", 
                    "panorama-list-addresses": "", 
                    "panorama-get-address-group": "", 
                    "panorama-get-url-category": "", 
                    "panorama-delete-rule": "", 
                    "panorama": "", 
                    "panorama-edit-rule": "", 
                    "panorama-get-service-group": "", 
                    "panorama-get-url-filter": "", 
                    "panorama-delete-address": "", 
                    "panorama-get-custom-url-category": "", 
                    "panorama-edit-address-group": "", 
                    "panorama-move-rule": "", 
                    "panorama-delete-service-group": "", 
                    "panorama-delete-address-group": "", 
                    "panorama-create-address": "", 
                    "panorama-list-services": "", 
                    "panorama-create-service-group": ""
                }
            }
        }, 
        {
            "palo_alto_panorama_test_pb": {
                "name": "palo_alto_panorama_test_pb", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep"
                ], 
                "implementing_playbooks": [
                    "PanoramaCommitConfiguration"
                ], 
                "command_to_integration": {
                    "panorama-list-applications": "", 
                    "panorama-create-rule": "", 
                    "panorama-commit": "", 
                    "panorama-create-service": "", 
                    "panorama-create-address-group": "", 
                    "panorama-get-address-group": "", 
                    "panorama-move-rule": "", 
                    "panorama-delete-rule": "", 
                    "panorama": "", 
                    "panorama-edit-rule": "", 
                    "panorama-get-service-group": "", 
                    "panorama-get-url-filter": "", 
                    "panorama-get-service": "", 
                    "panorama-list-address-groups": "", 
                    "panorama-get-custom-url-category": "", 
                    "panorama-create-address": "", 
                    "panorama-delete-address-group": "", 
                    "panorama-list-addresses": "", 
                    "panorama-delete-service": "", 
                    "panorama-delete-address": ""
                }
            }
        }, 
        {
            "pan-appframework-test": {
                "name": "pan-appframework-test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "pan-appframework-query-logs": "Palo Alto AppFramework"
                }
            }
        }, 
        {
            "ParseCSVnullbytesTest": {
                "name": "ParseCSVnullbytesTest", 
                "implementing_scripts": [
                    "ParseCSV", 
                    "FileCreateAndUpload", 
                    "PrintErrorEntry", 
                    "Print", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "ParseEmailFiles-test": {
                "name": "ParseEmailFiles-test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "http", 
                    "AreValuesEqual", 
                    "ParseEmailFiles"
                ]
            }
        }, 
        {
            "ParseExcel-test": {
                "name": "ParseExcel-test", 
                "implementing_scripts": [
                    "ParseExcel", 
                    "DeleteContext", 
                    "http"
                ]
            }
        }, 
        {
            "PcapHTTPExtractor-Test": {
                "name": "PcapHTTPExtractor-Test", 
                "implementing_scripts": [
                    "PcapHTTPExtractor", 
                    "DeleteContext", 
                    "http", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "PhishAi-Test": {
                "name": "PhishAi-Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "phish-ai-scan-url": ""
                }
            }
        }, 
        {
            "Phishing test - attachment": {
                "name": "Phishing test - attachment", 
                "implementing_scripts": [
                    "ScheduleCommand", 
                    "PhishingIncident", 
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Phishing Investigation - Generic"
                ]
            }
        }, 
        {
            "Phishing test - Inline": {
                "name": "Phishing test - Inline", 
                "implementing_scripts": [
                    "ScheduleCommand", 
                    "PhishingIncident", 
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Phishing Investigation - Generic"
                ]
            }
        }, 
        {
            "PhishTank Testing": {
                "name": "PhishTank Testing", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set", 
                    "http", 
                    "ReadFile"
                ], 
                "command_to_integration": {
                    "url": "PhishTank"
                }
            }
        }, 
        {
            "Ping Test Playbook": {
                "name": "Ping Test Playbook", 
                "implementing_scripts": [
                    "PrintErrorEntry", 
                    "DeleteContext", 
                    "Ping", 
                    "isError", 
                    "PrintContext"
                ]
            }
        }, 
        {
            "Pipl Test": {
                "name": "Pipl Test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "pipl-search": "Pipl1"
                }
            }
        }, 
        {
            "playbook-Cymon_Test": {
                "name": "playbook-Cymon_Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "StringContains", 
                    "DeleteContext", 
                    "ValidateErrorExistence"
                ], 
                "command_to_integration": {
                    "ip": "Cymon", 
                    "domain": "Cymon"
                }
            }
        }, 
        {
            "PortListenCheck-test": {
                "name": "PortListenCheck-test", 
                "implementing_scripts": [
                    "Print", 
                    "PortListenCheck"
                ]
            }
        }, 
        {
            "PostgreSQL Test": {
                "name": "PostgreSQL Test", 
                "fromversion": "3.6.0", 
                "implementing_scripts": [
                    "VerifyHumanReadableEquals"
                ], 
                "command_to_integration": {
                    "pgsql-query": "PostgreSQL"
                }
            }
        }, 
        {
            "Preempt Test": {
                "name": "Preempt Test", 
                "command_to_integration": {
                    "preempt-remove-from-watch-list": "Preempt", 
                    "preempt-get-user-endpoints": "Preempt", 
                    "preempt-get-activities": "Preempt", 
                    "preempt-add-to-watch-list": "Preempt"
                }
            }
        }, 
        {
            "process_email_-_generic_-_test": {
                "name": "Process Email - Generic - Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_playbooks": [
                    "Process Email - Generic"
                ]
            }
        }, 
        {
            "ProofpointDecodeURL-Test": {
                "name": "ProofpointDecodeURL-Test", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "ProofpointDecodeURL", 
                    "Sleep", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "Pwned test": {
                "name": "Pwned test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "Pwned", 
                    "email": "Pwned"
                }
            }
        }, 
        {
            "pyEWS_Test": {
                "name": "pyEWS_Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "Exception": "Exception", 
                    "ews-get-out-of-office": "", 
                    "ews-expand-group": "", 
                    "ews-find-folders": "", 
                    "ews-get-items": "", 
                    "ews-get-contacts": "", 
                    "ews-get-attachment": "", 
                    "ews-get-searchable-mailboxes": "", 
                    "ews-search-mailboxes": ""
                }
            }
        }, 
        {
            "Qualys-Test": {
                "name": "Qualys-Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "qualys-pc-scan-list": "Qualys", 
                    "qualys-report-template-list": "Qualys", 
                    "qualys-vm-scan-list": "Qualys", 
                    "qualys-scheduled-report-list": "Qualys", 
                    "qualys-report-list": "Qualys"
                }
            }
        }, 
        {
            "RandomStringGenerateTest": {
                "name": "RandomStringGenerateTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "GenerateRandomString"
                ]
            }
        }, 
        {
            "RasterizeImageTest": {
                "name": "RasterizeImageTest", 
                "implementing_scripts": [
                    "GenerateImageFileEntry", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "rasterize-image": ""
                }
            }
        }, 
        {
            "ReadPDFFile-Test": {
                "name": "ReadPDFFile-Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http", 
                    "ReadPDFFile"
                ]
            }
        }, 
        {
            "Recorded Future Test": {
                "name": "Recorded Future Test", 
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "recorded-future-get-threats-url": "Recorded Future", 
                    "recorded-future-get-threats-domain": "Recorded Future", 
                    "url": "Recorded Future", 
                    "ip": "Recorded Future", 
                    "recorded-future-get-threats-hash": "Recorded Future", 
                    "domain": "Recorded Future", 
                    "recorded-future-get-alerts": "Recorded Future", 
                    "recorded-future-get-threats-vulnerabilities": "Recorded Future", 
                    "recorded-future-get-related-entities": "Recorded Future", 
                    "recorded-future-get-vulnerability-riskrules": "Recorded Future", 
                    "recorded-future-get-domain-riskrules": "Recorded Future", 
                    "file": "Recorded Future", 
                    "recorded-future-get-threats-ip": "Recorded Future", 
                    "recorded-future-get-url-riskrules": "Recorded Future", 
                    "recorded-future-get-alert-rules": "Recorded Future", 
                    "recorded-future-get-ip-riskrules": "Recorded Future", 
                    "recorded-future-get-hash-riskrules": "Recorded Future"
                }
            }
        }, 
        {
            "RedCanaryTest": {
                "name": "RedCanaryTest", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "redcanary-get-endpoint": "RedCanary", 
                    "redcanary-update-remediation-state": "RedCanary", 
                    "redcanary-list-detections": "RedCanary", 
                    "redcanary-list-endpoints": "RedCanary", 
                    "redcanary-acknowledge-detection": "RedCanary", 
                    "redcanary-get-endpoint-detections": "RedCanary", 
                    "redcanary-get-detection": "RedCanary", 
                    "redcanary-execute-playbook": "RedCanary"
                }
            }
        }, 
        {
            "RedLockTest": {
                "name": "RedLockTest", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep"
                ], 
                "command_to_integration": {
                    "redlock-search-alerts": "RedLock", 
                    "redlock-reopen-alerts": "", 
                    "redlock-get-alert-details": "", 
                    "redlock-dismiss-alerts": ""
                }
            }
        }, 
        {
            "RegexGroups Test": {
                "name": "RegexGroups Test", 
                "implementing_scripts": [
                    "RaiseError", 
                    "VerifyContext", 
                    "Set", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "RegPathReputationBasicLists_test": {
                "name": "RegPathReputationBasicLists_test", 
                "implementing_scripts": [
                    "RegPathReputationBasicLists"
                ]
            }
        }, 
        {
            "Remedy AR Test": {
                "name": "Remedy AR Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "remedy-get-server-details": "Remedy AR"
                }
            }
        }, 
        {
            "Remedy-On-Demand-Test": {
                "name": "Remedy-On-Demand-Test", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "remedy-get-incident": "Remedy On-Demand", 
                    "remedy-fetch-incidents": "Remedy On-Demand", 
                    "remedy-incident-create": "Remedy On-Demand", 
                    "remedy-incident-update": "Remedy On-Demand"
                }
            }
        }, 
        {
            "ReversingLabsA1000Test": {
                "name": "ReversingLabsA1000Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "reversinglabs-download": "ReversingLabs A1000", 
                    "reversinglabs-extracted-files": "ReversingLabs A1000", 
                    "reversinglabs-download-unpacked": "ReversingLabs A1000", 
                    "reversinglabs-analyze": "ReversingLabs A1000", 
                    "file": "ReversingLabs A1000"
                }
            }
        }, 
        {
            "ReversingLabsTCTest": {
                "name": "ReversingLabsTCTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "file": "ReversingLabs Titanium Cloud"
                }
            }
        }, 
        {
            "RSA NetWitness Test": {
                "name": "RSA NetWitness Test", 
                "command_to_integration": {
                    "netwitness-get-incident": "RSA NetWitness v11.1", 
                    "netwitness-get-incidents": "RSA NetWitness v11.1"
                }
            }
        }, 
        {
            "rsa_packets_and_logs_test": {
                "name": "RSA Packets And Logs test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "nw-sdk-values": "RSA NetWitness Packets and Logs", 
                    "netwitness-msearch": "RSA NetWitness Packets and Logs", 
                    "nw-sdk-content": "RSA NetWitness Packets and Logs", 
                    "netwitness-query": "RSA NetWitness Packets and Logs"
                }
            }
        }, 
        {
            "RTIR Test": {
                "name": "RTIR Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "rtir-edit-ticket": "RTIR", 
                    "rtir-resolve-ticket": "RTIR", 
                    "rtir-create-ticket": "RTIR", 
                    "rtir-get-ticket": "RTIR", 
                    "rtir-search-ticket": "RTIR"
                }
            }
        }, 
        {
            "SalesforceTestPlaybook": {
                "name": "SalesforceTestPlaybook", 
                "implementing_scripts": [
                    "ContextContains", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "salesforce-update-case": "Salesforce", 
                    "salesforce-get-case": "Salesforce", 
                    "salesforce-search": "Salesforce", 
                    "salesforce-create-case": "Salesforce", 
                    "salesforce-delete-case": "Salesforce", 
                    "salesforce-push-comment": "Salesforce", 
                    "salesforce-get-object": "Salesforce", 
                    "salesforce-close-case": "Salesforce", 
                    "salesforce-update-object": "Salesforce", 
                    "salesforce-query": "Salesforce"
                }
            }
        }, 
        {
            "SCADAfence_test": {
                "name": "SCADAfence_test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "scadafence-getAsset": "SCADAfence CNM", 
                    "scadafence-setAlertStatus": "SCADAfence CNM", 
                    "scadafence-getAlerts": "SCADAfence CNM"
                }
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_protection_-_test": {
                "name": "Search Endpoints By Hash - Carbon Black Protection - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Protection"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_response_-_test": {
                "name": "Search Endpoints By Hash - Carbon Black Response - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Response"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_crowdstrike_-_test": {
                "name": "Search Endpoints By Hash - CrowdStrike - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - CrowdStrike"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_generic_-_test": {
                "name": "Search Endpoints By Hash - Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Generic"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_tie_-_test": {
                "name": "Search Endpoints By Hash - TIE - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Search Endpoints By Hash - TIE"
                ]
            }
        }, 
        {
            "secureworks_test": {
                "name": "Secureworks test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "secure-works-create-ticket": "Dell Secureworks", 
                    "secure-works-get-ticket": "Dell Secureworks", 
                    "secure-works-update-ticket": "Dell Secureworks", 
                    "secure-works-get-tickets-ids": "Dell Secureworks", 
                    "secure-works-get-ticket-count": "Dell Secureworks", 
                    "secure-works-close-ticket": "Dell Secureworks", 
                    "secure-works-get-tickets-updates": "Dell Secureworks"
                }
            }
        }, 
        {
            "ShodanTest": {
                "name": "ShodanTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "Shodan"
                }
            }
        }, 
        {
            "SignalSciences Test": {
                "name": "SignalSciences Test", 
                "command_to_integration": {
                    "sigsci-get-blacklist": "Signal Sciences WAF", 
                    "sigsci-get-whitelist": "Signal Sciences WAF", 
                    "sigsci-blacklist-add-ip": "Signal Sciences WAF", 
                    "sigsci-whitelist-add-ip": "Signal Sciences WAF", 
                    "sigsci-blacklist-remove-ip": "Signal Sciences WAF", 
                    "sigsci-whitelist-remove-ip": "Signal Sciences WAF"
                }
            }
        }, 
        {
            "SLA Scripts - Test": {
                "name": "SLA Scripts - Test", 
                "implementing_scripts": [
                    "StopTimeToAssignOnOwnerChange", 
                    "ChangeRemediationSLAOnSevChange", 
                    "Set", 
                    "PrintErrorEntry", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "SNDBOX_Test": {
                "name": "SNDBOX_Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "command_to_integration": {
                    "sndbox-analysis-info": "", 
                    "sndbox-analysis-submit-sample": "", 
                    "sndbox-download-sample": "", 
                    "sndbox-download-report": "", 
                    "sndbox-is-online": ""
                }
            }
        }, 
        {
            "Splunk-Test": {
                "name": "Splunk-Test", 
                "implementing_scripts": [
                    "Set", 
                    "DumpJSON", 
                    "StringContains", 
                    "VerifyContext", 
                    "Print", 
                    "IsGreaterThan", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "splunk-parse-raw": "SplunkPy", 
                    "splunk-search": "SplunkPy", 
                    "splunk-submit-event": "SplunkPy", 
                    "splunk-get-indexes": "SplunkPy"
                }
            }
        }, 
        {
            "SplunkPySearch_Test": {
                "name": "SplunkPySearch_Test", 
                "implementing_scripts": [
                    "SplunkPySearch", 
                    "VerifyHumanReadableContains"
                ]
            }
        }, 
        {
            "ssdeepreputationtest": {
                "name": "SsdeepReputationTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Sleep", 
                    "SsdeepReputationTest", 
                    "SSDeepReputation"
                ]
            }
        }, 
        {
            "StringContainsArray_test": {
                "name": "StringContainsArray_test", 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext", 
                    "PrintErrorEntry"
                ]
            }
        }, 
        {
            "strings-test": {
                "name": "strings-test", 
                "implementing_scripts": [
                    "CreateBinaryFile", 
                    "FileCreateAndUpload", 
                    "Strings", 
                    "PublishEntriesToContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "Symantec Messaging Gateway Test": {
                "name": "Symantec Messaging Gateway Test", 
                "implementing_scripts": [
                    "GenerateIP", 
                    "VerifyContext", 
                    "GenerateUUID", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "smg-unblock-domain": "Symantec Messaging Gateway", 
                    "smg-block-ip": "Symantec Messaging Gateway", 
                    "smg-unblock-ip": "Symantec Messaging Gateway", 
                    "smg-block-domain": "Symantec Messaging Gateway", 
                    "smg-block-email": "Symantec Messaging Gateway", 
                    "smg-unblock-email": "Symantec Messaging Gateway"
                }
            }
        }, 
        {
            "SymantecEndpointProtection_Test": {
                "name": "SymantecEndpointProtection_Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "PrintErrorEntry"
                ], 
                "command_to_integration": {
                    "sep-endpoint-quarantine": "", 
                    "sep-list-policies": "", 
                    "sep-list-locations": "", 
                    "sep-update-endpoint-content": "", 
                    "sep-endpoints-info": "", 
                    "sep-groups-info": "", 
                    "sep-client-content": "", 
                    "sep-system-info": "", 
                    "sep-scan-endpoint": ""
                }, 
                "tests": [
                    "No test - test playbook"
                ]
            }
        }, 
        {
            "SymantecMSSTest": {
                "name": "SymantecMSSTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "symantec-mss-incidents-list": "Symantec MSS", 
                    "symantec-mss-update-incident": "Symantec MSS", 
                    "symantec-mss-get-incident": "Symantec MSS"
                }
            }
        }, 
        {
            "Tanium Test Playbook": {
                "name": "Tanium Test Playbook", 
                "fromversion": "2.5.0", 
                "command_to_integration": {
                    "tn-deploy-package": "Tanium", 
                    "tn-ask-question": "Tanium", 
                    "tn-get-saved-question": "Tanium"
                }
            }
        }, 
        {
            "TCPUtils-Test": {
                "name": "Tcpiputlis Test Playbook", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "TCPIPUtils"
                }
            }
        }, 
        {
            "tenable-sc-scan-test": {
                "name": "Test tenable scan", 
                "implementing_playbooks": [
                    "Launch Scan - Tenable.sc"
                ]
            }
        }, 
        {
            "tenable-sc-test": {
                "name": "Tenable.sc Test", 
                "implementing_scripts": [
                    "GetTime", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "FetchFromInstance"
                ], 
                "command_to_integration": {
                    "tenable-sc-get-asset": "Tenable.sc", 
                    "tenable-sc-list-alerts": "Tenable.sc", 
                    "tenable-sc-get-system-licensing": "Tenable.sc", 
                    "tenable-sc-get-scan-status": "Tenable.sc", 
                    "tenable-sc-list-scans": "Tenable.sc", 
                    "tenable-sc-list-repositories": "Tenable.sc", 
                    "tenable-sc-create-scan": "Tenable.sc", 
                    "tenable-sc-delete-scan": "Tenable.sc", 
                    "tenable-sc-get-scan-report": "Tenable.sc", 
                    "tenable-sc-list-assets": "Tenable.sc", 
                    "tenable-sc-get-vulnerability": "Tenable.sc", 
                    "tenable-sc-get-device": "Tenable.sc", 
                    "tenable-sc-create-asset": "Tenable.sc", 
                    "tenable-sc-get-alert": "Tenable.sc", 
                    "tenable-sc-launch-scan": "Tenable.sc", 
                    "tenable-sc-list-report-definitions": "Tenable.sc", 
                    "tenable-sc-delete-asset": "Tenable.sc", 
                    "tenable-sc-list-credentials": "Tenable.sc", 
                    "tenable-sc-list-policies": "Tenable.sc", 
                    "tenable-sc-list-zones": "Tenable.sc", 
                    "tenable-sc-list-users": "Tenable.sc"
                }
            }
        }, 
        {
            "Tenable.io Scan Test": {
                "name": "Tenable.io Scan Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Tenable.io Scan"
                ]
            }
        }, 
        {
            "Tenable.io test": {
                "name": "Tenable.io test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "tenable-io-get-vulnerabilities-by-asset": "", 
                    "tenable-io-get-scan-report": "", 
                    "tenable-io-list-scans": "", 
                    "tenable-io-get-vulnerability-details": "", 
                    "tenable-io-get-scan-status": ""
                }
            }
        }, 
        {
            "Test - PhishMe Intelligence": {
                "name": "Test - PhishMe Intelligence", 
                "implementing_scripts": [
                    "IsGreaterThan", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "url": "Phishme Intelligence", 
                    "phishme-search": "Phishme Intelligence", 
                    "email": "Phishme Intelligence", 
                    "file": "Phishme Intelligence", 
                    "ip": "Phishme Intelligence"
                }
            }
        }, 
        {
            "Test CommonServer": {
                "name": "Test CommonServer", 
                "implementing_scripts": [
                    "TestFormatTableValues"
                ]
            }
        }, 
        {
            "Test filters & transformers scripts": {
                "name": "Test filters & transformers scripts", 
                "implementing_scripts": [
                    "RaiseError", 
                    "Print", 
                    "Set"
                ]
            }
        }, 
        {
            "Test ParseCSV": {
                "name": "Test ParseCSV", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "FileCreateAndUpload", 
                    "ParseCSV", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "Test Playbook McAfee ATD": {
                "name": "Test Playbook McAfee ATD", 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext", 
                    "Exists", 
                    "AreValuesEqual"
                ], 
                "implementing_playbooks": [
                    "Detonate URL - McAfee ATD", 
                    "ATD - Detonate File"
                ], 
                "command_to_integration": {
                    "atd-list-analyzer-profiles": "", 
                    "atd-login": "", 
                    "atd-list-user": ""
                }
            }
        }, 
        {
            "Test Playbook McAfee ATD Upload File": {
                "name": "Test Playbook McAfee ATD Upload File", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "atd-file-upload": ""
                }
            }
        }, 
        {
            "Test Playbook McAfee ePO": {
                "name": "Test Playbook McAfee ePO", 
                "implementing_scripts": [
                    "RaiseError", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "epo-clear-tag": "epo", 
                    "epo-get-system-tree-group": "epo", 
                    "epo-get-latest-dat": "epo", 
                    "epo-update-client-dat": "epo", 
                    "epo-advanced-command": "epo", 
                    "epo-help": "epo", 
                    "epo-find-systems": "epo", 
                    "epo-update-repository": "epo", 
                    "epo-get-version": "epo", 
                    "epo-get-current-dat": "epo", 
                    "epo-get-tables": "epo", 
                    "epo-apply-tag": "epo", 
                    "epo-find-system": "epo", 
                    "epo-query-table": "epo"
                }
            }
        }, 
        {
            "Test-Detonate URL - Crowdstrike": {
                "name": "Test-Detonate URL - Crowdstrike", 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "Detonate URL - CrowdStrike"
                ]
            }
        }, 
        {
            "Test-Detonate URL - Phish.AI": {
                "name": "Test-Detonate URL - Phish.AI", 
                "implementing_playbooks": [
                    "Detonate URL - Phish.AI"
                ], 
                "tests": [
                    "No test"
                ]
            }
        }, 
        {
            "Test-Detonate URL - ThreatGrid": {
                "name": "Test-Detonate URL - ThreatGrid", 
                "implementing_playbooks": [
                    "Detonate URL - ThreatGrid"
                ]
            }
        }, 
        {
            "test-domain-indicator": {
                "name": "test-domain-indicator", 
                "implementing_scripts": [
                    "Print", 
                    "GetIndicatorDBotScore", 
                    "Sleep"
                ]
            }
        }, 
        {
            "Test-IsMaliciousIndicatorFound": {
                "name": "Test-IsMaliciousIndicatorFound", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set", 
                    "Sleep", 
                    "IsMaliciousIndicatorFound"
                ]
            }
        }, 
        {
            "test-LinkIncidentsWithRetry": {
                "name": "test-LinkIncidentsWithRetry", 
                "implementing_scripts": [
                    "Print", 
                    "LinkIncidentsWithRetry", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "test-ThreatConnect": {
                "name": "test-ThreatConnect", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "tc-delete-indicator-tag": "", 
                    "tc-create-incident": "", 
                    "tc-create-event": "", 
                    "tc-owners": "", 
                    "tc-create-campaign": "", 
                    "tc-tag-indicator": "", 
                    "tc-create-threat": "", 
                    "tc-incident-associate-indicator": "", 
                    "tc-get-tags": "", 
                    "tc-get-indicators-by-tag": "", 
                    "tc-delete-indicator": "", 
                    "tc-indicators": "", 
                    "tc-delete-group": "", 
                    "tc-fetch-incidents": "", 
                    "tc-add-indicator": "", 
                    "tc-get-indicator": "", 
                    "tc-update-indicator": "", 
                    "tc-get-incident-associate-indicators": ""
                }
            }
        }, 
        {
            "test_delete_context": {
                "name": "Test Delete Context", 
                "implementing_scripts": [
                    "RaiseError", 
                    "Set", 
                    "DeleteContext", 
                    "isError"
                ]
            }
        }, 
        {
            "test_Qradar": {
                "name": "test_Qradar", 
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "DeleteContext"
                ], 
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ], 
                "command_to_integration": {
                    "qradar-delete-reference-set": "QRadar", 
                    "qradar-create-reference-set-value": "QRadar", 
                    "qradar-get-reference-by-name": "QRadar", 
                    "qradar-get-note": "QRadar", 
                    "qradar-offense-by-id": "QRadar", 
                    "qradar-get-assets": "QRadar", 
                    "qradar-create-note": "QRadar", 
                    "qradar-offenses": "QRadar", 
                    "qradar-get-asset-by-id": "QRadar", 
                    "qradar-update-offense": "QRadar", 
                    "qradar-create-reference-set": "QRadar", 
                    "qradar-delete-reference-set-value": "QRadar"
                }
            }
        }, 
        {
            "Test_Sagemaker": {
                "name": "Test Sagemaker", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "predict-phishing": ""
                }
            }
        }, 
        {
            "test_similar_incidents": {
                "name": "Test Similar Incidents", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "TestCreateDuplicates", 
                    "FindSimilarIncidents"
                ]
            }
        }, 
        {
            "test_url_regex": {
                "name": "Test URL Regex", 
                "implementing_scripts": [
                    "Print", 
                    "VerifyContext", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "TestCommonPython": {
                "name": "TestCommonPython", 
                "implementing_scripts": [
                    "TestPYCommonServer"
                ]
            }
        }, 
        {
            "TestExtractHTMLTables": {
                "name": "TestExtractHTMLTables", 
                "implementing_scripts": [
                    "Print", 
                    "CloseInvestigation", 
                    "ExtractHTMLTables", 
                    "DeleteContext", 
                    "Exists"
                ]
            }
        }, 
        {
            "TestFileCreateAndUpload": {
                "name": "TestFileCreateAndUpload", 
                "implementing_scripts": [
                    "Print", 
                    "FileCreateAndUpload", 
                    "DeleteContext", 
                    "CloseInvestigation"
                ]
            }
        }, 
        {
            "TestHPServiceManager": {
                "name": "TestHPServiceManager", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "hpsm-create-incident": "Service Manager", 
                    "hpsm-get-device": "Service Manager", 
                    "hpsm-list-incidents": "Service Manager", 
                    "hpsm-get-incident-by-id": "Service Manager"
                }
            }
        }, 
        {
            "TestHttpPlaybook": {
                "name": "TestHttpPlaybook", 
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "DeleteContext", 
                    "http"
                ]
            }
        }, 
        {
            "TestIsValueInArray": {
                "name": "TestIsValueInArray", 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Set", 
                    "IsValueInArray"
                ]
            }
        }, 
        {
            "TestMatchRegex": {
                "name": "TestMatchRegex", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "MatchRegex"
                ]
            }
        }, 
        {
            "TestPacketsled": {
                "name": "TestPacketsled", 
                "implementing_commands": [
                    "packetsled-get-flows", 
                    "packetsled-get-pcaps", 
                    "packetsled-get-files", 
                    "packetsled-get-incidents"
                ]
            }
        }, 
        {
            "TestParseCSV": {
                "name": "TestParseCSV", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "ParseCSV", 
                    "DeleteContext", 
                    "ExportToCSV"
                ]
            }
        }, 
        {
            "TestSafeBreach": {
                "name": "TestSafeBreach", 
                "command_to_integration": {
                    "safebreach-get-simulation": "SafeBreach", 
                    "safebreach-rerun": "SafeBreach"
                }
            }
        }, 
        {
            "TestSkyformation": {
                "name": "TestSkyformation", 
                "implementing_scripts": [
                    "TestFail"
                ], 
                "command_to_integration": {
                    "skyformation-get-accounts": "Skyformation"
                }
            }
        }, 
        {
            "TestStringReplace": {
                "name": "TestStringReplace", 
                "implementing_scripts": [
                    "StringReplace", 
                    "VerifyContextFields", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "TestUnEscapeUrl": {
                "name": "TestUnEscapeUrl", 
                "implementing_scripts": [
                    "UnEscapeURLs", 
                    "DeleteContext", 
                    "VerifyHumanReadableContains"
                ], 
                "tests": [
                    "no tests"
                ]
            }
        }, 
        {
            "TestWordFileToIOC": {
                "name": "TestWordFileToIOC", 
                "implementing_scripts": [
                    "TestCreateWordFile", 
                    "ExtractIP", 
                    "VerifyContext", 
                    "ReadFile", 
                    "ParseWordDoc"
                ]
            }
        }, 
        {
            "TextFromHTML_test_playbook": {
                "name": "TextFromHTML Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "TextFromHTML"
                ]
            }
        }, 
        {
            "ThreatExchange-test": {
                "name": "ThreatExchange-test", 
                "implementing_scripts": [
                    "ExtractDomain", 
                    "ExtractHash", 
                    "Exists", 
                    "ExtractIP", 
                    "Print", 
                    "IsMaliciousIndicatorFound", 
                    "VerifyContextFields", 
                    "ExtractURL"
                ], 
                "command_to_integration": {
                    "url": "ThreatExchange", 
                    "ip": "ThreatExchange", 
                    "domain": "ThreatExchange", 
                    "file": "ThreatExchange"
                }
            }
        }, 
        {
            "ThreatGridTest": {
                "name": "ThreatGridTest", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Exists", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "threat-grid-get-samples": "Threat Grid", 
                    "threat-grid-download-sample-by-id": "Threat Grid", 
                    "threat-grid-organization-get-rate-limit": "Threat Grid", 
                    "threat-grid-user-get-rate-limit": "Threat Grid", 
                    "threat-grid-get-threat-summary-by-id": "Threat Grid", 
                    "threat-grid-who-am-i": "Threat Grid", 
                    "threat-grid-upload-sample": "Threat Grid"
                }
            }
        }, 
        {
            "ThreatMiner-Test": {
                "name": "ThreatMiner - Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "ip": "ThreatMiner", 
                    "domain": "ThreatMiner", 
                    "file": "ThreatMiner"
                }
            }
        }, 
        {
            "TruSTAR Test": {
                "name": "TruSTAR Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "domain": "TruSTAR", 
                    "url": "TruSTAR", 
                    "ip": "TruSTAR", 
                    "trustar-correlated-reports": "TruSTAR", 
                    "file": "TruSTAR", 
                    "trustar-trending-indicators": "TruSTAR", 
                    "trustar-search-indicators": "TruSTAR"
                }
            }
        }, 
        {
            "UnEscapeURLs-Test": {
                "name": "UnEscapeURLs-Test", 
                "implementing_scripts": [
                    "UnEscapeURLs", 
                    "DeleteContext", 
                    "VerifyHumanReadableContains"
                ]
            }
        }, 
        {
            "url_enrichment_-_generic_test": {
                "name": "Url Enrichment Generic - Test", 
                "fromversion": "3.5.0", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set"
                ], 
                "implementing_playbooks": [
                    "URL Enrichment - Generic"
                ], 
                "command_to_integration": {
                    "rasterize": "Rasterize"
                }
            }
        }, 
        {
            "URLDecode-Test": {
                "name": "URLDecode-Test", 
                "implementing_scripts": [
                    "URLDecode", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "urlscan_malicious_Test": {
                "name": "urlscan_malicious_Test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "urlscan-search": ""
                }
            }
        }, 
        {
            "Vectra-test": {
                "name": "Vectra-test", 
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "command_to_integration": {
                    "vectra-sensors": "Vectra", 
                    "vectra-settings": "Vectra", 
                    "vectra-hosts": "Vectra", 
                    "vectra-triage": "Vectra", 
                    "vectra-detections": "Vectra"
                }
            }
        }, 
        {
            "VerifyHumanReadableFormat": {
                "name": "VerifyHumanReadableFormat", 
                "implementing_scripts": [
                    "VerifyTableToMarkDown", 
                    "VerifyTreeToFlatObject"
                ]
            }
        }, 
        {
            "virusTotal-test-playbook": {
                "name": "virusTotal-test-playbook", 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "url": "VirusTotal", 
                    "ip": "VirusTotal", 
                    "domain": "VirusTotal", 
                    "file": "VirusTotal"
                }
            }
        }, 
        {
            "virusTotalPrivateAPI-test-playbook": {
                "name": "virusTotalPrivateAPI-test-playbook", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "StringContains", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "vt-private-get-url-report": "VirusTotal - Private API", 
                    "vt-private-get-file-report": "VirusTotal - Private API", 
                    "vt-private-get-domain-report": "VirusTotal - Private API"
                }
            }
        }, 
        {
            "VMWare Test": {
                "name": "VMWare Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "vmware-get-events": "VMware", 
                    "vmware-poweroff": "VMware", 
                    "vmware-suspend": "VMware", 
                    "vmware-hard-reboot": "VMware", 
                    "vmware-poweron": "VMware", 
                    "vmware-revert-snapshot": "VMware", 
                    "vmware-create-snapshot": "VMware", 
                    "vmware-get-vms": "VMware"
                }
            }
        }, 
        {
            "VxStream Test": {
                "name": "VxStream Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "http", 
                    "Exists"
                ], 
                "command_to_integration": {
                    "crowdstrike-detonate-file": "VxStream", 
                    "crowdstrike-get-environments": "VxStream", 
                    "crowdstrike-submit-url": "VxStream", 
                    "crowdstrike-scan": "VxStream", 
                    "crowdstrike-search": "VxStream"
                }
            }
        }, 
        {
            "WhatsMyBrowser-Test": {
                "name": "WhatsMyBrowser-Test", 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set"
                ], 
                "command_to_integration": {
                    "ua-parse": "WhatsMyBrowser"
                }
            }
        }, 
        {
            "whois_test": {
                "name": "whois_test", 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "whois": "whois"
                }
            }
        }, 
        {
            "Wildfire Test": {
                "name": "Wildfire Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "wildfire-upload": "WildFire", 
                    "wildfire-upload-file-remote": "WildFire", 
                    "wildfire-report": "WildFire"
                }
            }
        }, 
        {
            "WordTokenizeTest": {
                "name": "WordTokenizeTest", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "WordTokenizer", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "XFE Test": {
                "name": "XFE Test", 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Exists", 
                    "AreValuesEqual"
                ], 
                "command_to_integration": {
                    "domain": "XFE", 
                    "url": "XFE", 
                    "ip": "XFE", 
                    "cve-latest": "XFE", 
                    "cve-search": "XFE", 
                    "file": "XFE"
                }
            }
        }, 
        {
            "ZipFile-Test": {
                "name": "ZipFile-Test", 
                "implementing_scripts": [
                    "http", 
                    "ZipFile", 
                    "CloseInvestigation", 
                    "Sleep", 
                    "UnzipFile", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Zoom_Test": {
                "name": "Zoom_Test", 
                "implementing_scripts": [
                    "Print", 
                    "VerifyContext", 
                    "GenerateEmail", 
                    "DeleteContext"
                ], 
                "command_to_integration": {
                    "zoom-create-meeting": "Zoom", 
                    "zoom-list-users": "Zoom", 
                    "zoom-fetch-recording": "Zoom", 
                    "zoom-create-user": "Zoom", 
                    "zoom-delete-user": "Zoom"
                }
            }
        }, 
        {
            "Zscaler Test": {
                "name": "Zscaler Test", 
                "implementing_scripts": [
                    "GenerateUUID", 
                    "isError"
                ], 
                "command_to_integration": {
                    "zscaler-blacklist-url": "", 
                    "zscaler-get-blacklist": "", 
                    "zscaler-get-categories": "", 
                    "zscaler-category-add-url": ""
                }
            }
        }
    ]
}