{
    "integrations": [
        {
            "Cybereason": {
                "commands": [
                    "cybereason-query-processes", 
                    "cybereason-is-probe-connected", 
                    "cybereason-query-connections", 
                    "cybereason-isolate-machine", 
                    "cybereason-unisolate-machine", 
                    "cybereason-query-malops", 
                    "cybereason-malop-processes", 
                    "cybereason-add-comment", 
                    "cybereason-update-malop-status"
                ]
            }
        }, 
        {
            "Giphy": {
                "commands": [
                    "giphy"
                ]
            }
        }, 
        {
            "RSA NetWitness Packets and Logs": {
                "toversion": "3.1.0", 
                "commands": [
                    "netwitness-msearch", 
                    "netwitness-search", 
                    "netwitness-query", 
                    "netwitness-packets", 
                    "nw-sdk-session", 
                    "nw-sdk-cancel", 
                    "nw-sdk-query", 
                    "nw-sdk-validate", 
                    "nw-sdk-aliases", 
                    "nw-sdk-content", 
                    "nw-sdk-ls", 
                    "nw-sdk-count", 
                    "nw-sdk-timeline", 
                    "nw-sdk-mon", 
                    "nw-sdk-stopMon", 
                    "nw-sdk-msearch", 
                    "nw-sdk-precache", 
                    "nw-sdk-delCache", 
                    "nw-sdk-info", 
                    "nw-sdk-search", 
                    "nw-sdk-language", 
                    "nw-sdk-packets", 
                    "nw-sdk-summary", 
                    "nw-sdk-reconfig", 
                    "nw-sdk-values", 
                    "nw-sdk-xforms", 
                    "nw-database-info", 
                    "nw-database-count", 
                    "nw-database-dbState", 
                    "nw-database-dump", 
                    "nw-database-hashInfo", 
                    "nw-database-resetMax", 
                    "nw-database-optimize", 
                    "nw-database-reconfig", 
                    "nw-database-ls", 
                    "nw-database-timeRoll", 
                    "nw-database-stopMon", 
                    "nw-database-manifest", 
                    "nw-database-wipe", 
                    "nw-database-sizeRoll", 
                    "nw-database-mon", 
                    "nw-decoder-reset", 
                    "nw-decoder-info", 
                    "nw-decoder-reconfig", 
                    "nw-decoder-agg", 
                    "nw-decoder-stop", 
                    "nw-decoder-count", 
                    "nw-decoder-start", 
                    "nw-decoder-meta", 
                    "nw-decoder-ls", 
                    "nw-decoder-stopMon", 
                    "nw-decoder-resetMax", 
                    "nw-decoder-whoAgg", 
                    "nw-decoder-logStats", 
                    "nw-decoder-select", 
                    "nw-decoder-mon", 
                    "nw-index-ls", 
                    "nw-index-mon", 
                    "nw-index-save", 
                    "nw-index-info", 
                    "nw-index-drop", 
                    "nw-index-count", 
                    "nw-index-values", 
                    "nw-index-profile", 
                    "nw-index-stopMon", 
                    "nw-index-inspect", 
                    "nw-index-language", 
                    "nw-index-reconfig", 
                    "nw-index-sizeRoll", 
                    "nw-decoderParsers-ls", 
                    "nw-decoderParsers-mon", 
                    "nw-decoderParsers-feed", 
                    "nw-decoderParsers-info", 
                    "nw-decoderParsers-count", 
                    "nw-decoderParsers-schema", 
                    "nw-decoderParsers-reload", 
                    "nw-decoderParsers-upload", 
                    "nw-decoderParsers-delete", 
                    "nw-decoderParsers-stopMon", 
                    "nw-decoderParsers-devices", 
                    "nw-decoderParsers-content", 
                    "nw-decoderParsers-ipdevice", 
                    "nw-decoderParsers-iptmzone", 
                    "nw-logs-ls", 
                    "nw-logs-mon", 
                    "nw-logs-pull", 
                    "nw-logs-info", 
                    "nw-logs-count", 
                    "nw-logs-stopMon", 
                    "nw-logs-download", 
                    "nw-logs-timeRoll", 
                    "nw-sys-ls", 
                    "nw-sys-mon", 
                    "nw-sys-save", 
                    "nw-sys-info", 
                    "nw-sys-count", 
                    "nw-sys-caCert", 
                    "nw-sys-stopMon", 
                    "nw-sys-shutdown", 
                    "nw-sys-fileEdit", 
                    "nw-sys-peerCert", 
                    "nw-sys-servCert", 
                    "nw-sys-statHist", 
                    "nw-users-ls", 
                    "nw-users-mon", 
                    "nw-users-info", 
                    "nw-users-auths", 
                    "nw-users-count", 
                    "nw-users-delete", 
                    "nw-users-unlock", 
                    "nw-users-stopMon", 
                    "nw-users-addOrMod", 
                    "nw-decoder-import", 
                    "nw-decoder-parsers-upload", 
                    "nw-concentrator-reset", 
                    "nw-concentrator-reconfig", 
                    "nw-concentrator-start", 
                    "nw-concentrator-stop", 
                    "nw-concentrator-count", 
                    "nw-concentrator-edit", 
                    "nw-concentrator-add", 
                    "nw-concentrator-meta", 
                    "nw-concentrator-status", 
                    "nw-concentrator-ls", 
                    "nw-concentrator-resetMax", 
                    "nw-concentrator-stopMon", 
                    "nw-concentrator-delete", 
                    "nw-concentrator-whoAgg", 
                    "nw-concentrator-mon", 
                    "nw-broker-reset", 
                    "nw-broker-start", 
                    "nw-broker-stop", 
                    "nw-broker-count", 
                    "nw-broker-edit", 
                    "nw-broker-add", 
                    "nw-broker-meta", 
                    "nw-broker-status", 
                    "nw-broker-ls", 
                    "nw-broker-resetMax", 
                    "nw-broker-stopMon", 
                    "nw-broker-delete", 
                    "nw-broker-whoAgg", 
                    "nw-broker-mon"
                ]
            }
        }, 
        {
            "ReversingLabs A1000": {
                "commands": [
                    "file", 
                    "reversinglabs-upload", 
                    "reversinglabs-delete", 
                    "reversinglabs-extracted-files", 
                    "reversinglabs-download", 
                    "reversinglabs-analyze", 
                    "reversinglabs-download-unpacked"
                ]
            }
        }, 
        {
            "VMware": {
                "commands": [
                    "vmware-get-vms", 
                    "vmware-poweron", 
                    "vmware-poweroff", 
                    "vmware-hard-reboot", 
                    "vmware-suspend", 
                    "vmware-soft-reboot", 
                    "vmware-create-snapshot", 
                    "vmware-revert-snapshot", 
                    "vmware-get-events"
                ]
            }
        }, 
        {
            "RSA Archer": {
                "commands": [
                    "archer-create-record", 
                    "archer-update-record", 
                    "archer-get-record", 
                    "archer-search-applications", 
                    "archer-search-records", 
                    "archer-get-application-fields", 
                    "archer-delete-record", 
                    "archer-get-field", 
                    "archer-get-reports", 
                    "archer-execute-statistic-search-by-report", 
                    "archer-get-search-options-by-guid", 
                    "archer-search-records-by-report", 
                    "archer-get-mapping-by-level", 
                    "archer-manually-fetch-incident", 
                    "archer-get-file", 
                    "archer-upload-file", 
                    "archer-add-to-detailed-analysis", 
                    "archer-get-user-id"
                ]
            }
        }, 
        {
            "vmray": {
                "commands": [
                    "upload_sample", 
                    "get_results", 
                    "get_job_sample"
                ]
            }
        }, 
        {
            "jira": {
                "commands": [
                    "jira-issue-query", 
                    "jira-get-issue", 
                    "jira-create-issue", 
                    "jira-issue-upload-file", 
                    "jira-issue-add-comment", 
                    "jira-issue-add-link", 
                    "jira-edit-issue", 
                    "jira-get-comments", 
                    "jira-delete-issue"
                ], 
                "fromversion": "2.6.0"
            }
        }, 
        {
            "Verodin": {
                "commands": [
                    "verodin-get-topology-nodes", 
                    "verodin-get-topology-map", 
                    "verodin-manage-sims-actions", 
                    "verodin-manage-sims-actions-run", 
                    "verodin-get-security-zones", 
                    "verodin-get-security-zone", 
                    "verodin-delete-security-zone", 
                    "verodin-get-sims-of-type", 
                    "verodin-get-sim", 
                    "verodin-delete-sim", 
                    "verodin-get-jobs", 
                    "verodin-get-job", 
                    "verodin-run-job-again", 
                    "verodin-get-job-sim-actions", 
                    "verodin-job-cancel"
                ]
            }
        }, 
        {
            "dnstwist": {
                "commands": [
                    "dnstwist-domain-variations"
                ]
            }
        }, 
        {
            "EWS": {
                "commands": [
                    "ews-get-folder", 
                    "ews-delete-items", 
                    "ews-delete-attachments", 
                    "ews-get-items", 
                    "ews-search-mailbox", 
                    "ews-get-contacts", 
                    "ews-get-searchable-mailboxes", 
                    "ews-search-mailboxes", 
                    "ews-get-attachment", 
                    "ews-find-folders", 
                    "ews-get-attachment-item", 
                    "ews-move-item"
                ]
            }
        }, 
        {
            "OpenPhish": {
                "commands": [
                    "url", 
                    "openphish-reload", 
                    "openphish-status"
                ]
            }
        }, 
        {
            "McAfee NSM": {
                "commands": [
                    "nsm-get-sensors", 
                    "nsm-get-domains", 
                    "nsm-get-alerts", 
                    "nsm-update-alerts", 
                    "nsm-get-alert-details", 
                    "nsm-get-ips-policies", 
                    "nsm-get-ips-policy-details", 
                    "nsm-get-attacks"
                ]
            }
        }, 
        {
            "ipinfo": {
                "commands": [
                    "ip", 
                    "ipinfo_field"
                ]
            }
        }, 
        {
            "Cuckoo Sandbox": {
                "toversion": "3.1.0", 
                "commands": [
                    "ck-file", 
                    "cuckoo-create-task-from-file", 
                    "ck-report", 
                    "cuckoo-get-task-report", 
                    "ck-list", 
                    "cuckoo-list-tasks", 
                    "ck-url", 
                    "cuckoo-create-task-from-url", 
                    "ck-view", 
                    "cuckoo-view-task", 
                    "ck-del", 
                    "cuckoo-delete-task", 
                    "ck-scrshot", 
                    "cuckoo-task-screenshot", 
                    "ck-machines-list", 
                    "cuckoo-machines-list", 
                    "ck-machine-view", 
                    "cuckoo-machine-view"
                ]
            }
        }, 
        {
            "Moloch": {
                "toversion": "3.1.0", 
                "commands": [
                    "moloch_connections_json", 
                    "moloch_connections_csv", 
                    "moloch_files_json", 
                    "moloch_sessions_json", 
                    "moloch_sessions_csv", 
                    "moloch_sessions_pcap", 
                    "moloch_spigraph_json", 
                    "moloch_spiview_json", 
                    "moloch_unique_json"
                ]
            }
        }, 
        {
            "Demisto REST API": {
                "commands": [
                    "demisto-api-post", 
                    "demisto-api-get", 
                    "demisto-api-put", 
                    "demisto-api-delete", 
                    "demisto-api-download", 
                    "demisto-api-multipart", 
                    "demisto-delete-incidents"
                ]
            }
        }, 
        {
            "Symantec Advanced Threat Protection": {
                "commands": [
                    "satp-appliances", 
                    "satp-command", 
                    "satp-command-state", 
                    "satp-command-cancel", 
                    "satp-events", 
                    "satp-files", 
                    "satp-incident-events", 
                    "satp-incidents"
                ]
            }
        }, 
        {
            "McAfee Active Response": {
                "commands": [
                    "mar-search", 
                    "mar-collectors-list", 
                    "mar-search-multiple"
                ]
            }
        }, 
        {
            "Aella Star Light": {
                "commands": [
                    "aella-get-event"
                ]
            }
        }, 
        {
            "Zendesk": {
                "commands": [
                    "zendesk-create-ticket", 
                    "zendesk-list-tickets", 
                    "zendesk-ticket-details", 
                    "zendesk-update-ticket", 
                    "zendesk-add-comment", 
                    "zendesk-list-agents", 
                    "zendesk-get-attachment", 
                    "zendesk-clear-cache", 
                    "zendesk-add-user", 
                    "zendesk-get-article"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Cisco CloudLock": {
                "commands": [
                    "cloudlock-get-users", 
                    "cloudlock-get-user-apps", 
                    "cloudlock-get-activities"
                ]
            }
        }, 
        {
            "carbonblackliveresponse": {
                "commands": [
                    "cb-archive", 
                    "cb-command-cancel", 
                    "cb-command-info", 
                    "cb-file-delete", 
                    "cb-file-get", 
                    "cb-file-info", 
                    "cb-file-upload", 
                    "cb-keepalive", 
                    "cb-list-commands", 
                    "cb-list-files", 
                    "cb-list-sessions", 
                    "cb-session-close", 
                    "cb-session-create", 
                    "cb-session-create-and-wait", 
                    "cb-session-info", 
                    "cb-process-kill", 
                    "cb-directory-listing", 
                    "cb-process-execute", 
                    "cb-memdeump", 
                    "cb-command-create", 
                    "cb-command-create-and-wait", 
                    "cb-terminate-process", 
                    "cb-file-delete-from-endpoint", 
                    "cb-registry-get-values", 
                    "cb-registry-query-value", 
                    "cb-registry-create-key", 
                    "cb-registry-delete-key", 
                    "cb-registry-delete-value", 
                    "cb-registry-set-value", 
                    "cb-process-list", 
                    "cb-get-file-from-endpoint", 
                    "cb-push-file-to-endpoint"
                ]
            }
        }, 
        {
            "Check Point Sandblast Appliance": {
                "toversion": "3.1.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download"
                ]
            }
        }, 
        {
            "Pipl": {
                "commands": [
                    "pipl-search", 
                    "email"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Forcepoint": {
                "commands": [
                    "fp-add-category", 
                    "fp-list-categories", 
                    "fp-get-category-detailes", 
                    "fp-add-address-to-category", 
                    "fp-delete-categories", 
                    "fp-delete-address-from-category"
                ]
            }
        }, 
        {
            "FireEye HX": {
                "commands": [
                    "fireeye-hx-host-containment", 
                    "fireeye-hx-cancel-containment", 
                    "fireeye-hx-get-alerts", 
                    "fireeye-hx-suppress-alert", 
                    "fireeye-hx-get-indicators", 
                    "fireeye-hx-get-indicator", 
                    "fireeye-hx-get-host-information", 
                    "fireeye-hx-get-alert", 
                    "fireeye-hx-file-acquisition", 
                    "fireeye-hx-delete-file-acquisition", 
                    "fireeye-hx-data-acquisition", 
                    "fireeye-hx-delete-data-acquisition", 
                    "fireeye-hx-search", 
                    "fireeye-hx-get-host-set-information"
                ]
            }
        }, 
        {
            "Threat Crowd": {
                "commands": [
                    "threat-crowd-email", 
                    "threat-crowd-domain", 
                    "threat-crowd-ip", 
                    "threat-crowd-antivirus", 
                    "threat-crowd-file"
                ]
            }
        }, 
        {
            "Palo Alto AppFramework": {
                "commands": [
                    "pan-appframework-query-logs", 
                    "pan-appframework-get-critical-threat-logs", 
                    "pan-appframework-get-social-applications", 
                    "pan-appframework-search-by-file-hash"
                ]
            }
        }, 
        {
            "Phishme Intelligence": {
                "commands": [
                    "url", 
                    "file", 
                    "ip", 
                    "phishme-search", 
                    "email"
                ]
            }
        }, 
        {
            "Remedy AR": {
                "commands": [
                    "remedy-get-server-details"
                ]
            }
        }, 
        {
            "Intezer": {
                "commands": [
                    "file", 
                    "intezer-upload"
                ]
            }
        }, 
        {
            "AlgoSec": {
                "commands": [
                    "algosec-get-ticket", 
                    "algosec-create-ticket", 
                    "algosec-get-applications", 
                    "algosec-get-network-object", 
                    "algosec-query"
                ]
            }
        }, 
        {
            "Zoom": {
                "commands": [
                    "zoom-create-user", 
                    "zoom-create-meeting", 
                    "zoom-fetch-recording", 
                    "zoom-list-users", 
                    "zoom-delete-user"
                ]
            }
        }, 
        {
            "Cuckoo Sandbox": {
                "commands": [
                    "ck-file", 
                    "cuckoo-create-task-from-file", 
                    "ck-report", 
                    "cuckoo-get-task-report", 
                    "ck-list", 
                    "cuckoo-list-tasks", 
                    "ck-url", 
                    "cuckoo-create-task-from-url", 
                    "ck-view", 
                    "cuckoo-view-task", 
                    "ck-del", 
                    "cuckoo-delete-task", 
                    "ck-scrshot", 
                    "cuckoo-task-screenshot", 
                    "ck-machines-list", 
                    "cuckoo-machines-list", 
                    "ck-machine-view", 
                    "cuckoo-machine-view"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Threat Grid": {
                "commands": [
                    "threat-grid-get-samples", 
                    "threat-grid-get-sample-by-id", 
                    "threat-grid-get-sample-state-by-id", 
                    "threat-grid-upload-sample", 
                    "threat-grid-search-submissions", 
                    "threat-grid-get-video-by-id", 
                    "threat-grid-get-analysis-by-id", 
                    "threat-grid-get-processes-by-id", 
                    "threat-grid-get-pcap-by-id", 
                    "threat-grid-get-warnings-by-id", 
                    "threat-grid-get-summary-by-id", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-html-report-by-id", 
                    "threat-grid-download-sample-by-id", 
                    "threat-grid-get-analysis-iocs", 
                    "threat-grid-download-artifact", 
                    "threat-grid-who-am-i", 
                    "threat-grid-user-get-rate-limit", 
                    "threat-grid-get-specific-feed", 
                    "threat-grid-detonate-file", 
                    "threat-grid-url-to-file", 
                    "threat-grid-organization-get-rate-limit", 
                    "threat-grid-search-ips", 
                    "threat-grid-get-analysis-annotations", 
                    "threat-grid-search-samples", 
                    "threat-grid-search-urls", 
                    "threat-grid-get-samples-state", 
                    "threat-grid-feeds-artifacts", 
                    "threat-grid-feeds-domain", 
                    "threat-grid-feeds-ip", 
                    "threat-grid-feeds-network-stream", 
                    "threat-grid-feeds-path", 
                    "threat-grid-feeds-url", 
                    "threat-grid-get-analysis-artifact", 
                    "threat-grid-get-analysis-artifacts", 
                    "threat-grid-get-analysis-ioc", 
                    "threat-grid-get-analysis-metadata", 
                    "threat-grid-get-analysis-network-stream", 
                    "threat-grid-get-analysis-network-streams", 
                    "threat-grid-get-analysis-process", 
                    "threat-grid-get-analysis-processes"
                ]
            }
        }, 
        {
            "QRadar": {
                "commands": [
                    "qradar-offenses", 
                    "qradar-offense-by-id", 
                    "qradar-searches", 
                    "qradar-get-search", 
                    "qradar-get-search-results", 
                    "qradar-update-offense", 
                    "qradar-get-assets", 
                    "qradar-get-asset-by-id", 
                    "qr-searches", 
                    "qr-get-search", 
                    "qr-get-search-results", 
                    "qr-update-offense", 
                    "qr-get-assets", 
                    "qr-offenses", 
                    "qradar-get-closing-reasons", 
                    "qradar-create-note", 
                    "qradar-get-note", 
                    "qradar-get-reference-by-name", 
                    "qradar-create-reference-set", 
                    "qradar-delete-reference-set", 
                    "qradar-create-reference-set-value", 
                    "qradar-update-reference-set-value", 
                    "qradar-delete-reference-set-value"
                ]
            }
        }, 
        {
            "SplunkPy": {
                "commands": [
                    "splunk-results", 
                    "splunk-search", 
                    "splunk-submit-event", 
                    "splunk-get-indexes", 
                    "splunk-notable-event-edit", 
                    "splunk-job-create", 
                    "splunk-parse-raw"
                ]
            }
        }, 
        {
            "TruSTAR": {
                "commands": [
                    "trustar-related-indicators", 
                    "trustar-trending-indicators", 
                    "trustar-search-indicators", 
                    "trustar-submit-report", 
                    "trustar-update-report", 
                    "trustar-report-details", 
                    "trustar-delete-report", 
                    "trustar-get-reports", 
                    "trustar-correlated-reports", 
                    "trustar-search-reports", 
                    "trustar-add-to-whitelist", 
                    "trustar-remove-from-whitelist", 
                    "trustar-get-enclaves"
                ]
            }
        }, 
        {
            "LogRhythm": {
                "commands": [
                    "lr-add-alarm-comments", 
                    "lr-get-alarm-by-id", 
                    "lr-get-alarm-events-by-id", 
                    "lr-get-alarm-history-by-id", 
                    "lr-update-alarm-status", 
                    "lr-get-alarms"
                ]
            }
        }, 
        {
            "Service Manager": {
                "commands": [
                    "hpsm-create-incident", 
                    "hpsm-list-incidents", 
                    "hpsm-get-incident-by-id", 
                    "hpsm-list-devices", 
                    "hpsm-get-device"
                ]
            }
        }, 
        {
            "Trend Micro": {
                "commands": [
                    "trendmicro-host-retrieve-all", 
                    "trendmicro-system-event-retrieve", 
                    "trendmicro-host-antimalware-scan", 
                    "trendmicro-alert-status", 
                    "trendmicro-security-profile-retrieve-all", 
                    "trendmicro-security-profile-assign-to-host", 
                    "trendmicro-anti-malware-event-retrieve"
                ]
            }
        }, 
        {
            "Netskope": {
                "commands": [
                    "netskope-events", 
                    "netskope-alerts"
                ]
            }
        }, 
        {
            "McAfee Web Gateway": {
                "commands": [
                    "mwg-get-available-lists", 
                    "mwg-get-list", 
                    "mwg-get-list-entry", 
                    "mwg-insert-entry", 
                    "mwg-delete-entry"
                ]
            }
        }, 
        {
            "ArcSight Logger": {
                "commands": [
                    "as-search-events", 
                    "as-status", 
                    "as-drilldown", 
                    "as-events", 
                    "as-close", 
                    "as-stop", 
                    "as-search"
                ]
            }
        }, 
        {
            "carbonblack-v2": {
                "commands": [
                    "cb-alert", 
                    "cb-binary", 
                    "cb-binary-get", 
                    "cb-block-hash", 
                    "cb-get-hash-blacklist", 
                    "cb-get-process", 
                    "cb-get-processes", 
                    "cb-list-sensors", 
                    "cb-process-events", 
                    "cb-quarantine-device", 
                    "cb-sensor-info", 
                    "cb-unblock-hash", 
                    "cb-unquarantine-device", 
                    "cb-version", 
                    "cb-watchlist-del", 
                    "cb-watchlist-get", 
                    "cb-watchlist-new", 
                    "cb-watchlist-set", 
                    "cb-alert-update", 
                    "cb-watchlist"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Zscaler": {
                "commands": [
                    "zscaler-blacklist-url", 
                    "url", 
                    "ip", 
                    "zscaler-undo-blacklist-url", 
                    "zscaler-whitelist-url", 
                    "zscaler-undo-whitelist-url", 
                    "zscaler-undo-whitelist-ip", 
                    "zscaler-whitelist-ip", 
                    "zscaler-undo-blacklist-ip", 
                    "zscaler-blacklist-ip", 
                    "zscaler-category-add-url", 
                    "zscaler-category-add-ip", 
                    "zscaler-category-remove-url", 
                    "zscaler-category-remove-ip", 
                    "zscaler-get-categories", 
                    "zscaler-get-blacklist", 
                    "zscaler-get-whitelist"
                ]
            }
        }, 
        {
            "Check Point Sandblast": {
                "toversion": "3.1.0", 
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download", 
                    "sb-quota", 
                    "sandblast-quota"
                ]
            }
        }, 
        {
            "fireeye": {
                "toversion": "3.1.0", 
                "commands": [
                    "fe-report", 
                    "fe-submit-status", 
                    "fe-alert", 
                    "fe-submit-result", 
                    "fe-submit", 
                    "fe-config"
                ], 
                "fromversion": "3.0.0"
            }
        }, 
        {
            "Awake Security": {
                "commands": [
                    "awake-query-devices", 
                    "awake-query-activities", 
                    "awake-query-domains", 
                    "awake-pcap-download", 
                    "domain", 
                    "ip", 
                    "email", 
                    "device"
                ]
            }
        }, 
        {
            "Skyformation": {
                "commands": [
                    "skyformation-get-accounts", 
                    "skyformation-suspend-user", 
                    "skyformation-unsuspend-user"
                ]
            }
        }, 
        {
            "Cisco Spark": {
                "commands": [
                    "cisco-spark-list-people", 
                    "cisco-spark-create-person", 
                    "cisco-spark-get-person-details", 
                    "cisco-spark-update-person", 
                    "cisco-spark-delete-person", 
                    "cisco-spark-get-own-details", 
                    "cisco-spark-list-rooms", 
                    "cisco-spark-create-room", 
                    "cisco-spark-get-room-details", 
                    "cisco-spark-update-room", 
                    "cisco-spark-delete-room", 
                    "cisco-spark-list-memberships", 
                    "cisco-spark-create-membership", 
                    "cisco-spark-get-membership-details", 
                    "cisco-spark-update-membership", 
                    "cisco-spark-delete-membership", 
                    "cisco-spark-list-messages", 
                    "cisco-spark-create-message", 
                    "cisco-spark-get-message-details", 
                    "cisco-spark-delete-message", 
                    "cisco-spark-list-teams", 
                    "cisco-spark-create-team", 
                    "cisco-spark-get-team-details", 
                    "cisco-spark-update-team", 
                    "cisco-spark-delete-team", 
                    "cisco-spark-list-team-memberships", 
                    "cisco-spark-create-team-membership", 
                    "cisco-spark-get-team-membership-details", 
                    "cisco-spark-update-team-membership", 
                    "cisco-spark-delete-team-membership", 
                    "cisco-spark-list-webhooks", 
                    "cisco-spark-create-webhook", 
                    "cisco-spark-get-webhook-details", 
                    "cisco-spark-update-webhook", 
                    "cisco-spark-delete-webhook", 
                    "cisco-spark-list-organizations", 
                    "cisco-spark-get-organization-details", 
                    "cisco-spark-list-licenses", 
                    "cisco-spark-get-license-details", 
                    "cisco-spark-list-roles", 
                    "cisco-spark-get-role-details", 
                    "cisco-spark-send-message-to-person", 
                    "cisco-spark-send-message-to-room"
                ]
            }
        }, 
        {
            "ArcSight ESM": {
                "commands": [
                    "as-get-all-cases", 
                    "as-get-case", 
                    "as-get-matrix-data", 
                    "as-add-entries", 
                    "as-clear-entries", 
                    "as-get-entries", 
                    "as-get-security-events", 
                    "as-get-case-event-ids", 
                    "as-update-case", 
                    "as-get-all-query-viewers", 
                    "as-case-delete"
                ]
            }
        }, 
        {
            "Rapid7 Nexpose": {
                "commands": [
                    "nexpose-get-asset", 
                    "nexpose-get-assets", 
                    "nexpose-search-assets", 
                    "nexpose-get-scan", 
                    "nexpose-get-asset-vulnerability", 
                    "nexpose-create-site", 
                    "nexpose-delete-site", 
                    "nexpose-get-sites", 
                    "nexpose-get-report-templates", 
                    "nexpose-create-assets-report", 
                    "nexpose-create-sites-report", 
                    "nexpose-create-scan-report", 
                    "nexpose-start-site-scan", 
                    "nexpose-start-assets-scan", 
                    "nexpose-stop-scan", 
                    "nexpose-pause-scan", 
                    "nexpose-resume-scan", 
                    "nexpose-get-scans"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Cylance Protect v2": {
                "commands": [
                    "cylance-protect-get-devices", 
                    "cylance-protect-get-device", 
                    "cylance-protect-update-device", 
                    "cylance-protect-get-device-threats", 
                    "cylance-protect-get-policies", 
                    "cylance-protect-create-zone", 
                    "cylance-protect-get-zones", 
                    "cylance-protect-get-zone", 
                    "cylance-protect-update-zone", 
                    "cylance-protect-get-threat", 
                    "cylance-protect-get-threat-devices", 
                    "cylance-protect-get-indicators-report", 
                    "cylance-protect-get-threats", 
                    "cylance-protect-update-device-threats", 
                    "cylance-protect-get-list", 
                    "cylance-protect-download-threat", 
                    "cylance-protect-add-hash-to-list", 
                    "cylance-protect-delete-hash-from-lists", 
                    "cylance-protect-get-policy-details", 
                    "cylance-protect-delete-devices"
                ]
            }
        }, 
        {
            "Cyber Triage": {
                "commands": [
                    "ct-triage-endpoint"
                ]
            }
        }, 
        {
            "Endgame": {
                "commands": [
                    "endgame-deploy", 
                    "endgame-get-deployment-profiles", 
                    "endgame-get-unmanaged-endpoints", 
                    "endgame-get-endpoint-status", 
                    "endgame-create-sensor-profile", 
                    "endgame-get-investigations", 
                    "endgame-create-investigation", 
                    "endgame-get-sensor", 
                    "endgame-investigation-results", 
                    "endgame-investigation-status"
                ]
            }
        }, 
        {
            "Kenna": {
                "commands": [
                    "kenna-search-vulnerabilities", 
                    "kenna-get-connectors", 
                    "kenna-run-connector", 
                    "kenna-search-fixes", 
                    "kenna-update-asset", 
                    "kenna-update-vulnerability"
                ]
            }
        }, 
        {
            "Cisco Meraki": {
                "commands": [
                    "meraki-fetch-organizations", 
                    "meraki-get-organization-license-state", 
                    "meraki-fetch-organization-inventory", 
                    "meraki-fetch-networks", 
                    "meraki-fetch-devices", 
                    "meraki-fetch-device-uplink", 
                    "meraki-fetch-ssids", 
                    "meraki-fetch-clients", 
                    "meraki-fetch-firewall-rules", 
                    "meraki-remove-device", 
                    "meraki-get-device", 
                    "meraki-update-device", 
                    "meraki-claim-device", 
                    "meraki-update-firewall-rules"
                ]
            }
        }, 
        {
            "WildFire": {
                "toversion": "3.6.0", 
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "AWS Sagemaker": {
                "commands": [
                    "predict-phishing"
                ]
            }
        }, 
        {
            "VxStream": {
                "commands": [
                    "vx-scan", 
                    "crowdstrike-scan", 
                    "vx-get-environments", 
                    "crowdstrike-get-environments", 
                    "vx-submit-sample", 
                    "crowdstrike-submit-sample", 
                    "vx-search", 
                    "crowdstrike-search", 
                    "vx-result", 
                    "crowdstrike-result", 
                    "vx-detonate-file", 
                    "crowdstrike-detonate-file", 
                    "crowdstrike-submit-url", 
                    "crowdstrike-get-screenshots", 
                    "crowdstrike-detonate-url", 
                    "crowdstrike-submit-file-by-url"
                ]
            }
        }, 
        {
            "DomainTools": {
                "commands": [
                    "domain", 
                    "domainSearch", 
                    "reverseIP", 
                    "reverseNameServer", 
                    "reverseWhois", 
                    "whois", 
                    "whoisHistory", 
                    "domainProfile"
                ], 
                "fromversion": "3.0.0"
            }
        }, 
        {
            "Jask": {
                "commands": [
                    "jask-get-insight-details", 
                    "jask-get-insight-comments", 
                    "jask-get-signal-details", 
                    "jask-get-entity-details", 
                    "jask-get-related-entities", 
                    "jask-get-whitelisted-entities", 
                    "jask-search-insights", 
                    "jask-search-signals", 
                    "jask-search-entities"
                ]
            }
        }, 
        {
            "Server Message Block (SMB)": {
                "commands": [
                    "smb-download"
                ]
            }
        }, 
        {
            "McAfee ESM-v10": {
                "commands": [
                    "esm-fetch-fields", 
                    "esm-search", 
                    "esm-fetch-alarms", 
                    "esm-get-case-list", 
                    "esm-add-case", 
                    "esm-edit-case", 
                    "esm-get-case-statuses", 
                    "esm-edit-case-status", 
                    "esm-get-case-detail", 
                    "esm-get-case-event-list", 
                    "esm-add-case-status", 
                    "esm-delete-case-status", 
                    "esm-get-organization-list", 
                    "esm-get-user-list", 
                    "esm-acknowledge-alarms", 
                    "esm-unacknowledge-alarms", 
                    "esm-delete-alarms", 
                    "esm-get-alarm-event-details", 
                    "esm-list-alarm-events"
                ]
            }
        }, 
        {
            "nmap": {
                "commands": [
                    "nmap-scan"
                ]
            }
        }, 
        {
            "ReversingLabs Titanium Cloud": {
                "commands": [
                    "file"
                ]
            }
        }, 
        {
            "Farsight DNSDB": {
                "commands": [
                    "dnsdb-rdata", 
                    "dnsdb-rrset"
                ]
            }
        }, 
        {
            "Symantec MSS": {
                "commands": [
                    "symantec-mss-update-incident", 
                    "symantec-mss-get-incident", 
                    "symantec-mss-incidents-list"
                ]
            }
        }, 
        {
            "EWS Mail Sender": {
                "commands": [
                    "send-mail"
                ]
            }
        }, 
        {
            "WildFire": {
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote", 
                    "wildfire-upload-file-remote"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "WildFire": {
                "toversion": "3.1.0", 
                "commands": [
                    "wildfire-report", 
                    "file", 
                    "wildfire-upload", 
                    "detonate-file", 
                    "detonate-file-remote"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "AlienVault OTX": {
                "commands": [
                    "ip", 
                    "domain", 
                    "ipv6", 
                    "hostname", 
                    "file", 
                    "alienvault-query-file", 
                    "alienvault-search-pulses", 
                    "alienvault-get-pulse-details", 
                    "url"
                ], 
                "fromversion": "3.0.1"
            }
        }, 
        {
            "Windows Defender Advanced Threat Protection": {
                "commands": [
                    "microsoft-atp-isolate-machine", 
                    "microsoft-atp-unisolate-machine", 
                    "microsoft-atp-get-machines", 
                    "microsoft-atp-get-file-related-machines", 
                    "microsoft-atp-get-machine-details", 
                    "microsoft-atp-run-antivirus-scan", 
                    "microsoft-atp-list-alerts"
                ]
            }
        }, 
        {
            "Mail Sender (New)": {
                "commands": [
                    "send-mail"
                ]
            }
        }, 
        {
            "Sample Incident Generator": {}
        }, 
        {
            "Hybrid Analysis": {
                "commands": [
                    "hybrid-analysis-scan", 
                    "hybrid-analysis-submit-sample", 
                    "hybrid-analysis-search", 
                    "hybrid-analysis-detonate-file"
                ], 
                "fromversion": "3.6.1"
            }
        }, 
        {
            "Anomali ThreatStream": {
                "commands": [
                    "threatstream-intelligence", 
                    "domain", 
                    "file", 
                    "threatstream-email-reputation", 
                    "ip"
                ]
            }
        }, 
        {
            "PacketMail": {
                "commands": [
                    "packetmail-ip"
                ]
            }
        }, 
        {
            "Qualys": {
                "toversion": "3.1.0", 
                "commands": [
                    "qualys-report-list", 
                    "qualys-report-cancel", 
                    "qualys-report-delete", 
                    "qualys-scorecard-launch", 
                    "qualys-report-fetch", 
                    "qualys-vm-scan-list", 
                    "qualys-vm-scan-launch", 
                    "qualys-vm-scan-action", 
                    "qualys-scap-scan-list", 
                    "qualys-pc-scan-launch", 
                    "qualys-pc-scan-manage", 
                    "qualys-schedule-scan-list", 
                    "qualys-ip-list", 
                    "qualys-ip-add", 
                    "qualys-ip-update", 
                    "qualys-virtual-host-list", 
                    "qualys-virtual-host-manage", 
                    "qualys-host-excluded-list", 
                    "qualys-host-excluded-manage", 
                    "qualys-scheduled-report-list", 
                    "qualys-scheduled-report-launch", 
                    "qualys-host-list", 
                    "qualys-pc-scan-list", 
                    "qualys-report-template-list", 
                    "qualys-report-launch-map", 
                    "qualys-report-launch-scan-based-findings", 
                    "qualys-report-launch-host-based-findings", 
                    "qualys-report-launch-patch", 
                    "qualys-report-launch-remediation", 
                    "qualys-report-launch-compliance", 
                    "qualys-report-launch-compliance-policy", 
                    "qualys-vulnerability-list", 
                    "qualys-group-list", 
                    "qualys-vm-scan-fetch", 
                    "qualys-pc-scan-fetch"
                ]
            }
        }, 
        {
            "Cisco Umbrella Investigate": {
                "commands": [
                    "umbrella-domain-categorization", 
                    "investigate-umbrella-domain-categorization", 
                    "umbrella-domain-co-occurrences", 
                    "investigate-umbrella-domain-co-occurrences", 
                    "umbrella-domain-related", 
                    "investigate-umbrella-domain-related", 
                    "umbrella-domain-security", 
                    "investigate-umbrella-domain-security", 
                    "umbrella-domain-dns-history", 
                    "investigate-umbrella-domain-dns-history", 
                    "umbrella-ip-dns-history", 
                    "investigate-umbrella-ip-dns-history", 
                    "investigate-umbrella-ip-malicious-domains", 
                    "umbrella-ip-malicious-domains", 
                    "umbrella-domain-search", 
                    "investigate-umbrella-domain-search", 
                    "domain", 
                    "umbrella-get-related-domains", 
                    "umbrella-get-domain-classifiers", 
                    "umbrella-get-domain-queryvolume", 
                    "umbrella-get-domain-details", 
                    "umbrella-get-domains-for-email-registrar", 
                    "umbrella-get-domains-for-nameserver", 
                    "umbrella-get-whois-for-domain", 
                    "umbrella-get-malicious-domains-for-ip", 
                    "umbrella-get-domains-using-regex", 
                    "umbrella-get-domain-timeline", 
                    "umbrella-get-ip-timeline", 
                    "umbrella-get-url-timeline"
                ]
            }
        }, 
        {
            "Carbon Black Defense": {
                "commands": [
                    "cbd-get-devices-status", 
                    "cbd-get-device-status", 
                    "cbd-change-device-status", 
                    "cbd-find-events", 
                    "cbd-find-event", 
                    "cbd-find-processes", 
                    "cbd-get-alert-details", 
                    "cbd-get-policies", 
                    "cbd-get-policy", 
                    "cbd-create-policy", 
                    "cbd-update-policy", 
                    "cbd-delete-policy", 
                    "cbd-add-rule-to-policy", 
                    "cbd-delete-rule-from-policy", 
                    "cbd-update-rule-in-policy", 
                    "cbd-set-policy"
                ]
            }
        }, 
        {
            "Lockpath KeyLight": {
                "toversion": "3.1.0", 
                "commands": [
                    "kl-get-component-list", 
                    "kl-get-component", 
                    "kl-get-component-by-alias", 
                    "kl-get-field-list", 
                    "kl-get-field", 
                    "kl-get-record-count", 
                    "kl-get-record", 
                    "kl-get-records", 
                    "kl-delete-record", 
                    "kl-create-record", 
                    "kl-update-record", 
                    "kl-get-detail-record", 
                    "kl-get-lookup-report-column-fields", 
                    "kl-get-detail-records", 
                    "kl-get-record-attachments", 
                    "kl-get-record-attachment", 
                    "kl-delete-record-attachments"
                ]
            }
        }, 
        {
            "OPSWAT-Metadefender": {
                "commands": [
                    "opswat-hash", 
                    "opswat-scan-file", 
                    "opswat-scan-result"
                ]
            }
        }, 
        {
            "ActiveMQ": {
                "commands": [
                    "activemq-send", 
                    "activemq-subscribe"
                ]
            }
        }, 
        {
            "Cisco Email Security Appliance (IronPort)": {
                "commands": [
                    "ironport-report"
                ]
            }
        }, 
        {
            "Qualys": {
                "commands": [
                    "qualys-report-list", 
                    "qualys-report-cancel", 
                    "qualys-report-delete", 
                    "qualys-scorecard-launch", 
                    "qualys-report-fetch", 
                    "qualys-vm-scan-list", 
                    "qualys-vm-scan-launch", 
                    "qualys-vm-scan-action", 
                    "qualys-scap-scan-list", 
                    "qualys-pc-scan-launch", 
                    "qualys-pc-scan-manage", 
                    "qualys-schedule-scan-list", 
                    "qualys-ip-list", 
                    "qualys-ip-add", 
                    "qualys-ip-update", 
                    "qualys-virtual-host-list", 
                    "qualys-virtual-host-manage", 
                    "qualys-host-excluded-list", 
                    "qualys-host-excluded-manage", 
                    "qualys-scheduled-report-list", 
                    "qualys-scheduled-report-launch", 
                    "qualys-host-list", 
                    "qualys-pc-scan-list", 
                    "qualys-report-template-list", 
                    "qualys-report-launch-map", 
                    "qualys-report-launch-scan-based-findings", 
                    "qualys-report-launch-host-based-findings", 
                    "qualys-report-launch-patch", 
                    "qualys-report-launch-remediation", 
                    "qualys-report-launch-compliance", 
                    "qualys-report-launch-compliance-policy", 
                    "qualys-vulnerability-list", 
                    "qualys-group-list", 
                    "qualys-vm-scan-fetch", 
                    "qualys-pc-scan-fetch"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "IsItPhishing": {
                "commands": [
                    "url"
                ]
            }
        }, 
        {
            "okta": {
                "toversion": "3.5.1", 
                "commands": [
                    "okta-unlock-user", 
                    "okta-deactivate-user", 
                    "okta-activate-user", 
                    "okta-get-groups", 
                    "okta-set-password", 
                    "okta-search", 
                    "okta-get-user", 
                    "okta-create-user", 
                    "okta-update-user"
                ], 
                "fromversion": "3.1.0"
            }
        }, 
        {
            "AWS - EC2": {
                "commands": [
                    "aws-ec2-describe-instances", 
                    "aws-ec2-describe-images", 
                    "aws-ec2-describe-regions", 
                    "aws-ec2-describe-addresses", 
                    "aws-ec2-describe-snapshots", 
                    "aws-ec2-describe-launch-templates", 
                    "aws-ec2-describe-key-pairs", 
                    "aws-ec2-describe-volumes", 
                    "aws-ec2-describe-vpcs", 
                    "aws-ec2-describe-subnets", 
                    "aws-ec2-describe-security-groups", 
                    "aws-ec2-allocate-address", 
                    "aws-ec2-associate-address", 
                    "aws-ec2-create-snapshot", 
                    "aws-ec2-delete-snapshot", 
                    "aws-ec2-create-image", 
                    "aws-ec2-deregister-image", 
                    "aws-ec2-modify-volume", 
                    "aws-ec2-create-tags", 
                    "aws-ec2-disassociate-address", 
                    "aws-ec2-release-address", 
                    "aws-ec2-start-instances", 
                    "aws-ec2-stop-instances", 
                    "aws-ec2-terminate-instances", 
                    "aws-ec2-create-volume", 
                    "aws-ec2-attach-volume", 
                    "aws-ec2-detach-volume", 
                    "aws-ec2-delete-volume", 
                    "aws-ec2-run-instances", 
                    "aws-ec2-waiter-instance-running", 
                    "aws-ec2-waiter-instance-status-ok", 
                    "aws-ec2-waiter-instance-stopped", 
                    "aws-ec2-waiter-instance-terminated", 
                    "aws-ec2-waiter-image-available", 
                    "aws-ec2-waiter-snapshot_completed", 
                    "aws-ec2-get-latest-ami", 
                    "aws-ec2-create-security-group", 
                    "aws-ec2-delete-security-group", 
                    "aws-ec2-authorize-security-group-ingress-rule", 
                    "aws-ec2-revoke-security-group-ingress-rule", 
                    "aws-ec2-copy-image", 
                    "aws-ec2-copy-snapshot", 
                    "aws-ec2-describe-reserved-instances", 
                    "aws-ec2-monitor-instances", 
                    "aws-ec2-unmonitor-instances", 
                    "aws-ec2-reboot-instances", 
                    "aws-ec2-get-password-data", 
                    "aws-ec2-modify-network-interface-attribute", 
                    "aws-ec2-modify-instance-attribute"
                ]
            }
        }, 
        {
            "Blockade.io": {
                "commands": [
                    "blockade-get-indicators", 
                    "blockade-add-indicators"
                ]
            }
        }, 
        {
            "AlphaSOC Network Behavior Analytics": {}
        }, 
        {
            "Recorded Future": {
                "commands": [
                    "domain", 
                    "ip", 
                    "file", 
                    "recorded-future-get-related-entities"
                ]
            }
        }, 
        {
            "CVE Search": {
                "commands": [
                    "cve-search", 
                    "cve-latest"
                ]
            }
        }, 
        {
            "SNDBOX": {
                "commands": [
                    "sndbox-is-online", 
                    "sndbox-analysis-info", 
                    "sndbox-analysis-submit-sample", 
                    "sndbox-download-report", 
                    "sndbox-detonate-file", 
                    "sndbox-download-sample"
                ]
            }
        }, 
        {
            "Demisto Lock": {
                "commands": [
                    "demisto-lock-get", 
                    "demisto-lock-release", 
                    "demisto-lock-info", 
                    "demisto-lock-release-all"
                ]
            }
        }, 
        {
            "F5 firewall": {
                "commands": [
                    "f5-create-policy", 
                    "f5-create-rule", 
                    "f5-list-rules", 
                    "f5-modify-rule", 
                    "f5-del-rule", 
                    "f5-modify-global-policy", 
                    "f5-show-global-policy", 
                    "f5-del-policy", 
                    "f5-list-all-user-sessions"
                ]
            }
        }, 
        {
            "MimecastV2": {
                "commands": [
                    "mimecast-query", 
                    "mimecast-list-blocked-sender-policies", 
                    "mimecast-get-policy", 
                    "mimecast-create-policy", 
                    "mimecast-delete-policy", 
                    "mimecast-manage-sender", 
                    "mimecast-list-managed-url", 
                    "mimecast-create-managed-url", 
                    "mimecast-list-messages", 
                    "mimecast-get-attachment-logs", 
                    "mimecast-get-url-logs", 
                    "mimecast-get-impersonation-logs", 
                    "mimecast-url-decode", 
                    "mimecast-discover", 
                    "mimecast-refresh-token", 
                    "mimecast-login", 
                    "mimecast-get-message", 
                    "mimecast-download-attachments"
                ]
            }
        }, 
        {
            "Zendesk": {
                "toversion": "3.1.0", 
                "commands": [
                    "zendesk-create-ticket", 
                    "zendesk-list-tickets", 
                    "zendesk-ticket-details", 
                    "zendesk-update-ticket", 
                    "zendesk-add-comment", 
                    "zendesk-list-agents", 
                    "zendesk-get-attachment", 
                    "zendesk-clear-cache", 
                    "zendesk-add-user", 
                    "zendesk-get-article"
                ]
            }
        }, 
        {
            "RedCanary": {
                "commands": [
                    "redcanary-acknowledge-detection", 
                    "redcanary-update-remediation-state", 
                    "redcanary-list-detections", 
                    "redcanary-list-endpoints", 
                    "redcanary-execute-playbook", 
                    "redcanary-get-endpoint", 
                    "redcanary-get-endpoint-detections", 
                    "redcanary-get-detection"
                ]
            }
        }, 
        {
            "Joe Security": {
                "commands": [
                    "joe-is-online", 
                    "joe-analysis-submit-url", 
                    "joe-detonate-url", 
                    "joe-analysis-info", 
                    "joe-list-analysis", 
                    "joe-analysis-submit-sample", 
                    "joe-download-report", 
                    "joe-detonate-file", 
                    "joe-search", 
                    "joe-download-sample"
                ]
            }
        }, 
        {
            "AWS - CloudTrail": {
                "commands": [
                    "aws-cloudtrail-create-trail", 
                    "aws-cloudtrail-delete-trail", 
                    "aws-cloudtrail-describe-trails", 
                    "aws-cloudtrail-update-trail", 
                    "aws-cloudtrail-start-logging", 
                    "aws-cloudtrail-stop-logging", 
                    "aws-cloudtrail-lookup-events"
                ]
            }
        }, 
        {
            "ThreatExchange": {
                "commands": [
                    "file", 
                    "ip", 
                    "url", 
                    "domain", 
                    "threatexchange-query", 
                    "threatexchange-members"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Dell Secureworks": {
                "toversion": "3.5.1", 
                "commands": [
                    "secure-works-create-ticket", 
                    "secure-works-update-ticket", 
                    "secure-works-close-ticket", 
                    "secure-works-add-worklogs-ticket", 
                    "secure-works-get-ticket-count", 
                    "secure-works-get-ticket", 
                    "secure-works-assign-ticket", 
                    "secure-works-get-tickets-updates", 
                    "secure-works-get-tickets-ids"
                ], 
                "fromversion": "3.1.0"
            }
        }, 
        {
            "Amazon Web Services": {
                "commands": [
                    "aws-run-instance", 
                    "aws-stop-instance", 
                    "aws-create-image", 
                    "aws-start-instance", 
                    "aws-create-volume-snapshot", 
                    "aws-get-instance-info", 
                    "aws-get-sg-info", 
                    "aws-get-ebs-volume-info"
                ], 
                "fromversion": "1.6.2"
            }
        }, 
        {
            "ArcSight XML": {
                "commands": [
                    "arcsight-update-case", 
                    "arcsight-fetch-xml"
                ]
            }
        }, 
        {
            "VirusTotal": {
                "commands": [
                    "file", 
                    "ip", 
                    "url", 
                    "domain", 
                    "file-scan", 
                    "file-rescan", 
                    "url-scan", 
                    "vt-comments-add", 
                    "vt-file-scan-upload-url", 
                    "vt-comments-get"
                ]
            }
        }, 
        {
            "MxToolBox": {
                "commands": [
                    "mxtoolbox"
                ]
            }
        }, 
        {
            "Check Point Sandblast Appliance": {
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "LightCyber Magna": {
                "commands": [
                    "lcm-version", 
                    "lcm-entities", 
                    "lcm-indicators", 
                    "lcm-hosts", 
                    "lcm-hostbyip", 
                    "lcm-hostbyname", 
                    "lcm-pathfinder-scan", 
                    "lcm-sandbox-report", 
                    "lcm-daily-report", 
                    "lcm-host-artifacts", 
                    "lcm-resolve-host", 
                    "lcm-unresolve-host", 
                    "lcm-set-host-comment", 
                    "lcm-acknowledge-host", 
                    "lcm-resolve-user", 
                    "lcm-unresolve-user", 
                    "lcm-set-user-comment", 
                    "lcm-acknowledge-user", 
                    "lcm-domain", 
                    "lcm-executablebymd5", 
                    "lcm-executablebyname", 
                    "lcm-indicatorsforentity", 
                    "lcm-host-opened-ports", 
                    "lcm-host-suspicious-artifacts", 
                    "lcm-host-processes", 
                    "lcm-host-loaded-modules", 
                    "lcm-host-processes-internet-connections", 
                    "lcm-host-autoruns"
                ]
            }
        }, 
        {
            "Packetsled": {
                "commands": [
                    "packetsled-get-incidents", 
                    "packetsled-sensors", 
                    "packetsled-get-flows", 
                    "packetsled-get-files", 
                    "packetsled-get-pcaps", 
                    "packetsled-get-events"
                ]
            }
        }, 
        {
            "Censys": {
                "commands": [
                    "cen-view", 
                    "cen-search"
                ]
            }
        }, 
        {
            "Imperva Skyfence": {
                "commands": [
                    "imp-sf-list-endpoints", 
                    "imp-sf-set-endpoint-status"
                ]
            }
        }, 
        {
            "ProtectWise": {
                "commands": [
                    "sensors", 
                    "protectwise-show-sensors", 
                    "search", 
                    "protectwise-search-events", 
                    "pw-event-get", 
                    "protectwise-event-info", 
                    "observation-search", 
                    "protectwise-search-observations", 
                    "pw-observation-get", 
                    "protectwise-observation-info", 
                    "event-pcap-download", 
                    "protectwise-event-pcap-download", 
                    "event-pcap-info", 
                    "protectwise-event-pcap-info", 
                    "observation-pcap-download", 
                    "protectwise-observation-pcap-download", 
                    "observation-pcap-info", 
                    "protectwise-observation-pcap-info", 
                    "get-token"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Palo Alto Minemeld": {
                "commands": [
                    "minemeld-add-to-miner", 
                    "minemeld-remove-from-miner", 
                    "minemeld-retrieve-miner", 
                    "minemeld-get-indicator-from-miner", 
                    "ip", 
                    "file", 
                    "domain", 
                    "url", 
                    "minemeld-get-all-miners-names"
                ]
            }
        }, 
        {
            "GoogleSafeBrowsing": {
                "commands": [
                    "url"
                ]
            }
        }, 
        {
            "Salesforce": {
                "commands": [
                    "salesforce-search", 
                    "salesforce-query", 
                    "salesforce-get-object", 
                    "salesforce-update-object", 
                    "salesforce-create-object", 
                    "salesforce-push-comment", 
                    "salesforce-get-case", 
                    "salesforce-create-case", 
                    "salesforce-update-case", 
                    "salesforce-get-cases", 
                    "salesforce-close-case", 
                    "salesforce-push-comment-threads", 
                    "salesforce-delete-case"
                ]
            }
        }, 
        {
            "SCADAfence CNM": {
                "commands": [
                    "scadafence-getAlerts", 
                    "scadafence-getAsset", 
                    "scadafence-setAlertStatus", 
                    "scadafence-getAssetConnections", 
                    "scadafence-getAssetTraffic", 
                    "scadafence-createAlert", 
                    "scadafence-getAllConnections"
                ]
            }
        }, 
        {
            "Proofpoint TAP": {
                "commands": [
                    "proofpoint-get-events"
                ]
            }
        }, 
        {
            "Threat Grid": {
                "toversion": "3.1.0", 
                "commands": [
                    "threat-grid-feeds-ip", 
                    "threat-grid-feeds-domain", 
                    "threat-grid-feeds-url", 
                    "threat-grid-feeds-path", 
                    "threat-grid-feeds-artifacts", 
                    "threat-grid-feeds-network-stream", 
                    "threat-grid-feeds-registry-key", 
                    "threat-grid-get-samples", 
                    "threat-grid-get-sample-by-id", 
                    "threat-grid-get-sample-state-by-id", 
                    "threat-grid-get-samples-state", 
                    "threat-grid-upload-sample", 
                    "threat-grid-search-submissions", 
                    "threat-grid-get-video-by-id", 
                    "threat-grid-get-analysis-by-id", 
                    "threat-grid-get-processes-by-id", 
                    "threat-grid-get-pcap-by-id", 
                    "threat-grid-get-warnings-by-id", 
                    "threat-grid-get-summary-by-id", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-html-report-by-id", 
                    "threat-grid-download-sample-by-id", 
                    "threat-grid-get-analysis-iocs", 
                    "threat-grid-get-analysis-ioc", 
                    "threat-grid-get-analysis-network-streams", 
                    "threat-grid-get-analysis-artifacts", 
                    "threat-grid-get-analysis-network-stream", 
                    "threat-grid-get-analysis-artifact", 
                    "threat-grid-get-analysis-processes", 
                    "threat-grid-get-analysis-process", 
                    "threat-grid-get-analysis-annotations", 
                    "threat-grid-get-analysis-metadata", 
                    "threat-grid-download-artifact", 
                    "threat-grid-who-am-i", 
                    "threat-grid-user-get-rate-limit", 
                    "threat-grid-get-specific-feed"
                ]
            }
        }, 
        {
            "iDefense": {
                "commands": [
                    "ip", 
                    "domain", 
                    "url", 
                    "idefense-general", 
                    "uuid"
                ]
            }
        }, 
        {
            "FalconIntel": {
                "commands": [
                    "file", 
                    "url", 
                    "domain", 
                    "ip", 
                    "cs-actors", 
                    "cs-indicators", 
                    "cs-reports", 
                    "cs-report-pdf"
                ]
            }
        }, 
        {
            "Venafi": {
                "commands": [
                    "venafi-get-certificates", 
                    "venafi-get-certificate-details"
                ]
            }
        }, 
        {
            "CyberArkAIM": {
                "commands": [
                    "cyber-ark-aim-query", 
                    "list-credentials", 
                    "reset-credentials", 
                    "account-details"
                ]
            }
        }, 
        {
            "Autofocus": {
                "commands": [
                    "autofocus-search-samples", 
                    "autofocus-search-sessions", 
                    "autofocus-session", 
                    "autofocus-sample-analysis", 
                    "file"
                ]
            }
        }, 
        {
            "McAfee Threat Intelligence Exchange": {
                "commands": [
                    "file", 
                    "tie-set-file-reputation", 
                    "tie-file-references"
                ]
            }
        }, 
        {
            "Check Point": {
                "commands": [
                    "checkpoint-show-access-rule-base", 
                    "checkpoint-set-rule", 
                    "checkpoint-task-status", 
                    "checkpoint-show-hosts", 
                    "checkpoint-block-ip", 
                    "checkpoint", 
                    "checkpoint-delete-rule"
                ]
            }
        }, 
        {
            "PagerDuty v2": {
                "commands": [
                    "PagerDuty-get-all-schedules", 
                    "PagerDuty-get-users-on-call", 
                    "PagerDuty-get-users-on-call-now", 
                    "PagerDuty-incidents", 
                    "PagerDuty-submit-event", 
                    "PagerDuty-get-contact-methods", 
                    "PagerDuty-get-users-notification", 
                    "PagerDuty-resolve-event", 
                    "PagerDuty-acknowledge-event"
                ]
            }
        }, 
        {
            "Gmail": {
                "commands": [
                    "gmail-delete-user", 
                    "gmail-get-tokens-for-user", 
                    "gmail-get-user", 
                    "gmail-get-user-roles", 
                    "gmail-get-attachments", 
                    "gmail-get-mail", 
                    "gmail-search", 
                    "gmail-search-all-mailboxes", 
                    "gmail-list-users", 
                    "gmail-revoke-user-role", 
                    "gmail-create-user", 
                    "gmail-delete-mail", 
                    "gmail-get-thread", 
                    "gmail-move-mail", 
                    "gmail-move-mail-to-mailbox", 
                    "gmail-add-delete-filter", 
                    "gmail-add-filter"
                ]
            }
        }, 
        {
            "Centreon": {
                "commands": [
                    "centreon-get-host-status", 
                    "centreon-get-service-status"
                ]
            }
        }, 
        {
            "RSA NetWitness Endpoint": {
                "commands": [
                    "netwitness-get-machines", 
                    "netwitness-get-machine", 
                    "netwitness-get-machine-iocs", 
                    "netwitness-get-machine-modules", 
                    "netwitness-get-machine-module", 
                    "netwitness-blacklist-ips", 
                    "netwitness-blacklist-domains"
                ]
            }
        }, 
        {
            "PassiveTotal": {
                "commands": [
                    "pt-get-subdomains", 
                    "pt-account", 
                    "pt-monitors", 
                    "pt-passive-dns", 
                    "pt-passive-unique", 
                    "pt-dns-keyword", 
                    "pt-enrichment", 
                    "pt-malware", 
                    "url", 
                    "domain", 
                    "ip", 
                    "pt-osint", 
                    "pt-whois", 
                    "pt-whois-keyword", 
                    "pt-whois-search", 
                    "pt-get-components", 
                    "pt-get-pairs", 
                    "pt-ssl-cert", 
                    "pt-ssl-cert-history", 
                    "pt-ssl-cert-keyword", 
                    "pt-ssl-cert-search"
                ]
            }
        }, 
        {
            "ProtectWise": {
                "toversion": "3.1.0", 
                "commands": [
                    "sensors", 
                    "protectwise-show-sensors", 
                    "search", 
                    "protectwise-search-events", 
                    "pw-event-get", 
                    "protectwise-event-info", 
                    "observation-search", 
                    "protectwise-search-observations", 
                    "pw-observation-get", 
                    "protectwise-observation-info", 
                    "event-pcap-download", 
                    "protectwise-event-pcap-download", 
                    "event-pcap-info", 
                    "protectwise-event-pcap-info", 
                    "observation-pcap-download", 
                    "protectwise-observation-pcap-download", 
                    "observation-pcap-info", 
                    "protectwise-observation-pcap-info", 
                    "get-token"
                ]
            }
        }, 
        {
            "SentinelOne": {
                "commands": [
                    "so-activities", 
                    "so-count-by-filters", 
                    "so-agents-count", 
                    "so-agent-decommission", 
                    "so-get-agent", 
                    "so-agents-query", 
                    "so-get-agent-processes", 
                    "so-agent-recommission", 
                    "so-agent-unquarentine", 
                    "so-agent-shutdown", 
                    "so-agent-uninstall", 
                    "so-agents-broadcast", 
                    "so-agents-connect", 
                    "so-agent-quarentine", 
                    "so-agents-decommission", 
                    "so-agents-disconnect", 
                    "so-agents-fetch-logs", 
                    "so-agents-shutdown", 
                    "so-agents-uninstall", 
                    "so-agents-upgrade-software", 
                    "so-create-exclusion-list", 
                    "so-delete-exclusion-list", 
                    "so-get-exclusion-list", 
                    "so-get-exclusion-lists", 
                    "so-update-exclusion-list", 
                    "so-get-groups", 
                    "so-create-group", 
                    "so-get-group", 
                    "so-update-group", 
                    "so-delete-group", 
                    "so-add-agent-to-group", 
                    "so-set-cloud-intelligence", 
                    "so-create-hash", 
                    "so-delete-hash", 
                    "so-get-hash-reputation", 
                    "so-get-hash", 
                    "so-get-hashes", 
                    "so-update-hash", 
                    "so-get-policies", 
                    "so-create-policy", 
                    "so-get-policy", 
                    "so-update-policy", 
                    "so-delete-policy", 
                    "so-get-threat", 
                    "so-get-threats", 
                    "so-threat-summary", 
                    "so-mark-as-threat", 
                    "so-mitigate-threat", 
                    "so-reslove-threats"
                ], 
                "fromversion": "3.1.0"
            }
        }, 
        {
            "AMP": {
                "commands": [
                    "amp_get_computers", 
                    "amp_get_computer_by_connector", 
                    "amp_get_computer_trajctory", 
                    "amp_move_computer", 
                    "amp_get_computer_actvity", 
                    "amp_get_events", 
                    "amp_get_event_types", 
                    "amp_get_application_blocking", 
                    "amp_get_file_list_by_guid", 
                    "amp_get_simple_custom_detections", 
                    "amp_get_file_list_files", 
                    "amp_get_file_list_files_by_sha", 
                    "amp_set_file_list_files_by_sha", 
                    "amp_delete_file_list_files_by_sha", 
                    "amp_get_groups", 
                    "amp_get_group", 
                    "amp_set_group_policy", 
                    "amp_get_policies", 
                    "amp_get_policy", 
                    "amp_get_version"
                ]
            }
        }, 
        {
            "AWS - SQS": {
                "commands": [
                    "aws-sqs-get-queue-url", 
                    "aws-sqs-list-queues", 
                    "aws-sqs-send-message", 
                    "aws-sqs-create-queue", 
                    "aws-sqs-delete-queue", 
                    "aws-sqs-purge-queue"
                ]
            }
        }, 
        {
            "carbonblackliveresponse": {
                "toversion": "3.6.0", 
                "commands": [
                    "cb-archive", 
                    "cb-command-cancel", 
                    "cb-command-create", 
                    "cb-command-create-and-wait", 
                    "cb-command-info", 
                    "cb-file-delete", 
                    "cb-file-get", 
                    "cb-file-info", 
                    "cb-file-upload", 
                    "cb-keepalive", 
                    "cb-list-commands", 
                    "cb-list-files", 
                    "cb-list-sessions", 
                    "cb-session-close", 
                    "cb-session-create", 
                    "cb-session-create-and-wait", 
                    "cb-session-info", 
                    "cb-terminate-process"
                ]
            }
        }, 
        {
            "AWS - Route53": {
                "commands": [
                    "aws-route53-create-record", 
                    "aws-route53-delete-record", 
                    "aws-route53-list-hosted-zones", 
                    "aws-route53-list-resource-record-sets", 
                    "aws-route53-waiter-resource-record-sets-changed", 
                    "aws-route53-test-dns-answer", 
                    "aws-route53-upsert-record"
                ]
            }
        }, 
        {
            "Tanium": {
                "commands": [
                    "tn-get-package", 
                    "tn-get-all-packages", 
                    "tn-get-object", 
                    "tn-get-all-saved-questions", 
                    "tn-deploy-package", 
                    "tn-ask-question", 
                    "tn-ask-system", 
                    "tn-get-saved-question", 
                    "tn-create-package", 
                    "tn-approve-pending-action", 
                    "tn-get-all-objects", 
                    "tn-get-all-saved-actions", 
                    "tn-get-all-pending-actions", 
                    "tn-get-all-sensors", 
                    "tn-parse-query", 
                    "tn-ask-manual-question", 
                    "tn-get-sensor", 
                    "tn-get-action"
                ]
            }
        }, 
        {
            "FireEye ETP": {
                "commands": [
                    "fireeye-etp-search-messages", 
                    "fireeye-etp-get-message", 
                    "fireeye-etp-get-alerts", 
                    "fireeye-etp-get-alert"
                ]
            }
        }, 
        {
            "InfoArmor VigilanteATI": {
                "commands": [
                    "vigilante-query-infected-host-data", 
                    "vigilante-get-vulnerable-host-data", 
                    "vigilante-query-ecrime-db", 
                    "vigilante-search-leaks", 
                    "vigilante-get-leak", 
                    "vigilante-query-accounts", 
                    "vigilante-query-domains", 
                    "vigilante-watchlist-add-accounts", 
                    "vigilante-watchlist-remove-accounts", 
                    "vigilante-get-watchlist", 
                    "vigilante-account-usage-info"
                ]
            }
        }, 
        {
            "IBM Resilient Systems": {
                "commands": [
                    "rs-search-incidents", 
                    "rs-update-incident", 
                    "rs-incidents-get-members", 
                    "rs-get-incident", 
                    "rs-incidents-update-member", 
                    "rs-get-users", 
                    "rs-close-incident", 
                    "rs-create-incident", 
                    "rs-incident-artifacts", 
                    "rs-incident-attachments", 
                    "rs-related-incidents", 
                    "rs-incidents-get-tasks"
                ]
            }
        }, 
        {
            "AWS - IAM": {
                "commands": [
                    "aws-iam-create-user", 
                    "aws-iam-get-user", 
                    "aws-iam-list-users", 
                    "aws-iam-update-user", 
                    "aws-iam-delete-user", 
                    "aws-iam-update-login-profile", 
                    "aws-iam-create-group", 
                    "aws-iam-list-groups", 
                    "aws-iam-list-groups-for-user", 
                    "aws-iam-add-user-to-group", 
                    "aws-iam-create-access-key", 
                    "aws-iam-update-access-key", 
                    "aws-iam-list-access-keys-for-user", 
                    "aws-iam-list-policies", 
                    "aws-iam-list-roles", 
                    "aws-iam-attach-policy", 
                    "aws-iam-detach-policy", 
                    "aws-iam-delete-login-profile", 
                    "aws-iam-delete-group", 
                    "aws-iam-remove-user-from-group", 
                    "aws-iam-create-login-profile", 
                    "aws-iam-delete-access-key", 
                    "aws-iam-create-instance-profile", 
                    "aws-iam-delete-instance-profile", 
                    "aws-iam-list-instance-profiles", 
                    "aws-iam-add-role-to-instance-profile", 
                    "aws-iam-remove-role-from-instance-profile", 
                    "aws-iam-list-instance-profiles-for-role", 
                    "aws-iam-get-instance-profile", 
                    "aws-iam-get-role", 
                    "aws-iam-delete-role", 
                    "aws-iam-create-role", 
                    "aws-iam-create-policy", 
                    "aws-iam-delete-policy", 
                    "aws-iam-create-policy-version", 
                    "aws-iam-delete-policy-version", 
                    "aws-iam-list-policy-versions", 
                    "aws-iam-get-policy-version", 
                    "aws-iam-set-default-policy-version", 
                    "aws-iam-create-account-alias", 
                    "aws-iam-delete-account-alias"
                ]
            }
        }, 
        {
            "Symantec Endpoint Protection": {
                "commands": [
                    "sep-endpoints-info", 
                    "sep-update-content", 
                    "sep-scan", 
                    "sep-groups-info", 
                    "sep-system-info", 
                    "sep-command-status", 
                    "sep-quarantine", 
                    "sep-client-content"
                ]
            }
        }, 
        {
            "SumoLogic": {
                "commands": [
                    "search"
                ]
            }
        }, 
        {
            "Pwned": {
                "commands": [
                    "pwned-email", 
                    "pwned-domain", 
                    "email"
                ]
            }
        }, 
        {
            "urlscan.io": {
                "toversion": "3.1.0", 
                "commands": [
                    "url", 
                    "ip", 
                    "file", 
                    "urlscan-submit"
                ]
            }
        }, 
        {
            "Lastline": {
                "commands": [
                    "lastline-get", 
                    "url", 
                    "file", 
                    "lastline-upload", 
                    "lastline-upload-url", 
                    "lastline-upload-file", 
                    "lastline-get-report", 
                    "lastline-get-task-list"
                ]
            }
        }, 
        {
            "urlscan.io": {
                "commands": [
                    "urlscan-search", 
                    "urlscan-submit", 
                    "url"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "OpsGenie": {
                "commands": [
                    "opsgenie-get-on-call", 
                    "opsgenie-get-user", 
                    "opsgenie-get-schedules", 
                    "opsgenie-get-schedule-timeline"
                ]
            }
        }, 
        {
            "McAfeeDAM": {
                "commands": [
                    "dam-get-alert-by-id", 
                    "dam-get-latest-by-rule"
                ]
            }
        }, 
        {
            "okta": {
                "commands": [
                    "okta-unlock-user", 
                    "okta-deactivate-user", 
                    "okta-activate-user", 
                    "okta-suspend-user", 
                    "okta-unsuspend-user", 
                    "okta-get-user-factors", 
                    "okta-verify-push-factor", 
                    "okta-reset-factor", 
                    "okta-get-groups", 
                    "okta-set-password", 
                    "okta-search", 
                    "okta-get-user", 
                    "okta-create-user", 
                    "okta-update-user", 
                    "okta-get-failed-logins", 
                    "okta-get-group-assignments", 
                    "okta-get-application-assignments", 
                    "okta-get-application-authentication", 
                    "okta-get-logs", 
                    "okta-add-to-group", 
                    "okta-remove-from-group", 
                    "okta-list-groups", 
                    "okta-get-group-members"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Devo": {
                "commands": [
                    "devo-query"
                ]
            }
        }, 
        {
            "AWS - Security Hub": {
                "commands": [
                    "aws-securityhub-get-findings", 
                    "aws-securityhub-get-master-account", 
                    "aws-securityhub-list-members", 
                    "aws-securityhub-enable-security-hub", 
                    "aws-securityhub-disable-security-hub", 
                    "aws-securityhub-enable-import-findings-for-product", 
                    "aws-securityhub-disable-import-findings-for-product", 
                    "aws-securityhub-list-enabled-products-for-import", 
                    "aws-securityhub-update-finding"
                ]
            }
        }, 
        {
            "Moloch": {
                "commands": [
                    "moloch_connections_json", 
                    "moloch_connections_csv", 
                    "moloch_files_json", 
                    "moloch_sessions_json", 
                    "moloch_sessions_csv", 
                    "moloch_sessions_pcap", 
                    "moloch_spigraph_json", 
                    "moloch_spiview_json", 
                    "moloch_unique_json"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "RedLock": {
                "commands": [
                    "redlock-search-alerts", 
                    "redlock-get-alert-details", 
                    "redlock-dismiss-alerts", 
                    "redlock-reopen-alerts", 
                    "redlock-list-alert-filters"
                ]
            }
        }, 
        {
            "Whois": {
                "commands": [
                    "whois"
                ], 
                "fromversion": "4.1.0"
            }
        }, 
        {
            "SafeBreach": {
                "commands": [
                    "safebreach-rerun", 
                    "safebreach-get-simulation"
                ]
            }
        }, 
        {
            "AlphaSOC Wisdom": {
                "commands": [
                    "wisdom-domain-flags", 
                    "wisdom-ip-flags"
                ]
            }
        }, 
        {
            "jamf": {
                "commands": [
                    "jamf-get-computers", 
                    "jamf-get-computers-match"
                ]
            }
        }, 
        {
            "Panorama": {
                "commands": [
                    "panorama", 
                    "panorama-dynamic-block-list"
                ], 
                "fromversion": "3.0.0"
            }
        }, 
        {
            "icebrg": {
                "commands": [
                    "icebrg-search-events", 
                    "icebrg-get-history", 
                    "icebrg-saved-searches", 
                    "icebrg-get-reports", 
                    "icebrg-get-report-indicators", 
                    "icebrg-get-report-assets"
                ]
            }
        }, 
        {
            "EasyVista": {
                "commands": [
                    "easy-vista-search"
                ]
            }
        }, 
        {
            "ThreatConnect": {
                "commands": [
                    "ip", 
                    "url", 
                    "file", 
                    "tc-owners", 
                    "tc-indicators", 
                    "tc-get-tags", 
                    "tc-tag-indicator", 
                    "tc-get-indicator", 
                    "tc-get-indicators-by-tag", 
                    "tc-add-indicator", 
                    "tc-create-incident", 
                    "tc-fetch-incidents", 
                    "tc-incident-associate-indicator", 
                    "domain", 
                    "tc-get-incident-associate-indicators"
                ]
            }
        }, 
        {
            "BitDam": {
                "commands": [
                    "bitdam-upload-file", 
                    "bitdam-get-verdict"
                ]
            }
        }, 
        {
            "AWS - S3": {
                "commands": [
                    "aws-s3-create-bucket", 
                    "aws-s3-delete-bucket", 
                    "aws-s3-list-buckets", 
                    "aws-s3-get-bucket-policy", 
                    "aws-s3-delete-bucket-policy", 
                    "aws-s3-download-file", 
                    "aws-s3-list-bucket-objects", 
                    "aws-s3-put-bucket-policy", 
                    "aws-s3-upload-file"
                ]
            }
        }, 
        {
            "McAfee Advanced Threat Defense": {
                "toversion": "3.1.0", 
                "commands": [
                    "atd-file-upload", 
                    "atd-get-task-ids", 
                    "atd-check-status", 
                    "atd-get-report", 
                    "atd-list-analyzer-profiles", 
                    "atd-list-user", 
                    "atd-login"
                ], 
                "fromversion": "2.0.4"
            }
        }, 
        {
            "GuardiCore": {
                "toversion": "3.1.0", 
                "commands": [
                    "guardicore-get-incidents", 
                    "guardicore-uncommon-domains", 
                    "guardicore-unresolved-domains", 
                    "guardicore-show-endpoint", 
                    "guardicore-dns-requests", 
                    "guardicore-search-endpoint", 
                    "guardicore-misconfigurations", 
                    "guardicore-get-incident", 
                    "guardicore-get-incident-iocs", 
                    "guardicore-get-incident-events", 
                    "guardicore-get-incident-pcap", 
                    "guardicore-get-incident-attachments", 
                    "guardicore-search-network-log"
                ]
            }
        }, 
        {
            "Mimecast": {
                "commands": [
                    "mimecast-query"
                ], 
                "fromversion": "1.6.2"
            }
        }, 
        {
            "Shodan": {
                "commands": [
                    "search", 
                    "ip"
                ]
            }
        }, 
        {
            "AWS - GuardDuty": {
                "commands": [
                    "aws-gd-create-detector", 
                    "aws-gd-delete-detector", 
                    "aws-gd-get-detector", 
                    "aws-gd-update-detector", 
                    "aws-gd-create-ip-set", 
                    "aws-gd-delete-ip-set", 
                    "aws-gd-list-detectors", 
                    "aws-gd-update-ip-set", 
                    "aws-gd-get-ip-set", 
                    "aws-gd-list-ip-sets", 
                    "aws-gd-create-threatintel-set", 
                    "aws-gd-delete-threatintel-set", 
                    "aws-gd-get-threatintel-set", 
                    "aws-gd-list-threatintel-sets", 
                    "aws-gd-update-threatintel-set", 
                    "aws-gd-list-findings", 
                    "aws-gd-get-findings", 
                    "aws-gd-create-sample-findings", 
                    "aws-gd-archive-findings", 
                    "aws-gd-unarchive-findings", 
                    "aws-gd-update-findings-feedback"
                ]
            }
        }, 
        {
            "Mimecast Authentication": {
                "commands": [
                    "mimecast-login", 
                    "mimecast-discover", 
                    "mimecast-refresh-token"
                ]
            }
        }, 
        {
            "malwr": {
                "commands": [
                    "malwr-submit", 
                    "malwr-status", 
                    "malwr-result", 
                    "malwr-detonate"
                ], 
                "fromversion": "3.0.0"
            }
        }, 
        {
            "FalconHost": {
                "commands": [
                    "cs-upload-ioc", 
                    "cs-get-ioc", 
                    "cs-update-ioc", 
                    "cs-delete-ioc", 
                    "cs-search-iocs", 
                    "cs-device-search", 
                    "cs-device-details", 
                    "cs-device-count-ioc", 
                    "cs-device-ran-on", 
                    "cs-processes-ran-on", 
                    "cs-process-details", 
                    "cs-resolve-detection", 
                    "cs-detection-search", 
                    "cs-detection-details"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "ServiceNow": {
                "commands": [
                    "servicenow-get-ticket", 
                    "servicenow-get", 
                    "servicenow-incident-get", 
                    "servicenow-create-ticket", 
                    "servicenow-create", 
                    "servicenow-incident-create", 
                    "servicenow-update-ticket", 
                    "servicenow-update", 
                    "servicenow-incident-update", 
                    "servicenow-delete-ticket", 
                    "servicenow-add-link", 
                    "servicenow-incident-add-link", 
                    "servicenow-add-comment", 
                    "servicenow-incident-add-comment", 
                    "servicenow-query-tickets", 
                    "servicenow-query", 
                    "servicenow-incidents-query", 
                    "servicenow-upload-file", 
                    "servicenow-incident-upload-file", 
                    "servicenow-get-groups", 
                    "servicenow-get-computer", 
                    "servicenow-get-record", 
                    "servicenow-query-table", 
                    "servicenow-create-record", 
                    "servicenow-update-record", 
                    "servicenow-delete-record", 
                    "servicenow-list-table-fields", 
                    "servicenow-query-computers", 
                    "servicenow-query-groups", 
                    "servicenow-query-users", 
                    "servicenow-get-table-name"
                ]
            }
        }, 
        {
            "Tenable.sc": {
                "commands": [
                    "tenable-sc-list-scans", 
                    "tenable-sc-launch-scan", 
                    "tenable-sc-get-vulnerability", 
                    "tenable-sc-get-scan-status", 
                    "tenable-sc-get-scan-report", 
                    "tenable-sc-list-credentials", 
                    "tenable-sc-list-policies", 
                    "tenable-sc-list-report-definitions", 
                    "tenable-sc-list-repositories", 
                    "tenable-sc-list-zones", 
                    "tenable-sc-create-scan", 
                    "tenable-sc-delete-scan", 
                    "tenable-sc-list-assets", 
                    "tenable-sc-create-asset", 
                    "tenable-sc-get-asset", 
                    "tenable-sc-delete-asset", 
                    "tenable-sc-list-alerts", 
                    "tenable-sc-get-alert", 
                    "tenable-sc-get-device", 
                    "tenable-sc-list-users", 
                    "tenable-sc-get-system-licensing", 
                    "tenable-sc-get-system-information"
                ]
            }
        }, 
        {
            "google-vault": {
                "commands": [
                    "gvault-create-export-mail", 
                    "gvault-create-matter", 
                    "gvault-create-export-drive", 
                    "gvault-matter-update-state", 
                    "gvault-create-export-groups", 
                    "gvault-create-hold", 
                    "gvault-add-heldAccount", 
                    "gvault-remove-heldAccount", 
                    "gvault-delete-hold", 
                    "gvault-list-matters", 
                    "gvault-get-matter", 
                    "gvault-list-holds", 
                    "gvault-export-status"
                ]
            }
        }, 
        {
            "AlienValut OTX": {
                "toversion": "3.0.1", 
                "commands": [
                    "ip", 
                    "domain", 
                    "ipv6", 
                    "hostname", 
                    "file", 
                    "alienvault-query-file", 
                    "alienvault-search-pulses", 
                    "alienvault-get-pulse-details", 
                    "url"
                ]
            }
        }, 
        {
            "MISP": {
                "commands": [
                    "internal-misp-upload-sample", 
                    "misp-search", 
                    "file", 
                    "url", 
                    "ip", 
                    "internal-misp-download-sample", 
                    "internal-misp-create-event", 
                    "internal-misp-add-attribute"
                ]
            }
        }, 
        {
            "FalconIntel": {
                "toversion": "3.1.0", 
                "commands": [
                    "file", 
                    "url", 
                    "domain", 
                    "ip", 
                    "cs-actors", 
                    "cs-indicators", 
                    "cs-reports", 
                    "cs-report-pdf"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Box": {
                "commands": [
                    "box_get_current_user", 
                    "box_get_users", 
                    "box_update_user", 
                    "box_add_user", 
                    "box_delete_user", 
                    "box_move_folder", 
                    "box_files_get", 
                    "box_initiate", 
                    "box_files_get_info"
                ]
            }
        }, 
        {
            "Remedy On-Demand": {
                "commands": [
                    "remedy-incident-create", 
                    "remedy-get-incident", 
                    "remedy-fetch-incidents", 
                    "remedy-incident-update"
                ]
            }
        }, 
        {
            "Rasterize": {
                "commands": [
                    "rasterize", 
                    "rasterize-email", 
                    "rasterize-image"
                ]
            }
        }, 
        {
            "FortiGate": {
                "commands": [
                    "fortigate-get-addresses", 
                    "fortigate-get-service-groups", 
                    "fortigate-update-service-group", 
                    "fortigate-delete-service-group", 
                    "fortigate-get-firewall-service", 
                    "fortigate-create-firewall-service", 
                    "fortigate-get-policy", 
                    "fortigate-update-policy", 
                    "fortigate-create-policy", 
                    "fortigate-move-policy", 
                    "fortigate-delete-policy", 
                    "fortigate-get-address-groups", 
                    "fortigate-update-address-group", 
                    "fortigate-create-address-group", 
                    "fortigate-delete-address-group"
                ]
            }
        }, 
        {
            "RTIR": {
                "commands": [
                    "rtir-create-ticket", 
                    "rtir-search-ticket", 
                    "rtir-resolve-ticket", 
                    "rtir-edit-ticket", 
                    "rtir-ticket-history", 
                    "rtir-get-ticket", 
                    "rtir-ticket-attachments", 
                    "rtir-add-comment", 
                    "rtir-add-reply"
                ]
            }
        }, 
        {
            "Tenable.io": {
                "commands": [
                    "tenable-io-list-scans", 
                    "tenable-io-launch-scan", 
                    "tenable-io-get-scan-report", 
                    "tenable-io-get-vulnerability-details", 
                    "tenable-io-get-vulnerabilities-by-asset", 
                    "tenable-io-get-scan-status"
                ]
            }
        }, 
        {
            "Stealthwatch Cloud": {
                "commands": [
                    "sw-show-alert", 
                    "sw-update-alert", 
                    "sw-list-alerts", 
                    "sw-block-domain-or-ip", 
                    "sw-unblock-domain", 
                    "sw-list-blocked-domains", 
                    "sw-list-observations", 
                    "sw-list-sessions"
                ]
            }
        }, 
        {
            "EWS v2": {
                "commands": [
                    "ews-get-attachment", 
                    "ews-delete-attachment", 
                    "ews-get-searchable-mailboxes", 
                    "ews-search-mailboxes", 
                    "ews-move-item", 
                    "ews-delete-items", 
                    "ews-search-mailbox", 
                    "ews-get-contacts", 
                    "ews-get-out-of-office", 
                    "ews-recover-messages", 
                    "ews-create-folder", 
                    "ews-mark-item-as-junk", 
                    "ews-find-folders", 
                    "ews-get-items-from-folder", 
                    "ews-get-items", 
                    "ews-move-item-between-mailboxes", 
                    "ews-get-folder", 
                    "ews-o365-start-compliance-search", 
                    "ews-o365-get-compliance-search", 
                    "ews-o365-purge-compliance-search-results", 
                    "ews-o365-remove-compliance-search", 
                    "ews-o365-get-compliance-search-purge-status"
                ]
            }
        }, 
        {
            "Lockpath KeyLight": {
                "commands": [
                    "kl-get-component-list", 
                    "kl-get-component", 
                    "kl-get-component-by-alias", 
                    "kl-get-field-list", 
                    "kl-get-field", 
                    "kl-get-record-count", 
                    "kl-get-record", 
                    "kl-get-records", 
                    "kl-delete-record", 
                    "kl-create-record", 
                    "kl-update-record", 
                    "kl-get-detail-record", 
                    "kl-get-lookup-report-column-fields", 
                    "kl-get-detail-records", 
                    "kl-get-record-attachments", 
                    "kl-get-record-attachment", 
                    "kl-delete-record-attachments"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Dell Secureworks": {
                "commands": [
                    "secure-works-create-ticket", 
                    "secure-works-update-ticket", 
                    "secure-works-close-ticket", 
                    "secure-works-add-worklogs-ticket", 
                    "secure-works-get-ticket", 
                    "secure-works-assign-ticket", 
                    "secure-works-get-tickets-updates", 
                    "secure-works-get-close-codes", 
                    "secure-works-get-tickets-ids", 
                    "secure-works-get-ticket-count"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Luminate": {
                "commands": [
                    "lum-block-user", 
                    "lum-unblock-user", 
                    "lum-destroy-user-session", 
                    "lum-get-http-access-logs", 
                    "lum-get-ssh-access-logs"
                ], 
                "fromversion": "0.0.0"
            }
        }, 
        {
            "VirusTotal - Private API": {
                "commands": [
                    "vt-private-check-file-behaviour", 
                    "vt-private-get-domain-report", 
                    "vt-private-get-file-report", 
                    "vt-private-get-url-report", 
                    "vt-private-get-ip-report", 
                    "vt-private-search-file", 
                    "vt-private-hash-communication", 
                    "vt-private-download-file"
                ]
            }
        }, 
        {
            "Guidance Encase Endpoint": {
                "commands": [
                    "encase-copyjob", 
                    "encase-snapshot", 
                    "encase-verifyhash"
                ]
            }
        }, 
        {
            "Incapsula": {
                "commands": [
                    "incap-add-managed-account", 
                    "incap-list-managed-accounts", 
                    "incap-add-subaccount", 
                    "incap-list-subaccounts", 
                    "incap-get-account-status", 
                    "incap-modify-account-configuration", 
                    "incap-set-account-log-level", 
                    "incap-test-account-s3-connection", 
                    "incap-test-account-sftp-connection", 
                    "incap-set-account-s3-log-storage", 
                    "incap-set-account-sftp-log-storage", 
                    "incap-set-account-default-log-storage", 
                    "incap-get-account-login-token", 
                    "incap-delete-managed-account", 
                    "incap-delete-subaccount", 
                    "incap-get-account-audit-events", 
                    "incap-set-account-default-data-storage-region", 
                    "incap-get-account-default-data-storage-region", 
                    "incap-add-site", 
                    "incap-get-site-status", 
                    "incap-get-domain-approver-email", 
                    "incap-modify-site-configuration", 
                    "incap-modify-site-log-level", 
                    "incap-modify-site-tls-support", 
                    "incap-modify-site-scurity-config", 
                    "incap-modify-site-acl-config", 
                    "incap-modify-site-wl-config", 
                    "incap-delete-site", 
                    "incap-list-sites", 
                    "incap-get-site-report", 
                    "incap-get-site-html-injection-rules", 
                    "incap-add-site-html-injection-rule", 
                    "incap-delete-site-html-injection-rule", 
                    "incap-create-new-csr", 
                    "incap-upload-certificate", 
                    "incap-remove-custom-integration", 
                    "incap-move-site", 
                    "incap-check-compliance", 
                    "incap-set-site-data-storage-region", 
                    "incap-get-site-data-storage-region", 
                    "incap-set-site-data-storage-region-geo-override", 
                    "incap-get-site-data-storage-region-geo-override", 
                    "incap-purge-site-cache", 
                    "incap-modify-cache-mode", 
                    "incap-purge-resources", 
                    "incap-modify-caching-rules", 
                    "incap-set-advanced-caching-settings", 
                    "incap-purge-hostname-from-cache", 
                    "incap-site-get-xray-link", 
                    "incap-list-site-rule-revisions", 
                    "incap-add-site-rule", 
                    "incap-edit-site-rule", 
                    "incap-enable-site-rule", 
                    "incap-delete-site-rule", 
                    "incap-list-site-rules", 
                    "incap-revert-site-rule", 
                    "incap-set-site-rule-priority", 
                    "incap-add-site-datacenter", 
                    "incap-edit-site-datacenter", 
                    "incap-delete-site-datacenter", 
                    "incap-list-site-datacenters", 
                    "incap-add-site-datacenter-server", 
                    "incap-edit-site-datacenter-server", 
                    "incap-delete-site-datacenter-server", 
                    "incap-get-statistics", 
                    "incap-get-visits", 
                    "incap-upload-public-key", 
                    "incap-change-logs-collector-configuration", 
                    "incap-get-infra-protection-statistics", 
                    "incap-get-infra-protection-events", 
                    "incap-add-login-protect", 
                    "incap-edit-login-protect", 
                    "incap-get-login-protect", 
                    "incap-remove-login-protect", 
                    "incap-send-sms-to-user", 
                    "incap-modify-login-protect", 
                    "incap-configure-app", 
                    "incap-get-ip-ranges", 
                    "incap-get-texts", 
                    "incap-get-geo-info", 
                    "incap-get-app-info"
                ]
            }
        }, 
        {
            "XFE": {
                "commands": [
                    "url", 
                    "file", 
                    "ip", 
                    "domain", 
                    "cve-search", 
                    "cve-latest"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Cymon": {
                "commands": [
                    "ip", 
                    "domain"
                ]
            }
        }, 
        {
            "McAfee Advanced Threat Defense": {
                "commands": [
                    "atd-file-upload", 
                    "atd-get-task-ids", 
                    "atd-get-report", 
                    "atd-list-analyzer-profiles", 
                    "atd-list-user", 
                    "atd-login", 
                    "detonate-file", 
                    "detonate-url", 
                    "atd-check-status"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "AWS - CloudWatchLogs": {
                "commands": [
                    "aws-logs-create-log-group", 
                    "aws-logs-create-log-stream", 
                    "aws-logs-delete-log-group", 
                    "aws-logs-delete-log-stream", 
                    "aws-logs-filter-log-events", 
                    "aws-logs-describe-log-groups", 
                    "aws-logs-describe-log-streams", 
                    "aws-logs-put-retention-policy", 
                    "aws-logs-delete-retention-policy", 
                    "aws-logs-put-log-events", 
                    "aws-logs-put-metric-filter", 
                    "aws-logs-delete-metric-filter", 
                    "aws-logs-describe-metric-filters"
                ]
            }
        }, 
        {
            "Microsoft Graph": {
                "commands": [
                    "msg-graph-admin-url", 
                    "msg-search-alerts", 
                    "msg-get-alert-details", 
                    "msg-update-alert", 
                    "msg-get-users", 
                    "msg-get-user"
                ]
            }
        }, 
        {
            "Secdo": {
                "commands": [
                    "secdo-add-IOCs"
                ]
            }
        }, 
        {
            "Preempt": {
                "commands": [
                    "preempt-add-to-watch-list", 
                    "preempt-remove-from-watch-list", 
                    "preempt-get-activities", 
                    "preempt-get-user-endpoints", 
                    "preempt-get-alerts"
                ]
            }
        }, 
        {
            "PostgreSQL": {
                "commands": [
                    "pgsql-query"
                ]
            }
        }, 
        {
            "epo": {
                "commands": [
                    "epo-help", 
                    "epo-get-latest-dat", 
                    "epo-get-current-dat", 
                    "epo-update-client-dat", 
                    "epo-update-repository", 
                    "epo-get-system-tree-group", 
                    "epo-find-systems", 
                    "epo-command", 
                    "epo-advanced-command", 
                    "epo-wakeup-agent", 
                    "epo-apply-tag", 
                    "epo-clear-tag", 
                    "epo-query-table", 
                    "epo-get-tables", 
                    "epo-find-system", 
                    "epo-get-version"
                ]
            }
        }, 
        {
            "GRR": {
                "commands": [
                    "grr-set-flows", 
                    "grr-get-flows", 
                    "grr-get-files", 
                    "grr-get-hunts", 
                    "grr-get-hunt", 
                    "grr-set-hunts", 
                    "grr-get-clients", 
                    "grr_set_flows", 
                    "grr_get_flows", 
                    "grr_get_files", 
                    "grr_get_hunts", 
                    "grr_get_hunt", 
                    "grr_set_hunts"
                ]
            }
        }, 
        {
            "Nessus": {
                "commands": [
                    "nessus-list-scans", 
                    "scans-list", 
                    "nessus-launch-scan", 
                    "scan-launch", 
                    "nessus-scan-details", 
                    "scan-details", 
                    "scan-host-details", 
                    "nessus-scan-host-details", 
                    "nessus-scan-export", 
                    "scan-export", 
                    "scan-report-download", 
                    "nessus-scan-report-download", 
                    "scan-create", 
                    "nessus-scan-create", 
                    "nessus-get-scans-editors", 
                    "scan-export-status", 
                    "nessus-scan-export-status", 
                    "nessus-scan-status"
                ]
            }
        }, 
        {
            "GuardiCore": {
                "commands": [
                    "guardicore-get-incidents", 
                    "guardicore-uncommon-domains", 
                    "guardicore-unresolved-domains", 
                    "guardicore-show-endpoint", 
                    "guardicore-dns-requests", 
                    "guardicore-search-endpoint", 
                    "guardicore-misconfigurations", 
                    "guardicore-get-incident", 
                    "guardicore-get-incident-iocs", 
                    "guardicore-get-incident-events", 
                    "guardicore-get-incident-pcap", 
                    "guardicore-get-incident-attachments", 
                    "guardicore-search-network-log"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Digital Shadows": {
                "commands": [
                    "ds-get-breach-reviews", 
                    "ds-snapshot-breach-status", 
                    "ds-find-breach-records", 
                    "ds-get-breach-summary", 
                    "ds-find-breach-usernames", 
                    "ds-get-breach", 
                    "ds-get-breach-records", 
                    "ds-find-data-breaches", 
                    "ds-get-incident", 
                    "ds-get-incident-reviews", 
                    "ds-snapshot-incident-review", 
                    "ds-find-incidents-filtered", 
                    "ds-get-incidents-summary", 
                    "ds-get-apt-report", 
                    "ds-get-intelligence-incident", 
                    "ds-get-intelligence-incident-iocs", 
                    "ds-find-intelligence-incidents", 
                    "ds-find-intelligence-incidents-regional", 
                    "ds-get-intelligence-threat", 
                    "ds-get-intelligence-threat-iocs", 
                    "ds-get-intelligence-threat-activity", 
                    "ds-find-intelligence-threats", 
                    "ds-find-intelligence-threats-regional", 
                    "ds-get-port-reviews", 
                    "ds-snapshot-port-review", 
                    "ds-find-ports", 
                    "ds-find-secure-sockets", 
                    "ds-find-vulnerabilities", 
                    "ds-search", 
                    "ds-get-tags"
                ]
            }
        }, 
        {
            "fireeye": {
                "commands": [
                    "fe-report", 
                    "fe-submit-status", 
                    "fe-alert", 
                    "fe-submit-result", 
                    "fe-submit", 
                    "fe-config", 
                    "fe-submit-url", 
                    "fe-submit-url-status", 
                    "fe-submit-url-result"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "RSA NetWitness Packets and Logs": {
                "commands": [
                    "netwitness-msearch", 
                    "netwitness-search", 
                    "netwitness-query", 
                    "netwitness-packets", 
                    "nw-sdk-session", 
                    "nw-sdk-content", 
                    "nw-sdk-summary", 
                    "nw-sdk-values", 
                    "nw-database-dump"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "RSA NetWitness v11.1": {
                "commands": [
                    "netwitness-get-incident", 
                    "netwitness-get-incidents", 
                    "netwitness-update-incident", 
                    "netwitness-delete-incident", 
                    "netwitness-get-alerts"
                ]
            }
        }, 
        {
            "Symantec Messaging Gateway": {
                "commands": [
                    "smg-block-email", 
                    "smg-unblock-email", 
                    "smg-block-domain", 
                    "smg-block-ip", 
                    "smg-unblock-ip", 
                    "smg-unblock-domain", 
                    "smg-get-blocked-domains", 
                    "smg-get-blocked-ips"
                ]
            }
        }, 
        {
            "OTRS": {
                "commands": [
                    "otrs-get-ticket", 
                    "otrs-search-ticket", 
                    "otrs-create-ticket", 
                    "otrs-update-ticket", 
                    "otrs-close-ticket"
                ], 
                "fromversion": "4.1.0"
            }
        }, 
        {
            "Check Point Sandblast": {
                "commands": [
                    "sb-query", 
                    "sandblast-query", 
                    "sb-upload", 
                    "sandblast-upload", 
                    "sb-download", 
                    "sandblast-download", 
                    "sb-quota", 
                    "sandblast-quota"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Cylance Protect": {
                "commands": [
                    "cylance-protect-get-list", 
                    "cylance-protect-get-devices", 
                    "cylance-protect-get-threats", 
                    "cylance-protect-download-threat", 
                    "cylance-protect-get-threat-details", 
                    "cylance-protect-device-delete", 
                    "cylance-protect-get-device-threats", 
                    "cylance-protect-update-device-threats", 
                    "cylance-protect-delete-hash-from-lists", 
                    "cylance-protect-update-hash-at-lists", 
                    "cylance-protect-upload-threat", 
                    "cylance-protect-get-threated-devices", 
                    "cylance-protect-get-zones", 
                    "cylance-protect-create-zone", 
                    "cylance-protect-update-zone", 
                    "cylance-protect-get-policies", 
                    "cylance-protect-get-policy-details", 
                    "cp-get-list", 
                    "cp-get-devices", 
                    "cp-get-threats", 
                    "cp-download-threat", 
                    "cp-get-threat-details", 
                    "cp-device-delete", 
                    "cp-get-device-threats", 
                    "cp-update-device-threats", 
                    "cp-delete-hash-from-lists", 
                    "cp-update-hash-at-lists", 
                    "cp-upload-threat", 
                    "cp-get-threated-devices", 
                    "cp-get-zones", 
                    "cp-create-zone", 
                    "cp-update-zone", 
                    "cp-get-policies", 
                    "cp-get-policy-details"
                ], 
                "fromversion": "2.0.1"
            }
        }, 
        {
            "TCPIPUtils": {
                "commands": [
                    "ip"
                ]
            }
        }, 
        {
            "RSA NetWitness Security Analytics": {
                "commands": [
                    "nw-list-incidents", 
                    "nw-login", 
                    "nw-get-components", 
                    "nw-get-events", 
                    "nw-get-available-assignees", 
                    "nw-create-incident", 
                    "nw-add-events-to-incident", 
                    "nw-update-incident", 
                    "fetch-incidents", 
                    "nw-get-alerts", 
                    "nw-get-alert-details", 
                    "nw-get-event-details", 
                    "nw-get-incident-details", 
                    "nw-get-alert-original", 
                    "netwitness-im-list-incidents", 
                    "netwitness-im-login", 
                    "netwitness-im-get-components", 
                    "netwitness-im-get-events", 
                    "netwitness-im-get-available-assignees", 
                    "netwitness-im-create-incident", 
                    "netwitness-im-add-events-to-incident", 
                    "netwitness-im-update-incident", 
                    "netwitness-im-get-alerts", 
                    "netwitness-im-get-alert-details", 
                    "netwitness-im-get-event-details", 
                    "netwitness-im-get-incident-details", 
                    "netwitness-im-get-alert-original"
                ], 
                "fromversion": "2.0.0"
            }
        }, 
        {
            "Where is the egg?": {
                "commands": [
                    "clue"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "jira": {
                "toversion": "2.5.0", 
                "commands": [
                    "jira-issue-query", 
                    "jira-get-issue", 
                    "jira-create-issue", 
                    "jira-issue-upload-file", 
                    "jira-issue-add-comment", 
                    "jira-issue-add-link"
                ]
            }
        }, 
        {
            "Vectra": {
                "commands": [
                    "vec-detections", 
                    "vectra-detections", 
                    "vec-hosts", 
                    "vectra-hosts", 
                    "vec-settings", 
                    "vectra-settings", 
                    "vec-health", 
                    "vectra-health", 
                    "vec-triage", 
                    "vectra-triage", 
                    "vec-sensors", 
                    "vectra-sensors", 
                    "vec-get-host-by-id", 
                    "vec-get-detetctions-by-id"
                ]
            }
        }, 
        {
            "Twilio": {
                "commands": [
                    "TwilioSendSMS"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "PhishTank": {
                "commands": [
                    "url", 
                    "phishtank-reload", 
                    "phishtank-status"
                ]
            }
        }, 
        {
            "FireEye iSIGHT": {
                "commands": [
                    "ip", 
                    "domain", 
                    "file", 
                    "isight-get-report", 
                    "isight-submit-file"
                ]
            }
        }, 
        {
            "BigFix": {
                "commands": [
                    "bigfix-get-sites", 
                    "bigfix-get-site", 
                    "bigfix-get-patches", 
                    "bigfix-get-endpoints", 
                    "bigfix-get-endpoint", 
                    "bigfix-deploy-patch", 
                    "bigfix-get-patch", 
                    "bigfix-action-delete", 
                    "bigfix-action-status", 
                    "bigfix-action-stop", 
                    "bigfix-query"
                ]
            }
        }, 
        {
            "Phish.AI": {
                "commands": [
                    "phish-ai-scan-url", 
                    "phish-ai-check-status"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Koodous": {
                "commands": [
                    "k-check-hash"
                ]
            }
        }, 
        {
            "IntSights": {
                "commands": [
                    "intsights-get-alert-image", 
                    "intsights-get-alert-activities", 
                    "intsights-assign-alert", 
                    "intsights-unassign-alert", 
                    "intsights-send-mail", 
                    "intsights-ask-the-analyst", 
                    "intsights-add-tag-to-alert", 
                    "intsights-remove-tag-from-alert", 
                    "intsights-add-comment-to-alert", 
                    "intsights-update-alert-severity", 
                    "intsights-get-alert-by-id", 
                    "intsights-get-ioc-by-value", 
                    "intsights-get-iocs", 
                    "intsights-get-alerts", 
                    "intsights-alert-takedown-request", 
                    "intsights-get-alert-takedown-status", 
                    "intsights-update-ioc-blocklist-status", 
                    "intsights-get-ioc-blocklist-status", 
                    "intsights-close-alert"
                ]
            }
        }
    ], 
    "playbooks": [
        {
            "search_and_delete_emails_-_generic": {
                "implementing_playbooks": [
                    "Search And Delete Emails - EWS"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "email_address_enrichment_-_generic": {
                "implementing_scripts": [
                    "Exists", 
                    "ADGetUser", 
                    "EmailDomainSquattingReputation", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "EmailReputation", 
                    "IsEmailAddressInternal"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "process_email_-_generic": {
                "toversion": "3.6.0", 
                "implementing_commands": [
                    "setIncident", 
                    "setIncident", 
                    "rasterize-email"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "ParseEmailFiles", 
                    "Set"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook12": {
                "implementing_commands": [
                    "epo-get-latest-dat", 
                    "epo-get-current-dat", 
                    "epo-update-client-dat", 
                    "servicenow-incident-create", 
                    "servicenow-incidents-query"
                ], 
                "implementing_scripts": [
                    "commentsToContext", 
                    "IncidentSet", 
                    "commentsToContext", 
                    "CloseInvestigation"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "get_original_email_-_generic": {
                "implementing_playbooks": [
                    "Get Original Email - EWS", 
                    "Get Original Email - Gmail"
                ], 
                "fromversion": 4.0
            }
        }, 
        {
            "Detonate URL - Phish.AI": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "phish-ai-check-status", 
                    "phish-ai-scan-url"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Detonate URL - Cuckoo": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "cuckoo-create-task-from-url", 
                    "cuckoo-get-task-report", 
                    "cuckoo-view-task"
                ], 
                "implementing_scripts": [
                    "Sleep"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "get_file_sample_by_hash_-_generic": {
                "implementing_playbooks": [
                    "Get File Sample By Hash - Carbon Black Enterprise Response", 
                    "Get File Sample By Hash - Cylance Protect"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "search_endpoints_by_hash_-_crowdstrike": {
                "implementing_commands": [
                    "cs-device-details", 
                    "cs-device-ran-on", 
                    "cs-device-ran-on", 
                    "cs-device-ran-on"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "get_file_sample_from_path_-_generic": {
                "implementing_playbooks": [
                    "Get File Sample From Path - D2", 
                    "Get File Sample From Path - Carbon Black Enterprise Response"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "process_email_-_generic": {
                "toversion": "3.5.9", 
                "implementing_commands": [
                    "rasterize-email"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "ParseEmailFiles", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Detonate File - Lastline": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "lastline-upload-file", 
                    "lastline-get-report"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "url_enrichment_-_generic": {
                "toversion": "3.5.1", 
                "implementing_commands": [
                    "rasterize"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "URLReputation", 
                    "URLSSLVerification"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "GenericPolling": {
                "implementing_scripts": [
                    "ScheduleGenericPolling", 
                    "RunPollingCommand", 
                    "PrintErrorEntry"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "playbook1": {
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "ExposeModules", 
                    "Autoruns"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "implementing_playbooks": [
                    "Calculate Severity - Critical assets", 
                    "Calculate Severity - Indicators DBotScore", 
                    "Calculate Severity - 3rd-party integrations"
                ], 
                "implementing_commands": [
                    "setIncident", 
                    "setIncident", 
                    "setIncident", 
                    "setIncident"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_protection": {
                "implementing_commands": [
                    "cbp-computer-get"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Set", 
                    "CBPFindRule", 
                    "CBPCatalogFindHash"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Incident Enrichment": {
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ], 
                "implementing_scripts": [
                    "ExtractHash", 
                    "ExtractURL", 
                    "ExtractIP"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "playbook16": {
                "implementing_commands": [
                    "cs-device-search", 
                    "cs-device-ran-on", 
                    "cs-device-ran-on", 
                    "cs-device-ran-on", 
                    "cs-device-ran-on"
                ], 
                "implementing_scripts": [
                    "SendEmail", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "toversion": "3.6.0", 
                "implementing_commands": [
                    "crowdstrike-detonate-file"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Enrich McAfee DXL using 3rd party sandbox": {
                "implementing_playbooks": [
                    "WildFire - Detonate file"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "CloseInvestigation"
                ], 
                "implementing_commands": [
                    "dxl-send-event"
                ]
            }
        }, 
        {
            "Get File Sample From Hash - Carbon Black Enterprise Response": {
                "toversion": "3.1.0", 
                "implementing_commands": [
                    "cb-binary-get"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "toversion": "3.5.1", 
                "implementing_commands": [
                    "setIncident", 
                    "setIncident", 
                    "setIncident", 
                    "setIncident"
                ], 
                "implementing_scripts": [
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Tenable.io Scan": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "tenable-io-launch-scan", 
                    "tenable-io-get-scan-status", 
                    "tenable-io-get-scan-report"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "block_indicators_-_generic": {
                "implementing_playbooks": [
                    "Block IP - Generic", 
                    "Block Account - Generic", 
                    "Block URL - Generic", 
                    "Block File - Generic"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "detonate_url_-_threatgrid": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "threat-grid-upload-sample", 
                    "threat-grid-url-to-file", 
                    "threat-grid-get-samples-state"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "TrendMicro Malware Alert Playbook": {
                "implementing_scripts": [
                    "TrendmicroAntiMalwareEventRetrieve", 
                    "TrendMicroGetHostID", 
                    "TrendmicroSecurityProfileAssignToHost", 
                    "TrendMicroGetPolicyID"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "calculate_severity_-_3rd-party_integrations": {
                "implementing_scripts": [
                    "Set", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "toversion": "3.5.9", 
                "implementing_playbooks": [
                    "Detonate File - Generic", 
                    "Extract Indicators - Generic", 
                    "Entity Enrichment - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "implementing_scripts": [
                    "SendEmail", 
                    "Set", 
                    "SendEmail", 
                    "SendEmail", 
                    "AssignAnalystToIncident", 
                    "CloseInvestigation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "detonate_url_-_joesecurity": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "joe-analysis-submit-url", 
                    "joe-download-report", 
                    "joe-analysis-info"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "crowdstrike-submit-sample", 
                    "crowdstrike-scan"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "crowdstrike_endpoint_enrichment": {
                "implementing_commands": [
                    "cs-device-details", 
                    "cs-device-search"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "cve_enrichment_-_generic": {
                "implementing_commands": [
                    "cve-search", 
                    "cve-search"
                ], 
                "implementing_scripts": [
                    "cveReputation"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "get_file_sample_by_hash_-_cylance_protect": {
                "implementing_commands": [
                    "cylance-protect-download-threat"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "http", 
                    "UnzipFile"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "dedup_incidents_-_ml": {
                "implementing_scripts": [
                    "GetDuplicatesMl", 
                    "Print", 
                    "CloseInvestigationAsDuplicate", 
                    "Print"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "playbook5": {
                "implementing_playbooks": [
                    "Process Email", 
                    "Account Enrichment", 
                    "Detonate File - Generic", 
                    "Enrichment Playbook", 
                    "Hunt for bad IOCs"
                ], 
                "implementing_scripts": [
                    "CheckSenderDomainDistance", 
                    "IsMaliciousIndicatorFound", 
                    "Set", 
                    "ExtractIP", 
                    "ExtractURL", 
                    "SendEmail", 
                    "SendEmail", 
                    "CloseInvestigation", 
                    "Exists", 
                    "Exists", 
                    "SendEmail"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "TIE - IOC Hunt": {
                "implementing_commands": [
                    "tie-file-references"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "EPOFindSystem"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "vulnerability_management_-_qualys_Job": {
                "implementing_commands": [
                    "qualys-report-fetch", 
                    "closeInvestigation", 
                    "qualys-report-list"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "QualysCreateIncidentFromReport"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "get_original_email_-_gmail": {
                "implementing_commands": [
                    "gmail-get-attachments", 
                    "gmail-get-mail", 
                    "gmail-search"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set", 
                    "Set", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": 4.0
            }
        }, 
        {
            "detonate_url_-_mcafee_atd": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "atd-check-status", 
                    "atd-file-upload", 
                    "atd-get-report"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Detonate URL - Lastline": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "lastline-upload-url", 
                    "lastline-get-report"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Detonate File - Generic": {
                "toversion": "3.6.0", 
                "implementing_playbooks": [
                    "WildFire - Detonate file", 
                    "CrowdStrike Falcon Sandbox - Detonate file"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "process_email_-_ews": {
                "implementing_commands": [
                    "ews-get-attachment"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook7": {
                "implementing_commands": [
                    "ExposeModules", 
                    "slack-send"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "IsIntegrationAvailable", 
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "get_file_sample_from_path_-_d2": {
                "implementing_scripts": [
                    "FetchFileD2", 
                    "IncidentAddSystem"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "get_original_email_-_ews": {
                "implementing_commands": [
                    "ews-get-attachment", 
                    "ews-search-mailbox", 
                    "ews-get-items"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "Set", 
                    "DeleteContext"
                ], 
                "fromversion": 4.0
            }
        }, 
        {
            "playbook17": {
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "CBPFindRule", 
                    "CBPCatalogFindHash"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "calculate_severity_-_critical_assets": {
                "toversion": "3.6.1", 
                "implementing_scripts": [
                    "Set", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook14": {
                "implementing_scripts": [
                    "CPShowBackupStatus", 
                    "CPCreateBackup", 
                    "SNOpenTicket", 
                    "UtilAnyResults", 
                    "SendEmail", 
                    "SCPPullFiles", 
                    "CloseInvestigation"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "endpoint_enrichment_-_generic": {
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ], 
                "implementing_commands": [
                    "cylance-protect-get-devices", 
                    "so-agents-query", 
                    "cb-sensor-info"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "ADGetComputer", 
                    "Exists", 
                    "EPOFindSystem", 
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "access_investigation_-_qradar": {
                "implementing_playbooks": [
                    "Access Investigation - Generic", 
                    "QRadar - Get offense correlations"
                ], 
                "implementing_commands": [
                    "setIncident"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "DBotCreatePhishingClassifier": {
                "implementing_scripts": [
                    "Base64ListToFile", 
                    "DBotPreparePhishingData", 
                    "DBotTrainTextClassifier", 
                    "DBotPredictPhishingEvaluation"
                ], 
                "fromversion": "4.1.0"
            }
        }, 
        {
            "detonate_url_-_generic": {
                "implementing_playbooks": [
                    "Detonate URL - ThreatGrid", 
                    "Detonate URL - JoeSecurity", 
                    "Detonate URL - McAfee ATD", 
                    "Detonate URL - Lastline", 
                    "Detonate URL - CrowdStrike", 
                    "Detonate URL - Cuckoo"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "tenable-sc-scan": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "tenable-sc-launch-scan", 
                    "tenable-sc-get-scan-report"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "detonate_file_from_url_-_wildfire": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "wildfire-upload-file-remote", 
                    "wildfire-report"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "block_endpoint_-_carbon_black_response": {
                "implementing_commands": [
                    "cb-quarantine-device", 
                    "cb-sensor-info"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "close_incident_if_duplicate_found": {
                "implementing_scripts": [
                    "CloseInvestigationAsDuplicate", 
                    "FindSimilarIncidents"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "scan_assets_nexpose": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "nexpose-start-assets-scan", 
                    "nexpose-get-scan"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "extract_indicators_-_generic": {
                "implementing_scripts": [
                    "ExtractURL", 
                    "ExtractHash", 
                    "ExtractIP", 
                    "ExtractEmail", 
                    "ExtractDomain"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "playbook0": {
                "toversion": "3.1.0", 
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ], 
                "implementing_scripts": [
                    "QRadarClassifier", 
                    "Print", 
                    "MapValues", 
                    "VectraClassifier", 
                    "TrendMicroClassifier", 
                    "Exists", 
                    "Exists", 
                    "SplunkEmailParser", 
                    "NexposeEmailParser", 
                    "IncidentSet", 
                    "IncidentSet"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "dedup_-_generic": {
                "implementing_scripts": [
                    "FindSimilarIncidentsByText", 
                    "GetDuplicatesMlv2", 
                    "FindSimilarIncidents", 
                    "CloseInvestigationAsDuplicate"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "malware_investigation-_generic_-_setup": {
                "implementing_playbooks": [
                    "Get File Sample From Path - Generic", 
                    "Search Endpoints By Hash - Generic", 
                    "Get File Sample By Hash - Generic"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "block_file_-_carbon_black_response": {
                "implementing_commands": [
                    "cb-block-hash", 
                    "cb-get-hash-blacklist"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "search_and_delete_emails_-_ews": {
                "implementing_commands": [
                    "ews-delete-items", 
                    "ews-search-mailboxes"
                ], 
                "implementing_scripts": [
                    "BuildEWSQuery"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Detonate File - BitDam": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "bitdam-upload-file", 
                    "bitdam-get-verdict"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "MAR - Endpoint data collection": {
                "implementing_scripts": [
                    "Exists", 
                    "EPOFindSystem", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple", 
                    "mar-search-multiple"
                ]
            }
        }, 
        {
            "process_email_-_add_custom_fields": {
                "implementing_scripts": [
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "detonate_url_-_crowdstrike": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "crowdstrike-submit-url", 
                    "crowdstrike-scan"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "ip_enrichment_generic": {
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ], 
                "implementing_commands": [
                    "vt-private-get-ip-report"
                ], 
                "implementing_scripts": [
                    "IPReputation", 
                    "IsIPInRanges", 
                    "IPToHost"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "domain_enrichment_generic": {
                "toversion": "3.5.1", 
                "implementing_scripts": [
                    "DomainReputation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "QRadarFullSearch": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "qradar-searches", 
                    "qradar-get-search", 
                    "qradar-get-search-results"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Arcsight - Get events related to the Case": {
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Set", 
                    "IncidentSet", 
                    "IncidentSet"
                ], 
                "implementing_commands": [
                    "as-get-security-events", 
                    "as-get-case", 
                    "as-get-security-events", 
                    "as-get-case-event-ids"
                ]
            }
        }, 
        {
            "Account Enrichment": {
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "Exists", 
                    "ADGetUser"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "malware_investigation-_generic": {
                "toversion": "3.6.0", 
                "implementing_playbooks": [
                    "Detonate File - Generic", 
                    "Entity Enrichment - Generic", 
                    "Malware Investigation - Generic - Setup", 
                    "Calculate Severity - Generic", 
                    "Extract Indicators - Generic"
                ], 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "CloseInvestigation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "QRadar - Get offense correlations ": {
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "Exists", 
                    "QRadarGetOffenseCorrelations", 
                    "QRadarGetCorrelationLogs", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "QRadar - Get offense correlations ": {
                "implementing_scripts": [
                    "QRadarGetOffenseCorrelations", 
                    "QRadarGetCorrelationLogs"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "block_ip_-_generic": {
                "implementing_playbooks": [
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ], 
                "implementing_commands": [
                    "zscaler-blacklist-ip", 
                    "checkpoint-block-ip"
                ], 
                "implementing_scripts": [
                    "PanoramaBlockIP"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "vulnerability_handling_-_qualys_-_add _ustom_fields_to_default_layout": {
                "implementing_scripts": [
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet", 
                    "IncidentSet"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook3": {
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Enrich DXL with ATD verdict": {
                "implementing_playbooks": [
                    "ATD - Detonate File"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "CloseInvestigation"
                ], 
                "implementing_commands": [
                    "dxl-send-event"
                ]
            }
        }, 
        {
            "Detonate File - SNDBOX": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "sndbox-analysis-submit-sample", 
                    "sndbox-download-report", 
                    "sndbox-analysis-info"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "implementing_playbooks": [
                    "Block Indicators - Generic", 
                    "Entity Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Detonate File - Generic", 
                    "Search And Delete Emails - Generic", 
                    "Extract Indicators From File - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "implementing_commands": [
                    "send-mail", 
                    "send-mail", 
                    "closeInvestigation"
                ], 
                "implementing_scripts": [
                    "SendEmail", 
                    "AssignAnalystToIncident", 
                    "Set"
                ], 
                "fromversion": 4.0
            }
        }, 
        {
            "playbook2": {
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Hunt for bad IOCs": {
                "implementing_playbooks": [
                    "Carbon black Protection Rapid IOC Hunting", 
                    "CrowdStrike Rapid IOC Hunting", 
                    "Carbon Black Rapid IOC Hunting", 
                    "TIE - IOC Hunt"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "extract_indicators_from_file_-_generic": {
                "implementing_scripts": [
                    "Set", 
                    "ExtractIndicatorsFromTextFile", 
                    "ReadPDFFile"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Sentinel One - Endpoint data collection": {
                "implementing_scripts": [
                    "Print", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "so-agents-query", 
                    "so-get-agent-processes"
                ]
            }
        }, 
        {
            "process_email_-_generic": {
                "implementing_playbooks": [
                    "Get Original Email - Generic"
                ], 
                "implementing_commands": [
                    "setIncident", 
                    "rasterize-email"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "ParseEmailFiles", 
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "playbook13": {
                "implementing_commands": [
                    "servicenow-incident-create"
                ], 
                "implementing_scripts": [
                    "commentsToContext", 
                    "commentsToContext", 
                    "CloseInvestigation", 
                    "Ping"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "vulnerability_handling_-_nexpose": {
                "implementing_playbooks": [
                    "Calculate Severity - Generic", 
                    "CVE Enrichment - Generic", 
                    "Endpoint Enrichment - Generic"
                ], 
                "implementing_commands": [
                    "closeInvestigation", 
                    "nexpose-get-asset-vulnerability", 
                    "nexpose-get-asset", 
                    "setIncident"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Calculate Severity - Generic": {
                "toversion": "3.1.0", 
                "implementing_commands": [
                    "setIncident", 
                    "setIncident", 
                    "setIncident", 
                    "setIncident"
                ], 
                "implementing_scripts": [
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "StringContains", 
                    "Exists", 
                    "Print", 
                    "Exists", 
                    "StringContains", 
                    "Exists"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "playbook8": {
                "fromversion": "2.5.0"
            }
        }, 
        {
            "vulnerability_handling_-_qualys": {
                "implementing_playbooks": [
                    "Calculate Severity - Generic", 
                    "CVE Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "Vulnerability Handling - Qualys - Add custom fields to default layout"
                ], 
                "implementing_commands": [
                    "qualys-host-list", 
                    "qualys-vulnerability-list"
                ], 
                "implementing_scripts": [
                    "DisplayHTML", 
                    "DisplayHTML", 
                    "CloseInvestigation", 
                    "DisplayHTML"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook10": {
                "implementing_playbooks": [
                    "Hunt for bad IOCs"
                ], 
                "implementing_scripts": [
                    "ExtractIP", 
                    "ExtractHash", 
                    "Print", 
                    "ExtractURL", 
                    "ReadFile", 
                    "Exists", 
                    "ExtractIP", 
                    "ExtractHash"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_response": {
                "implementing_scripts": [
                    "CBFindHash", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "scan_site_nexpose": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "nexpose-start-site-scan", 
                    "nexpose-get-scan"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Failed Login Playbook With Slack": {
                "implementing_commands": [
                    "slack-send"
                ], 
                "implementing_scripts": [
                    "SlackAskUser", 
                    "SlackAskUser", 
                    "IncidentSet", 
                    "ADExpirePassword", 
                    "CloseInvestigation"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "WildFire - Detonate file": {
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "Exists"
                ], 
                "implementing_commands": [
                    "wildfire-upload", 
                    "wildfire-report", 
                    "wildfire-report"
                ]
            }
        }, 
        {
            "File Enrichment - Generic": {
                "implementing_playbooks": [
                    "File Enrichment - File reputation", 
                    "File Enrichment - Virus Total Private API"
                ], 
                "implementing_commands": [
                    "pan-appframework-search-by-file-hash", 
                    "cylance-protect-get-threat"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "vulnerability_management_-_nexpose_job": {
                "implementing_commands": [
                    "nexpose-search-assets", 
                    "nexpose-create-assets-report", 
                    "closeInvestigation"
                ], 
                "implementing_scripts": [
                    "NexposeCreateIncidentsFromAssets"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Archer initiate incident": {
                "implementing_commands": [
                    "archer-get-file"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "block_file_-_generic": {
                "implementing_playbooks": [
                    "Block File - Carbon Black Response"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "calculate_severity_-_critical_assets": {
                "implementing_scripts": [
                    "Set", 
                    "StringContains", 
                    "StringContains", 
                    "StringContains", 
                    "StringContains"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "add_indicator_to_miner_-_palo_alto_mineMeld": {
                "implementing_commands": [
                    "minemeld-add-to-miner"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "domain_enrichment_generic": {
                "implementing_commands": [
                    "vt-private-get-domain-report"
                ], 
                "implementing_scripts": [
                    "DomainReputation"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "playbook11": {
                "implementing_commands": [
                    "epo-get-current-dat", 
                    "epo-get-current-dat", 
                    "epo-get-latest-dat", 
                    "epo-update-repository"
                ], 
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Sleep", 
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "IncidentSet", 
                    "SendEmail", 
                    "SendEmail"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "url_enrichment_-_generic": {
                "implementing_commands": [
                    "vt-private-get-url-report", 
                    "rasterize"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "URLReputation", 
                    "URLSSLVerification"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "entity_enrichment_generic": {
                "implementing_playbooks": [
                    "Domain Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "File Enrichment - Generic", 
                    "Account Enrichment - Generic", 
                    "IP Enrichment - Generic", 
                    "URL Enrichment - Generic", 
                    "Email Address Enrichment - Generic"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "search_endpoints_by_hash_-_generic": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - TIE", 
                    "Search Endpoints By Hash - CrowdStrike", 
                    "Search Endpoints By Hash - Carbon Black Response", 
                    "Search Endpoints By Hash - Carbon Black Protection"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "malware_investigation-_generic": {
                "implementing_playbooks": [
                    "Detonate File - Generic", 
                    "Entity Enrichment - Generic", 
                    "Malware Investigation - Generic - Setup", 
                    "Calculate Severity - Generic"
                ], 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "CloseInvestigation"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "calculate_severity_-_indicators_dbotscore": {
                "implementing_scripts": [
                    "Set", 
                    "Set", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "Detonate File - Cuckoo": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "cuckoo-task-screenshot", 
                    "cuckoo-view-task", 
                    "cuckoo-create-task-from-file", 
                    "cuckoo-get-task-report"
                ], 
                "implementing_scripts": [
                    "Sleep"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Account Enrichment": {
                "implementing_scripts": [
                    "Exists", 
                    "ADGetUser", 
                    "Exists"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "entity_enrichment_generic": {
                "toversion": "3.5.1", 
                "implementing_playbooks": [
                    "Domain Enrichment - Generic", 
                    "Endpoint Enrichment - Generic", 
                    "File Enrichment - Generic", 
                    "Account Enrichment - Generic", 
                    "DBot Indicator Enrichment - Generic", 
                    "IP Enrichment - Generic", 
                    "URL Enrichment - Generic", 
                    "Email Address Enrichment - Generic"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Phishing Investigation - Generic": {
                "toversion": "3.9.9", 
                "implementing_playbooks": [
                    "Entity Enrichment - Generic", 
                    "Process Email - Generic", 
                    "Email Address Enrichment - Generic", 
                    "Detonate File - Generic", 
                    "Search And Delete Emails - Generic", 
                    "Extract Indicators From File - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "implementing_scripts": [
                    "SendEmail", 
                    "Set", 
                    "SendEmail", 
                    "SendEmail", 
                    "AssignAnalystToIncident", 
                    "CloseInvestigation"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "DBotCreatePhishingClassifierJob": {
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ], 
                "implementing_commands": [
                    "closeInvestigation"
                ], 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "fromversion": "4.1.0"
            }
        }, 
        {
            "playbook5": {
                "toversion": "3.1.0", 
                "implementing_playbooks": [
                    "Process Email", 
                    "Account Enrichment", 
                    "Detonate files", 
                    "Enrichment Playbook", 
                    "Hunt for bad IOCs"
                ], 
                "implementing_scripts": [
                    "CheckSenderDomainDistance", 
                    "IsMaliciousIndicatorFound", 
                    "Set", 
                    "ExtractIP", 
                    "ExtractURL", 
                    "SendEmail", 
                    "SendEmail", 
                    "CloseInvestigation", 
                    "Exists", 
                    "Exists", 
                    "SendEmail"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Demisto_Self-Defense_-_Account_policy_monitoring_playbook": {
                "implementing_commands": [
                    "demisto-api-get", 
                    "slack-send", 
                    "setIncident", 
                    "TwilioSendSMS"
                ], 
                "implementing_scripts": [
                    "CloseInvestigation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "ATD - Detonate File": {
                "toversion": "3.6.0", 
                "implementing_scripts": [
                    "Exists", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "detonate-file"
                ]
            }
        }, 
        {
            "block_account_-_generic": {
                "implementing_commands": [
                    "ad-disable-account"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "file_enrichment_-_virus_total_private_api": {
                "implementing_commands": [
                    "vt-private-get-file-report", 
                    "vt-private-get-file-report", 
                    "vt-private-get-file-report", 
                    "vt-private-check-file-behaviour", 
                    "vt-private-check-file-behaviour", 
                    "vt-private-check-file-behaviour"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "file_enrichment_-_file_reputation": {
                "implementing_scripts": [
                    "FileReputation", 
                    "FileReputation", 
                    "FileReputation"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "block_url_-_generic": {
                "implementing_playbooks": [
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ], 
                "implementing_commands": [
                    "zscaler-blacklist-url"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Process Email": {
                "implementing_scripts": [
                    "Exists", 
                    "ParseEmailFiles", 
                    "Set"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "playbook15": {
                "implementing_commands": [
                    "tn-ask-question", 
                    "tn-ask-question", 
                    "tn-get-saved-question", 
                    "tn-get-saved-question", 
                    "tn-deploy-package"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "get_file_sample_by_hash_-_carbon_black_enterprise_Response": {
                "implementing_commands": [
                    "cb-binary-get"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Get File Sample From Hash - Cylance Protect": {
                "toversion": "3.1.0", 
                "implementing_commands": [
                    "cylance-protect-download-threat"
                ], 
                "implementing_scripts": [
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "http", 
                    "UnzipFile"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "access_investigation_-_generic": {
                "implementing_playbooks": [
                    "IP Enrichment - Generic", 
                    "IP Enrichment - Generic", 
                    "Account Enrichment - Generic"
                ], 
                "implementing_commands": [
                    "setIncident", 
                    "closeInvestigation", 
                    "setIncident"
                ], 
                "implementing_scripts": [
                    "EmailAskUser", 
                    "AssignAnalystToIncident", 
                    "ADGetUser"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "search_endpoints_by_hash_-_tie": {
                "implementing_commands": [
                    "tie-file-references"
                ], 
                "implementing_scripts": [
                    "EPOFindSystem"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "get_file_sample_from_path_-_carbon_black_enterprise_response": {
                "implementing_scripts": [
                    "Exists", 
                    "CBLiveGetFile"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "WildFire - Detonate file": {
                "toversion": "3.6.0", 
                "implementing_commands": [
                    "detonate-file", 
                    "wildfire-report"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Detonate File - Generic": {
                "implementing_playbooks": [
                    "CrowdStrike Falcon Sandbox - Detonate file", 
                    "Detonate File - ThreatGrid", 
                    "WildFire - Detonate file", 
                    "Detonate File - Cuckoo", 
                    "Detonate File - Lastline", 
                    "Detonate File - SNDBOX", 
                    "ATD - Detonate File", 
                    "Detonate File - JoeSecurity"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "D2 - Endpoint data collection": {
                "implementing_scripts": [
                    "FetchFileD2", 
                    "AreValuesEqual", 
                    "IncidentAddSystem", 
                    "D2ExecuteCommand", 
                    "D2ExecuteCommand", 
                    "Exists", 
                    "ActiveUsersD2", 
                    "Exists"
                ]
            }
        }, 
        {
            "Enrichment Playbook": {
                "implementing_scripts": [
                    "FileReputation", 
                    "Exists", 
                    "FileReputation", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "IPReputation", 
                    "FileReputation", 
                    "Print", 
                    "URLReputation"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Office 365 Search and Delete": {
                "implementing_playbooks": [
                    "GenericPolling", 
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "ews-o365-start-compliance-search", 
                    "ews-o365-get-compliance-search", 
                    "ews-o365-purge-compliance-search-results", 
                    "ews-o365-remove-compliance-search", 
                    "ews-o365-get-compliance-search"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "dbot_indicator_enrichment_-_generic": {
                "implementing_scripts": [
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "playbook0": {
                "implementing_playbooks": [
                    "Entity Enrichment - Generic", 
                    "Extract Indicators - Generic", 
                    "Calculate Severity - Generic"
                ], 
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "CloseInvestigation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "File Enrichment - Generic": {
                "toversion": "3.5.1", 
                "implementing_scripts": [
                    "FileReputation", 
                    "FileReputation", 
                    "FileReputation"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "ATD - Detonate File": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "atd-file-upload", 
                    "atd-get-report", 
                    "atd-check-status"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "account_enrichment_-_generic": {
                "implementing_scripts": [
                    "ADGetUser", 
                    "Exists"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "detonatefile_-_joesecurity": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "joe-analysis-submit-sample", 
                    "joe-download-report", 
                    "joe-analysis-info"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "ip_enrichment_generic": {
                "toversion": "3.5.1", 
                "implementing_scripts": [
                    "Exists", 
                    "IPReputation", 
                    "IsIPInRanges"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Detonate files": {
                "toversion": "3.1.0", 
                "implementing_scripts": [
                    "Exists", 
                    "Print", 
                    "SandboxDetonateFile"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "detonate_file_from_url_-_joesecurity": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "joe-analysis-submit-sample", 
                    "joe-download-report"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Carbon Black Rapid IOC Hunting": {
                "implementing_scripts": [
                    "CBFindHash", 
                    "Exists", 
                    "Exists"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "email_address_enrichment_-_generic": {
                "toversion": "3.5.1", 
                "implementing_scripts": [
                    "Exists", 
                    "ADGetUser", 
                    "EmailDomainSquattingReputation", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "EmailReputation", 
                    "IsEmailAddressInternal"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Endpoint data collection": {
                "implementing_playbooks": [
                    "D2 - Endpoint data collection", 
                    "Sentinel One - Endpoint data collection", 
                    "MAR - Endpoint data collection"
                ], 
                "implementing_scripts": [
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "Get File Sample From Hash - Generic": {
                "toversion": "3.1.0", 
                "implementing_playbooks": [
                    "Get File Sample From Hash - Carbon Black Enterprise Response", 
                    "Get File Sample From Hash - Cylance Protect"
                ]
            }
        }, 
        {
            "WildFire - Detonate file": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "wildfire-upload", 
                    "wildfire-report"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "detonate_file_-_threatgrid": {
                "implementing_playbooks": [
                    "GenericPolling"
                ], 
                "implementing_commands": [
                    "threat-grid-upload-sample", 
                    "threat-grid-get-samples-state"
                ], 
                "implementing_scripts": [
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }
    ], 
    "TestPlaybooks": [
        {
            "SignalSciences Test": {
                "implementing_commands": [
                    "sigsci-blacklist-add-ip", 
                    "sigsci-blacklist-remove-ip", 
                    "sigsci-get-blacklist", 
                    "sigsci-get-whitelist", 
                    "sigsci-whitelist-add-ip", 
                    "sigsci-whitelist-remove-ip"
                ]
            }
        }, 
        {
            "Microsoft Graph Test": {
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "msg-search-alerts", 
                    "msg-update-alert", 
                    "msg-get-alert-details"
                ]
            }
        }, 
        {
            "Mail Sender (New) Test": {
                "implementing_scripts": [
                    "ThrowException", 
                    "ThrowException", 
                    "Sleep", 
                    "DeleteContext", 
                    "Sleep", 
                    "Set", 
                    "DeleteContext", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "googleapps-gmail-get-mail", 
                    "googleapps-gmail-search", 
                    "send-mail", 
                    "googleapps-gmail-search", 
                    "googleapps-gmail-search"
                ]
            }
        }, 
        {
            "ThreatExchange-test": {
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "ExtractURL", 
                    "Print", 
                    "Exists", 
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "ExtractDomain", 
                    "ExtractIP", 
                    "IsMaliciousIndicatorFound", 
                    "ExtractHash", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "domain", 
                    "url", 
                    "ip", 
                    "file"
                ]
            }
        }, 
        {
            "PortListenCheck-test": {
                "implementing_scripts": [
                    "PortListenCheck", 
                    "Print"
                ]
            }
        }, 
        {
            "Qualys-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "qualys-report-list", 
                    "qualys-pc-scan-list", 
                    "qualys-report-template-list", 
                    "qualys-vm-scan-list", 
                    "qualys-scheduled-report-list"
                ]
            }
        }, 
        {
            "Pipl Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "pipl-search"
                ]
            }
        }, 
        {
            "Splunk-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "Print", 
                    "Set", 
                    "VerifyContext", 
                    "AreValuesEqual", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "StringContains", 
                    "VerifyContext", 
                    "DumpJSON", 
                    "IsGreaterThan"
                ], 
                "implementing_commands": [
                    "splunk-parse-raw", 
                    "splunk-parse-raw", 
                    "splunk-search", 
                    "splunk-get-indexes", 
                    "splunk-submit-event", 
                    "splunk-search"
                ]
            }
        }, 
        {
            "67b0f25f-b061-4468-8613-43ab13147173": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "cbp-connector-search", 
                    "cbp-fileAnalysis-createOrUpdate", 
                    "cbp-connector-get", 
                    "cbp-fileUpload-createOrUpdate", 
                    "cbp-fileAnalysis-get", 
                    "cbp-fileUpload-download", 
                    "cbp-fileUpload-get"
                ]
            }
        }, 
        {
            "test_url_regex": {
                "implementing_scripts": [
                    "Print", 
                    "VerifyContext", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "8984405a-4274-470a-8a34-a437d8e2e1c5": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "IsGreaterThan", 
                    "CloseInvestigation", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "implementing_commands": [
                    "email", 
                    "phishme-search", 
                    "ip", 
                    "url", 
                    "file"
                ]
            }
        }, 
        {
            "TestCreateTagTextFile": {}
        }, 
        {
            "4078d8b6-37c6-42d7-8324-16096a2feb51": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-route53-create-record", 
                    "aws-route53-list-hosted-zones", 
                    "aws-route53-delete-record", 
                    "aws-route53-waiter-resource-record-sets-changed", 
                    "aws-route53-list-resource-record-sets", 
                    "aws-route53-upsert-record", 
                    "aws-route53-test-dns-answer"
                ]
            }
        }, 
        {
            "EWS Mail Sender Test": {
                "implementing_scripts": [
                    "http"
                ], 
                "implementing_commands": [
                    "send-mail"
                ]
            }
        }, 
        {
            "Icebrg Test": {
                "implementing_commands": [
                    "icebrg-get-history", 
                    "icebrg-saved-searches", 
                    "icebrg-search-events", 
                    "icebrg-get-reports", 
                    "icebrg-get-report-assets", 
                    "icebrg-get-report-indicators"
                ]
            }
        }, 
        {
            "tenable-sc-scan-test": {
                "implementing_playbooks": [
                    "Launch Scan - Tenable.sc"
                ]
            }
        }, 
        {
            "VMWare Test": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "vmware-get-events", 
                    "vmware-get-vms", 
                    "vmware-poweroff", 
                    "vmware-poweron", 
                    "vmware-suspend", 
                    "vmware-poweron", 
                    "vmware-hard-reboot", 
                    "vmware-poweron", 
                    "vmware-revert-snapshot", 
                    "vmware-create-snapshot"
                ]
            }
        }, 
        {
            "OpenPhish Test Playbook": {
                "implementing_scripts": [
                    "Exists", 
                    "Print", 
                    "Exists", 
                    "Print", 
                    "CloseInvestigation"
                ], 
                "implementing_commands": [
                    "openphish-status", 
                    "url", 
                    "url"
                ]
            }
        }, 
        {
            "Intezer Testing": {
                "implementing_scripts": [
                    "http", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "intezer-upload", 
                    "file"
                ]
            }
        }, 
        {
            "test-domain-indicator": {
                "implementing_scripts": [
                    "Sleep", 
                    "Print", 
                    "Print", 
                    "GetIndicatorDBotScore", 
                    "GetIndicatorDBotScore"
                ]
            }
        }, 
        {
            "TestCreateWordFile": {}
        }, 
        {
            "ip_enrichment_generic_test": {
                "implementing_playbooks": [
                    "IP Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Nessus - Test": {
                "implementing_scripts": [
                    "WhileLoop", 
                    "WhileLoop"
                ], 
                "implementing_commands": [
                    "nessus-scan-status", 
                    "nessus-scan-details", 
                    "nessus-launch-scan", 
                    "nessus-scan-export", 
                    "nessus-scan-create", 
                    "nessus-scan-report-download"
                ]
            }
        }, 
        {
            "d66e5f86-e045-403f-819e-5058aa603c32": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-ec2-describe-instances", 
                    "aws-ec2-reboot-instances", 
                    "aws-ec2-unmonitor-instances", 
                    "aws-ec2-monitor-instances", 
                    "aws-ec2-copy-image", 
                    "aws-ec2-copy-snapshot", 
                    "aws-ec2-create-security-group", 
                    "aws-ec2-waiter-snapshot_completed", 
                    "aws-ec2-get-latest-ami", 
                    "aws-ec2-create-security-group", 
                    "aws-ec2-delete-security-group", 
                    "aws-ec2-waiter-instance-status-ok", 
                    "aws-ec2-waiter-instance-stopped", 
                    "aws-ec2-waiter-instance-terminated", 
                    "aws-ec2-waiter-image-available", 
                    "aws-ec2-authorize-security-group-ingress-rule", 
                    "aws-ec2-revoke-security-group-ingress-rule", 
                    "aws-ec2-associate-address", 
                    "aws-ec2-delete-snapshot", 
                    "aws-ec2-deregister-image", 
                    "aws-ec2-create-tags", 
                    "aws-ec2-attach-volume", 
                    "aws-ec2-create-volume", 
                    "aws-ec2-start-instances", 
                    "aws-ec2-release-address", 
                    "aws-ec2-terminate-instances", 
                    "aws-ec2-stop-instances", 
                    "aws-ec2-delete-volume", 
                    "aws-ec2-detach-volume", 
                    "aws-ec2-waiter-instance-running", 
                    "aws-ec2-run-instances", 
                    "aws-ec2-allocate-address", 
                    "aws-ec2-create-snapshot", 
                    "aws-ec2-create-image", 
                    "aws-ec2-modify-volume", 
                    "aws-ec2-disassociate-address", 
                    "aws-ec2-modify-network-interface-attribute", 
                    "aws-ec2-modify-instance-attribute"
                ]
            }
        }, 
        {
            "Google-Vault-Generic-Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "Sleep", 
                    "GeneratePassword", 
                    "Sleep", 
                    "Sleep", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "gvault-create-hold", 
                    "gvault-get-matter", 
                    "gvault-create-export-groups", 
                    "gvault-create-export-mail", 
                    "gvault-export-status", 
                    "gvault-remove-heldAccount", 
                    "gvault-add-heldAccount", 
                    "gvault-delete-hold", 
                    "gvault-remove-heldAccount", 
                    "gvault-create-export-drive", 
                    "gvault-create-matter", 
                    "gvault-get-matter"
                ]
            }
        }, 
        {
            "cve_enrichment_-_generic_-_test": {
                "implementing_playbooks": [
                    "CVE Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "VerifyContext"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "ReadPDFFile-Test": {
                "implementing_scripts": [
                    "http", 
                    "DeleteContext", 
                    "ReadPDFFile", 
                    "http", 
                    "DeleteContext", 
                    "ReadPDFFile"
                ]
            }
        }, 
        {
            "RegexGroups Test": {
                "implementing_scripts": [
                    "RaiseError", 
                    "Set", 
                    "Set", 
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "GmailTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "GetTime"
                ], 
                "implementing_commands": [
                    "gmail-add-delete-filter", 
                    "gmail-get-attachments", 
                    "gmail-get-tokens-for-user", 
                    "gmail-move-mail", 
                    "gmail-get-mail", 
                    "gmail-get-thread", 
                    "gmail-search-all-mailboxes", 
                    "gmail-move-mail", 
                    "gmail-search", 
                    "gmail-get-user", 
                    "gmail-list-users", 
                    "gmail-create-user", 
                    "gmail-delete-user", 
                    "gmail-search"
                ]
            }
        }, 
        {
            "Extract Indicators From File - test": {
                "implementing_playbooks": [
                    "Extract Indicators From File - Generic"
                ], 
                "implementing_scripts": [
                    "http", 
                    "RaiseError"
                ]
            }
        }, 
        {
            "Kenna Test": {
                "implementing_commands": [
                    "kenna-get-connectors", 
                    "kenna-search-vulnerabilities", 
                    "kenna-run-connector", 
                    "kenna-update-asset", 
                    "kenna-search-fixes", 
                    "kenna-update-vulnerability"
                ]
            }
        }, 
        {
            "GenerateImageFileEntry": {}
        }, 
        {
            "a18ff76e-c462-4daa-8be2-6a1b5308713f": {}
        }, 
        {
            "3da2e31b-f114-4d7f-8702-117f3b498de9": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-cloudtrail-create-trail", 
                    "aws-cloudtrail-delete-trail", 
                    "aws-cloudtrail-update-trail", 
                    "aws-cloudtrail-start-logging", 
                    "aws-cloudtrail-describe-trails", 
                    "aws-cloudtrail-lookup-events", 
                    "aws-cloudtrail-stop-logging"
                ]
            }
        }, 
        {
            "test_Qradar": {
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "FetchFromInstance"
                ], 
                "implementing_commands": [
                    "qradar-delete-reference-set", 
                    "qradar-get-asset-by-id", 
                    "qradar-create-reference-set", 
                    "qradar-create-reference-set-value", 
                    "qradar-get-assets", 
                    "qradar-create-note", 
                    "qradar-get-note", 
                    "qradar-offense-by-id", 
                    "qradar-offenses", 
                    "qradar-update-offense", 
                    "qradar-update-offense", 
                    "qradar-get-reference-by-name", 
                    "qradar-delete-reference-set", 
                    "qradar-get-reference-by-name", 
                    "qradar-delete-reference-set-value"
                ]
            }
        }, 
        {
            "Centreon-Test-Playbook": {
                "implementing_commands": [
                    "centreon-get-host-status"
                ]
            }
        }, 
        {
            "ssdeepreputationtest": {
                "implementing_scripts": [
                    "SsdeepReputationTest", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "Sleep", 
                    "SSDeepReputation"
                ]
            }
        }, 
        {
            "c5cb179f-d6d2-4d87-8857-b224689d5b00": {}
        }, 
        {
            "crowdstrike_falconhost_test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "Set"
                ], 
                "implementing_commands": [
                    "cs-device-details", 
                    "cs-device-search", 
                    "cs-device-ran-on", 
                    "cs-device-details", 
                    "cs-device-details", 
                    "cs-device-search"
                ]
            }
        }, 
        {
            "dnstwistTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "dnstwist-domain-variations"
                ]
            }
        }, 
        {
            "IPInfoTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "ip"
                ]
            }
        }, 
        {
            "Tanium Test Playbook": {
                "implementing_commands": [
                    "tn-ask-question", 
                    "tn-ask-question", 
                    "tn-get-saved-question", 
                    "tn-get-saved-question", 
                    "tn-deploy-package"
                ], 
                "fromversion": "2.5.0"
            }
        }, 
        {
            "GenerateUUID": {}
        }, 
        {
            "Netskope Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "netskope-alerts", 
                    "netskope-events"
                ]
            }
        }, 
        {
            "entity_enrichment_generic_test": {
                "implementing_playbooks": [
                    "Entity Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Set", 
                    "Set", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "CrowdStrike Falcon Intel v2": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "ThrowException", 
                    "DeleteContext", 
                    "ThrowException"
                ], 
                "implementing_commands": [
                    "cs-reports", 
                    "cs-indicators", 
                    "ip", 
                    "file", 
                    "domain", 
                    "url", 
                    "cs-actors"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_tie_-_test": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - TIE"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "nexpose_test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "GenerateUUID", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "nexpose-delete-site", 
                    "nexpose-create-site", 
                    "nexpose-create-assets-report", 
                    "nexpose-search-assets", 
                    "nexpose-get-scans", 
                    "nexpose-pause-scan", 
                    "nexpose-resume-scan", 
                    "nexpose-stop-scan", 
                    "nexpose-start-site-scan", 
                    "nexpose-get-scans", 
                    "nexpose-search-assets", 
                    "nexpose-get-assets", 
                    "nexpose-get-asset", 
                    "nexpose-create-assets-report", 
                    "nexpose-get-asset-vulnerability"
                ]
            }
        }, 
        {
            "cisco-ise-test-playbook": {
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "cisco-ise-get-endpoints"
                ]
            }
        }, 
        {
            "CarbonBlackResponseTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "CarbonBlackResponseFilterSensors", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "cb-alert", 
                    "cb-get-hash-blacklist", 
                    "cb-block-hash", 
                    "cb-unblock-hash", 
                    "cb-watchlist-del", 
                    "cb-watchlist-new", 
                    "cb-watchlist-set", 
                    "cb-get-process", 
                    "cb-sensor-info", 
                    "cb-quarantine-device", 
                    "cb-binary", 
                    "cb-alert-update", 
                    "cb-alert-update", 
                    "cb-process-events", 
                    "cb-get-processes", 
                    "cb-unquarantine-device", 
                    "cb-binary-get"
                ]
            }
        }, 
        {
            "dedup_-_generic_-_test": {
                "implementing_playbooks": [
                    "Dedup - Generic", 
                    "Dedup - Generic", 
                    "Dedup - Generic"
                ], 
                "implementing_commands": [
                    "setIncident"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "CreateDuplicateIncident", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "VxStream Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "Exists", 
                    "http"
                ], 
                "implementing_commands": [
                    "crowdstrike-submit-url", 
                    "crowdstrike-get-environments", 
                    "crowdstrike-search", 
                    "crowdstrike-scan", 
                    "crowdstrike-detonate-file"
                ]
            }
        }, 
        {
            "PhishTank Testing": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "http", 
                    "Set", 
                    "ReadFile", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "url"
                ]
            }
        }, 
        {
            "BigFixTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "bigfix-action-stop", 
                    "bigfix-action-status", 
                    "bigfix-action-delete", 
                    "bigfix-get-sites", 
                    "bigfix-get-site", 
                    "bigfix-get-site", 
                    "bigfix-deploy-patch", 
                    "bigfix-get-patches", 
                    "bigfix-get-endpoints"
                ]
            }
        }, 
        {
            "Cisco-Meraki-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "meraki-fetch-organizations", 
                    "meraki-fetch-organization-inventory", 
                    "meraki-get-organization-license-state", 
                    "meraki-fetch-devices", 
                    "meraki-fetch-networks"
                ]
            }
        }, 
        {
            "url_enrichment_-_generic_test": {
                "implementing_playbooks": [
                    "URL Enrichment - Generic"
                ], 
                "implementing_commands": [
                    "rasterize"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "CheckpointFW-test": {
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "DeleteContext", 
                    "CheckpointFWCreateBackup", 
                    "CheckpointFWBackupStatus", 
                    "Sleep", 
                    "VerifyContextFields"
                ], 
                "implementing_commands": [
                    "checkpoint-show-access-rule-base", 
                    "checkpoint-set-rule", 
                    "checkpoint-block-ip", 
                    "checkpoint-show-hosts", 
                    "checkpoint-delete-rule"
                ]
            }
        }, 
        {
            "Test Playbook McAfee ATD": {
                "implementing_playbooks": [
                    "ATD - Detonate File", 
                    "Detonate URL - McAfee ATD"
                ], 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "atd-login", 
                    "atd-list-user", 
                    "atd-list-analyzer-profiles"
                ]
            }
        }, 
        {
            "Cisco-Umbrella-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "investigate-umbrella-domain-search", 
                    "investigate-umbrella-domain-co-occurrences", 
                    "investigate-umbrella-domain-related", 
                    "investigate-umbrella-domain-dns-history", 
                    "umbrella-domain-categorization", 
                    "umbrella-domain-related", 
                    "umbrella-domain-co-occurrences", 
                    "umbrella-domain-security", 
                    "umbrella-ip-dns-history", 
                    "umbrella-domain-dns-history", 
                    "umbrella-domain-search"
                ]
            }
        }, 
        {
            "Test Playbook McAfee ePO": {
                "implementing_scripts": [
                    "RaiseError", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "epo-get-version", 
                    "epo-find-system", 
                    "epo-find-systems", 
                    "epo-clear-tag", 
                    "epo-get-tables", 
                    "epo-apply-tag", 
                    "epo-advanced-command", 
                    "epo-query-table", 
                    "epo-help", 
                    "epo-get-latest-dat", 
                    "epo-get-current-dat", 
                    "epo-get-system-tree-group", 
                    "epo-update-client-dat", 
                    "epo-update-repository"
                ]
            }
        }, 
        {
            "grr_test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set", 
                    "DeleteContext", 
                    "Set", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "grr-set-hunts", 
                    "grr-get-hunts", 
                    "grr-get-clients", 
                    "grr-set-flows", 
                    "grr-get-flows"
                ]
            }
        }, 
        {
            "RTIR Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "rtir-create-ticket", 
                    "rtir-edit-ticket", 
                    "rtir-search-ticket", 
                    "rtir-get-ticket", 
                    "rtir-resolve-ticket"
                ]
            }
        }, 
        {
            "GeneratePassword-Test": {
                "implementing_scripts": [
                    "GeneratePassword", 
                    "Print", 
                    "Exists", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "EWS Public Folders Test": {
                "implementing_commands": [
                    "ews-find-folders", 
                    "ews-search-mailbox", 
                    "ews-get-folder", 
                    "ews-get-items-from-folder"
                ]
            }
        }, 
        {
            "account_enrichment_-_generic_test": {
                "implementing_playbooks": [
                    "Account Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Set", 
                    "DeleteContext", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "TestStringReplace": {
                "implementing_scripts": [
                    "StringReplace", 
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "DeleteContext", 
                    "StringReplace", 
                    "StringReplace", 
                    "VerifyContextFields", 
                    "StringReplace", 
                    "VerifyContextFields"
                ]
            }
        }, 
        {
            "EWSv2_empty_attachment_test": {
                "implementing_commands": [
                    "ews-get-attachment"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_crowdstrike_-_test": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - CrowdStrike"
                ], 
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "IBM Resilient Systems Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "rs-search-incidents", 
                    "rs-incident-attachments", 
                    "rs-incident-artifacts", 
                    "rs-incidents-get-tasks", 
                    "rs-related-incidents"
                ]
            }
        }, 
        {
            "whois_test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "whois", 
                    "closeInvestigation"
                ]
            }
        }, 
        {
            "c7d68ad5MxToolbox_test": {
                "implementing_scripts": [
                    "ToTable", 
                    "CloseInvestigation", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "mxtoolbox", 
                    "mxtoolbox", 
                    "mxtoolbox", 
                    "mxtoolbox", 
                    "mxtoolbox", 
                    "mxtoolbox", 
                    "mxtoolbox"
                ]
            }
        }, 
        {
            "TestXml2JSON": {}
        }, 
        {
            "Jira-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContextFields", 
                    "FileCreateAndUpload", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContextFields"
                ], 
                "implementing_commands": [
                    "jira-delete-issue", 
                    "jira-issue-query", 
                    "jira-edit-issue", 
                    "jira-get-comments", 
                    "jira-get-issue", 
                    "jira-create-issue", 
                    "jira-issue-add-comment", 
                    "jira-issue-add-link", 
                    "jira-issue-upload-file"
                ]
            }
        }, 
        {
            "3b260f00-772c-4d4e-84ea-e47226637497": {
                "fromversion": "3.6.0"
            }
        }, 
        {
            "2142f8de-29d5-4288-8426-0db39abe988b": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-ec2-describe-instances", 
                    "aws-ec2-describe-regions", 
                    "aws-ec2-describe-images", 
                    "aws-ec2-describe-snapshots", 
                    "aws-ec2-describe-addresses", 
                    "aws-ec2-describe-key-pairs", 
                    "aws-ec2-describe-launch-templates", 
                    "aws-ec2-describe-vpcs", 
                    "aws-ec2-describe-volumes", 
                    "aws-ec2-describe-security-groups", 
                    "aws-ec2-describe-subnets"
                ]
            }
        }, 
        {
            "Google Safe Browsing Test": {
                "implementing_scripts": [
                    "RaiseError", 
                    "RaiseError", 
                    "CloseInvestigation"
                ], 
                "implementing_commands": [
                    "url", 
                    "url"
                ]
            }
        }, 
        {
            "Tenable.io test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "tenable-io-list-scans", 
                    "tenable-io-get-scan-report", 
                    "tenable-io-get-scan-status", 
                    "tenable-io-get-vulnerability-details", 
                    "tenable-io-get-vulnerabilities-by-asset"
                ]
            }
        }, 
        {
            "ValidateErrorExistence": {}
        }, 
        {
            "JoeSecurityTestPlaybook": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "FileCreateAndUpload"
                ], 
                "implementing_commands": [
                    "joe-search", 
                    "joe-analysis-submit-sample", 
                    "joe-download-report", 
                    "joe-download-report", 
                    "joe-download-report", 
                    "joe-analysis-submit-sample", 
                    "joe-is-online", 
                    "joe-analysis-info", 
                    "joe-analysis-submit-url", 
                    "joe-analysis-info"
                ]
            }
        }, 
        {
            "get_file_sample_by_hash_-_carbon_black_enterprise_Response_-_test": {
                "implementing_playbooks": [
                    "Get File Sample By Hash - Carbon Black Enterprise Response"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "OTRS Test": {
                "implementing_scripts": [
                    "FetchFromInstance"
                ], 
                "implementing_commands": [
                    "otrs-create-ticket", 
                    "otrs-get-ticket", 
                    "otrs-update-ticket", 
                    "otrs-search-ticket", 
                    "otrs-close-ticket"
                ]
            }
        }, 
        {
            "get_original_email_-_gmail_-_test": {
                "implementing_playbooks": [
                    "Get Original Email - Gmail"
                ], 
                "implementing_scripts": [
                    "VerifyContext"
                ]
            }
        }, 
        {
            "TestHPServiceManager": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContextFields", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "hpsm-get-device", 
                    "hpsm-list-incidents", 
                    "hpsm-create-incident", 
                    "hpsm-get-incident-by-id"
                ]
            }
        }, 
        {
            "TestIsValueInArray": {
                "implementing_scripts": [
                    "IsValueInArray", 
                    "CloseInvestigation", 
                    "IsValueInArray", 
                    "Set", 
                    "IsValueInArray", 
                    "IsValueInArray", 
                    "IsValueInArray", 
                    "IsValueInArray"
                ]
            }
        }, 
        {
            "GsuiteTest": {
                "implementing_scripts": [
                    "VerifyContextFields"
                ], 
                "implementing_commands": [
                    "googleapps-list-users"
                ]
            }
        }, 
        {
            "efc817d2-6660-4d4f-890d-90513ca1e180": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "cisco-spark-list-people", 
                    "cisco-spark-list-rooms", 
                    "cisco-spark-list-messages", 
                    "cisco-spark-delete-team", 
                    "cisco-spark-send-message-to-person", 
                    "cisco-spark-send-message-to-person", 
                    "cisco-spark-create-team", 
                    "cisco-spark-list-teams", 
                    "cisco-spark-list-rooms", 
                    "cisco-spark-list-messages", 
                    "cisco-spark-send-message-to-room", 
                    "cisco-spark-send-message-to-room", 
                    "cisco-spark-delete-message", 
                    "cisco-spark-list-rooms", 
                    "cisco-spark-list-teams", 
                    "cisco-spark-list-messages", 
                    "cisco-spark-delete-message"
                ]
            }
        }, 
        {
            "iDefenseTest": {
                "implementing_scripts": [
                    "Print", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "url", 
                    "url", 
                    "uuid", 
                    "ip", 
                    "ip", 
                    "domain", 
                    "domain"
                ]
            }
        }, 
        {
            "block_indicators_-_generic_-_test": {
                "implementing_playbooks": [
                    "Block Indicators - Generic"
                ]
            }
        }, 
        {
            "rsa_packets_and_logs_test": {
                "implementing_commands": [
                    "nw-sdk-content", 
                    "netwitness-msearch", 
                    "netwitness-query", 
                    "nw-sdk-values"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "CompleteManualTask": {}
        }, 
        {
            "URLDecode-Test": {
                "implementing_scripts": [
                    "URLDecode", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Zscaler Test": {
                "implementing_scripts": [
                    "isError", 
                    "GenerateUUID"
                ], 
                "implementing_commands": [
                    "zscaler-get-categories", 
                    "zscaler-category-add-url", 
                    "zscaler-blacklist-url", 
                    "zscaler-blacklist-url", 
                    "zscaler-get-blacklist"
                ]
            }
        }, 
        {
            "urlscan_malicious_Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "urlscan-search", 
                    "urlscan-search"
                ]
            }
        }, 
        {
            "DemistoUploadFileToIncident Test": {
                "implementing_scripts": [
                    "http", 
                    "DemistoUploadFileToIncident"
                ]
            }
        }, 
        {
            "ParseEmailFiles-test": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "http", 
                    "VerifyContext", 
                    "ParseEmailFiles", 
                    "http", 
                    "ParseEmailFiles", 
                    "DeleteContext", 
                    "ParseEmailFiles", 
                    "http", 
                    "VerifyContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "extract_indicators_-_generic_-_test": {
                "implementing_playbooks": [
                    "Extract Indicators - Generic"
                ], 
                "implementing_scripts": [
                    "IncidentSet", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "listExecutedCommands-Test": {
                "implementing_scripts": [
                    "Print", 
                    "commentsToContext", 
                    "listExecutedCommands", 
                    "listExecutedCommands", 
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "commentsToContext", 
                    "CloseInvestigation"
                ]
            }
        }, 
        {
            "Phishing test - Inline": {
                "implementing_playbooks": [
                    "Phishing Investigation - Generic"
                ], 
                "implementing_scripts": [
                    "http", 
                    "PhishingIncident", 
                    "DeleteContext", 
                    "ScheduleCommand"
                ]
            }
        }, 
        {
            "Tenable.io Scan Test": {
                "implementing_playbooks": [
                    "Tenable.io Scan"
                ], 
                "implementing_scripts": [
                    "DeleteContext"
                ]
            }
        }, 
        {
            "AlphaSOC-Wisdom-Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "wisdom-domain-flags", 
                    "wisdom-ip-flags"
                ]
            }
        }, 
        {
            "GenerateIP": {}
        }, 
        {
            "pyEWS_Test": {
                "implementing_commands": [
                    "ews-get-attachment", 
                    "ews-get-out-of-office", 
                    "ews-find-folders", 
                    "ews-get-items", 
                    "Exception", 
                    "ews-get-searchable-mailboxes", 
                    "ews-search-mailboxes", 
                    "ews-get-contacts", 
                    "ews-get-attachment"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "virusTotal-test-playbook": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "Exists", 
                    "Exists", 
                    "Set", 
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "file", 
                    "file", 
                    "file", 
                    "ip", 
                    "file", 
                    "url", 
                    "file", 
                    "domain", 
                    "domain", 
                    "url", 
                    "url", 
                    "url"
                ]
            }
        }, 
        {
            "calculate_severity_-_critical_assets_-_test": {
                "implementing_playbooks": [
                    "Calculate Severity - Critical assets"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "ADGetUser"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_response_-_test": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Response"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "5dc848e5-a649-4394-8300-386770d39d75": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "TestCreateDuplicates", 
                    "VerifyContext", 
                    "GetDuplicatesMl"
                ]
            }
        }, 
        {
            "LogRhythm-Test-Playbook": {
                "implementing_commands": [
                    "lr-get-alarms"
                ]
            }
        }, 
        {
            "test_similar_incidents": {
                "implementing_scripts": [
                    "TestCreateDuplicates", 
                    "VerifyContext", 
                    "FindSimilarIncidents", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "2cddaacb-4e4c-407e-8ef5-d924867b810c": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "GetTime", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-logs-delete-metric-filter", 
                    "aws-logs-put-log-events", 
                    "aws-logs-put-metric-filter", 
                    "aws-logs-delete-log-group", 
                    "aws-logs-delete-retention-policy", 
                    "aws-logs-put-retention-policy", 
                    "aws-logs-create-log-group", 
                    "aws-logs-create-log-stream", 
                    "aws-logs-describe-log-streams", 
                    "aws-logs-describe-log-groups", 
                    "aws-logs-delete-log-stream", 
                    "aws-logs-describe-metric-filters"
                ]
            }
        }, 
        {
            "TestSkyformation": {
                "implementing_scripts": [
                    "TestFail"
                ], 
                "implementing_commands": [
                    "skyformation-get-accounts"
                ]
            }
        }, 
        {
            "EWS test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "SendEmail", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "FileCreateAndUpload"
                ], 
                "implementing_commands": [
                    "ews-get-items", 
                    "ews-get-attachment", 
                    "ews-get-searchable-mailboxes", 
                    "ews-find-folders", 
                    "ews-search-mailbox", 
                    "ews-get-folder", 
                    "ews-delete-attachments", 
                    "ews-delete-items"
                ]
            }
        }, 
        {
            "ShodanTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "ip"
                ]
            }
        }, 
        {
            "d8628445-ff86-40f9-857d-50b3f1d295a6": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "Exists", 
                    "echo", 
                    "Exists"
                ], 
                "implementing_commands": [
                    "sandblast-upload", 
                    "sandblast-query"
                ]
            }
        }, 
        {
            "minemeld_test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "minemeld-retrieve-miner", 
                    "minemeld-add-to-miner", 
                    "ip", 
                    "minemeld-add-to-miner", 
                    "minemeld-get-indicator-from-miner", 
                    "minemeld-remove-from-miner", 
                    "minemeld-remove-from-miner"
                ]
            }
        }, 
        {
            "CarbonBlackResponseFilterSensors": {}
        }, 
        {
            "Archer-Test-Playbook": {
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "VerifyContextFields", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "archer-create-record", 
                    "archer-get-record", 
                    "archer-search-applications", 
                    "archer-update-record", 
                    "archer-get-application-fields", 
                    "archer-search-records", 
                    "archer-search-records", 
                    "archer-delete-record"
                ]
            }
        }, 
        {
            "LanguageDetect-Test": {
                "implementing_scripts": [
                    "LanguageDetect", 
                    "CloseInvestigation", 
                    "Exists", 
                    "LanguageDetect", 
                    "Sleep", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "ThreatGridTest": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "Exists", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "threat-grid-organization-get-rate-limit", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-samples", 
                    "threat-grid-who-am-i", 
                    "threat-grid-user-get-rate-limit", 
                    "threat-grid-download-sample-by-id", 
                    "threat-grid-upload-sample"
                ]
            }
        }, 
        {
            "Detonate URL - Generic Test": {
                "implementing_playbooks": [
                    "Detonate URL - Generic"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "test-ThreatConnect": {
                "implementing_commands": [
                    "tc-owners"
                ]
            }
        }, 
        {
            "TestMatchRegex": {
                "implementing_scripts": [
                    "MatchRegex", 
                    "MatchRegex", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "MatchRegex", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "closeInvestigation"
                ]
            }
        }, 
        {
            "search_endpoints_by_hash_-_generic_-_test": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Generic"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "fd79e55e-016c-43f8-8cca-97870c975233": {
                "implementing_scripts": [
                    "Sleep", 
                    "Exists", 
                    "Exists", 
                    "Exists", 
                    "echo", 
                    "Exists", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "threat-grid-get-sample-state-by-id", 
                    "threat-grid-get-samples", 
                    "threat-grid-upload-sample", 
                    "threat-grid-get-threat-summary-by-id", 
                    "threat-grid-get-sample-state-by-id"
                ]
            }
        }, 
        {
            "Detonate File - SNDBOX - Test": {
                "implementing_playbooks": [
                    "Detonate File - SNDBOX"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ]
            }
        }, 
        {
            "CreatePhishingClassifierMLTest": {
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DBotPredictPhishingLabel", 
                    "TestCreateIncidents", 
                    "VerifyContext", 
                    "TestCreateTagTextFile", 
                    "DeleteContext", 
                    "DBotPredictPhishingLabel", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "ProofpointDecodeURL-Test": {
                "implementing_scripts": [
                    "ProofpointDecodeURL", 
                    "ProofpointDecodeURL", 
                    "Sleep", 
                    "CloseInvestigation", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "FireEye HX Test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "fireeye-hx-get-alerts", 
                    "fireeye-hx-get-host-information", 
                    "fireeye-hx-get-alert", 
                    "fireeye-hx-get-indicators", 
                    "fireeye-hx-file-acquisition", 
                    "fireeye-hx-get-indicator", 
                    "fireeye-hx-delete-file-acquisition"
                ]
            }
        }, 
        {
            "decodemimeheader_-_test": {
                "implementing_scripts": [
                    "DecodeMimeHeader", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "XFE Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "AreValuesEqual", 
                    "Exists", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "Exists", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "implementing_commands": [
                    "cve-latest", 
                    "cve-search", 
                    "file", 
                    "url", 
                    "ip", 
                    "domain"
                ]
            }
        }, 
        {
            "RaiseError": {}
        }, 
        {
            "GenerateEmail": {}
        }, 
        {
            "Base64 File in List Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "Base64ListToFile"
                ], 
                "implementing_commands": [
                    "setList"
                ]
            }
        }, 
        {
            "Cybereason Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "FetchFromInstance", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "cybereason-is-probe-connected", 
                    "cybereason-query-connections", 
                    "cybereason-query-processes", 
                    "cybereason-malop-processes", 
                    "cybereason-query-malops"
                ]
            }
        }, 
        {
            "ActiveMQ Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "activemq-send", 
                    "activemq-subscribe", 
                    "activemq-subscribe"
                ]
            }
        }, 
        {
            "McAfeeNSMTest": {
                "implementing_commands": [
                    "nsm-get-sensors", 
                    "nsm-get-domains", 
                    "nsm-get-ips-policies", 
                    "nsm-get-domains", 
                    "nsm-get-alerts", 
                    "nsm-get-ips-policy-details", 
                    "nsm-update-alerts", 
                    "nsm-get-alerts", 
                    "nsm-get-sensors", 
                    "nsm-update-alerts"
                ]
            }
        }, 
        {
            "SNDBOX_Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "http"
                ], 
                "implementing_commands": [
                    "sndbox-is-online", 
                    "sndbox-analysis-info", 
                    "sndbox-analysis-submit-sample", 
                    "sndbox-download-report", 
                    "sndbox-download-sample"
                ]
            }
        }, 
        {
            "Fortigate Test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "fortigate-get-addresses", 
                    "fortigate-update-service-group", 
                    "fortigate-get-service-groups", 
                    "fortigate-get-firewall-service", 
                    "fortigate-update-service-group", 
                    "fortigate-get-policy", 
                    "fortigate-create-firewall-service", 
                    "fortigate-create-policy", 
                    "fortigate-update-policy", 
                    "fortigate-delete-policy", 
                    "fortigate-move-policy", 
                    "fortigate-update-address-group", 
                    "fortigate-get-address-groups", 
                    "fortigate-create-address-group", 
                    "fortigate-update-address-group", 
                    "fortigate-delete-address-group"
                ]
            }
        }, 
        {
            "PhishingIncident": {}
        }, 
        {
            "sep_-_test_endpoint_search": {
                "implementing_commands": [
                    "sep-endpoints-info"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "awake_security_test_pb": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "awake-query-domains", 
                    "awake-query-activities", 
                    "awake-query-devices", 
                    "awake-pcap-download", 
                    "ip", 
                    "email", 
                    "domain", 
                    "device"
                ]
            }
        }, 
        {
            "af2f5a99-d70b-48c1-8c25-519732b733f2": {
                "implementing_scripts": [
                    "CloseInvestigation", 
                    "Exists", 
                    "Print"
                ], 
                "implementing_commands": [
                    "nmap-scan"
                ]
            }
        }, 
        {
            "VerifyTableToMarkDown": {}
        }, 
        {
            "3010a07c-0a85-480c-87db-cf3f09fcbd7c": {
                "implementing_scripts": [
                    "IsTrue", 
                    "ContextGetIps", 
                    "ContextGetEmails", 
                    "IsTrue", 
                    "IsTrue", 
                    "ContextGetHashes", 
                    "ContextGetHashes", 
                    "IsTrue", 
                    "ContextGetHashes", 
                    "IsTrue", 
                    "ExtractEmail", 
                    "ExtractIP", 
                    "ExtractHash", 
                    "ContextGetIps", 
                    "ContextGetEmails", 
                    "IsTrue", 
                    "ContextGetHashes", 
                    "IsTrue", 
                    "IsTrue"
                ]
            }
        }, 
        {
            "2e7770c4-8b78-4ee5-84c7-22a9e481b166": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "AreValuesEqual", 
                    "CloseInvestigation", 
                    "IsMaliciousIndicatorFound"
                ], 
                "implementing_commands": [
                    "autofocus-search-samples", 
                    "autofocus-search-sessions", 
                    "file"
                ]
            }
        }, 
        {
            "Remedy-On-Demand-Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "Set", 
                    "DeleteContext", 
                    "Set", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "remedy-incident-create", 
                    "remedy-fetch-incidents", 
                    "remedy-get-incident", 
                    "remedy-incident-update"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_generic_-_test": {
                "implementing_playbooks": [
                    "Get File Sample From Path - Generic"
                ], 
                "implementing_commands": [
                    "cb-list-sensors"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Test ParseCSV": {
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "ParseCSV", 
                    "ParseCSV", 
                    "AreValuesEqual", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Preempt Test": {
                "implementing_commands": [
                    "preempt-add-to-watch-list", 
                    "preempt-get-activities", 
                    "preempt-remove-from-watch-list", 
                    "preempt-get-user-endpoints"
                ]
            }
        }, 
        {
            "TestFormatTableValues": {}
        }, 
        {
            "playbook-Cymon_Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "ValidateErrorExistence", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "StringContains", 
                    "StringContains", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "StringContains", 
                    "StringContains", 
                    "VerifyContext", 
                    "StringContains", 
                    "DeleteContext", 
                    "StringContains", 
                    "StringContains", 
                    "StringContains", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "domain", 
                    "domain", 
                    "ip", 
                    "ip", 
                    "ip", 
                    "ip", 
                    "domain"
                ]
            }
        }, 
        {
            "150778e9-90ca-4c28-873e-f050f2c6d3a3": {
                "implementing_scripts": [
                    "HTTPListRedirects", 
                    "CloseInvestigation", 
                    "AreValuesEqual"
                ]
            }
        }, 
        {
            "TCPUtils-Test": {
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "ip"
                ]
            }
        }, 
        {
            "113aca8a-ee52-419f-89a6-150ee232d0d1": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "aws-s3-set-bucket-policy", 
                    "aws-s3-describe-buckets", 
                    "aws-s3-list-bucket-objects", 
                    "aws-s3-get-bucket-policy", 
                    "aws-s3-create-bucket", 
                    "aws-s3-download-file", 
                    "aws-s3-delete-bucket-policy", 
                    "aws-s3-delete-bucket"
                ]
            }
        }, 
        {
            "buildewsquery_test": {
                "implementing_scripts": [
                    "BuildEWSQuery", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "TestCreateIncidents": {}
        }, 
        {
            "okta_test_playbook": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "okta-add-to-group", 
                    "okta-remove-from-group", 
                    "okta-add-to-group", 
                    "okta-get-application-assignments", 
                    "okta-get-application-authentication", 
                    "okta-get-user-factors", 
                    "okta-get-failed-logins", 
                    "okta-update-user", 
                    "okta-suspend-user", 
                    "okta-unsuspend-user", 
                    "okta-get-group-members", 
                    "okta-list-groups", 
                    "okta-remove-from-group", 
                    "okta-get-group-assignments", 
                    "okta-get-groups"
                ]
            }
        }, 
        {
            "TestPYCommonServer": {}
        }, 
        {
            "test_delete_context": {
                "implementing_scripts": [
                    "Set", 
                    "RaiseError", 
                    "DeleteContext", 
                    "Set", 
                    "Set", 
                    "RaiseError", 
                    "RaiseError", 
                    "RaiseError", 
                    "DeleteContext", 
                    "RaiseError", 
                    "RaiseError", 
                    "DeleteContext", 
                    "isError", 
                    "Set", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "Set", 
                    "Set", 
                    "DeleteContext", 
                    "Set", 
                    "RaiseError", 
                    "DeleteContext", 
                    "Set"
                ]
            }
        }, 
        {
            "CreateDuplicateIncident": {}
        }, 
        {
            "JiraCreateIssue-example-test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "JiraCreateIssue-example"
                ], 
                "implementing_commands": [
                    "jira-delete-issue"
                ]
            }
        }, 
        {
            "email_test": {
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "Set", 
                    "VerifyContext", 
                    "Set"
                ]
            }
        }, 
        {
            "Cisco Umbrella Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "umbrella-get-domains-for-nameserver", 
                    "umbrella-get-domain-classifiers", 
                    "umbrella-get-domain-queryvolume", 
                    "umbrella-get-domain-details", 
                    "umbrella-get-domains-for-email-registrar", 
                    "domain", 
                    "umbrella-get-url-timeline", 
                    "umbrella-get-domain-timeline", 
                    "umbrella-get-ip-timeline", 
                    "umbrella-domain-co-occurrences", 
                    "umbrella-domain-categorization", 
                    "umbrella-domain-security", 
                    "umbrella-domain-related", 
                    "umbrella-ip-dns-history", 
                    "umbrella-domain-dns-history", 
                    "umbrella-get-domains-using-regex", 
                    "umbrella-get-malicious-domains-for-ip", 
                    "umbrella-ip-malicious-domains", 
                    "umbrella-domain-search", 
                    "umbrella-get-related-domains", 
                    "umbrella-get-whois-for-domain"
                ]
            }
        }, 
        {
            "fd93f620-9a2d-4fb6-85d1-151a6a72e46d": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-sqs-create-queue", 
                    "aws-sqs-list-queues", 
                    "aws-sqs-get-queue-url", 
                    "aws-sqs-purge-queue", 
                    "aws-sqs-send-message", 
                    "aws-sqs-delete-queue"
                ]
            }
        }, 
        {
            "RedCanaryTest": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "redcanary-get-endpoint-detections", 
                    "redcanary-get-detection", 
                    "redcanary-get-endpoint", 
                    "redcanary-list-detections", 
                    "redcanary-list-endpoints", 
                    "redcanary-execute-playbook", 
                    "redcanary-acknowledge-detection", 
                    "redcanary-execute-playbook", 
                    "redcanary-update-remediation-state"
                ]
            }
        }, 
        {
            "blockip_test_playbook": {
                "implementing_scripts": [
                    "BlockIP"
                ]
            }
        }, 
        {
            "block_endpoint_-_carbon_black_response_-_test": {
                "implementing_playbooks": [
                    "Block Endpoint - Carbon Black Response"
                ], 
                "implementing_commands": [
                    "cb-list-sensors", 
                    "cb-sensor-info", 
                    "cb-unquarantine-device"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "exporttocsv_script_test": {
                "implementing_scripts": [
                    "ExportToCSV", 
                    "ReadFile", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "ExportToCSV", 
                    "ExportToCSV"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "get_file_sample_from_path_-_d2_-_test": {
                "implementing_playbooks": [
                    "Get File Sample From Path - D2"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "GetTime-Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "GetTime", 
                    "MatchRegex", 
                    "DeleteContext", 
                    "GetTime", 
                    "MatchRegex", 
                    "GetTime", 
                    "MatchRegex", 
                    "DeleteContext", 
                    "GetTime", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "GetTime", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "GetTime", 
                    "MatchRegex", 
                    "GetTime", 
                    "MatchRegex", 
                    "GetTime", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "GetTime", 
                    "MatchRegex", 
                    "GetTime", 
                    "DeleteContext", 
                    "MatchRegex", 
                    "GetTime", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "CreateEmailHtmlBody_test_pb": {
                "implementing_scripts": [
                    "CreateEmailHtmlBody", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "createList"
                ]
            }
        }, 
        {
            "forcepoint test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "fp-get-category-detailes", 
                    "fp-add-category", 
                    "fp-delete-address-from-category", 
                    "fp-add-address-to-category", 
                    "fp-get-category-detailes", 
                    "fp-delete-categories"
                ]
            }
        }, 
        {
            "CrowdStrike Endpoint Enrichment - Test": {
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ], 
                "implementing_commands": [
                    "cs-detection-search", 
                    "cs-device-search"
                ], 
                "implementing_scripts": [
                    "PrintErrorEntry", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "endpoint_enrichment_-_generic_test": {
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "Set", 
                    "DeleteContext", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "TestHttpPlaybook": {
                "implementing_scripts": [
                    "VerifyContextFields", 
                    "http", 
                    "DeleteContext", 
                    "VerifyContextFields", 
                    "http", 
                    "VerifyContextFields", 
                    "http", 
                    "VerifyContextFields", 
                    "http", 
                    "VerifyContextFields", 
                    "http"
                ]
            }
        }, 
        {
            "Test-IsMaliciousIndicatorFound": {
                "implementing_scripts": [
                    "IsMaliciousIndicatorFound", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "Sleep", 
                    "Sleep", 
                    "VerifyContext", 
                    "IsMaliciousIndicatorFound", 
                    "VerifyContext", 
                    "IsMaliciousIndicatorFound", 
                    "IsMaliciousIndicatorFound"
                ], 
                "implementing_commands": [
                    "createNewIndicator", 
                    "createNewIndicator", 
                    "createNewIndicator"
                ]
            }
        }, 
        {
            "Mimecast test": {
                "implementing_scripts": [
                    "FetchFromInstance", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "mimecast-get-message", 
                    "mimecast-download-attachments", 
                    "mimecast-list-blocked-sender-policies", 
                    "mimecast-delete-policy", 
                    "mimecast-create-policy", 
                    "mimecast-query", 
                    "mimecast-get-policy", 
                    "mimecast-manage-sender", 
                    "mimecast-url-decode", 
                    "mimecast-list-managed-url", 
                    "mimecast-create-managed-url", 
                    "mimecast-get-attachment-logs", 
                    "mimecast-get-impersonation-logs", 
                    "mimecast-get-url-logs", 
                    "mimecast-list-messages", 
                    "mimecast-login", 
                    "mimecast-discover", 
                    "mimecast-get-message", 
                    "mimecast-refresh-token"
                ]
            }
        }, 
        {
            "TestParseCSV": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "ExportToCSV", 
                    "Set", 
                    "VerifyContext", 
                    "ParseCSV"
                ]
            }
        }, 
        {
            "ArcSight Logger test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "as-status", 
                    "as-search-events", 
                    "as-search", 
                    "as-events", 
                    "as-drilldown", 
                    "as-close"
                ]
            }
        }, 
        {
            "Cylance Protect v2 Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "cylance-protect-download-threat", 
                    "cylance-protect-delete-hash-from-lists", 
                    "cylance-protect-add-hash-to-list", 
                    "cylance-protect-get-policy-details", 
                    "cylance-protect-get-devices", 
                    "cylance-protect-get-list", 
                    "cylance-protect-get-device-threats", 
                    "cylance-protect-get-zones", 
                    "cylance-protect-get-policies", 
                    "cylance-protect-get-threat"
                ]
            }
        }, 
        {
            "McAfeeESMTest": {
                "implementing_scripts": [
                    "GetTime", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "esm-edit-case", 
                    "esm-get-alarm-event-details", 
                    "esm-add-case", 
                    "esm-get-user-list", 
                    "esm-get-organization-list", 
                    "esm-edit-case", 
                    "esm-delete-case-status", 
                    "esm-delete-case-status", 
                    "esm-get-case-statuses", 
                    "esm-edit-case-status", 
                    "esm-add-case-status", 
                    "esm-fetch-alarms", 
                    "esm-edit-case-status", 
                    "esm-search", 
                    "esm-add-case-status", 
                    "esm-list-alarm-events", 
                    "esm-add-case", 
                    "esm-edit-case", 
                    "esm-get-case-detail"
                ]
            }
        }, 
        {
            "Detonate File - Generic Test": {
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ], 
                "implementing_scripts": [
                    "http", 
                    "DeleteContext"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "c0eb84c3-8771-4f9f-833e-1017112d6215": {}
        }, 
        {
            "Jask_Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "jask-search-signals", 
                    "jask-search-entities", 
                    "closeInvestigation", 
                    "jask-get-insight-comments", 
                    "jask-search-insights", 
                    "jask-get-entity-details", 
                    "jask-get-insight-details", 
                    "jask-get-signal-details", 
                    "jask-get-related-entities"
                ]
            }
        }, 
        {
            "RSA NetWitness Test": {
                "implementing_commands": [
                    "netwitness-get-incidents", 
                    "netwitness-get-incident"
                ]
            }
        }, 
        {
            "Test_Sagemaker": {
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "predict-phishing"
                ]
            }
        }, 
        {
            "ExtractURL Test": {
                "implementing_scripts": [
                    "ExtractURL", 
                    "IsTrue", 
                    "IsTrue", 
                    "IsTrue", 
                    "Print", 
                    "IsTrue"
                ]
            }
        }, 
        {
            "tenable-sc-test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "GetTime", 
                    "VerifyContext", 
                    "GetTime", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "FetchFromInstance", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "tenable-sc-create-asset", 
                    "tenable-sc-list-users", 
                    "tenable-sc-delete-asset", 
                    "tenable-sc-list-alerts", 
                    "tenable-sc-get-alert", 
                    "tenable-sc-get-asset", 
                    "tenable-sc-list-repositories", 
                    "tenable-sc-list-policies", 
                    "tenable-sc-list-credentials", 
                    "tenable-sc-list-zones", 
                    "tenable-sc-create-scan", 
                    "tenable-sc-delete-scan", 
                    "tenable-sc-list-report-definitions", 
                    "tenable-sc-list-scans", 
                    "tenable-sc-get-scan-status", 
                    "tenable-sc-launch-scan", 
                    "tenable-sc-get-vulnerability", 
                    "tenable-sc-get-scan-report", 
                    "tenable-sc-get-system-licensing", 
                    "tenable-sc-get-device", 
                    "tenable-sc-list-assets"
                ]
            }
        }, 
        {
            "ReversingLabsA1000Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "file", 
                    "reversinglabs-download", 
                    "reversinglabs-analyze", 
                    "reversinglabs-extracted-files", 
                    "reversinglabs-download-unpacked"
                ]
            }
        }, 
        {
            "TestWordFileToIOC": {
                "implementing_scripts": [
                    "TestCreateWordFile", 
                    "ExtractIP", 
                    "ParseWordDoc", 
                    "VerifyContext", 
                    "ReadFile"
                ]
            }
        }, 
        {
            "TestExtractHTMLTables": {
                "implementing_scripts": [
                    "Exists", 
                    "ExtractHTMLTables", 
                    "ExtractHTMLTables", 
                    "DeleteContext", 
                    "Exists", 
                    "DeleteContext", 
                    "Exists", 
                    "ExtractHTMLTables", 
                    "Print", 
                    "CloseInvestigation", 
                    "ExtractHTMLTables", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "Exists"
                ]
            }
        }, 
        {
            "7ab45104-22aa-4e1b-8062-cadcbb28d87f": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "CloseInvestigation", 
                    "DeleteContext", 
                    "AreValuesEqual", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "AreValuesEqual"
                ], 
                "implementing_commands": [
                    "ip", 
                    "url", 
                    "urlscan-submit"
                ]
            }
        }, 
        {
            "RasterizeImageTest": {
                "implementing_scripts": [
                    "GenerateImageFileEntry", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "rasterize-image", 
                    "closeInvestigation"
                ]
            }
        }, 
        {
            "InfoArmorVigilanteATITest": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "vigilante-watchlist-add-accounts", 
                    "vigilante-query-infected-host-data", 
                    "vigilante-get-leak", 
                    "vigilante-get-watchlist", 
                    "vigilante-watchlist-remove-accounts", 
                    "vigilante-search-leaks", 
                    "vigilante-query-ecrime-db", 
                    "vigilante-query-domains", 
                    "vigilante-query-accounts"
                ]
            }
        }, 
        {
            "strings-test": {
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "PublishEntriesToContext", 
                    "Strings", 
                    "VerifyContext", 
                    "Strings", 
                    "CreateBinaryFile", 
                    "VerifyContext", 
                    "PublishEntriesToContext"
                ]
            }
        }, 
        {
            "process_email_-_generic_-_test": {
                "implementing_playbooks": [
                    "Process Email - Generic"
                ], 
                "implementing_scripts": [
                    "http", 
                    "DeleteContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "97393cfc-2fc4-4dfe-8b6e-af64067fc436": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "aws-s3-create-bucket", 
                    "aws-s3-get-bucket-policy", 
                    "aws-s3-list-buckets", 
                    "aws-s3-delete-bucket-policy", 
                    "aws-s3-put-bucket-policy", 
                    "aws-s3-download-file", 
                    "aws-s3-delete-bucket", 
                    "aws-s3-list-bucket-objects"
                ]
            }
        }, 
        {
            "TestFileCreateAndUpload": {
                "implementing_scripts": [
                    "Print", 
                    "DeleteContext", 
                    "FileCreateAndUpload", 
                    "FileCreateAndUpload", 
                    "Print", 
                    "CloseInvestigation", 
                    "Print"
                ]
            }
        }, 
        {
            "get_original_email_-_ews-_test": {
                "implementing_playbooks": [
                    "Get Original Email - EWS"
                ], 
                "implementing_scripts": [
                    "VerifyContext"
                ]
            }
        }, 
        {
            "Remedy AR Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "remedy-get-server-details", 
                    "remedy-get-server-details", 
                    "remedy-get-server-details"
                ]
            }
        }, 
        {
            "WordTokenizeTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "WordTokenizer", 
                    "WordTokenizer", 
                    "DeleteContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "ExtractDomainTest": {
                "implementing_scripts": [
                    "ExtractDomain", 
                    "ExtractDomain", 
                    "VerifyContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "TestCommonPython": {
                "implementing_scripts": [
                    "TestPYCommonServer", 
                    "TestPYCommonServer", 
                    "TestPYCommonServer", 
                    "TestPYCommonServer", 
                    "TestPYCommonServer"
                ]
            }
        }, 
        {
            "get_file_sample_by_hash_-_cylance_protect_-_test": {
                "implementing_playbooks": [
                    "Get File Sample By Hash - Cylance Protect"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "Set", 
                    "Set"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "TestPacketsled": {
                "implementing_commands": [
                    "packetsled-get-incidents", 
                    "packetsled-get-files", 
                    "packetsled-get-flows", 
                    "packetsled-get-pcaps"
                ]
            }
        }, 
        {
            "IntSights Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "Print", 
                    "Exists", 
                    "VerifyContext", 
                    "IsValueInArray", 
                    "DeleteContext", 
                    "IsValueInArray"
                ], 
                "implementing_commands": [
                    "closeInvestigation", 
                    "intsights-get-iocs", 
                    "intsights-get-alerts", 
                    "intsights-get-alert-activities", 
                    "intsights-add-comment-to-alert", 
                    "intsights-update-alert-severity", 
                    "intsights-add-tag-to-alert"
                ]
            }
        }, 
        {
            "SalesforceTestPlaybook": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "ContextContains"
                ], 
                "implementing_commands": [
                    "salesforce-push-comment", 
                    "salesforce-push-comment", 
                    "salesforce-delete-case", 
                    "salesforce-close-case", 
                    "salesforce-search", 
                    "salesforce-create-case", 
                    "salesforce-query", 
                    "salesforce-get-case", 
                    "salesforce-get-object", 
                    "salesforce-update-case", 
                    "salesforce-update-object"
                ]
            }
        }, 
        {
            "Wildfire Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "wildfire-upload", 
                    "wildfire-report", 
                    "wildfire-report", 
                    "wildfire-report", 
                    "wildfire-upload-file-remote"
                ]
            }
        }, 
        {
            "Vectra-test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "vectra-detections", 
                    "vectra-settings", 
                    "vectra-hosts", 
                    "vectra-triage", 
                    "vectra-sensors"
                ]
            }
        }, 
        {
            "CuckooTest": {
                "implementing_playbooks": [
                    "Detonate File - Cuckoo", 
                    "Detonate URL - Cuckoo"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "http", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "TextFromHTML_test_playbook": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "TextFromHTML", 
                    "TextFromHTML", 
                    "TextFromHTML", 
                    "VerifyContext", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "PhishAi-Test": {
                "implementing_scripts": [
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "phish-ai-scan-url"
                ]
            }
        }, 
        {
            "Phishing test - attachment": {
                "implementing_playbooks": [
                    "Phishing Investigation - Generic"
                ], 
                "implementing_scripts": [
                    "PhishingIncident", 
                    "DeleteContext", 
                    "ScheduleCommand", 
                    "http"
                ]
            }
        }, 
        {
            "SsdeepReputationTest": {}
        }, 
        {
            "search_endpoints_by_hash_-_carbon_black_protection_-_test": {
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Protection"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Test-Detonate URL - Phish.AI": {
                "implementing_playbooks": [
                    "Detonate URL - Phish.AI"
                ]
            }
        }, 
        {
            "ReversingLabsTCTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "file"
                ]
            }
        }, 
        {
            "get_file_sample_from_path_-_carbon_black_enterprise_response_-_test": {
                "implementing_playbooks": [
                    "Get File Sample From Path - Carbon Black Enterprise Response"
                ], 
                "implementing_commands": [
                    "cb-list-sensors"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "PostgreSQL Test": {
                "implementing_commands": [
                    "pgsql-query"
                ], 
                "implementing_scripts": [
                    "VerifyHumanReadableEquals"
                ], 
                "fromversion": "3.6.0"
            }
        }, 
        {
            "secureworks_test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "secure-works-get-ticket", 
                    "secure-works-create-ticket", 
                    "secure-works-update-ticket", 
                    "secure-works-get-ticket", 
                    "secure-works-get-tickets-updates", 
                    "secure-works-get-ticket-count", 
                    "secure-works-get-tickets-ids", 
                    "secure-works-close-ticket"
                ]
            }
        }, 
        {
            "File Enrichment - Generic Test": {
                "implementing_playbooks": [
                    "File Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "Set", 
                    "Set", 
                    "VerifyContext"
                ]
            }
        }, 
        {
            "JSONtoCSV-Test": {
                "implementing_scripts": [
                    "LoadJSON", 
                    "JSONtoCSV", 
                    "ParseCSV", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "JSONFileToCSV", 
                    "ParseCSV", 
                    "FileCreateAndUpload"
                ]
            }
        }, 
        {
            "ZipFile-Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "UnzipFile", 
                    "http", 
                    "CloseInvestigation", 
                    "Sleep", 
                    "http", 
                    "UnzipFile", 
                    "DeleteContext", 
                    "ZipFile"
                ]
            }
        }, 
        {
            "d5cb69b1-c81c-4f27-8a40-3106c0cb2620": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "aws-iam-delete-instance-profile", 
                    "aws-iam-list-instance-profiles", 
                    "aws-iam-add-role-to-instance-profile", 
                    "aws-iam-remove-role-from-instance-profile", 
                    "aws-iam-remove-user-from-group", 
                    "aws-iam-create-login-profile", 
                    "aws-iam-delete-access-key", 
                    "aws-iam-create-instance-profile", 
                    "aws-iam-list-instance-profiles-for-role", 
                    "aws-iam-get-instance-profile", 
                    "aws-iam-get-user", 
                    "aws-iam-update-user", 
                    "aws-iam-update-login-profile", 
                    "aws-iam-list-groups", 
                    "aws-iam-list-roles", 
                    "aws-iam-list-policies", 
                    "aws-iam-create-access-key", 
                    "aws-iam-add-user-to-group", 
                    "aws-iam-list-access-keys-for-user", 
                    "aws-iam-update-access-key", 
                    "aws-iam-detach-policy", 
                    "aws-iam-attach-policy", 
                    "aws-iam-delete-group", 
                    "aws-iam-delete-login-profile", 
                    "aws-iam-create-user", 
                    "aws-iam-list-users", 
                    "aws-iam-delete-user", 
                    "aws-iam-create-group", 
                    "aws-iam-list-groups-for-user", 
                    "aws-iam-create-role", 
                    "aws-iam-delete-role", 
                    "aws-iam-get-role"
                ]
            }
        }, 
        {
            "ExposeIncidentOwner-Test": {
                "implementing_scripts": [
                    "AssignAnalystToIncident", 
                    "AreValuesEqual", 
                    "ExposeIncidentOwner", 
                    "CloseInvestigation"
                ]
            }
        }, 
        {
            "McAfeeWebGatewayTest": {
                "implementing_scripts": [
                    "ContextContains", 
                    "DeleteContext", 
                    "Sleep", 
                    "DeleteContext", 
                    "PrintContext", 
                    "ContextContains"
                ], 
                "implementing_commands": [
                    "mwg-get-list-entry", 
                    "mwg-insert-entry", 
                    "mwg-delete-entry", 
                    "mwg-get-list", 
                    "mwg-get-list", 
                    "mwg-get-available-lists", 
                    "mwg-get-list"
                ]
            }
        }, 
        {
            "CreateBinaryFile": {}
        }, 
        {
            "DemistoLockTest": {
                "implementing_scripts": [
                    "Sleep", 
                    "Sleep", 
                    "DeleteContext", 
                    "Set", 
                    "Set", 
                    "Sleep", 
                    "Print", 
                    "DeleteContext", 
                    "Sleep", 
                    "isError", 
                    "Set", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "demisto-lock-release", 
                    "demisto-lock-release", 
                    "demisto-lock-get", 
                    "demisto-lock-get", 
                    "demisto-lock-info", 
                    "demisto-lock-get", 
                    "demisto-lock-get", 
                    "demisto-lock-release", 
                    "demisto-lock-info", 
                    "demisto-lock-release", 
                    "demisto-lock-release-all", 
                    "closeInvestigation", 
                    "demisto-lock-get", 
                    "demisto-lock-get", 
                    "demisto-lock-release-all"
                ]
            }
        }, 
        {
            "Detonate File - BitDam Test": {
                "implementing_playbooks": [
                    "Detonate File - BitDam"
                ], 
                "implementing_scripts": [
                    "FileCreateAndUpload", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Luminate-TestPlaybook": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "lum-block-user", 
                    "lum-unblock-user", 
                    "lum-destroy-user-session", 
                    "lum-get-http-access-logs", 
                    "lum-get-ssh-access-logs"
                ]
            }
        }, 
        {
            "McAfee-MAR_Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "mar-collectors-list", 
                    "mar-search", 
                    "mar-search", 
                    "mar-search-multiple"
                ]
            }
        }, 
        {
            "CarbonBlackLiveResponseTest": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "TestCreateWordFile", 
                    "Sleep"
                ], 
                "implementing_commands": [
                    "cb-session-close", 
                    "cb-keepalive", 
                    "cb-command-create-and-wait", 
                    "cb-get-file-from-endpoint", 
                    "cb-list-sessions", 
                    "cb-push-file-to-endpoint", 
                    "cb-file-delete-from-endpoint", 
                    "cb-list-sessions", 
                    "cb-session-create-and-wait", 
                    "cb-command-create-and-wait"
                ]
            }
        }, 
        {
            "Recorded Future Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "recorded-future-get-related-entities", 
                    "domain", 
                    "ip", 
                    "file", 
                    "domain"
                ]
            }
        }, 
        {
            "NetWitness Endpoint Test": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "netwitness-get-machine-module", 
                    "netwitness-get-machines", 
                    "netwitness-blacklist-ips", 
                    "netwitness-blacklist-domains"
                ]
            }
        }, 
        {
            "DNSDBTest": {
                "implementing_scripts": [
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "dnsdb-rrset", 
                    "dnsdb-rdata"
                ]
            }
        }, 
        {
            "VerifyHumanReadableFormat": {
                "implementing_scripts": [
                    "VerifyTableToMarkDown", 
                    "VerifyTreeToFlatObject"
                ]
            }
        }, 
        {
            "domain_enrichment_generic_test": {
                "implementing_playbooks": [
                    "Domain Enrichment - Generic"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "Set", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Anomali_ThreatStream_Test": {
                "implementing_commands": [
                    "threatstream-intelligence", 
                    "domain", 
                    "ip", 
                    "threatstream-email-reputation", 
                    "file"
                ], 
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "ParseExcel-test": {
                "implementing_scripts": [
                    "http", 
                    "ParseExcel", 
                    "DeleteContext"
                ]
            }
        }, 
        {
            "Zoom_Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "Print", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "GenerateEmail", 
                    "GenerateEmail", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "zoom-fetch-recording", 
                    "zoom-list-users", 
                    "zoom-create-meeting", 
                    "zoom-create-user", 
                    "zoom-delete-user", 
                    "zoom-delete-user", 
                    "zoom-create-user"
                ]
            }
        }, 
        {
            "DomainTools-Test": {
                "implementing_scripts": [
                    "NotInContextVerification", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "domain", 
                    "reverseIP", 
                    "domainSearch", 
                    "reverseWhois", 
                    "reverseNameServer", 
                    "whoisHistory", 
                    "whois", 
                    "domainProfile"
                ]
            }
        }, 
        {
            "RedLockTest": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "redlock-get-alert-details", 
                    "redlock-reopen-alerts", 
                    "redlock-dismiss-alerts", 
                    "redlock-get-alert-details", 
                    "redlock-search-alerts"
                ]
            }
        }, 
        {
            "TruSTAR Test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "trustar-trending-indicators", 
                    "trustar-search-indicators", 
                    "trustar-correlated-reports"
                ]
            }
        }, 
        {
            "JoeSecurityTestDetonation": {
                "implementing_playbooks": [
                    "Detonate File - JoeSecurity", 
                    "Detonate URL - JoeSecurity", 
                    "Detonate File From URL - JoeSecurity"
                ], 
                "implementing_scripts": [
                    "DeleteContext", 
                    "FileCreateAndUpload"
                ], 
                "fromversion": "4.0.0"
            }
        }, 
        {
            "Symantec Messaging Gateway Test": {
                "implementing_scripts": [
                    "AreValuesEqual", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "GenerateIP", 
                    "GenerateUUID", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "smg-unblock-ip", 
                    "smg-block-email", 
                    "smg-block-domain", 
                    "smg-unblock-email", 
                    "smg-block-ip", 
                    "smg-unblock-domain"
                ]
            }
        }, 
        {
            "devo_test_playbook": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "devo-query", 
                    "devo-query"
                ]
            }
        }, 
        {
            "Lastline - testplaybook": {
                "implementing_playbooks": [
                    "Detonate File - Lastline", 
                    "Detonate URL - Lastline"
                ], 
                "implementing_scripts": [
                    "Set", 
                    "DeleteContext", 
                    "http", 
                    "Set"
                ]
            }
        }, 
        {
            "GetFirstObject": {}
        }, 
        {
            "detonate_file_-_generic_test": {
                "toversion": "3.6.0", 
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ], 
                "implementing_scripts": [
                    "http", 
                    "DeleteContext"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Test CommonServer": {
                "implementing_scripts": [
                    "TestFormatTableValues"
                ]
            }
        }, 
        {
            "Test filters & transformers scripts": {
                "implementing_scripts": [
                    "Set", 
                    "RaiseError", 
                    "RaiseError", 
                    "Set", 
                    "Set", 
                    "RaiseError", 
                    "RaiseError", 
                    "RaiseError", 
                    "RaiseError", 
                    "RaiseError", 
                    "Set", 
                    "Set", 
                    "RaiseError", 
                    "Print", 
                    "RaiseError", 
                    "RaiseError", 
                    "RaiseError"
                ]
            }
        }, 
        {
            "virusTotalPrivateAPI-test-playbook": {
                "implementing_scripts": [
                    "StringContains", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "vt-private-get-url-report", 
                    "vt-private-get-domain-report", 
                    "vt-private-get-file-report"
                ]
            }
        }, 
        {
            "SCADAfence_test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "scadafence-setAlertStatus", 
                    "scadafence-getAlerts", 
                    "scadafence-getAsset", 
                    "scadafence-setAlertStatus"
                ]
            }
        }, 
        {
            "c19e328d-0cf3-4a94-88b3-df670d984602": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "SEPScan", 
                    "VerifyContext", 
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "sep-groups-info", 
                    "sep-quarantine", 
                    "sep-update-content", 
                    "sep-endpoints-info", 
                    "sep-command-status", 
                    "sep-system-info", 
                    "sep-client-content"
                ]
            }
        }, 
        {
            "PagerDuty Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "PagerDuty-get-users-on-call-now", 
                    "PagerDuty-get-all-schedules", 
                    "PagerDuty-incidents"
                ]
            }
        }, 
        {
            "pan-appframework-test": {
                "implementing_scripts": [
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "pan-appframework-query-logs"
                ]
            }
        }, 
        {
            "TestSafeBreach": {
                "implementing_commands": [
                    "safebreach-rerun", 
                    "safebreach-get-simulation"
                ]
            }
        }, 
        {
            "ExifReadTest": {
                "implementing_scripts": [
                    "GenerateImageFileEntry", 
                    "ExifRead", 
                    "DeleteContext"
                ], 
                "implementing_commands": [
                    "closeInvestigation"
                ]
            }
        }, 
        {
            "McAfee-TIE Test": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "VerifyContext", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "file", 
                    "tie-set-file-reputation", 
                    "tie-file-references"
                ]
            }
        }, 
        {
            "SymantecMSSTest": {
                "implementing_scripts": [
                    "VerifyContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "DeleteContext", 
                    "VerifyContext"
                ], 
                "implementing_commands": [
                    "symantec-mss-incidents-list", 
                    "symantec-mss-get-incident", 
                    "symantec-mss-update-incident"
                ]
            }
        }
    ], 
    "scripts": [
        {
            "AwsStopInstance": {
                "depends_on": [
                    "stop-instance"
                ]
            }
        }, 
        {
            "PWFindEvents": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "QRadarClassifier": {
                "depends_on": [
                    "qradar-searches"
                ]
            }
        }, 
        {
            "VolLDRModules": {}
        }, 
        {
            "CPShowHosts": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "PWSensors": {
                "depends_on": [
                    "sensors"
                ]
            }
        }, 
        {
            "ADListComputers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "CheckWhitelist": {}
        }, 
        {
            "VectraHosts": {
                "depends_on": [
                    "vec-hosts"
                ]
            }
        }, 
        {
            "SetContext": {}
        }, 
        {
            "D2Autoruns": {}
        }, 
        {
            "MathUtil": {}
        }, 
        {
            "CBFindHash": {
                "depends_on": [
                    "cb-binary"
                ]
            }
        }, 
        {
            "SendEmailToManager": {
                "depends_on": [
                    "ad-search", 
                    "send-mail"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "FileCreateAndUpload": {}
        }, 
        {
            "DecodeMimeHeader": {}
        }, 
        {
            "WildfireUpload": {
                "depends_on": [
                    "wildfire-upload"
                ]
            }
        }, 
        {
            "CYFileRep": {
                "depends_on": [
                    "file", 
                    "cy-upload"
                ]
            }
        }, 
        {
            "PanoramaPcaps": {
                "depends_on": [
                    "panorama"
                ]
            }
        }, 
        {
            "ExtractDomain": {
                "toversion": "3.0.0"
            }
        }, 
        {
            "ExposeUsers": {}
        }, 
        {
            "Print": {}
        }, 
        {
            "CSIndicators": {
                "depends_on": [
                    "cs-indicators"
                ]
            }
        }, 
        {
            "PWEventPcapInfo": {
                "depends_on": [
                    "event-pcap-info"
                ]
            }
        }, 
        {
            "JiraIssueQuery": {
                "depends_on": [
                    "jira-issue-query"
                ]
            }
        }, 
        {
            "ADGetAllUsersEmail": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "CuckooDetonateFile": {
                "depends_on": [
                    "cuckoo-create-task-from-file"
                ]
            }
        }, 
        {
            "EPORepoList": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "GrrSetFlows": {
                "depends_on": [
                    "grr_set_flows"
                ]
            }
        }, 
        {
            "VectraGetDetetctionsById": {
                "depends_on": [
                    "vec-get-detetctions-by-id"
                ]
            }
        }, 
        {
            "CommonD2": {}
        }, 
        {
            "FilterByList": {}
        }, 
        {
            "ExtractHash": {}
        }, 
        {
            "120c861a-e0ae-417e-8dcf-c3ee1dc15a42": {}
        }, 
        {
            "ConvertXmlFileToJson": {}
        }, 
        {
            "IPExtract": {}
        }, 
        {
            "DBotAverageScore": {}
        }, 
        {
            "NessusCreateScan": {
                "depends_on": [
                    "scan-create"
                ]
            }
        }, 
        {
            "StixParser": {}
        }, 
        {
            "NessusShowEditorTemplates": {
                "depends_on": [
                    "nessus-get-scans-editors"
                ]
            }
        }, 
        {
            "QrFullSearch": {
                "depends_on": [
                    "QrGetSearchResults", 
                    "qr-get-search", 
                    "qr-searches"
                ]
            }
        }, 
        {
            "FetchFromInstance": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "a6e348f4-1e40-4365-870c-52139c60779a": {
                "depends_on": [
                    "okta-get-user"
                ]
            }
        }, 
        {
            "VolConnscan": {}
        }, 
        {
            "840aa9a7-04b2-4505-8238-8fe85f010dde": {
                "depends_on": [
                    "okta-activate-user"
                ]
            }
        }, 
        {
            "CBLiveGetFile": {
                "depends_on": [
                    "cb-session-create", 
                    "cb-sensor-info", 
                    "cb-command-create", 
                    "cb-session-info", 
                    "cb-file-get", 
                    "cb-command-info", 
                    "cb-list-sessions"
                ]
            }
        }, 
        {
            "ScheduleGenericPolling": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "AddEvidence": {
                "fromversion": "2.5.0"
            }
        }, 
        {
            "Ping": {}
        }, 
        {
            "EncodeToAscii": {}
        }, 
        {
            "ServiceNowCreateIncident": {
                "depends_on": [
                    "servicenow-query-table", 
                    "servicenow-create-record"
                ]
            }
        }, 
        {
            "TriagePhishing": {}
        }, 
        {
            "LessThanPercentage": {}
        }, 
        {
            "TrendmicroAlertStatus": {
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        }, 
        {
            "SandboxDetonateFile": {}
        }, 
        {
            "ParseEmailFiles": {}
        }, 
        {
            "ConferSetSeverity": {
                "depends_on": [
                    "confer"
                ]
            }
        }, 
        {
            "ReverseList": {}
        }, 
        {
            "ImpSfListEndpoints": {
                "depends_on": [
                    "imp-sf-list-endpoints"
                ]
            }
        }, 
        {
            "9364c36f-b1d6-4233-88c2-75008b106c31": {
                "depends_on": [
                    "get_job_sample"
                ]
            }
        }, 
        {
            "InviteUser": {}
        }, 
        {
            "VectraDetections": {
                "depends_on": [
                    "vec-detections"
                ]
            }
        }, 
        {
            "StaticAnalyze": {}
        }, 
        {
            "GetContextValue": {}
        }, 
        {
            "TaniumFilterComputersByIndexQueryFileDetails": {
                "depends_on": [
                    "tn-ask-manual-question"
                ]
            }
        }, 
        {
            "D2O365ComplianceSearch": {}
        }, 
        {
            "SearchIncidents": {}
        }, 
        {
            "CuckooDisplayReport": {
                "depends_on": [
                    "ck-report"
                ]
            }
        }, 
        {
            "VolPSList": {}
        }, 
        {
            "CBLiveProcessList": {
                "depends_on": [
                    "cb-command-info", 
                    "cb-command-create"
                ]
            }
        }, 
        {
            "GoogleappsGmailGetMail": {
                "depends_on": [
                    "googleapps-gmail-get-mail"
                ]
            }
        }, 
        {
            "PTEnrich": {
                "depends_on": [
                    "pt-osint", 
                    "pt-whois", 
                    "pt-malware", 
                    "pt-enrichment", 
                    "pt-get-subdomains", 
                    "pt-ssl-cert", 
                    "pt-passive-dns"
                ]
            }
        }, 
        {
            "ResolveShortenedURL": {}
        }, 
        {
            "CommonServerUserPython": {}
        }, 
        {
            "5edd0c8e-4e6e-4afe-8f43-67bb9ebc4fd3": {
                "depends_on": [
                    "nw-sdk-search"
                ]
            }
        }, 
        {
            "RunSqlQuery": {
                "depends_on": [
                    "query"
                ]
            }
        }, 
        {
            "d98506ea-fd06-49d6-8f1e-bb29ab06766e": {}
        }, 
        {
            "TimeStampToDate": {}
        }, 
        {
            "SlackAskUser": {
                "toversion": "3.1.0", 
                "depends_on": [
                    "slack-send"
                ]
            }
        }, 
        {
            "CPShowAccessRulebase": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "VolNetworkConnections": {}
        }, 
        {
            "DemistoDeleteIncident": {
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "SSDeepReputation": {}
        }, 
        {
            "GrrGetHunt": {
                "depends_on": [
                    "grr_get_hunt"
                ]
            }
        }, 
        {
            "findIncidentsWithIndicator": {}
        }, 
        {
            "ExifRead": {}
        }, 
        {
            "AlgosecGetTicket": {
                "depends_on": [
                    "algosec-get-ticket"
                ]
            }
        }, 
        {
            "IncapGetDomainApproverEmail": {
                "depends_on": [
                    "incap-get-domain-approver-email"
                ]
            }
        }, 
        {
            "ElasticSearchDisplay": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "ContextGetIps": {}
        }, 
        {
            "D2Hardware": {}
        }, 
        {
            "82764532-0a4f-4b59-8cf9-fe1a00cabdae": {
                "depends_on": [
                    "okta-search"
                ]
            }
        }, 
        {
            "TrendmicroSecurityProfileRetrieveAll": {
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ]
            }
        }, 
        {
            "PanoramaConfig": {
                "depends_on": [
                    "panorama"
                ]
            }
        }, 
        {
            "RepopulateFiles": {}
        }, 
        {
            "SendMessageToOnlineUsers": {}
        }, 
        {
            "SetIncidentCustomFields": {}
        }, 
        {
            "CEFParser": {}
        }, 
        {
            "ADSetNewPassword": {
                "depends_on": [
                    "ad-set-new-password"
                ]
            }
        }, 
        {
            "misp_upload_sample": {
                "depends_on": [
                    "internal-misp-upload-sample"
                ]
            }
        }, 
        {
            "IsValueInArray": {}
        }, 
        {
            "displayhtml": {}
        }, 
        {
            "VectraClassifier": {
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "JSONtoCSV": {}
        }, 
        {
            "ConferIncidentDetails": {
                "depends_on": [
                    "confer"
                ]
            }
        }, 
        {
            "ParseJSON": {}
        }, 
        {
            "ScheduleCommand": {}
        }, 
        {
            "XBTimeline": {
                "depends_on": [
                    "xb-timeline"
                ]
            }
        }, 
        {
            "EmailAskUser": {
                "toversion": "3.1.0"
            }
        }, 
        {
            "IncidentSet": {
                "toversion": "3.5.0"
            }
        }, 
        {
            "DataIPReputation": {}
        }, 
        {
            "URLSSLVerification": {}
        }, 
        {
            "EmailDomainSquattingReputation": {}
        }, 
        {
            "XBUser": {
                "depends_on": [
                    "xb-user"
                ]
            }
        }, 
        {
            "SNUpdateTicket": {
                "depends_on": [
                    "servicenow-incident-update"
                ]
            }
        }, 
        {
            "ticksToTime": {}
        }, 
        {
            "dbbdc2e4-6105-4ee9-8e83-563a4b991a89": {
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "TopMaliciousRatioIndicators": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "SetMultipleValues": {}
        }, 
        {
            "PanoramaCommit": {
                "depends_on": [
                    "panorama"
                ]
            }
        }, 
        {
            "CloseInvestigation": {}
        }, 
        {
            "CrowdStrikeUrlParse": {}
        }, 
        {
            "MarkRelatedIncidents": {}
        }, 
        {
            "DemistoSendInvite": {
                "depends_on": [
                    "demisto-api-post", 
                    "demisto-api-get"
                ]
            }
        }, 
        {
            "CommonIntegrationPython": {}
        }, 
        {
            "RunDockerCommand": {}
        }, 
        {
            "GoogleappsGmailSearch": {
                "depends_on": [
                    "googleapps-gmail-search"
                ]
            }
        }, 
        {
            "EPODetermineRepository": {}
        }, 
        {
            "emailFieldTriggered": {}
        }, 
        {
            "TrendMicroGetPolicyID": {
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ]
            }
        }, 
        {
            "AquatoneDiscover": {}
        }, 
        {
            "ExtractDomainFromURL": {}
        }, 
        {
            "NetwitnessSAUpdateIncident": {
                "depends_on": [
                    "nw-update-incident"
                ]
            }
        }, 
        {
            "UnzipFile": {}
        }, 
        {
            "NetwitnessSAGetAvailableAssignees": {
                "depends_on": [
                    "nw-get-available-assignees"
                ]
            }
        }, 
        {
            "QualysCreateIncidentFromReport": {
                "depends_on": [
                    "qualys-host-list"
                ]
            }
        }, 
        {
            "CuckooDetonateURL": {
                "depends_on": [
                    "cuckoo-create-task-from-url"
                ]
            }
        }, 
        {
            "UserEnrichAD": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "WordTokenizer": {}
        }, 
        {
            "da8594b8-0b57-4cb2-8578-94754bb577c6": {
                "depends_on": [
                    "nw-list-incidents"
                ]
            }
        }, 
        {
            "IsContextSet": {}
        }, 
        {
            "Set": {}
        }, 
        {
            "ArcherCreateSecurityIncident": {
                "depends_on": [
                    "archer-create-record"
                ]
            }
        }, 
        {
            "VolMalfindDumpAgent": {}
        }, 
        {
            "TrendmicroSystemEventRetrieve": {
                "depends_on": [
                    "trendmicro-system-event-retrieve"
                ]
            }
        }, 
        {
            "MimecastFindEmail": {
                "depends_on": [
                    "mimecast-query"
                ]
            }
        }, 
        {
            "D2Drop": {}
        }, 
        {
            "TaniumFindRunningProcesses": {
                "depends_on": [
                    "tn-add-question-complex", 
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "NessusScanDetails": {
                "depends_on": [
                    "scan-details"
                ]
            }
        }, 
        {
            "CBPCatalogFindHash": {
                "depends_on": [
                    "cbp-fileCatalog-search"
                ]
            }
        }, 
        {
            "checkValue": {}
        }, 
        {
            "WhileLoop": {}
        }, 
        {
            "D2GetSystemLog": {}
        }, 
        {
            "CopyFileD2": {}
        }, 
        {
            "CheckFilesWildfirePy": {
                "depends_on": [
                    "wildfire-upload", 
                    "wildfire-report"
                ]
            }
        }, 
        {
            "ADGetGroupMembers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "SCPPullFiles": {
                "depends_on": [
                    "copy-from"
                ]
            }
        }, 
        {
            "ReadFile": {}
        }, 
        {
            "VectraSensors": {
                "depends_on": [
                    "vec-sensors"
                ]
            }
        }, 
        {
            "QRadarFullSearch": {
                "depends_on": [
                    "qradar-get-search", 
                    "qradar-get-search-results", 
                    "qradar-searches"
                ]
            }
        }, 
        {
            "CSActors": {
                "depends_on": [
                    "cs-actors"
                ]
            }
        }, 
        {
            "NessusGetReport": {
                "depends_on": [
                    "scan-report-download", 
                    "scan-export", 
                    "scan-export-status"
                ]
            }
        }, 
        {
            "VolRaw": {}
        }, 
        {
            "Base64Encode": {}
        }, 
        {
            "LCMAcknowledgeHost": {
                "depends_on": [
                    "lcm-acknowledge-host"
                ]
            }
        }, 
        {
            "ExtractEmail": {}
        }, 
        {
            "NexposeVulnExtractor": {
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "XBTriggeredRules": {
                "depends_on": [
                    "xb-triggered-rules"
                ]
            }
        }, 
        {
            "LoadJSON": {}
        }, 
        {
            "CommonUserServer": {}
        }, 
        {
            "IsMaliciousIndicatorFound": {}
        }, 
        {
            "D2ActiveUsers": {}
        }, 
        {
            "BuildEWSQuery": {}
        }, 
        {
            "da330ce7-3a93-430c-8454-03b96cf5184e": {
                "depends_on": [
                    "okta-create-user"
                ]
            }
        }, 
        {
            "JiraIssueUploadFile": {
                "depends_on": [
                    "jira-issue-upload-file"
                ]
            }
        }, 
        {
            "PanoramaDynamicAddressGroup": {}
        }, 
        {
            "ActiveUsersD2": {}
        }, 
        {
            "ParseExcel": {}
        }, 
        {
            "MatchRegex": {}
        }, 
        {
            "ip_to_host": {}
        }, 
        {
            "AlgosecGetNetworkObject": {
                "depends_on": [
                    "algosec-get-network-object"
                ]
            }
        }, 
        {
            "Autoruns": {}
        }, 
        {
            "VectraTriage": {
                "depends_on": [
                    "vec-triage"
                ]
            }
        }, 
        {
            "ATDDetonate": {
                "depends_on": [
                    "atd-get-report", 
                    "atd-file-upload", 
                    "atd-check-status"
                ]
            }
        }, 
        {
            "XBInfo": {}
        }, 
        {
            "NetwitnessSACreateIncident": {
                "depends_on": [
                    "nw-create-incident"
                ]
            }
        }, 
        {
            "ExchangeSearchMailbox": {}
        }, 
        {
            "ed24d63f-4134-49c4-82c0-96885a7a1cc3": {}
        }, 
        {
            "5d44a5d9-d91a-4420-801f-755f26b60c47": {
                "depends_on": [
                    "cve-latest"
                ]
            }
        }, 
        {
            "ad7de731-cadc-4f49-81cd-522cd4b7bfa5": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "DemistoLogsBundle": {
                "depends_on": [
                    "demisto-api-download"
                ]
            }
        }, 
        {
            "ContextGetEmails": {}
        }, 
        {
            "nexpose_create_incidents_from_assets": {
                "depends_on": [
                    "nexpose-get-asset"
                ]
            }
        }, 
        {
            "bffdcf72-2061-4767-83d5-3ff2a9e8afe7": {}
        }, 
        {
            "ExchangeSearch": {
                "depends_on": [
                    "ews-search-mailbox"
                ]
            }
        }, 
        {
            "CPSetRule": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "VolGetProcWithMalNetConn": {}
        }, 
        {
            "ConvertTableToHTML": {}
        }, 
        {
            "StringLength": {}
        }, 
        {
            "CuckooGetScreenshot": {
                "depends_on": [
                    "cuckoo-task-screenshot"
                ]
            }
        }, 
        {
            "VolMalfind": {}
        }, 
        {
            "ExposeModules": {}
        }, 
        {
            "GrrGetFlows": {
                "depends_on": [
                    "grr_get_flows"
                ]
            }
        }, 
        {
            "IsTrue": {}
        }, 
        {
            "SplunkSearchJsonPy": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "UnEscapeURLs": {}
        }, 
        {
            "ProofpointDecodeURL": {}
        }, 
        {
            "ReadPDFFile": {}
        }, 
        {
            "ContextContains": {}
        }, 
        {
            "ADIsUserMember": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "PanoramaMove": {
                "depends_on": [
                    "panorama"
                ]
            }
        }, 
        {
            "ADGetUserGroups": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "ADUserLogonInfo": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "Osxcollector": {}
        }, 
        {
            "PWObservationPcapInfo": {
                "depends_on": [
                    "observation-pcap-info"
                ]
            }
        }, 
        {
            "QrSearches": {
                "depends_on": [
                    "qr-searches"
                ]
            }
        }, 
        {
            "ExtractIndicatorsFromTextFile": {}
        }, 
        {
            "CheckIPs": {}
        }, 
        {
            "VolDlllist": {}
        }, 
        {
            "FPSetRule": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "TrendMicroClassifier": {
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        }, 
        {
            "TrendMicroGetHostID": {
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ]
            }
        }, 
        {
            "ExtractDomainFromUrlAndEmail": {}
        }, 
        {
            "VectraSettings": {
                "depends_on": [
                    "vec-settings"
                ]
            }
        }, 
        {
            "GenerateInvestigationSummaryReport": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "DataDomainReputation": {
                "fromversion": "3.1.0"
            }
        }, 
        {
            "EPORepositoryComplianceCheck": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "PWObservations": {
                "depends_on": [
                    "observation-search"
                ]
            }
        }, 
        {
            "DBotPredictTextLabel": {
                "fromversion": "4.1.0"
            }
        }, 
        {
            "InRange": {}
        }, 
        {
            "IngestCSV": {}
        }, 
        {
            "TrendmicroHostAntimalwareScan": {
                "depends_on": [
                    "trendmicro-host-antimalware-scan"
                ]
            }
        }, 
        {
            "QrGetSearchResults": {
                "depends_on": [
                    "qr-get-search-results"
                ]
            }
        }, 
        {
            "NessusHostDetails": {
                "depends_on": [
                    "scan-host-details"
                ]
            }
        }, 
        {
            "WhereFieldEquals": {}
        }, 
        {
            "OSQueryUsers": {
                "depends_on": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "CrowdStrikeStreamingPreProcessing": {}
        }, 
        {
            "Strings": {}
        }, 
        {
            "QrOffenses": {
                "depends_on": [
                    "qr-offenses"
                ]
            }
        }, 
        {
            "LCMHosts": {}
        }, 
        {
            "RegProbeBasic": {}
        }, 
        {
            "ContextGetHashes": {}
        }, 
        {
            "NexposeEmailParser": {
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "7b5c080e-f3b1-411a-83b0-e1f53c21bef8": {}
        }, 
        {
            "SlackMirror": {
                "depends_on": [
                    "slack-mirror-investigation"
                ]
            }
        }, 
        {
            "CheckFiles": {
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "IsIPInRanges": {}
        }, 
        {
            "CBSessions": {
                "depends_on": [
                    "cb-list-sessions"
                ]
            }
        }, 
        {
            "JSONFileToCSV": {}
        }, 
        {
            "GeneratePassword": {}
        }, 
        {
            "IncidentSet": {
                "fromversion": "3.5.1"
            }
        }, 
        {
            "GoogleAuthURL": {}
        }, 
        {
            "DataURLReputation": {
                "toversion": "3.0.1"
            }
        }, 
        {
            "IPReputation": {}
        }, 
        {
            "AwsCreateImage": {
                "depends_on": [
                    "create-image"
                ]
            }
        }, 
        {
            "WildfireReport": {
                "depends_on": [
                    "wildfire-report"
                ]
            }
        }, 
        {
            "LCMIndicatorsForEntity": {
                "depends_on": [
                    "lcm-indicatorsforentity"
                ]
            }
        }, 
        {
            "hideFieldsOnNewIncident": {
                "fromversion": "3.6.0"
            }
        }, 
        {
            "ImpSfScheduleTask": {
                "depends_on": [
                    "ImpSfRevokeUnaccessedDevices", 
                    "scheduleEntry"
                ]
            }
        }, 
        {
            "ServiceNowUpdateIncident": {
                "depends_on": [
                    "servicenow-query-table", 
                    "servicenow-update-record"
                ]
            }
        }, 
        {
            "DataIPReputation": {
                "toversion": "3.0.1"
            }
        }, 
        {
            "SetDateField": {}
        }, 
        {
            "ADGetEmailForUser": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "EmailAskUser": {
                "toversion": "3.6.0", 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "PWEventDetails": {
                "depends_on": [
                    "pw-event-get"
                ]
            }
        }, 
        {
            "CheckSenderDomainDistance": {}
        }, 
        {
            "7b02fa0f-94ff-48c7-8350-b4e353702e73": {
                "depends_on": [
                    "upload_sample"
                ]
            }
        }, 
        {
            "PWObservationPcapDownload": {
                "depends_on": [
                    "observation-pcap-download"
                ]
            }
        }, 
        {
            "b695f044-fbdd-4d4b-89ce-9066cb0e165a": {
                "depends_on": [
                    "cve-search"
                ]
            }
        }, 
        {
            "ParseEmailHeader": {}
        }, 
        {
            "IndicatorMaliciousRatioCalculation": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "BinaryReputationPy": {
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "ArcherUpdateSecurityIncident": {
                "depends_on": [
                    "archer-update-record"
                ]
            }
        }, 
        {
            "IsListExist": {}
        }, 
        {
            "CSCountDevicesForIOC": {
                "depends_on": [
                    "cs-device-count-ioc"
                ]
            }
        }, 
        {
            "LCMSetHostComment": {
                "depends_on": [
                    "lcm-set-host-comment"
                ]
            }
        }, 
        {
            "D2Exec": {}
        }, 
        {
            "OSQueryProcesses": {
                "depends_on": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "NessusScanStatus": {
                "depends_on": [
                    "scan-details"
                ]
            }
        }, 
        {
            "DemistoLinkIncidents": {
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "JiraCreateIssue": {
                "depends_on": [
                    "jira-create-issue"
                ]
            }
        }, 
        {
            "LocateAttachment": {}
        }, 
        {
            "ADGetComputerGroups": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "MapValues": {}
        }, 
        {
            "QrGetSearch": {
                "depends_on": [
                    "qr-get-search"
                ]
            }
        }, 
        {
            "EmailAskUser": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "AwsGetInstanceInfo": {
                "depends_on": [
                    "get-instance-info", 
                    "get-ebs-volume-info", 
                    "get-sg-info"
                ]
            }
        }, 
        {
            "CreateArray": {}
        }, 
        {
            "ADListUsers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "CBPFindRule": {
                "depends_on": [
                    "cbp-fileRule-search"
                ]
            }
        }, 
        {
            "GoogleappsListUsers": {
                "depends_on": [
                    "googleapps-list-users"
                ]
            }
        }, 
        {
            "ParseCSV": {}
        }, 
        {
            "D2Winpmem": {}
        }, 
        {
            "AlgosecGetApplications": {
                "depends_on": [
                    "algosec-get-applications"
                ]
            }
        }, 
        {
            "Elasticsearch": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "EPOUpdateRepository": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "ZipFile": {}
        }, 
        {
            "VectraSummary": {
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "MattermostAskUser": {
                "depends_on": [
                    "mattermost-send"
                ]
            }
        }, 
        {
            "WhoisSummary": {
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "AssignAnalystToIncident": {}
        }, 
        {
            "Base64ListToFile": {}
        }, 
        {
            "LCMPathFinderScanHost": {
                "depends_on": [
                    "lcm-pathfinder-scan"
                ]
            }
        }, 
        {
            "IncapScheduleTask": {
                "depends_on": [
                    "scheduleEntry", 
                    "IncapWhitelistCompliance"
                ]
            }
        }, 
        {
            "SbQuery": {
                "depends_on": [
                    "sb-query"
                ]
            }
        }, 
        {
            "GetStringsDistance": {}
        }, 
        {
            "CSHuntByIOC": {
                "depends_on": [
                    "cs-device-ran-on"
                ]
            }
        }, 
        {
            "FireEyeDetonateFile": {
                "depends_on": [
                    "fe-submit", 
                    "fe-submit-result", 
                    "fe-submit-status"
                ]
            }
        }, 
        {
            "514ec833-c02c-49a3-8ac6-d982198f5fa0": {
                "depends_on": [
                    "okta-update-user"
                ]
            }
        }, 
        {
            "JoinIfSingleElementOnly": {}
        }, 
        {
            "PWObservationDetails": {
                "depends_on": [
                    "pw-observation-get"
                ]
            }
        }, 
        {
            "SNOpenTicket": {
                "depends_on": [
                    "servicenow-incident-create"
                ]
            }
        }, 
        {
            "IPInfoQuery": {
                "depends_on": [
                    "ipinfo_field"
                ]
            }
        }, 
        {
            "RegCollectValues": {}
        }, 
        {
            "MD5Extract": {}
        }, 
        {
            "CommonIntegration": {}
        }, 
        {
            "CBPBanHash": {
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        }, 
        {
            "URLDecode": {}
        }, 
        {
            "AwsRunInstance": {
                "depends_on": [
                    "run-instance"
                ]
            }
        }, 
        {
            "EPORetrieveCurrentDATVersion": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "TaniumShowPendingActions": {
                "depends_on": [
                    "tn-get-object"
                ]
            }
        }, 
        {
            "PrintErrorEntry": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "SEPCheckOutdatedEndpoints": {
                "depends_on": [
                    "sep-client-content"
                ]
            }
        }, 
        {
            "URLNumberOfAds": {}
        }, 
        {
            "IncidentToContext": {}
        }, 
        {
            "D2Users": {}
        }, 
        {
            "StripChars": {}
        }, 
        {
            "RegPathReputationBasicLists": {}
        }, 
        {
            "IsIntegrationAvailable": {}
        }, 
        {
            "ExposeIncidentOwner": {}
        }, 
        {
            "EmailReputation": {}
        }, 
        {
            "AwsCreateVolumeSnapshot": {
                "depends_on": [
                    "create-volume-snapshot"
                ]
            }
        }, 
        {
            "CreateEmailHtmlBody": {}
        }, 
        {
            "listExecutedCommands": {}
        }, 
        {
            "EPOUpdateEndpoints": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "CheckSender": {
                "depends_on": [
                    "pipl-search"
                ]
            }
        }, 
        {
            "NessusLaunchScan": {
                "depends_on": [
                    "scan-launch"
                ]
            }
        }, 
        {
            "ADGetGroupUsers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "CPTaskStatus": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "80b5c44c-4eac-4e00-812f-6d409d57be31": {
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "NetwitnessSAAddEventsToIncident": {
                "depends_on": [
                    "nw-add-events-to-incident"
                ]
            }
        }, 
        {
            "StopScheduledTask": {}
        }, 
        {
            "SalesforceAskUser": {
                "depends_on": [
                    "salesforce-push-comment"
                ]
            }
        }, 
        {
            "ADListUsersEx": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "OSQueryOpenSockets": {
                "depends_on": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "EsmExample": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "SetSeverityByScore": {}
        }, 
        {
            "RSAArcherManualFetch": {
                "depends_on": [
                    "archer-manually-fetch-incident"
                ]
            }
        }, 
        {
            "CheckpointFWBackupStatus": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "VolImageinfo": {}
        }, 
        {
            "CBPApproveHash": {
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        }, 
        {
            "ParseEmailFile": {}
        }, 
        {
            "GoogleappsRevokeUserRole": {
                "depends_on": [
                    "googleapps-revoke-user-role"
                ]
            }
        }, 
        {
            "DBotPredictPhishingEvaluation": {
                "fromversion": "4.1.0"
            }
        }, 
        {
            "DemistoUploadFile": {
                "depends_on": [
                    "demisto-api-multipart"
                ]
            }
        }, 
        {
            "SNListTickets": {
                "depends_on": [
                    "servicenow-incidents-query"
                ]
            }
        }, 
        {
            "JiraIssueAddComment": {
                "depends_on": [
                    "jira-issue-add-comment"
                ]
            }
        }, 
        {
            "AlgosecCreateTicket": {
                "depends_on": [
                    "algosec-create-ticket"
                ]
            }
        }, 
        {
            "DeleteContext": {}
        }, 
        {
            "ADGetUsersByEmail": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "LanguageDetect": {}
        }, 
        {
            "IncapGetAppInfo": {
                "depends_on": [
                    "incap-get-app-info"
                ]
            }
        }, 
        {
            "SplunkEmailParser": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "GetTime": {}
        }, 
        {
            "PortListenCheck": {}
        }, 
        {
            "f99a85a6-c572-4c3a-8afd-5b4ac539000a": {}
        }, 
        {
            "PanoramaBlockIP": {
                "depends_on": [
                    "panorama"
                ]
            }
        }, 
        {
            "IdentifyAttachedEmail": {}
        }, 
        {
            "D2Services": {}
        }, 
        {
            "AlgosecQuery": {
                "depends_on": [
                    "algosec-query"
                ]
            }
        }, 
        {
            "AwsStartInstance": {
                "depends_on": [
                    "start-instance"
                ]
            }
        }, 
        {
            "DomainReputation": {}
        }, 
        {
            "GetDuplicatesMlv2": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "JIRAPrintIssue": {
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        }, 
        {
            "FPDeleteRule": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "isError": {}
        }, 
        {
            "CommonServerPython": {}
        }, 
        {
            "10cb3486-48f3-4d93-88af-b6be84ffd432": {
                "depends_on": [
                    "okta-get-groups"
                ]
            }
        }, 
        {
            "DocumentationAutomation": {}
        }, 
        {
            "FileReputation": {}
        }, 
        {
            "AreValuesEqual": {}
        }, 
        {
            "LCMDetectedEntities": {
                "depends_on": [
                    "lcm-entities"
                ]
            }
        }, 
        {
            "UtilAnyResults": {}
        }, 
        {
            "ExampleJSScript": {}
        }, 
        {
            "UnEscapeIPs": {}
        }, 
        {
            "OSQueryLoggedInUsers": {
                "depends_on": [
                    "OSQueryBasicQuery"
                ]
            }
        }, 
        {
            "FindSimilarIncidentsByText": {}
        }, 
        {
            "IncapWhitelistCompliance": {
                "depends_on": [
                    "incap-get-domain-approver-email", 
                    "RemoteExec", 
                    "incap-list-sites", 
                    "SendEmail"
                ]
            }
        }, 
        {
            "c99e196b-e05e-41f2-82cb-6798f33cb653": {
                "depends_on": [
                    "cve-search"
                ]
            }
        }, 
        {
            "5e125fdd-72f1-455f-89fa-e6f9405174a4": {}
        }, 
        {
            "ExtractDomain": {}
        }, 
        {
            "DemistoCreateList": {
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        }, 
        {
            "ServiceNowQueryIncident": {
                "depends_on": [
                    "servicenow-query-table"
                ]
            }
        }, 
        {
            "MimecastQuery": {
                "depends_on": [
                    "mimecast-query"
                ]
            }
        }, 
        {
            "misp_download_sample": {
                "depends_on": [
                    "internal-misp-download-sample"
                ]
            }
        }, 
        {
            "ExchangeDeleteIDsFromContext": {
                "depends_on": [
                    "ews-delete-items"
                ]
            }
        }, 
        {
            "DumpJSON": {}
        }, 
        {
            "ADGetGroupComputers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "TrendmicroAntiMalwareEventRetrieve": {
                "depends_on": [
                    "trendmicro-anti-malware-event-retrieve"
                ]
            }
        }, 
        {
            "Sleep": {}
        }, 
        {
            "AdSearch": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "XBNotable": {
                "depends_on": [
                    "xb-notable"
                ]
            }
        }, 
        {
            "GoogleappsGetUser": {
                "depends_on": [
                    "googleapps-get-user"
                ]
            }
        }, 
        {
            "CBLiveFetchFiles": {
                "depends_on": [
                    "CBLiveGetFile"
                ]
            }
        }, 
        {
            "JiraIssueAddLink": {
                "depends_on": [
                    "jira-issue-add-link"
                ]
            }
        }, 
        {
            "ContextSearchForString": {}
        }, 
        {
            "ShowOnMap": {}
        }, 
        {
            "CBFindIP": {
                "depends_on": [
                    "CBSearch"
                ]
            }
        }, 
        {
            "D2Rekall": {}
        }, 
        {
            "CuckooGetReport": {
                "depends_on": [
                    "cuckoo-get-task-report"
                ]
            }
        }, 
        {
            "BinarySearchPy": {
                "depends_on": [
                    "cb-process"
                ]
            }
        }, 
        {
            "Volatility": {}
        }, 
        {
            "GrrGetFiles": {
                "depends_on": [
                    "grr_get_files"
                ]
            }
        }, 
        {
            "FetchFileD2": {}
        }, 
        {
            "ToTable": {}
        }, 
        {
            "XBLockouts": {
                "depends_on": [
                    "xb-lockouts"
                ]
            }
        }, 
        {
            "ExchangeAssignRole": {}
        }, 
        {
            "GrrSetHunts": {
                "depends_on": [
                    "grr_set_hunts"
                ]
            }
        }, 
        {
            "MaliciousRatioReputation": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "EPOFindSystem": {
                "depends_on": [
                    "epo-command"
                ]
            }
        }, 
        {
            "TaniumAskQuestionComplex": {
                "depends_on": [
                    "tn-add-question-complex", 
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "DataURLReputation": {}
        }, 
        {
            "DataHashReputation": {
                "toversion": "3.0.1", 
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "GetIndicatorDBotScore": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "HTTPListRedirects": {}
        }, 
        {
            "DataHashReputation": {
                "depends_on": [
                    "file"
                ]
            }
        }, 
        {
            "CBEvents": {
                "depends_on": [
                    "cb-process", 
                    "process-events"
                ]
            }
        }, 
        {
            "Whois": {
                "depends_on": [
                    "whois"
                ]
            }
        }, 
        {
            "MarkAsNoteByTag": {}
        }, 
        {
            "TaniumApprovePendingActions": {
                "depends_on": [
                    "tn-add-object", 
                    "tn-get-object"
                ]
            }
        }, 
        {
            "GenericPollingScheduledTask": {}
        }, 
        {
            "NessusListScans": {
                "depends_on": [
                    "scans-list"
                ]
            }
        }, 
        {
            "TaniumAskQuestion": {
                "depends_on": [
                    "tn-result-data", 
                    "tn-result-info"
                ]
            }
        }, 
        {
            "ExportToCSV": {}
        }, 
        {
            "URLReputation": {}
        }, 
        {
            "IncidentAddSystem": {}
        }, 
        {
            "FindSimilarIncidents": {}
        }, 
        {
            "CPDeleteRule": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "RegexGroups": {}
        }, 
        {
            "RemoteExec": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "PublishEntriesToContext": {}
        }, 
        {
            "http": {
                "toversion": "3.1.0"
            }
        }, 
        {
            "GoogleappsGetUserRoles": {
                "depends_on": [
                    "googleapps-get-user-roles"
                ]
            }
        }, 
        {
            "ExchangeDeleteMail": {}
        }, 
        {
            "SbUpload": {
                "depends_on": [
                    "sb-upload"
                ]
            }
        }, 
        {
            "3dd62013-4fed-43eb-8ae4-91b1b4250599": {
                "depends_on": [
                    "okta-set-password"
                ]
            }
        }, 
        {
            "D2Processes": {}
        }, 
        {
            "IncapListSites": {
                "depends_on": [
                    "incap-list-sites"
                ]
            }
        }, 
        {
            "ADGetEmailForAllUsers": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "CuckooTaskStatus": {
                "depends_on": [
                    "cuckoo-view-task"
                ]
            }
        }, 
        {
            "PWEvents": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "NexposeEmailParserForVuln": {
                "depends_on": [
                    "nexpose"
                ]
            }
        }, 
        {
            "CloseInvestigationAsDuplicate": {}
        }, 
        {
            "GetDuplicatesMl": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "FailedInstances": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "UnPackFile": {}
        }, 
        {
            "http": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "DBotPredictPhishingLabel": {
                "fromversion": "4.1.0"
            }
        }, 
        {
            "CPCreateBackup": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "ExtractIP": {}
        }, 
        {
            "CheckURLs": {}
        }, 
        {
            "SplunkPySearch": {
                "depends_on": [
                    "splunk-search"
                ]
            }
        }, 
        {
            "GrrGetHunts": {
                "depends_on": [
                    "grr_get_hunts"
                ]
            }
        }, 
        {
            "ImpSfSetEndpointStatus": {
                "depends_on": [
                    "imp-sf-set-endpoint-status"
                ]
            }
        }, 
        {
            "PCAPMiner": {}
        }, 
        {
            "D2GetFile": {}
        }, 
        {
            "PagerDutyAssignOnCallUser": {
                "depends_on": [
                    "PagerDuty-get-users-on-call-now"
                ]
            }
        }, 
        {
            "ExtractHTMLTables": {}
        }, 
        {
            "ContainsCreditCardInfo": {}
        }, 
        {
            "CBSearch": {}
        }, 
        {
            "DataDomainReputation": {
                "toversion": "3.0.1"
            }
        }, 
        {
            "DBotClosedIncidentsPercentage": {}
        }, 
        {
            "CBAlerts": {
                "depends_on": [
                    "cb-alert"
                ]
            }
        }, 
        {
            "ParseWordDoc": {}
        }, 
        {
            "VolJson": {}
        }, 
        {
            "SlackSend": {
                "depends_on": [
                    "slack-send"
                ]
            }
        }, 
        {
            "ExposeList": {}
        }, 
        {
            "VectraHealth": {
                "depends_on": [
                    "vec-health"
                ]
            }
        }, 
        {
            "D2ExecuteCommand": {}
        }, 
        {
            "46e2109c-b735-458e-884f-030229a20830": {}
        }, 
        {
            "dfa728bb-8291-4f8c-8185-53fad210f1b5": {}
        }, 
        {
            "ContextGetPathForString": {}
        }, 
        {
            "LCMResolveHost": {
                "depends_on": [
                    "lcm-resolve-host"
                ]
            }
        }, 
        {
            "IsGreaterThan": {}
        }, 
        {
            "SbQuota": {
                "depends_on": [
                    "sb-quota"
                ]
            }
        }, 
        {
            "ContextFilter": {}
        }, 
        {
            "O365SearchEmails": {}
        }, 
        {
            "AnalyzeOSX": {
                "depends_on": [
                    "url", 
                    "Osxcollector", 
                    "file"
                ]
            }
        }, 
        {
            "PWEventPcapDownload": {
                "depends_on": [
                    "event-pcap-download"
                ]
            }
        }, 
        {
            "AnalyzeMemImage": {}
        }, 
        {
            "8bb47409-fffb-40c4-8601-d5fd20384e26": {}
        }, 
        {
            "JiraGetIssue": {
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        }, 
        {
            "ADExpirePassword": {
                "depends_on": [
                    "ad-expire-password"
                ]
            }
        }, 
        {
            "ImpSfRevokeUnaccessedDevices": {
                "depends_on": [
                    "ImpSfSetEndpointStatus", 
                    "ImpSfListEndpoints"
                ]
            }
        }, 
        {
            "ADGetUser": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "SendEmail": {
                "depends_on": [
                    "send-mail"
                ]
            }
        }, 
        {
            "EPOCheckLatestDAT": {}
        }, 
        {
            "PagerDutyAlertOnIncident": {
                "depends_on": [
                    "PagerDuty-submit-event"
                ]
            }
        }, 
        {
            "URLExtract": {}
        }, 
        {
            "TaniumDeployAction": {
                "depends_on": [
                    "tn-deploy-package"
                ]
            }
        }, 
        {
            "SendEmailToManager": {
                "toversion": "3.1.0", 
                "depends_on": [
                    "ad-search", 
                    "send-mail"
                ]
            }
        }, 
        {
            "StringReplace": {}
        }, 
        {
            "TextFromHTML": {}
        }, 
        {
            "CPShowBackupStatus": {
                "depends_on": [
                    "ssh"
                ]
            }
        }, 
        {
            "RunPollingCommand": {
                "fromversion": "4.0.0"
            }
        }, 
        {
            "CBWatchlists": {
                "depends_on": [
                    "cb-watchlist-get"
                ]
            }
        }, 
        {
            "DamSensorDown": {
                "depends_on": [
                    "dam-get-latest-by-rule"
                ]
            }
        }, 
        {
            "94f72ed9-49c8-40e5-89bb-7c98f914d2cc": {
                "depends_on": [
                    "okta-deactivate-user"
                ]
            }
        }, 
        {
            "34f0498c-d3da-4ac3-8cad-a28804bf1f21": {
                "depends_on": [
                    "nw-sdk-query"
                ]
            }
        }, 
        {
            "CBSensors": {
                "depends_on": [
                    "cb-list-sensors"
                ]
            }
        }, 
        {
            "VolRunCmds": {}
        }, 
        {
            "ADGetComputer": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "DemistoUploadFileToIncident": {
                "depends_on": [
                    "demisto-api-multipart"
                ]
            }
        }, 
        {
            "SbDownload": {
                "depends_on": [
                    "sb-download"
                ]
            }
        }, 
        {
            "OSQueryBasicQuery": {
                "depends_on": [
                    "RemoteExec"
                ]
            }
        }, 
        {
            "AggregateIOCs": {}
        }, 
        {
            "PDFUnlocker": {}
        }, 
        {
            "D2RegQuery": {}
        }, 
        {
            "ExtractURL": {}
        }, 
        {
            "StringContains": {}
        }, 
        {
            "CPBlockIP": {
                "depends_on": [
                    "checkpoint"
                ]
            }
        }, 
        {
            "TrendmicroSecurityProfileAssignToHost": {
                "depends_on": [
                    "trendmicro-security-profile-assign-to-host"
                ]
            }
        }, 
        {
            "JiraCreateIssue-example": {
                "depends_on": [
                    "jira-create-issue", 
                    "jira-delete-issue"
                ]
            }
        }, 
        {
            "VolApihooks": {}
        }, 
        {
            "ADGetCommonGroups": {
                "depends_on": [
                    "ad-search"
                ]
            }
        }, 
        {
            "NetwitnessSAGetComponents": {
                "depends_on": [
                    "nw-get-components"
                ]
            }
        }, 
        {
            "QRadarGetCorrelationLogs": {
                "depends_on": [
                    "qradar-searches"
                ]
            }
        }, 
        {
            "CountArraySize": {}
        }, 
        {
            "ConvertXmlToJson": {}
        }, 
        {
            "D2PEDump": {}
        }, 
        {
            "CBPFindComputer": {
                "depends_on": [
                    "cbp-computer-search"
                ]
            }
        }, 
        {
            "ClassifierNotifyAdmin": {
                "depends_on": [
                    "send-mail"
                ]
            }
        }, 
        {
            "SlackAskUser": {
                "depends_on": [
                    "slack-send"
                ], 
                "fromversion": "3.5.0"
            }
        }, 
        {
            "Exists": {}
        }, 
        {
            "NetwitnessSAGetEvents": {
                "depends_on": [
                    "nw-get-events"
                ]
            }
        }, 
        {
            "DBotTrainTextClassifier": {
                "fromversion": "4.1.0"
            }
        }, 
        {
            "CommonServer": {}
        }, 
        {
            "LCMDetectedIndicators": {
                "depends_on": [
                    "lcm-indicators"
                ]
            }
        }, 
        {
            "SplunkSearch": {
                "depends_on": [
                    "search"
                ]
            }
        }, 
        {
            "IsIPInSubnet": {}
        }, 
        {
            "TrendmicroHostRetrieveAll": {
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ]
            }
        }, 
        {
            "getMlFeatures": {
                "fromversion": "3.5.0"
            }
        }, 
        {
            "2aa9f737-8c7c-42f5-815f-4d104bb3af06": {
                "depends_on": [
                    "sep-command-status"
                ]
            }
        }, 
        {
            "PrintContext": {}
        }, 
        {
            "D2O365SearchAndDelete": {}
        }, 
        {
            "DBotPreparePhishingData": {
                "fromversion": "4.1.0"
            }
        }, 
        {
            "QRadarGetOffenseCorrelations": {
                "depends_on": [
                    "qradar-searches"
                ]
            }
        }, 
        {
            "ShowScheduledEntries": {}
        }, 
        {
            "EmailAskUserResponse": {}
        }, 
        {
            "IsEmailAddressInternal": {}
        }, 
        {
            "DemistoGetIncidentTasksByState": {}
        }, 
        {
            "VectraGetHostById": {
                "depends_on": [
                    "vec-get-host-by-id"
                ]
            }
        }, 
        {
            "DefaultIncidentClassifier": {}
        }
    ]
}