type: map
mapping:
  id:
    type: str
    required: yes
  version:
    type: int
    required: yes
  name:
    type: str
    required: yes
  description:
    type: str
    required: yes
  starttaskid:
    type: str
    required: yes
  view:
    type: str
    required: yes
  outputs:
      type: seq
      sequence:
        - include: output_schema
  inputs:
    type: seq
    sequence:
      - include: input_schema
  tags:
    type: seq
    sequence:
      - type: str
  tasks:
    type: map
    required: yes
    matching-rule: 'all'
    mapping:
      regex;(^[0-9]+$):
        type: map
        mapping:
          id:
            type: text
            required: yes
          taskid:
            type: str
            required: yes
          type:
            type: str
            required: yes
            enum: ['regular', 'playbook', 'condition', 'start', 'title', 'section', 'standard']
          scriptarguments:
            type: map
            allowempty: True
          timertriggers:
            type: map
            allowempty: True
          task:
            type: map
            required: yes
            mapping:
              id:
                type: text
                required: yes
              version:
                type: int
                required: true
              name:
                type: str
                required: true
              playbookName:
                type: str
              description:
                type: str
                required: true
              scriptName:
                type: str
              script:
                type: str
              tags:
                sequence:
                - type: str
              type:
                type: str
                enum: ['regular', 'playbook', 'condition', 'start', 'title', 'section', 'standard']
              iscommand:
                type: bool
                required: yes
              brand:
                type: text
                required: yes
              issystemtask:
                type: bool
              clonedfrom:
                type: str
          note:
            type: bool
          nexttasks:
            type: map
            mapping:
              regex;(.+):
                type: seq
                sequence:
                  - type: str
          loop:
            type: map
            mapping:
              iscommand:
                type: bool
              builtincondition:
                type: seq
                sequence:
                  - include: arg_filters_schema
              scriptId:
                type: str
              scriptArguments:
                type: map
                allowempty: True
              exitCondition:
                type: str
              wait:
                type: int
          conditions:
            type: seq
            sequence:
              - include: condition_schema
          view:
            type: str
            required: yes
          results:
            type: seq
            sequence:
              - type: str
          continueonerror:
            type: bool
          reputationcalc:
            type: int
          separatecontext:
            type: bool
  system:
    type: bool
  fromversion:
    type: text
    required: yes
  toversion:
    type: text
  releaseNotes:
    type: str
  tests:
    type: seq
    sequence:
    - type: str


# playbook->tasks
schema;task_schema:
  type: map
  allowempty: True

# playbook->inputs
schema;input_schema:
  type: map
  mapping:
    key:
      type: str
      required: yes
    value:
      type: any
    description:
      type: str
      required: yes
    required:
      type: bool

# playbook->outputs
schema;output_schema:
  type: map
  mapping:
    contextPath:
      type: str
      required: yes
    type:
      type: text
    description:
      type: str
      required: yes

# playbook->tasks->conditions
schema;condition_schema:
  type: map
  mapping:
    label:
      type: str
      required: yes
    condition:
      type: seq
      sequence:
        - include: arg_filters_schema


schema;arg_filters_schema:
  type: seq
  sequence:
    - include: arg_filter_schema

schema;arg_filter_schema:
  type: map
  mapping:
    operator:
      type: str
      required: yes
    ignorecase:
      type: bool
    left:
      type: map
      required: yes
      mapping:
        value:
          type: any
          required: yes
        iscontext:
          type: bool
          required: yes
    right:
      type: map
      mapping:
        value:
          type: any
          required: yes
        iscontext:
          type: bool
