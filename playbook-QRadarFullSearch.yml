description: This playbook runs a QRadar query and return its results to the context.
id: QRadarFullSearch
inputs:
- description: How much time to wait before a timeout occurs (minutes)
  key: timeout
  required: false
  value:
    simple: "600"
- description: Polling frequency - how often the polling command should run (minutes)
  key: interval
  required: false
  value:
    simple: "1"
- description: The query expressions in AQL
  key: query_expression
  required: true
  value: {}
- description: Range of results to return (e.g. 0-20)
  key: range
  required: false
  value: {}
- description: Table headers
  key: headers
  required: false
  value: {}
name: QRadarFullSearch
outputs:
- contextPath: QRadar.Search.Result
  description: The result of the search
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Start of playbook
      id: 230a5fa5-ffb2-4d27-857f-647083ec27dc
      iscommand: false
      name: ""
      version: -1
    taskid: 230a5fa5-ffb2-4d27-857f-647083ec27dc
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 50
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      query_expression:
        simple: ${inputs.query_expression}
    separatecontext: false
    task:
      brand: ""
      description: Creates a search in QRadar using the search query
      id: c8436b25-99f9-46ec-8fe6-cc601675c5f3
      iscommand: true
      name: qradar-searches
      script: '|||qradar-searches'
      type: regular
      version: -1
    taskid: c8436b25-99f9-46ec-8fe6-cc601675c5f3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 195
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "6"
    note: false
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      search_id:
        simple: ${QRadar.Search.ID}
    separatecontext: false
    task:
      brand: ""
      description: Gets search object to initialize polling playbook
      id: 4dd0f61d-1391-47c3-8a9d-b5580671f092
      iscommand: true
      name: qradar-get-search
      script: '|||qradar-get-search'
      type: regular
      version: -1
    taskid: 4dd0f61d-1391-47c3-8a9d-b5580671f092
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    scriptarguments:
      Ids:
        simple: ${QRadar.Search.ID}
      Interval:
        simple: ${inputs.interval}
      PollingCommandArgName:
        simple: search_id
      PollingCommandName:
        simple: qradar-get-search
      Timeout:
        simple: ${inputs.timeout}
      dt:
        simple: QRadar.Search(val.Status!=='COMPLETED' ).ID
    separatecontext: true
    task:
      brand: ""
      description: Generic polling of qradar-get-search
      id: af4d3d48-5707-4522-8fef-a6d3b393eab4
      iscommand: false
      name: GenericPolling
      playbookName: GenericPolling
      type: playbook
      version: -1
    taskid: af4d3d48-5707-4522-8fef-a6d3b393eab4
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
  "4":
    id: "4"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    scriptarguments:
      headers:
        simple: ${inputs.headers}
      range:
        simple: ${inputs.range}
      search_id:
        simple: ${QRadar.Search.ID}
    separatecontext: false
    task:
      brand: ""
      description: executes qradar-get-search-results to get the search results
      id: 6eefed42-f1f6-46d7-83b0-ecb2e47575f9
      iscommand: true
      name: qradar-get-search-results
      script: '|||qradar-get-search-results'
      type: regular
      version: -1
    taskid: 6eefed42-f1f6-46d7-83b0-ecb2e47575f9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 895
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Playbook is done
      id: 172877e1-d636-4b2a-8b3e-70dddf7ea585
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 172877e1-d636-4b2a-8b3e-70dddf7ea585
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1070
        }
      }
  "6":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: QRadar.Search.Status
          operator: isEqualString
          right:
            value:
              simple: COMPLETED
      label: "yes"
    id: "6"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "4"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks whether the search is completed
      id: 7c323154-9752-4e8d-8e18-7d43fef89edf
      iscommand: false
      name: Is search completed?
      type: condition
      version: -1
    taskid: 7c323154-9752-4e8d-8e18-7d43fef89edf
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 545
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 492.5,
        "x": 50,
        "y": 50
      }
    }
  }
