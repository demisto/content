comment: Retrieve global Exabeam info about number of users, assets and events
commonfields:
  id: XBInfo
  version: -1
dependson:
  must: []
  should:
  - xb-users
  - xb-assets
  - xb-events
name: XBInfo
runonce: false
script: |-
  res = '## Exabeam global info'
  entry = demisto.executeCommand('xb-users', {})[0]
  if entry['Type'] != entryTypes['error'] and entry['ContentsFormat'] == formats['json']:
      res += '\n### Users:'
      res += '\n- High Risk: ' + str(demisto.get(entry, 'Contents.highRisk'))
      res += '\n- Recent: ' + str(demisto.get(entry, 'Contents.recent'))
      res += '\n- Total: ' + str(demisto.get(entry, 'Contents.total'))
  entry = demisto.executeCommand('xb-assets', {})[0]
  if entry['Type'] != entryTypes['error'] and entry['ContentsFormat'] == formats['json']:
      res += '\n### Assets:'
      res += '\n- High Risk: ' + str(demisto.get(entry, 'Contents.highRisk'))
      res += '\n- Recent: ' + str(demisto.get(entry, 'Contents.recent'))
      res += '\n- Total: ' + str(demisto.get(entry, 'Contents.total'))
  entry = demisto.executeCommand('xb-events', {})[0]
  if entry['Type'] != entryTypes['error'] and entry['ContentsFormat'] == formats['json']:
      res += '\n### Events:'
      res += '\n- Recent: ' + str(int(demisto.get(entry, 'Contents.recent')))
      res += '\n- Total: ' + str(int(demisto.get(entry, 'Contents.total')))
  demisto.results({'ContentsFormat': formats['markdown'], 'Type': entryTypes['note'], 'Contents': res})
scripttarget: 0
system: true
tags:
- server
- analytics
- exabeam
type: python
