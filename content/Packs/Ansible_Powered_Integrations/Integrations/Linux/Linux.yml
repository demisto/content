category: IT Services
commonfields:
  id: Linux
  version: -1
configuration:
- additionalinfo: The credentials to associate with the instance. SSH keys can be
    configured using the credential manager.
  display: Username
  name: creds
  required: true
  type: 9
- additionalinfo: The default port to use if one is not specified in the commands
    `host` argument.
  defaultvalue: "22"
  display: Default SSH Port
  name: port
  required: true
  type: 0
- additionalinfo: If multiple hosts are specified in a command, how many hosts should
    be interacted with concurrently.
  defaultvalue: "4"
  display: Concurrecy Factor
  name: concurrency
  required: true
  type: 0
description: Agentlesss Linux host management over SSH
display: Linux
name: Linux
script:
  commands:
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The generic name of the link.
      name: name
      required: true
    - description: The path to the real executable that the link should point to.
      name: path
      required: true
    - description: |-
        The path to the symbolic link that should point to the real executable.
        This option is always required on RHEL-based distributions. On Debian-based distributions this option is required when the alternative `name` is unknown to the system.
      name: link
    - default: false
      defaultValue: "50"
      description: The priority of the alternative.
      name: priority
    description: Manages alternative programs for common commands
    name: linux-alternatives
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A command to be executed in the future.
      name: command
    - description: An existing script file to be executed in the future.
      name: script_file
    - description: The count of units in the future to execute the command or script
        file.
      name: count
      required: true
    - auto: PREDEFINED
      description: The type of units in the future to execute the command or script
        file.
      name: units
      predefined:
      - minutes
      - hours
      - days
      - weeks
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The state dictates if the command or script file should be evaluated
        as present(added) or absent(deleted).
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "False"
      description: If a matching job is present a new job will not be added.
      name: unique
    description: Schedule the execution of a command or script file via the at command
    name: linux-at
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The username on the remote host whose authorized_keys file will
        be modified.
      name: user
      required: true
    - description: The SSH public key(s), as a string or (since Ansible 1.9) url (https://github.com/username.keys).
      name: key
      required: true
    - description: |-
        Alternate path to the authorized_keys file.
        When unset, this value defaults to `~/.ssh/authorized_keys`.
      name: path
    - default: false
      defaultValue: "True"
      description: |-
        Whether this module should manage the directory of the authorized key file.
        If set to `yes`, the module will create the directory, as well as set the owner and permissions of an existing directory.
        Be sure to set `manage_dir=no` if you are using an alternate directory for authorized_keys, as set with `path`, since you could lock yourself out of SSH access.
        See the example below.
      name: manage_dir
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the given key (with the given key_options) should or should
        not be in the file.
      name: state
      predefined:
      - absent
      - present
    - description: A string of ssh key options to be prepended to the key in the authorized_keys
        file.
      name: key_options
    - default: false
      defaultValue: "False"
      description: |-
        Whether to remove all other non-specified keys from the authorized_keys file.
        Multiple keys can be specified in a single `key` string value by separating them by newlines.
        This option is not loop aware, so if you use `with_` , it will be exclusive per iteration of the loop.
        If you want multiple keys in the file you need to pass them all to `key` in a single batch as mentioned above.
      name: exclusive
    - default: false
      defaultValue: "True"
      description: |-
        This only applies if using a https url as the source of the keys.
        If set to `no`, the SSL certificates will not be validated.
        This should only set to `no` used on personally controlled sites using self-signed certificates as it avoids verifying the source site.
        Prior to 2.1 the code worked as if this was set to `yes`.
      name: validate_certs
    - description: |-
        Change the comment on the public key.
        Rewriting the comment is useful in cases such as fetching it from GitHub or GitLab.
        If no comment is specified, the existing comment will be kept.
      name: comment
    - default: false
      defaultValue: "False"
      description: Follow path symlink instead of replacing it.
      name: follow
    description: Adds or removes an SSH authorized key
    name: linux-authorized-key
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Specifies the path to the file to be managed.
      name: path
      required: true
    - description: Desired capability to set (with operator and flags, if state is
        `present`) or remove (if state is `absent`)
      name: capability
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the entry should be present or absent in the file's capabilities.
      name: state
      predefined:
      - absent
      - present
    description: Manage Linux capabilities
    name: linux-capabilities
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Description of a crontab entry or, if env is set, the name of environment variable.
        Required if `state=absent`.
        Note that if name is not set and `state=present`, then a new crontab entry will always be created, regardless of existing ones.
        This parameter will always be required in future releases.
      name: name
    - description: |-
        The specific user whose crontab should be modified.
        When unset, this parameter defaults to using `root`.
      name: user
    - description: |-
        The command to execute or, if env is set, the value of environment variable.
        The command should not contain line breaks.
        Required if `state=present`.
      name: job
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether to ensure the job or environment variable is present or
        absent.
      name: state
      predefined:
      - absent
      - present
    - description: |-
        If specified, uses this file instead of an individual user's crontab.
        If this is a relative path, it is interpreted with respect to `/etc/cron.d`.
        If it is absolute, it will typically be `/etc/crontab`.
        Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters, digits, underscores, and hyphens.
        To use the `cron_file` parameter you must specify the `user` as well.
      name: cron_file
    - default: false
      defaultValue: "False"
      description: If set, create a backup of the crontab before it is modified. The
        location of the backup is returned in the `backup_file` variable by this module.
      name: backup
    - default: false
      defaultValue: '*'
      description: Minute when the job should run ( 0-59, *, */2, etc )
      name: minute
    - default: false
      defaultValue: '*'
      description: Hour when the job should run ( 0-23, *, */2, etc )
      name: hour
    - default: false
      defaultValue: '*'
      description: Day of the month the job should run ( 1-31, *, */2, etc )
      name: day
    - default: false
      defaultValue: '*'
      description: Month of the year the job should run ( 1-12, *, */2, etc )
      name: month
    - default: false
      defaultValue: '*'
      description: Day of the week that the job should run ( 0-6 for Sunday-Saturday,
        *, etc )
      name: weekday
    - default: false
      defaultValue: "False"
      description: If the job should be run at reboot. This option is deprecated.
        Users should use special_time.
      name: reboot
    - auto: PREDEFINED
      description: Special time specification nickname.
      name: special_time
      predefined:
      - annually
      - daily
      - hourly
      - monthly
      - reboot
      - weekly
      - yearly
    - default: false
      defaultValue: "False"
      description: |-
        If the job should be disabled (commented out) in the crontab.
        Only has effect if `state=present`.
      name: disabled
    - default: false
      defaultValue: "False"
      description: |-
        If set, manages a crontab's environment variable.
        New variables are added on top of crontab.
        `name` and `value` parameters are the name and the value of environment variable.
      name: env
    - description: |-
        Used with `state=present` and `env`.
        If specified, the environment variable will be inserted after the declaration of specified environment variable.
      name: insertafter
    - description: |-
        Used with `state=present` and `env`.
        If specified, the environment variable will be inserted before the declaration of specified environment variable.
      name: insertbefore
    description: Manage cron.d and crontab entries
    name: linux-cron
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the crontab variable.
      name: name
      required: true
    - description: |-
        The value to set this variable to.
        Required if `state=present`.
      name: value
    - description: |-
        If specified, the variable will be inserted after the variable specified.
        Used with `state=present`.
      name: insertafter
    - description: Used with `state=present`. If specified, the variable will be inserted
        just before the variable specified.
      name: insertbefore
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether to ensure that the variable is present or absent.
      name: state
      predefined:
      - absent
      - present
    - description: |-
        The specific user whose crontab should be modified.
        This parameter defaults to `root` when unset.
      name: user
    - description: |-
        If specified, uses this file instead of an individual user's crontab.
        Without a leading `/`, this is assumed to be in `/etc/cron.d`.
        With a leading `/`, this is taken as absolute.
      name: cron_file
    - default: false
      defaultValue: "False"
      description: If set, create a backup of the crontab before it is modified. The
        location of the backup is returned in the `backup` variable by this module.
      name: backup
    description: Manage variables in crontabs
    name: linux-cronvar
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A dconf key to modify or read from the dconf database.
      name: key
      required: true
    - description: Value to set for the specified dconf key. Value should be specified
        in GVariant format. Due to complexity of this format, it is best to have a
        look at existing values in the dconf database. Required for `state=present`.
      name: value
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The action to take upon the key/value.
      name: state
      predefined:
      - read
      - present
      - absent
    description: Modify and read dconf database
    name: linux-dconf
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of package to configure.
      name: name
      required: true
    - description: A debconf configuration setting.
      name: question
    - auto: PREDEFINED
      description: |-
        The type of the value supplied.
        It is highly recommended to add `no_log=True` to task while specifying `vtype=password`.
        `seen` was added in Ansible 2.2.
      name: vtype
      predefined:
      - boolean
      - error
      - multiselect
      - note
      - password
      - seen
      - select
      - string
      - text
      - title
    - description: Value to set the configuration to.
      name: value
    - default: false
      defaultValue: "False"
      description: Do not set 'seen' flag when pre-seeding.
      name: unseen
    description: Configure a .deb package
    name: linux-debconf
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      description: |-
        Filesystem type to be created.
        reiserfs support was added in 2.2.
        lvm support was added in 2.5.
        since 2.5, `dev` can be an image file.
        vfat support was added in 2.5
        ocfs2 support was added in 2.6
        f2fs support was added in 2.7
        swap support was added in 2.8
      name: fstype
      predefined:
      - btrfs
      - ext2
      - ext3
      - ext4
      - ext4dev
      - f2fs
      - lvm
      - ocfs2
      - reiserfs
      - xfs
      - vfat
      - swap
      required: true
    - description: Target path to device or image file.
      name: dev
      required: true
    - default: false
      defaultValue: "no"
      description: If `yes`, allows to create new filesystem on devices that already
        has filesystem.
      name: force
    - default: false
      defaultValue: "no"
      description: |-
        If `yes`, if the block device and filesystem size differ, grow the filesystem into the space.
        Supported for `ext2`, `ext3`, `ext4`, `ext4dev`, `f2fs`, `lvm`, `xfs`, `vfat`, `swap` filesystems.
        XFS Will only grow if mounted.
        vFAT will likely fail if fatresize < 1.04.
      name: resizefs
    - description: List of options to be passed to mkfs command.
      name: opts
    description: Makes a filesystem
    name: linux-filesystem
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Name of a service to add/remove to/from firewalld.
        The service must be listed in output of firewall-cmd --get-services.
      name: service
    - description: |-
        Name of a port or port range to add/remove to/from firewalld.
        Must be in the form PORT/PROTOCOL or PORT-PORT/PROTOCOL for port ranges.
      name: port
    - description: Rich rule to add/remove to/from firewalld.
      name: rich_rule
    - description: The source/network you would like to add/remove to/from firewalld.
      name: source
    - description: The interface you would like to add/remove to/from a zone in firewalld.
      name: interface
    - description: The ICMP block you would like to add/remove to/from a zone in firewalld.
      name: icmp_block
    - description: Enable/Disable inversion of ICMP blocks for a zone in firewalld.
      name: icmp_block_inversion
    - description: |-
        The firewalld zone to add/remove to/from.
        Note that the default zone can be configured per system but `public` is default from upstream.
        Available choices can be extended based on per-system configs, listed here are "out of the box" defaults.
        Possible values include `block`, `dmz`, `drop`, `external`, `home`, `internal`, `public`, `trusted`, `work`.
      name: zone
    - description: |-
        Should this configuration be in the running firewalld configuration or persist across reboots.
        As of Ansible 2.3, permanent operations can operate on firewalld configs when it is not running (requires firewalld >= 3.0.9).
        Note that if this is `no`, immediate is assumed `yes`.
      name: permanent
    - default: false
      defaultValue: "False"
      description: Should this configuration be applied immediately, if set as permanent.
      name: immediate
    - auto: PREDEFINED
      description: |-
        Enable or disable a setting.
        For ports: Should this port accept (enabled) or reject (disabled) connections.
        The states `present` and `absent` can only be used in zone level operations (i.e. when no other parameters but zone and state are set).
      name: state
      predefined:
      - absent
      - disabled
      - enabled
      - present
      required: true
    - default: false
      defaultValue: "0"
      description: The amount of time the rule should be in effect for when non-permanent.
      name: timeout
    - description: The masquerade setting you would like to enable/disable to/from
        zones within firewalld.
      name: masquerade
    - description: Whether to run this module even when firewalld is offline.
      name: offline
    description: Manage arbitrary ports/services with firewalld
    name: linux-firewalld
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        A toggle that controls if the fact modules are executed in parallel or serially and in order. This can guarantee the merge order of module facts at the expense of performance.
        By default it will be true if more than one fact module is used.
      name: parallel
    description: Gathers facts about remote hosts
    name: linux-gather-facts
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A GConf preference key is an element in the GConf repository that
        corresponds to an application preference. See man gconftool-2(1)
      name: key
      required: true
    - description: Preference keys typically have simple values such as strings, integers,
        or lists of strings and integers. This is ignored if the state is "get". See
        man gconftool-2(1)
      name: value
    - auto: PREDEFINED
      description: The type of value being set. This is ignored if the state is "get".
      name: value_type
      predefined:
      - bool
      - float
      - int
      - string
    - auto: PREDEFINED
      description: The action to take upon the key/value.
      name: state
      predefined:
      - absent
      - get
      - present
      required: true
    - description: Specify a configuration source to use rather than the default path.
        See man gconftool-2(1)
      name: config_source
    - default: false
      defaultValue: "no"
      description: Access the config database directly, bypassing server.  If direct
        is specified then the config_source must be specified as well. See man gconftool-2(1)
      name: direct
    description: Edit GNOME Configurations
    name: linux-gconftool2
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of a getent database supported by the target system (passwd,
        group, hosts, etc).
      name: database
      required: true
    - default: false
      description: Key from which to return values from the specified database, otherwise
        the full contents are returned.
      name: key
    - description: |-
        Override all databases with the specified service
        The underlying system must support the service flag which is not always available.
      name: service
    - description: "Character used to split the database values into lists/arrays\
        \ such as ':' or '\t', otherwise  it will try to pick one depending on the\
        \ database."
      name: split
    - default: false
      defaultValue: "yes"
      description: If a supplied key is missing this will make the task fail if `yes`.
      name: fail_key
    description: A wrapper to the unix getent utility
    name: linux-getent
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the group to manage.
      name: name
      required: true
    - description: Optional `GID` to set for the group.
      name: gid
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the group should be present or not on the remote host.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "False"
      description: If `yes`, indicates that the group created is a system group.
      name: system
    - default: false
      defaultValue: "False"
      description: |-
        Forces the use of "local" command alternatives on platforms that implement it.
        This is useful in environments that use centralized authentication when you want to manipulate the local groups. (e.g. it uses `lgroupadd` instead of `groupadd`).
        This requires that these commands exist on the targeted host, otherwise it will be a fatal error.
      name: local
    - default: false
      defaultValue: "False"
      description: |-
        This option allows to change the group ID to a non-unique value. Requires `gid`.
        Not supported on macOS or BusyBox distributions.
      name: non_unique
    description: Add or remove groups
    name: linux-group
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the host
      name: name
      required: true
    - auto: PREDEFINED
      description: |-
        Which strategy to use to update the hostname.
        If not set we try to autodetect, but this can be problematic, specially with containers as they can present misleading information.
      name: use
      predefined:
      - generic
      - debian
      - sles
      - redhat
      - alpine
      - systemd
      - openrc
      - openbsd
      - solaris
      - freebsd
    description: Manage hostname
    name: linux-hostname
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: /etc/network/interfaces
      description: Path to the interfaces file
      name: dest
    - description: Name of the interface, required for value changes or option remove
      name: iface
    - description: Address family of the interface, useful if same interface name
        is used for both inet and inet6
      name: address_family
    - description: Name of the option, required for value changes or option remove
      name: option
    - description: If `option` is not presented for the `interface` and `state` is
        `present` option will be added. If `option` already exists and is not `pre-up`,
        `up`, `post-up` or `down`, it's value will be updated. `pre-up`, `up`, `post-up`
        and `down` options can't be updated, only adding new options, removing existing
        ones or cleaning the whole option set are supported
      name: value
    - default: false
      defaultValue: "no"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: If set to `absent` the option or section will be removed if present
        instead of created.
      name: state
      predefined:
      - present
      - absent
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Tweak settings in /etc/network/interfaces files
    name: linux-interfaces-file
    outputs:
    - contextPath: Linux.ifaces.ifaces
      description: interface dictionary
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: filter
      description: |-
        This option specifies the packet matching table which the command should operate on.
        If the kernel is configured with automatic module loading, an attempt will be made to load the appropriate module for that table if it is not already there.
      name: table
      predefined:
      - filter
      - nat
      - mangle
      - raw
      - security
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the rule should be absent or present.
      name: state
      predefined:
      - absent
      - present
    - auto: PREDEFINED
      default: false
      defaultValue: append
      description: |-
        Whether the rule should be appended at the bottom or inserted at the top.
        If the rule already exists the chain will not be modified.
      name: action
      predefined:
      - append
      - insert
    - description: |-
        Insert the rule as the given rule number.
        This works only with `action=insert`.
      name: rule_num
    - auto: PREDEFINED
      default: false
      defaultValue: ipv4
      description: Which version of the IP protocol this rule should apply to.
      name: ip_version
      predefined:
      - ipv4
      - ipv6
    - description: |-
        Specify the iptables chain to modify.
        This could be a user-defined chain or one of the standard iptables chains, like `INPUT`, `FORWARD`, `OUTPUT`, `PREROUTING`, `POSTROUTING`, `SECMARK` or `CONNSECMARK`.
      name: chain
    - description: |-
        The protocol of the rule or of the packet to check.
        The specified protocol can be one of `tcp`, `udp`, `udplite`, `icmp`, `esp`, `ah`, `sctp` or the special keyword `all`, or it can be a numeric value, representing one of these protocols or a different one.
        A protocol name from `/etc/protocols` is also allowed.
        A `!` argument before the protocol inverts the test.
        The number zero is equivalent to all.
        `all` will match with all protocols and is taken as default when this option is omitted.
      name: protocol
    - description: |-
        Source specification.
        Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address.
        Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea.
        The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A `!` argument before the address specification inverts the sense of the address.
      name: source
    - description: |-
        Destination specification.
        Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address.
        Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea.
        The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A `!` argument before the address specification inverts the sense of the address.
      name: destination
    - default: false
      defaultValue: '{}'
      description: |-
        TCP flags specification.
        `tcp_flags` expects a dict with the two keys `flags` and `flags_set`.
      isArray: true
      name: tcp_flags
    - default: false
      defaultValue: '[]'
      description: |-
        Specifies a match to use, that is, an extension module that tests for a specific property.
        The set of matches make up the condition under which a target is invoked.
        Matches are evaluated first to last if specified as an array and work in short-circuit fashion, i.e. if one extension yields false, evaluation will stop.
      isArray: true
      name: match
    - description: |-
        This specifies the target of the rule; i.e., what to do if the packet matches it.
        The target can be a user-defined chain (other than the one this rule is in), one of the special builtin targets which decide the fate of the packet immediately, or an extension (see EXTENSIONS below).
        If this option is omitted in a rule (and the goto parameter is not used), then matching the rule will have no effect on the packet's fate, but the counters on the rule will be incremented.
      name: jump
    - description: |-
        This specifies the IP address of host to send the cloned packets.
        This option is only valid when `jump` is set to `TEE`.
      name: gateway
    - description: Specifies a log text for the rule. Only make sense with a LOG jump.
      name: log_prefix
    - auto: PREDEFINED
      description: |-
        Logging level according to the syslogd-defined priorities.
        The value can be strings or numbers from 1-8.
        This parameter is only applicable if `jump` is set to `LOG`.
      name: log_level
      predefined:
      - "0"
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - emerg
      - alert
      - crit
      - error
      - warning
      - notice
      - info
      - debug
    - description: |-
        This specifies that the processing should continue in a user specified chain.
        Unlike the jump argument return will not continue processing in this chain but instead in the chain that called us via jump.
      name: goto
    - description: |-
        Name of an interface via which a packet was received (only for packets entering the `INPUT`, `FORWARD` and `PREROUTING` chains).
        When the `!` argument is used before the interface name, the sense is inverted.
        If the interface name ends in a `+`, then any interface which begins with this name will match.
        If this option is omitted, any interface name will match.
      name: in_interface
    - description: |-
        Name of an interface via which a packet is going to be sent (for packets entering the `FORWARD`, `OUTPUT` and `POSTROUTING` chains).
        When the `!` argument is used before the interface name, the sense is inverted.
        If the interface name ends in a `+`, then any interface which begins with this name will match.
        If this option is omitted, any interface name will match.
      name: out_interface
    - description: |-
        This means that the rule only refers to second and further fragments of fragmented packets.
        Since there is no way to tell the source or destination ports of such a packet (or ICMP type), such a packet will not match any rules which specify them.
        When the "!" argument precedes fragment argument, the rule will only match head fragments, or unfragmented packets.
      name: fragment
    - description: This enables the administrator to initialize the packet and byte
        counters of a rule (during `INSERT`, `APPEND`, `REPLACE` operations).
      name: set_counters
    - description: |-
        Source port or port range specification.
        This can either be a service name or a port number.
        An inclusive range can also be specified, using the format `first:last`.
        If the first port is omitted, `0` is assumed; if the last is omitted, `65535` is assumed.
        If the first port is greater than the second one they will be swapped.
      name: source_port
    - description: 'Destination port or port range specification. This can either
        be a service name or a port number. An inclusive range can also be specified,
        using the format first:last. If the first port is omitted, ''0'' is assumed;
        if the last is omitted, ''65535'' is assumed. If the first port is greater
        than the second one they will be swapped. This is only valid if the rule also
        specifies one of the following protocols: tcp, udp, dccp or sctp.'
      name: destination_port
    - description: |-
        This specifies a destination port or range of ports to use, without this, the destination port is never altered.
        This is only valid if the rule also specifies one of the protocol `tcp`, `udp`, `dccp` or `sctp`.
      name: to_ports
    - description: |-
        This specifies a destination address to use with `DNAT`.
        Without this, the destination address is never altered.
      name: to_destination
    - description: |-
        This specifies a source address to use with `SNAT`.
        Without this, the source address is never altered.
      name: to_source
    - auto: PREDEFINED
      default: false
      defaultValue: ignore
      description: |-
        This allows matching packets that have the SYN bit set and the ACK and RST bits unset.
        When negated, this matches all packets with the RST or the ACK bits set.
      name: syn
      predefined:
      - ignore
      - match
      - negate
    - description: |-
        This allows specifying a DSCP mark to be added to packets. It takes either an integer or hex value.
        Mutually exclusive with `set_dscp_mark_class`.
      name: set_dscp_mark
    - description: |-
        This allows specifying a predefined DiffServ class which will be translated to the corresponding DSCP mark.
        Mutually exclusive with `set_dscp_mark`.
      name: set_dscp_mark_class
    - description: This specifies a comment that will be added to the rule.
      name: comment
    - default: false
      defaultValue: '[]'
      description: |-
        `ctstate` is a list of the connection states to match in the conntrack module.
        Possible states are `INVALID`, `NEW`, `ESTABLISHED`, `RELATED`, `UNTRACKED`, `SNAT`, `DNAT`
      isArray: true
      name: ctstate
    - description: Specifies the source IP range to match in the iprange module.
      name: src_range
    - description: Specifies the destination IP range to match in the iprange module.
      name: dst_range
    - description: |-
        Specifies the maximum average number of matches to allow per second.
        The number can specify units explicitly, using `/second', `/minute', `/hour' or `/day', or parts of them (so `5/second' is the same as `5/s').
      name: limit
    - description: Specifies the maximum burst before the above limit kicks in.
      name: limit_burst
    - description: |-
        Specifies the UID or username to use in match by owner rule.
        From Ansible 2.6 when the `!` argument is prepended then the it inverts the rule to apply instead to all users except that one specified.
      name: uid_owner
    - description: Specifies the GID or group to use in match by owner rule.
      name: gid_owner
    - description: 'Specifies the error packet type to return while rejecting. It
        implies "jump: REJECT"'
      name: reject_with
    - description: This allows specification of the ICMP type, which can be a numeric
        ICMP type, type/code pair, or one of the ICMP type names shown by the command
        'iptables -p icmp -h'
      name: icmp_type
    - description: |-
        Flushes the specified table and chain of all rules.
        If no chain is specified then the entire table is purged.
        Ignores all other parameters.
      name: flush
    - auto: PREDEFINED
      description: |-
        Set the policy for the chain to the given target.
        Only built-in chains can have policies.
        This parameter requires the `chain` parameter.
        Ignores all other parameters.
      name: policy
      predefined:
      - ACCEPT
      - DROP
      - QUEUE
      - RETURN
    description: Modify iptables rules
    name: linux-iptables
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Basic URL to fetch SSL certificate from.
        One of `cert_url` or `cert_path` is required to load certificate.
      name: cert_url
    - default: false
      defaultValue: "443"
      description: |-
        Port to connect to URL.
        This will be used to create server URL:PORT.
      name: cert_port
    - description: |-
        Local path to load certificate from.
        One of `cert_url` or `cert_path` is required to load certificate.
      name: cert_path
    - description: |-
        Imported certificate alias.
        The alias is used when checking for the presence of a certificate in the keystore.
      name: cert_alias
    - description: Local path to load PKCS12 keystore from.
      name: pkcs12_path
    - default: false
      description: Password for importing from PKCS12 keystore.
      name: pkcs12_password
    - description: Alias in the PKCS12 keystore.
      name: pkcs12_alias
    - description: Path to keystore.
      name: keystore_path
    - description: Keystore password.
      name: keystore_pass
      required: true
    - description: Create keystore if it does not exist.
      name: keystore_create
    - description: Keystore type (JCEKS, JKS).
      name: keystore_type
    - default: false
      defaultValue: keytool
      description: Path to keytool binary if not used we search in PATH for it.
      name: executable
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Defines action which can be either certificate import or removal.
      name: state
      predefined:
      - absent
      - present
    description: Uses keytool to import/remove key from java keystore (cacerts)
    name: linux-java-cert
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the certificate.
      name: name
      required: true
    - description: Certificate that should be used to create the key store.
      name: certificate
      required: true
    - description: Private key that should be used to create the key store.
      name: private_key
      required: true
    - description: Password that should be used to secure the key store.
      name: password
      required: true
    - description: Absolute path where the jks should be generated.
      name: dest
      required: true
    - description: Name of the user that should own jks file.
      name: owner
    - description: Name of the group that should own jks file.
      name: group
    - description: Mode the file should be.
      name: mode
    - default: false
      defaultValue: "no"
      description: Key store will be created even if it already exists.
      name: force
    description: Create or delete a Java keystore in JKS format.
    name: linux-java-keystore
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of kernel module to black- or whitelist.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the module should be present in the blacklist or absent.
      name: state
      predefined:
      - absent
      - present
    - description: If specified, use this blacklist file instead of `/etc/modprobe.d/blacklist-ansible.conf`.
      name: blacklist_file
    description: Blacklist kernel modules
    name: linux-kernel-blacklist
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The host to add or remove (must match a host specified in key). It will be converted to lowercase so that ssh-keygen can find it.
        Must match with <hostname> or <ip> present in key attribute.
      name: name
      required: true
    - description: |-
        The SSH public host key, as a string (required if state=present, optional when state=absent, in which case all keys for the host are removed). The key must be in the right format for ssh (see sshd(8), section "SSH_KNOWN_HOSTS FILE FORMAT").
        Specifically, the key should not match the format that is found in an SSH pubkey file, but should rather have the hostname prepended to a line that includes the pubkey, the same way that it would appear in the known_hosts file. The value prepended to the line must also match the value of the name parameter.
        Should be of format `<hostname[,IP]> ssh-rsa <pubkey>`
      name: key
    - default: false
      defaultValue: (homedir)+/.ssh/known_hosts
      description: The known_hosts file to edit
      name: path
    - default: false
      defaultValue: "no"
      description: Hash the hostname in the known_hosts file
      name: hash_host
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: '`present` to add the host key, `absent` to remove it.'
      name: state
      predefined:
      - present
      - absent
    description: Add or remove a host from the C(known_hosts) file
    name: linux-known-hosts
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    description: Gather facts on processes listening on TCP and UDP ports.
    name: linux-listen-ports-facts
    outputs:
    - contextPath: Linux.ansible_facts.tcp_listen
      description: A list of processes that are listening on a TCP port.
    - contextPath: Linux.ansible_facts.udp_listen
      description: A list of processes that are listening on a UDP port.
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name and encoding of the locale, such as "en_GB.UTF-8".
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the locale shall be present.
      name: state
      predefined:
      - absent
      - present
    description: Creates or removes locales
    name: linux-locale-gen
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of kernel module to manage.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the module should be present or absent.
      name: state
      predefined:
      - absent
      - present
    - default: false
      description: Modules parameters.
      name: params
    description: Load or unload kernel modules
    name: linux-modprobe
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Path to the mount point (e.g. `/mnt/files`).
        Before Ansible 2.3 this option was only usable as `dest`, `destfile` and `name`.
      name: path
      required: true
    - description: |-
        Device to be mounted on `path`.
        Required when `state` set to `present` or `mounted`.
      name: src
    - description: |-
        Filesystem type.
        Required when `state` is `present` or `mounted`.
      name: fstype
    - description: Mount options (see fstab(5), or vfstab(4) on Solaris).
      name: opts
    - default: false
      defaultValue: "0"
      description: |-
        Dump (see fstab(5)).
        Note that if set to `null` and `state` set to `present`, it will cease to work and duplicate entries will be made with subsequent runs.
        Has no effect on Solaris systems.
      name: dump
    - default: false
      defaultValue: "0"
      description: |-
        Passno (see fstab(5)).
        Note that if set to `null` and `state` set to `present`, it will cease to work and duplicate entries will be made with subsequent runs.
        Deprecated on Solaris systems.
      name: passno
    - auto: PREDEFINED
      description: |-
        If `mounted`, the device will be actively mounted and appropriately configured in `fstab`. If the mount point is not present, the mount point will be created.
        If `unmounted`, the device will be unmounted without changing `fstab`.
        `present` only specifies that the device is to be configured in `fstab` and does not trigger or require a mount.
        `absent` specifies that the device mount's entry will be removed from `fstab` and will also unmount the device and remove the mount point.
        `remounted` specifies that the device will be remounted for when you want to force a refresh on the mount itself (added in 2.9). This will always return changed=true.
      name: state
      predefined:
      - absent
      - mounted
      - present
      - unmounted
      - remounted
      required: true
    - description: |-
        File to use instead of `/etc/fstab`.
        You should not use this option unless you really know what you are doing.
        This might be useful if you need to configure mountpoints in a chroot environment.
        OpenBSD does not allow specifying alternate fstab files with mount so do not use this on OpenBSD with any state that operates on the live filesystem.
        This parameter defaults to /etc/fstab or /etc/vfstab on Solaris.
      name: fstab
    - default: false
      defaultValue: "True"
      description: |-
        Determines if the filesystem should be mounted on boot.
        Only applies to Solaris systems.
      name: boot
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    description: Control active and configured mount points
    name: linux-mount
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The IP address of the iSCSI target.
      name: portal
    - default: false
      defaultValue: "3260"
      description: The port on which the iSCSI target process listens.
      name: port
    - description: The iSCSI target name.
      name: target
    - description: Whether the target node should be connected.
      name: login
    - default: false
      defaultValue: CHAP
      description: The value for `discovery.sendtargets.auth.authmethod`.
      name: node_auth
    - description: The value for `discovery.sendtargets.auth.username`.
      name: node_user
    - description: The value for `discovery.sendtargets.auth.password`.
      name: node_pass
    - description: Whether the target node should be automatically connected at startup.
      name: auto_node_startup
    - description: |-
        Whether the list of target nodes on the portal should be (re)discovered and added to the persistent iSCSI database.
        Keep in mind that `iscsiadm` discovery resets configuration, like `node.startup` to manual, hence combined with `auto_node_startup=yes` will always return a changed state.
      name: discover
    - description: Whether the list of nodes in the persistent iSCSI database should
        be returned by the module.
      name: show_nodes
    description: Manage iSCSI targets with Open-iSCSI
    name: linux-open-iscsi
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A username, @groupname, wildcard, uid/gid range.
      name: domain
      required: true
    - auto: PREDEFINED
      description: Limit type, see `man 5 limits.conf` for an explanation
      name: limit_type
      predefined:
      - hard
      - soft
      - '-'
      required: true
    - auto: PREDEFINED
      description: The limit to be set
      name: limit_item
      predefined:
      - core
      - data
      - fsize
      - memlock
      - nofile
      - rss
      - stack
      - cpu
      - nproc
      - as
      - maxlogins
      - maxsyslogins
      - priority
      - locks
      - sigpending
      - msgqueue
      - nice
      - rtprio
      - chroot
      required: true
    - description: The value of the limit.
      name: value
      required: true
    - default: false
      defaultValue: "no"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - default: false
      defaultValue: "no"
      description: If set to `yes`, the minimal value will be used or conserved. If
        the specified value is inferior to the value in the file, file content is
        replaced with the new value, else content is not modified.
      name: use_min
    - default: false
      defaultValue: "no"
      description: If set to `yes`, the maximal value will be used or conserved. If
        the specified value is superior to the value in the file, file content is
        replaced with the new value, else content is not modified.
      name: use_max
    - default: false
      defaultValue: /etc/security/limits.conf
      description: Modify the limits.conf path.
      name: dest
    - default: false
      description: Comment associated with the limit.
      name: comment
    description: Modify Linux PAM limits
    name: linux-pam-limits
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name generally refers to the PAM service file to change, for
        example system-auth.
      name: name
      required: true
    - auto: PREDEFINED
      description: |-
        The type of the PAM rule being modified.
        The `type`, `control` and `module_path` all must match a rule to be modified.
      name: type
      predefined:
      - account
      - -account
      - auth
      - -auth
      - password
      - -password
      - session
      - -session
      required: true
    - description: |-
        The control of the PAM rule being modified.
        This may be a complicated control with brackets. If this is the case, be sure to put "[bracketed controls]" in quotes.
        The `type`, `control` and `module_path` all must match a rule to be modified.
      name: control
      required: true
    - description: |-
        The module path of the PAM rule being modified.
        The `type`, `control` and `module_path` all must match a rule to be modified.
      name: module_path
      required: true
    - auto: PREDEFINED
      description: The new type to assign to the new rule.
      name: new_type
      predefined:
      - account
      - -account
      - auth
      - -auth
      - password
      - -password
      - session
      - -session
    - description: The new control to assign to the new rule.
      name: new_control
    - description: The new module path to be assigned to the new rule.
      name: new_module_path
    - description: |-
        When state is `updated`, the module_arguments will replace existing module_arguments.
        When state is `args_absent` args matching those listed in module_arguments will be removed.
        When state is `args_present` any args listed in module_arguments are added if missing from the existing rule.
        Furthermore, if the module argument takes a value denoted by `=`, the value will be changed to that specified in module_arguments.
      isArray: true
      name: module_arguments
    - auto: PREDEFINED
      default: false
      defaultValue: updated
      description: |-
        The default of `updated` will modify an existing rule if type, control and module_path all match an existing rule.
        With `before`, the new rule will be inserted before a rule matching type, control and module_path.
        Similarly, with `after`, the new rule will be inserted after an existing rulematching type, control and module_path.
        With either `before` or `after` new_type, new_control, and new_module_path must all be specified.
        If state is `args_absent` or `args_present`, new_type, new_control, and new_module_path will be ignored.
        State `absent` will remove the rule.  The 'absent' state was added in Ansible 2.4.
      name: state
      predefined:
      - absent
      - before
      - after
      - args_absent
      - args_present
      - updated
    - default: false
      defaultValue: /etc/pam.d
      description: This is the path to the PAM service files.
      name: path
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    description: Manage PAM Modules
    name: linux-pamd
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The block device (disk) where to operate.
      name: device
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: optimal
      description: Set alignment for newly created partitions.
      name: align
      predefined:
      - cylinder
      - minimal
      - none
      - optimal
    - description: |-
        The number of the partition to work with or the number of the partition that will be created.
        Required when performing any action on the disk, except fetching information.
      name: number
    - auto: PREDEFINED
      default: false
      defaultValue: KiB
      description: |-
        Selects the current default unit that Parted will use to display locations and capacities on the disk and to interpret those given by the user if they are not suffixed by an unit.
        When fetching information about a disk, it is always recommended to specify a unit.
      name: unit
      predefined:
      - s
      - B
      - KB
      - KiB
      - MB
      - MiB
      - GB
      - GiB
      - TB
      - TiB
      - '%'
      - cyl
      - chs
      - compact
    - auto: PREDEFINED
      default: false
      defaultValue: msdos
      description: Creates a new disk label.
      name: label
      predefined:
      - aix
      - amiga
      - bsd
      - dvh
      - gpt
      - loop
      - mac
      - msdos
      - pc98
      - sun
    - auto: PREDEFINED
      default: false
      defaultValue: primary
      description: |-
        May be specified only with 'msdos' or 'dvh' partition tables.
        A `name` must be specified for a 'gpt' partition table.
        Neither `part_type` nor `name` may be used with a 'sun' partition table.
      name: part_type
      predefined:
      - extended
      - logical
      - primary
    - default: false
      defaultValue: 0%
      description: |-
        Where the partition will start as offset from the beginning of the disk, that is, the "distance" from the start of the disk.
        The distance can be specified with all the units supported by parted (except compat) and it is case sensitive, e.g. `10GiB`, `15%`.
      name: part_start
    - default: false
      defaultValue: 100%
      description: |-
        Where the partition will end as offset from the beginning of the disk, that is, the "distance" from the start of the disk.
        The distance can be specified with all the units supported by parted (except compat) and it is case sensitive, e.g. `10GiB`, `15%`.
      name: part_end
    - description: Sets the name for the partition number (GPT, Mac, MIPS and PC98
        only).
      name: name
    - description: A list of the flags that has to be set on the partition.
      isArray: true
      name: flags
    - auto: PREDEFINED
      default: false
      defaultValue: info
      description: |-
        Whether to create or delete a partition.
        If set to `info` the module will only return the device information.
      name: state
      predefined:
      - absent
      - present
      - info
    description: Configure block device partitions
    name: linux-parted
    outputs:
    - contextPath: Linux.partition_info.device
      description: Generic device information.
    - contextPath: Linux.partition_info.partitions
      description: List of device partitions.
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: the name of the process you want to get PID for.
      name: name
      required: true
    description: Retrieves process IDs list if the process is running otherwise return
      empty list
    name: linux-pids
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: pong
      description: |-
        Data to return for the `ping` return value.
        If this parameter is set to `crash`, the module will cause an exception.
      name: data
    description: Try to connect to host, verify a usable python and return C(pong)
      on success
    name: linux-ping
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |
        A list of version-likes or module names to check for installation. Supported operators: <, >, <=, >=, or ==. The bare module name like I(ansible), the module with a specific version like I(boto3==1.6.1), or a partial version like I(requests>2) are all valid specifications.
      name: dependencies
    description: Show python path and assert dependency versions
    name: linux-python-requirements-info
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: "0"
      description: |-
        Seconds to wait before reboot. Passed as a parameter to the reboot command.
        On Linux, macOS and OpenBSD, this is converted to minutes and rounded down. If less than 60, it will be set to 0.
        On Solaris and FreeBSD, this will be seconds.
      name: pre_reboot_delay
    - default: false
      defaultValue: "0"
      description: |-
        Seconds to wait after the reboot command was successful before attempting to validate the system rebooted successfully.
        This is useful if you want wait for something to settle despite your connection already working.
      name: post_reboot_delay
    - default: false
      defaultValue: "600"
      description: |-
        Maximum seconds to wait for machine to reboot and respond to a test command.
        This timeout is evaluated separately for both reboot verification and test command success so the maximum execution time for the module is twice this amount.
      name: reboot_timeout
    - description: |-
        Maximum seconds to wait for a successful connection to the managed hosts before trying again.
        If unspecified, the default setting for the underlying connection plugin is used.
      name: connect_timeout
    - default: false
      defaultValue: whoami
      description: Command to run on the rebooted host and expect success from to
        determine the machine is ready for further tasks.
      name: test_command
    - default: false
      defaultValue: Reboot initiated by Ansible
      description: Message to display to users before reboot.
      name: msg
    - default: false
      defaultValue: '[''/sbin'', ''/usr/sbin'', ''/usr/local/sbin'']'
      description: |-
        Paths to search on the remote machine for the `shutdown` command.
        `Only` these paths will be searched for the `shutdown` command. `PATH` is ignored in the remote node when searching for the `shutdown` command.
      isArray: true
      name: search_paths
    description: Reboot a machine
    name: linux-reboot
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the boolean to configure.
      name: name
      required: true
    - default: false
      defaultValue: "no"
      description: Set to `yes` if the boolean setting should survive a reboot.
      name: persistent
    - description: Desired boolean value
      name: state
      required: true
    - default: false
      defaultValue: "False"
      description: Useful for scenarios (chrooted environment) that you can't get
        the real SELinux state.
      name: ignore_selinux_state
    description: Toggles SELinux booleans
    name: linux-seboolean
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Target path (expression).
      name: target
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: a
      description: |-
        The file type that should have SELinux contexts applied.
        The following file type options are available:
        `a` for all files,
        `b` for block devices,
        `c` for character devices,
        `d` for directories,
        `f` for regular files,
        `l` for symbolic links,
        `p` for named pipes,
        `s` for socket files.
      name: ftype
      predefined:
      - a
      - b
      - c
      - d
      - f
      - l
      - p
      - s
    - description: SELinux type for the specified target.
      name: setype
      required: true
    - description: SELinux user for the specified target.
      name: seuser
    - description: SELinux range for the specified target.
      name: selevel
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the SELinux file context must be `absent` or `present`.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "True"
      description: |-
        Reload SELinux policy after commit.
        Note that this does not apply SELinux file contexts to existing files.
      name: reload
    - default: false
      defaultValue: "False"
      description: Useful for scenarios (chrooted environment) that you can't get
        the real SELinux state.
      name: ignore_selinux_state
    description: Manages SELinux file context mapping definitions
    name: linux-sefcontext
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of the SELinux policy to use (e.g. `targeted`) will be
        required if state is not `disabled`.
      name: policy
    - auto: PREDEFINED
      description: The SELinux mode.
      name: state
      predefined:
      - disabled
      - enforcing
      - permissive
      required: true
    - default: false
      defaultValue: /etc/selinux/config
      description: The path to the SELinux configuration file, if non-standard.
      name: configfile
    description: Change policy and state of SELinux
    name: linux-selinux
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      description: The domain that will be added or removed from the list of permissive
        domains.
      name: domain
      required: true
    - description: Indicate if the domain should or should not be set as permissive.
      name: permissive
      required: true
    - default: false
      defaultValue: "False"
      description: |-
        Disable reloading of the SELinux policy after making change to a domain's permissive setting.
        The default is `no`, which causes policy to be reloaded when a domain changes state.
        Reloading the policy does not work on older versions of the `policycoreutils-python` library, for example in EL 6."
      name: no_reload
    - description: Name of the SELinux policy store to use.
      name: store
    description: Change permissive domain in SELinux policy
    name: linux-selinux-permissive
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: a Linux user
      name: login
      required: true
    - description: SELinux user name
      name: seuser
      required: true
    - default: false
      defaultValue: s0
      description: MLS/MCS Security Range (MLS/MCS Systems only) SELinux Range for
        SELinux login mapping defaults to the SELinux user record range.
      name: selevel
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Desired mapping value.
      name: state
      predefined:
      - present
      - absent
      required: true
    - default: false
      defaultValue: "True"
      description: Reload SELinux policy after commit.
      name: reload
    - default: false
      defaultValue: "False"
      description: Run independent of selinux runtime state
      name: ignore_selinux_state
    description: Manages linux user to SELinux user mapping
    name: linux-selogin
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Ports or port ranges.
        Can be a list (since 2.6) or comma separated string.
      isArray: true
      name: ports
      required: true
    - auto: PREDEFINED
      description: Protocol for the specified port.
      name: proto
      predefined:
      - tcp
      - udp
      required: true
    - description: SELinux type for the specified port.
      name: setype
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Desired boolean value.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "True"
      description: Reload SELinux policy after commit.
      name: reload
    - default: false
      defaultValue: "False"
      description: Run independent of selinux runtime state
      name: ignore_selinux_state
    description: Manages SELinux network port type definitions
    name: linux-seport
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the service.
      name: name
      required: true
    - auto: PREDEFINED
      description: |-
        `started`/`stopped` are idempotent actions that will not run commands unless necessary.
        `restarted` will always bounce the service.
        `reloaded` will always reload.
        `At least one of state and enabled are required.`
        Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally.
      name: state
      predefined:
      - reloaded
      - restarted
      - started
      - stopped
    - description: |-
        If the service is being `restarted` then sleep this many seconds between the stop and start command.
        This helps to work around badly-behaving init scripts that exit immediately after signaling a process to stop.
        Not all service managers support sleep, i.e when using systemd this setting will be ignored.
      name: sleep
    - description: |-
        If the service does not respond to the status command, name a substring to look for as would be found in the output of the `ps` command as a stand-in for a status result.
        If the string is found, the service will be assumed to be started.
      name: pattern
    - description: |-
        Whether the service should start on boot.
        `At least one of state and enabled are required.`
      name: enabled
    - default: false
      defaultValue: default
      description: |-
        For OpenRC init scripts (e.g. Gentoo) only.
        The runlevel that this service belongs to.
      name: runlevel
    - description: Additional arguments provided on the command line.
      name: arguments
    - default: false
      defaultValue: auto
      description: |-
        The service module actually uses system specific modules, normally through auto detection, this setting can force a specific module.
        Normally it uses the value of the 'ansible_service_mgr' fact and falls back to the old 'service' module when none matching is found.
      name: use
    description: Manage services
    name: linux-service
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    description: Return service state information as fact data
    name: linux-service-facts
    outputs:
    - contextPath: Linux.ansible_facts.services
      description: States of the services with service name as key.
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: all
      description: 'If supplied, restrict the additional facts collected to the given
        subset. Possible values: `all`, `min`, `hardware`, `network`, `virtual`, `ohai`,
        and `facter`. Can specify a list of values to specify a larger subset. Values
        can also be used with an initial `!` to specify that that specific subset
        should not be collected.  For instance: `!hardware,!network,!virtual,!ohai,!facter`.
        If `!all` is specified then only the min subset is collected. To avoid collecting
        even the min subset, specify `!all,!min`. To collect only specific facts,
        use `!all,!min`, and specify the particular fact subsets. Use the filter parameter
        if you do not want to display some collected facts.'
      name: gather_subset
    - default: false
      defaultValue: "10"
      description: Set the default timeout in seconds for individual fact gathering.
      name: gather_timeout
    - default: false
      defaultValue: '*'
      description: If supplied, only return facts that match this shell-style (fnmatch)
        wildcard.
      name: filter
    - default: false
      defaultValue: /etc/ansible/facts.d
      description: Path used for local ansible facts (`*.fact`) - files in this dir
        will be run (if executable) and their results be added to `ansible_local`
        facts if a file is not executable it is read. Check notes for Windows options.
        (from 2.1 on) File/results format can be JSON or INI-format. The default `fact_path`
        can be specified in `ansible.cfg` for when setup is automatically called as
        part of `gather_facts`.
      name: fact_path
    description: Gathers facts about remote hosts
    name: linux-setup
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The dot-separated path (aka `key`) specifying the sysctl variable.
      name: name
      required: true
    - description: Desired value of the sysctl key.
      name: value
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the entry should be present or absent in the sysctl file.
      name: state
      predefined:
      - present
      - absent
    - default: false
      defaultValue: "no"
      description: Use this option to ignore errors about unknown keys.
      name: ignoreerrors
    - default: false
      defaultValue: "yes"
      description: If `yes`, performs a `/sbin/sysctl -p` if the `sysctl_file` is
        updated. If `no`, does not reload `sysctl` even if the `sysctl_file` is updated.
      name: reload
    - default: false
      defaultValue: /etc/sysctl.conf
      description: Specifies the absolute path to `sysctl.conf`, if not `/etc/sysctl.conf`.
      name: sysctl_file
    - default: false
      defaultValue: "no"
      description: Verify token value with the sysctl command and set with -w if necessary
      name: sysctl_set
    description: Manage entries in sysctl.conf.
    name: linux-sysctl
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Name of the service. This parameter takes the name of exactly one service to work with.
        When using in a chroot environment you always need to specify the full name i.e. (crond.service).
      name: name
    - auto: PREDEFINED
      description: '`started`/`stopped` are idempotent actions that will not run commands
        unless necessary. `restarted` will always bounce the service. `reloaded` will
        always reload.'
      name: state
      predefined:
      - reloaded
      - restarted
      - started
      - stopped
    - description: Whether the service should start on boot. `At least one of state
        and enabled are required.`
      name: enabled
    - description: Whether to override existing symlinks.
      name: force
    - description: Whether the unit should be masked or not, a masked unit is impossible
        to start.
      name: masked
    - default: false
      defaultValue: "False"
      description: |-
        Run daemon-reload before doing any other operations, to make sure systemd has read any changes.
        When set to `yes`, runs daemon-reload even if the module does not start or stop anything.
      name: daemon_reload
    - default: false
      defaultValue: "False"
      description: Run daemon_reexec command before doing any other operations, the
        systemd manager will serialize the manager state.
      name: daemon_reexec
    - default: false
      defaultValue: "False"
      description: |-
        (deprecated) run ``systemctl`` talking to the service manager of the calling user, rather than the service manager of the system.
        This option is deprecated and will eventually be removed in 2.11. The ``scope`` option should be used instead.
      name: user
    - auto: PREDEFINED
      description: |-
        run systemctl within a given service manager scope, either as the default system scope (system), the current user's scope (user), or the scope of all users (global).
        For systemd to work with 'user', the executing user must have its own instance of dbus started (systemd requirement). The user dbus process is normally started during normal login, but not during the run of Ansible tasks. Otherwise you will probably get a 'Failed to connect to bus: no such file or directory' error.
      name: scope
      predefined:
      - system
      - user
      - global
    - default: false
      defaultValue: "False"
      description: Do not synchronously wait for the requested operation to finish.
        Enqueued job will continue without Ansible blocking on its completion.
      name: no_block
    description: Manage services
    name: linux-systemd
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the service.
      name: name
      required: true
    - auto: PREDEFINED
      description: '`started`/`stopped` are idempotent actions that will not run commands
        unless necessary. Not all init scripts support `restarted` nor `reloaded`
        natively, so these will both trigger a stop and start as needed.'
      name: state
      predefined:
      - started
      - stopped
      - restarted
      - reloaded
    - description: Whether the service should start on boot. `At least one of state
        and enabled are required.`
      name: enabled
    - default: false
      defaultValue: "1"
      description: If the service is being `restarted` or `reloaded` then sleep this
        many seconds between the stop and start command. This helps to workaround
        badly behaving services.
      name: sleep
    - description: |-
        A substring to look for as would be found in the output of the `ps` command as a stand-in for a status result.
        If the string is found, the service will be assumed to be running.
        This option is mainly for use with init scripts that don't support the 'status' option.
      name: pattern
    - description: |-
        The runlevels this script should be enabled/disabled from.
        Use this to override the defaults set by the package or init script itself.
      name: runlevels
    - description: Additional arguments provided on the command line that some init
        scripts accept.
      name: arguments
    - default: false
      defaultValue: "False"
      description: |-
        Have the module daemonize as the service itself might not do so properly.
        This is useful with badly written init scripts or daemons, which commonly manifests as the task hanging as it is still holding the tty or the service dying when the task is over as the connection closes the session.
      name: daemonize
    description: Manage SysV services.
    name: linux-sysvinit
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Name of the timezone for the system clock.
        Default is to keep current setting.
        `At least one of name and hwclock are required.`
      name: name
    - auto: PREDEFINED
      description: |-
        Whether the hardware clock is in UTC or in local timezone.
        Default is to keep current setting.
        Note that this option is recommended not to change and may fail to configure, especially on virtual environments such as AWS.
        `At least one of name and hwclock are required.`
        `Only used on Linux.`
      name: hwclock
      predefined:
      - local
      - UTC
    description: Configure timezone setting
    name: linux-timezone
    outputs:
    - contextPath: Linux.diff.before
      description: The values before change
    - contextPath: Linux.diff.after
      description: The values after change
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      description: |-
        `enabled` reloads firewall and enables firewall on boot.
        `disabled` unloads firewall and disables firewall on boot.
        `reloaded` reloads firewall.
        `reset` disables and resets firewall to installation defaults.
      name: state
      predefined:
      - disabled
      - enabled
      - reloaded
      - reset
    - auto: PREDEFINED
      description: Change the default policy for incoming or outgoing traffic.
      name: default
      predefined:
      - allow
      - deny
      - reject
    - auto: PREDEFINED
      description: Select direction for a rule or default policy command.
      name: direction
      predefined:
      - in
      - incoming
      - out
      - outgoing
      - routed
    - auto: PREDEFINED
      description: Toggles logging. Logged packets use the LOG_KERN syslog facility.
      name: logging
      predefined:
      - "on"
      - "off"
      - low
      - medium
      - high
      - full
    - description: |-
        Insert the corresponding rule as rule number NUM.
        Note that ufw numbers rules starting with 1.
      name: insert
    - auto: PREDEFINED
      default: false
      defaultValue: zero
      description: |-
        Allows to interpret the index in `insert` relative to a position.
        `zero` interprets the rule number as an absolute index (i.e. 1 is the first rule).
        `first-ipv4` interprets the rule number relative to the index of the first IPv4 rule, or relative to the position where the first IPv4 rule would be if there is currently none.
        `last-ipv4` interprets the rule number relative to the index of the last IPv4 rule, or relative to the position where the last IPv4 rule would be if there is currently none.
        `first-ipv6` interprets the rule number relative to the index of the first IPv6 rule, or relative to the position where the first IPv6 rule would be if there is currently none.
        `last-ipv6` interprets the rule number relative to the index of the last IPv6 rule, or relative to the position where the last IPv6 rule would be if there is currently none.
      name: insert_relative_to
      predefined:
      - first-ipv4
      - first-ipv6
      - last-ipv4
      - last-ipv6
      - zero
    - auto: PREDEFINED
      description: Add firewall rule
      name: rule
      predefined:
      - allow
      - deny
      - limit
      - reject
    - description: Log new connections matched to this rule
      name: log
    - default: false
      defaultValue: any
      description: Source IP address.
      name: from_ip
    - description: Source port.
      name: from_port
    - default: false
      defaultValue: any
      description: Destination IP address.
      name: to_ip
    - description: Destination port.
      name: to_port
    - auto: PREDEFINED
      description: TCP/IP protocol.
      name: proto
      predefined:
      - any
      - tcp
      - udp
      - ipv6
      - esp
      - ah
      - gre
      - igmp
    - description: Use profile located in `/etc/ufw/applications.d`.
      name: name
    - description: Delete rule.
      name: delete
    - description: Specify interface for rule.
      name: interface
    - description: Apply the rule to routed/forwarded packets.
      name: route
    - description: Add a comment to the rule. Requires UFW version >=0.35.
      name: comment
    description: Manage firewall with UFW
    name: linux-ufw
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the user to create, remove or modify.
      name: name
      required: true
    - description: Optionally sets the `UID` of the user.
      name: uid
    - description: Optionally sets the description (aka `GECOS`) of user account.
      name: comment
    - description: |-
        macOS only, optionally hide the user from the login window and system preferences.
        The default will be `yes` if the `system` option is used.
      name: hidden
    - default: false
      defaultValue: "False"
      description: Optionally when used with the -u option, this option allows to
        change the user ID to a non-unique value.
      name: non_unique
    - description: Optionally sets the seuser type (user_u) on selinux enabled systems.
      name: seuser
    - description: Optionally sets the user's primary group (takes a group name).
      name: group
    - description: |-
        List of groups user will be added to. When set to an empty string `''`, the user is removed from all groups except the primary group.
        Before Ansible 2.3, the only input format allowed was a comma separated string.
        Mutually exclusive with `local`
      isArray: true
      name: groups
    - default: false
      defaultValue: "False"
      description: |-
        If `yes`, add the user to the groups specified in `groups`.
        If `no`, user will only be added to the groups specified in `groups`, removing them from all other groups.
        Mutually exclusive with `local`
      name: append
    - description: |-
        Optionally set the user's shell.
        On macOS, before Ansible 2.5, the default shell for non-system users was `/usr/bin/false`. Since Ansible 2.5, the default shell for non-system users on macOS is `/bin/bash`.
        On other operating systems, the default shell is determined by the underlying tool being used. See Notes for details.
      name: shell
    - description: Optionally set the user's home directory.
      name: home
    - description: |-
        Optionally set a home skeleton directory.
        Requires `create_home` option!
      name: skeleton
    - description: |-
        Optionally set the user's password to this crypted value.
        On macOS systems, this value has to be cleartext. Beware of security issues.
        To create a disabled account on Linux systems, set this to `'!'` or `'*'`.
        To create a disabled account on OpenBSD, set this to `'*************'`.
        See `https://docs.ansible.com/ansible/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module` for details on various ways to generate these password values.
      name: password
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the account should exist or not, taking action if the state
        is different from what is stated.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "True"
      description: |-
        Unless set to `no`, a home directory will be made for the user when the account is created or if the home directory does not exist.
        Changed from `createhome` to `create_home` in Ansible 2.5.
      name: create_home
    - default: false
      defaultValue: "False"
      description: 'If set to `yes` when used with `home: `, attempt to move the user''s
        old home directory to the specified directory if it isn''t there already and
        the old home exists.'
      name: move_home
    - default: false
      defaultValue: "False"
      description: |-
        When creating an account `state=present`, setting this to `yes` makes the user a system account.
        This setting cannot be changed on existing users.
      name: system
    - default: false
      defaultValue: "False"
      description: |-
        This only affects `state=absent`, it forces removal of the user and associated directories on supported platforms.
        The behavior is the same as `userdel --force`, check the man page for `userdel` on your system for details and support.
        When used with `generate_ssh_key=yes` this forces an existing key to be overwritten.
      name: force
    - default: false
      defaultValue: "False"
      description: |-
        This only affects `state=absent`, it attempts to remove directories associated with the user.
        The behavior is the same as `userdel --remove`, check the man page for details and support.
      name: remove
    - description: Optionally sets the user's login class, a feature of most BSD OSs.
      name: login_class
    - default: false
      defaultValue: "False"
      description: |-
        Whether to generate a SSH key for the user in question.
        This will `not` overwrite an existing SSH key unless used with `force=yes`.
      name: generate_ssh_key
    - default: false
      defaultValue: default set by ssh-keygen
      description: Optionally specify number of bits in SSH key to create.
      name: ssh_key_bits
    - default: false
      defaultValue: rsa
      description: |-
        Optionally specify the type of SSH key to generate.
        Available SSH key types will depend on implementation present on target host.
      name: ssh_key_type
    - description: |-
        Optionally specify the SSH key filename.
        If this is a relative filename then it will be relative to the user's home directory.
        This parameter defaults to `.ssh/id_rsa`.
      name: ssh_key_file
    - default: false
      defaultValue: ansible-generated on $HOSTNAME
      description: Optionally define the comment for the SSH key.
      name: ssh_key_comment
    - description: |-
        Set a passphrase for the SSH key.
        If no passphrase is provided, the SSH key will default to having no passphrase.
      name: ssh_key_passphrase
    - auto: PREDEFINED
      default: false
      defaultValue: always
      description: |-
        `always` will update passwords if they differ.
        `on_create` will only set the password for newly created users.
      name: update_password
      predefined:
      - always
      - on_create
    - description: |-
        An expiry time for the user in epoch, it will be ignored on platforms that do not support this.
        Currently supported on GNU/Linux, FreeBSD, and DragonFlyBSD.
        Since Ansible 2.6 you can remove the expiry time specify a negative value. Currently supported on GNU/Linux and FreeBSD.
      name: expires
    - description: |-
        Lock the password (usermod -L, pw lock, usermod -C).
        BUT implementation differs on different platforms, this option does not always mean the user cannot login via other methods.
        This option does not disable the user, only lock the password. Do not change the password in the same task.
        Currently supported on Linux, FreeBSD, DragonFlyBSD, NetBSD, OpenBSD.
      name: password_lock
    - default: false
      defaultValue: "False"
      description: |-
        Forces the use of "local" command alternatives on platforms that implement it.
        This is useful in environments that use centralized authentification when you want to manipulate the local users (i.e. it uses `luseradd` instead of `useradd`).
        This will check `/etc/passwd` for an existing account before invoking commands. If the local account database exists somewhere other than `/etc/passwd`, this setting will not work properly.
        This requires that the above commands as well as `/etc/passwd` must exist on the target host, otherwise it will be a fatal error.
        Mutually exclusive with `groups` and `append`
      name: local
    - description: |-
        Sets the profile of the user.
        Does nothing when used with other platforms.
        Can set multiple profiles using comma separation.
        To delete all the profiles, use `profile=''`.
        Currently supported on Illumos/Solaris.
      name: profile
    - description: |-
        Sets the authorization of the user.
        Does nothing when used with other platforms.
        Can set multiple authorizations using comma separation.
        To delete all authorizations, use `authorization=''`.
        Currently supported on Illumos/Solaris.
      name: authorization
    - description: |-
        Sets the role of the user.
        Does nothing when used with other platforms.
        Can set multiple roles using comma separation.
        To delete all roles, use `role=''`.
        Currently supported on Illumos/Solaris.
      name: role
    description: Manage user accounts
    name: linux-user
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      description: The XFS quota type.
      name: type
      predefined:
      - user
      - group
      - project
      required: true
    - description: The name of the user, group or project to apply the quota to, if
        other than default.
      name: name
    - description: The mount point on which to apply the quotas.
      name: mountpoint
      required: true
    - description: |-
        Hard blocks quota limit.
        This argument supports human readable sizes.
      name: bhard
    - description: |-
        Soft blocks quota limit.
        This argument supports human readable sizes.
      name: bsoft
    - description: Hard inodes quota limit.
      name: ihard
    - description: Soft inodes quota limit.
      name: isoft
    - description: |-
        Hard realtime blocks quota limit.
        This argument supports human readable sizes.
      name: rtbhard
    - description: |-
        Soft realtime blocks quota limit.
        This argument supports human readable sizes.
      name: rtbsoft
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: |-
        Whether to apply the limits or remove them.
        When removing limit, they are set to 0, and not quite removed.
      name: state
      predefined:
      - present
      - absent
    description: Manage quotas on XFS filesystems
    name: linux-xfs-quota
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Path to the file that contains the usernames and passwords
      name: path
      required: true
    - description: User name to add or remove
      name: name
      required: true
    - description: |-
        Password associated with user.
        Must be specified if user does not exist yet.
      name: password
    - auto: PREDEFINED
      default: false
      defaultValue: apr_md5_crypt
      description: Encryption scheme to be used.  As well as the four choices listed
        here, you can also use any other hash supported by passlib, such as md5_crypt
        and sha256_crypt, which are linux passwd hashes.  If you do so the password
        file will not be compatible with Apache or Nginx
      name: crypt_scheme
      predefined:
      - apr_md5_crypt
      - des_crypt
      - ldap_sha1
      - plaintext
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the user entry should be present or not
      name: state
      predefined:
      - present
      - absent
    - default: false
      defaultValue: "yes"
      description: Used with `state=present`. If specified, the file will be created
        if it does not already exist. If set to "no", will fail if the file does not
        exist
      name: create
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: manage user files for basic authentication
    name: linux-htpasswd
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The name of the supervisord program or group to manage.
        The name will be taken as group name when it ends with a colon `:`
        Group support is only available in Ansible version 1.6 or later.
      name: name
      required: true
    - description: The supervisor configuration file path
      name: config
    - description: URL on which supervisord server is listening
      name: server_url
    - description: username to use for authentication
      name: username
    - description: password to use for authentication
      name: password
    - auto: PREDEFINED
      description: The desired state of program/group.
      name: state
      predefined:
      - present
      - started
      - stopped
      - restarted
      - absent
      - signalled
      required: true
    - description: The signal to send to the program/group, when combined with the
        'signalled' state. Required when l(state=signalled).
      name: signal
    - description: path to supervisorctl executable
      name: supervisorctl_path
    description: Manage the state of a program or group of programs running via supervisord
    name: linux-supervisorctl
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the host or user certificate should exist or not, taking
        action if the state is different from what is stated.
      name: state
      predefined:
      - present
      - absent
    - auto: PREDEFINED
      description: |-
        Whether the module should generate a host or a user certificate.
        Required if `state` is `present`.
      name: type
      predefined:
      - host
      - user
    - default: false
      defaultValue: "False"
      description: Should the certificate be regenerated even if it already exists
        and is valid.
      name: force
    - description: Path of the file containing the certificate.
      name: path
      required: true
    - description: |-
        The path to the private openssh key that is used for signing the public key in order to generate the certificate.
        Required if `state` is `present`.
      name: signing_key
    - description: |-
        The path to the public key that will be signed with the signing key in order to generate the certificate.
        Required if `state` is `present`.
      name: public_key
    - description: |-
        The point in time the certificate is valid from. Time can be specified either as relative time or as absolute timestamp. Time will always be interpreted as UTC. Valid formats are: `[+-]timespec | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS | YYYY-MM-DD HH:MM:SS | always` where timespec can be an integer + `[w | d | h | m | s]` (e.g. `+32w1d2h`. Note that if using relative time this module is NOT idempotent.
        Required if `state` is `present`.
      name: valid_from
    - description: |-
        The point in time the certificate is valid to. Time can be specified either as relative time or as absolute timestamp. Time will always be interpreted as UTC. Valid formats are: `[+-]timespec | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS | YYYY-MM-DD HH:MM:SS | forever` where timespec can be an integer + `[w | d | h | m | s]` (e.g. `+32w1d2h`. Note that if using relative time this module is NOT idempotent.
        Required if `state` is `present`.
      name: valid_to
    - description: Check if the certificate is valid at a certain point in time. If
        it is not the certificate will be regenerated. Time will always be interpreted
        as UTC. Mainly to be used with relative timespec for `valid_from` and / or
        `valid_to`. Note that if using relative time this module is NOT idempotent.
      name: valid_at
    - description: Certificates may be limited to be valid for a set of principal
        (user/host) names. By default, generated certificates are valid for all users
        or hosts.
      isArray: true
      name: principals
    - description: |-
        Specify certificate options when signing a key. The option that are valid for user certificates are:
        `clear`: Clear all enabled permissions.  This is useful for clearing the default set of permissions so permissions may be added individually.
        `force-command=command`: Forces the execution of command instead of any shell or command specified by the user when the certificate is used for authentication.
        `no-agent-forwarding`: Disable ssh-agent forwarding (permitted by default).
        `no-port-forwarding`: Disable port forwarding (permitted by default).
        `no-pty Disable`: PTY allocation (permitted by default).
        `no-user-rc`: Disable execution of `~/.ssh/rc` by sshd (permitted by default).
        `no-x11-forwarding`: Disable X11 forwarding (permitted by default)
        `permit-agent-forwarding`: Allows ssh-agent forwarding.
        `permit-port-forwarding`: Allows port forwarding.
        `permit-pty`: Allows PTY allocation.
        `permit-user-rc`: Allows execution of `~/.ssh/rc` by sshd.
        `permit-x11-forwarding`: Allows X11 forwarding.
        `source-address=address_list`: Restrict the source addresses from which the certificate is considered valid. The `address_list` is a comma-separated list of one or more address/netmask pairs in CIDR format.
        At present, no options are valid for host keys.
      isArray: true
      name: options
    - description: Specify the key identity when signing a public key. The identifier
        that is logged by the server when the certificate is used for authentication.
      name: identifier
    - description: 'Specify the certificate serial number. The serial number is logged
        by the server when the certificate is used for authentication. The certificate
        serial number may be used in a KeyRevocationList. The serial number may be
        omitted for checks, but must be specified again for a new certificate. Note:
        The default value set by ssh-keygen is 0.'
      name: serial_number
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Generate OpenSSH host or user certificates.
    name: linux-openssh-cert
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the private and public keys should exist or not, taking
        action if the state is different from what is stated.
      name: state
      predefined:
      - present
      - absent
    - description: 'Specifies the number of bits in the private key to create. For
        RSA keys, the minimum size is 1024 bits and the default is 4096 bits. Generally,
        2048 bits is considered sufficient.  DSA keys must be exactly 1024 bits as
        specified by FIPS 186-2. For ECDSA keys, size determines the key length by
        selecting from one of three elliptic curve sizes: 256, 384 or 521 bits. Attempting
        to use bit lengths other than these three values for ECDSA keys will cause
        this module to fail. Ed25519 keys have a fixed length and the size will be
        ignored.'
      name: size
    - auto: PREDEFINED
      default: false
      defaultValue: rsa
      description: The algorithm used to generate the SSH private key. `rsa1` is for
        protocol version 1. `rsa1` is deprecated and may not be supported by every
        version of ssh-keygen.
      name: type
      predefined:
      - rsa
      - dsa
      - rsa1
      - ecdsa
      - ed25519
    - default: false
      defaultValue: "False"
      description: Should the key be regenerated even if it already exists
      name: force
    - description: Name of the files containing the public and private key. The file
        containing the public key will have the extension `.pub`.
      name: path
      required: true
    - description: Provides a new comment to the public key. When checking if the
        key is in the correct state this will be ignored.
      name: comment
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Generate OpenSSH private and public keys.
    name: linux-openssh-keypair
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The full path of the file or object.
      name: path
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: query
      description: |-
        Define whether the ACL should be present or not.
        The `query` state gets the current ACL without changing it, for use in `register` operations.
      name: state
      predefined:
      - absent
      - present
      - query
    - default: false
      defaultValue: "True"
      description: Whether to follow symlinks on the path if a symlink is encountered.
      name: follow
    - default: false
      defaultValue: "False"
      description: |-
        If the target is a directory, setting this to `yes` will make it the default ACL for entities created inside the directory.
        Setting `default` to `yes` causes an error if the path is a file.
      name: default
    - description: The actual user or group that the ACL applies to when matching
        entity types user or group are selected.
      name: entity
    - auto: PREDEFINED
      description: The entity type of the ACL to apply, see `setfacl` documentation
        for more info.
      name: etype
      predefined:
      - group
      - mask
      - other
      - user
    - description: The permissions to apply/remove can be any combination of `r`,
        `w` and `x` (read, write and execute respectively)
      name: permissions
    - description: |-
        DEPRECATED.
        The ACL to set or remove.
        This must always be quoted in the form of `<etype>:<qualifier>:<perms>`.
        The qualifier may be empty for some types, but the type and perms are always required.
        `-` can be used as placeholder when you do not care about permissions.
        This is now superseded by entity, type and permissions fields.
      name: entry
    - default: false
      defaultValue: "False"
      description: |-
        Recursively sets the specified ACL.
        Incompatible with `state=query`.
      name: recursive
    - default: false
      defaultValue: "False"
      description: Use NFSv4 ACLs instead of POSIX ACLs.
      name: use_nfsv4_acls
    - auto: PREDEFINED
      default: false
      defaultValue: default
      description: |-
        Select if and when to recalculate the effective right masks of the files.
        See `setfacl` documentation for more info.
        Incompatible with `state=query`.
      name: recalculate_mask
      predefined:
      - default
      - mask
      - no_mask
    description: Set and retrieve file ACL information.
    name: linux-acl
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Remote absolute path, glob, or list of paths or globs for the file
        or files to compress or archive.
      isArray: true
      name: path
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: gz
      description: |-
        The type of compression to use.
        Support for xz was added in Ansible 2.5.
      name: format
      predefined:
      - bz2
      - gz
      - tar
      - xz
      - zip
    - description: |-
        The file name of the destination archive.
        This is required when `path` refers to multiple files by either specifying a glob, a directory or multiple paths in a list.
      name: dest
    - description: Remote absolute path, glob, or list of paths or globs for the file
        or files to exclude from the archive.
      isArray: true
      name: exclude_path
    - default: false
      defaultValue: "False"
      description: |-
        Allow you to force the module to treat this as an archive even if only a single file is specified.
        By default behaviour is maintained. i.e A when a single file is specified it is compressed only (not archived).
      name: force_archive
    - default: false
      defaultValue: "False"
      description: Remove any added source files and trees after adding to archive.
      name: remove
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Creates a compressed archive of one or more files or trees
    name: linux-archive
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: An already existing directory full of source files.
      name: src
      required: true
    - description: A file to create using the concatenation of all of the source files.
      name: dest
      required: true
    - default: false
      defaultValue: "False"
      description: Create a backup file (if `yes`), including the timestamp information
        so you can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - description: A delimiter to separate the file contents.
      name: delimiter
    - default: false
      defaultValue: "False"
      description: |-
        If `no`, it will search for src at originating/master machine.
        If `yes`, it will go to the remote/target machine for the src.
      name: remote_src
    - description: |-
        Assemble files only if `regex` matches the filename.
        If not set, all files are assembled.
        Every "\" (backslash) must be escaped as "\\" to comply to YAML syntax.
        Uses `Python regular expressions,http://docs.python.org/2/library/re.html`.
      name: regexp
    - default: false
      defaultValue: "False"
      description: A boolean that controls if files that start with a '.' will be
        included or not.
      name: ignore_hidden
    - description: |-
        The validation command to run before copying into place.
        The path to the file to validate is passed in via '%s' which must be present as in the sshd example below.
        The command is passed securely so shell features like expansion and pipes won't work.
      name: validate
    - default: false
      defaultValue: "True"
      description: This option controls the autodecryption of source files using vault.
      name: decrypt
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Assemble configuration files from fragments
    name: linux-assemble
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The file to modify.
        Before Ansible 2.3 this option was only usable as `dest`, `destfile` and `name`.
      name: path
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the block should be there or not.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: '# {mark} ANSIBLE MANAGED BLOCK'
      description: |-
        The marker line template.
        `{mark}` will be replaced with the values `in marker_begin` (default="BEGIN") and `marker_end` (default="END").
        Using a custom marker without the `{mark}` variable may result in the block being repeatedly inserted on subsequent playbook runs.
      name: marker
    - default: false
      description: |-
        The text to insert inside the marker lines.
        If it is missing or an empty string, the block will be removed as if `state` were specified to `absent`.
      name: block
    - auto: PREDEFINED
      default: false
      defaultValue: EOF
      description: |-
        If specified, the block will be inserted after the last match of specified regular expression.
        A special value is available; `EOF` for inserting the block at the end of the file.
        If specified regular expression has no matches, `EOF` will be used instead.
      name: insertafter
      predefined:
      - EOF
      - '*regex*'
    - auto: PREDEFINED
      description: |-
        If specified, the block will be inserted before the last match of specified regular expression.
        A special value is available; `BOF` for inserting the block at the beginning of the file.
        If specified regular expression has no matches, the block will be inserted at the end of the file.
      name: insertbefore
      predefined:
      - BOF
      - '*regex*'
    - default: false
      defaultValue: "False"
      description: Create a new file if it does not exist.
      name: create
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - default: false
      defaultValue: BEGIN
      description: This will be inserted at `{mark}` in the opening ansible block
        marker.
      name: marker_begin
    - default: false
      defaultValue: END
      description: This will be inserted at `{mark}` in the closing ansible block
        marker.
      name: marker_end
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    - description: |-
        The validation command to run before copying into place.
        The path to the file to validate is passed in via '%s' which must be present as in the examples below.
        The command is passed securely so shell features like expansion and pipes will not work.
      name: validate
    description: Insert/update/remove a text block surrounded by marker lines
    name: linux-blockinfile
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Path to the file being managed.
      name: path
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: file
      description: |-
        If `absent`, directories will be recursively deleted, and files or symlinks will be unlinked. In the case of a directory, if `diff` is declared, you will see the files and folders deleted listed under `path_contents`. Note that `absent` will not cause `file` to fail if the `path` does not exist as the state did not change.
        If `directory`, all intermediate subdirectories will be created if they do not exist. Since Ansible 1.7 they will be created with the supplied permissions.
        If `file`, without any other options this works mostly as a 'stat' and will return the current state of `path`. Even with other options (i.e `mode`), the file will be modified but will NOT be created if it does not exist; see the `touch` value or the `copy` or `template` module if you want that behavior.
        If `hard`, the hard link will be created or changed.
        If `link`, the symbolic link will be created or changed.
        If `touch` (new in 1.4), an empty file will be created if the `path` does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way `touch` works from the command line).
      name: state
      predefined:
      - absent
      - directory
      - file
      - hard
      - link
      - touch
    - description: |-
        Path of the file to link to.
        This applies only to `state=link` and `state=hard`.
        For `state=link`, this will also accept a non-existing path.
        Relative paths are relative to the file being created (`path`) which is how the Unix command `ln -s SRC DEST` treats relative paths.
      name: src
    - default: false
      defaultValue: "False"
      description: |-
        Recursively set the specified file attributes on directory contents.
        This applies only when `state` is set to `directory`.
      name: recurse
    - default: false
      defaultValue: "False"
      description: 'Force the creation of the symlinks in two cases: the source file
        does not exist (but will appear later); the destination exists and is a file
        (so, we need to unlink the `path` file and create symlink to the `src` file
        in place of it).'
      name: force
    - default: false
      defaultValue: "True"
      description: |-
        This flag indicates that filesystem links, if they exist, should be followed.
        Previous to Ansible 2.5, this was `no` by default.
      name: follow
    - description: |-
        This parameter indicates the time the file's modification time should be set to.
        Should be `preserve` when no modification is required, `YYYYMMDDHHMM.SS` when using default time format, or `now`.
        Default is None meaning that `preserve` is the default for `state=[file,directory,link,hard]` and `now` is default for `state=touch`.
      name: modification_time
    - default: false
      defaultValue: '%Y%m%d%H%M.%S'
      description: |-
        When used with `modification_time`, indicates the time format that must be used.
        Based on default Python format (see time.strftime doc).
      name: modification_time_format
    - description: |-
        This parameter indicates the time the file's access time should be set to.
        Should be `preserve` when no modification is required, `YYYYMMDDHHMM.SS` when using default time format, or `now`.
        Default is `None` meaning that `preserve` is the default for `state=[file,directory,link,hard]` and `now` is default for `state=touch`.
      name: access_time
    - default: false
      defaultValue: '%Y%m%d%H%M.%S'
      description: |-
        When used with `access_time`, indicates the time format that must be used.
        Based on default Python format (see time.strftime doc).
      name: access_time_format
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Manage files and file properties
    name: linux-file
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Select files whose age is equal to or greater than the specified time.
        Use a negative age to find files equal to or less than the specified time.
        You can choose seconds, minutes, hours, days, or weeks by specifying the first letter of any of those words (e.g., "1w").
      name: age
    - default: false
      defaultValue: '*'
      description: |-
        One or more (shell or regex) patterns, which type is controlled by `use_regex` option.
        The patterns restrict the list of files to be returned to those whose basenames match at least one of the patterns specified. Multiple patterns can be specified using a list.
        The pattern is matched against the file base name, excluding the directory.
        When using regexen, the pattern MUST match the ENTIRE file name, not just parts of it. So if you are looking to match all files ending in .default, you'd need to use '.*\.default' as a regexp and not just '\.default'.
        This parameter expects a list, which can be either comma separated or YAML. If any of the patterns contain a comma, make sure to put them in a list to avoid splitting the patterns in undesirable ways.
      isArray: true
      name: patterns
    - description: |-
        One or more (shell or regex) patterns, which type is controlled by `use_regex` option.
        Items whose basenames match an `excludes` pattern are culled from `patterns` matches. Multiple patterns can be specified using a list.
      isArray: true
      name: excludes
    - description: A regular expression or pattern which should be matched against
        the file content.
      name: contains
    - description: List of paths of directories to search. All paths must be fully
        qualified.
      isArray: true
      name: paths
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: file
      description: |-
        Type of file to select.
        The 'link' and 'any' choices were added in Ansible 2.3.
      name: file_type
      predefined:
      - any
      - directory
      - file
      - link
    - default: false
      defaultValue: "False"
      description: If target is a directory, recursively descend into the directory
        looking for files.
      name: recurse
    - description: |-
        Select files whose size is equal to or greater than the specified size.
        Use a negative size to find files equal to or less than the specified size.
        Unqualified values are in bytes but b, k, m, g, and t can be appended to specify bytes, kilobytes, megabytes, gigabytes, and terabytes, respectively.
        Size is not evaluated for directories.
      name: size
    - auto: PREDEFINED
      default: false
      defaultValue: mtime
      description: Choose the file property against which we compare age.
      name: age_stamp
      predefined:
      - atime
      - ctime
      - mtime
    - default: false
      defaultValue: "False"
      description: Set this to `yes` to include hidden files, otherwise they will
        be ignored.
      name: hidden
    - default: false
      defaultValue: "False"
      description: Set this to `yes` to follow symlinks in path for systems with python
        2.6+.
      name: follow
    - default: false
      defaultValue: "False"
      description: Set this to `yes` to retrieve a file's SHA1 checksum.
      name: get_checksum
    - default: false
      defaultValue: "False"
      description: |-
        If `no`, the patterns are file globs (shell).
        If `yes`, they are python regexes.
      name: use_regex
    - description: |-
        Set the maximum number of levels to descend into.
        Setting recurse to `no` will override this value, which is effectively depth 1.
        Default is unlimited depth.
      name: depth
    description: Return a list of files based on specific criteria
    name: linux-find
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Path to the INI-style file; this file is created if required.
        Before Ansible 2.3 this option was only usable as `dest`.
      name: path
      required: true
    - description: |-
        Section name in INI file. This is added if `state=present` automatically when a single value is being set.
        If left empty or set to `null`, the `option` will be placed before the first `section`.
        Using `null` is also required if the config format does not support sections.
      name: section
      required: true
    - description: |-
        If set (required for changing a `value`), this is the name of the option.
        May be omitted if adding/removing a whole `section`.
      name: option
    - description: |-
        The string value to be associated with an `option`.
        May be omitted when removing an `option`.
      name: value
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: If set to `absent` the option or section will be removed if present
        instead of created.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "False"
      description: Do not insert spaces before and after '=' symbol.
      name: no_extra_spaces
    - default: false
      defaultValue: "True"
      description: |-
        If set to `no`, the module will fail if the file does not already exist.
        By default it will create the file if it is missing.
      name: create
    - default: false
      defaultValue: "False"
      description: Allow option without value and without '=' symbol.
      name: allow_no_value
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Tweak settings in INI files
    name: linux-ini-file
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The ISO image to extract files from.
      name: image
      required: true
    - description: The destination directory to extract files to.
      name: dest
      required: true
    - description: |-
        A list of files to extract from the image.
        Extracting directories does not work.
      isArray: true
      name: files
      required: true
    - default: false
      defaultValue: "True"
      description: |-
        If `yes`, which will replace the remote file when contents are different than the source.
        If `no`, the file will only be extracted and copied if the destination does not already exist.
        Alias `thirsty` has been deprecated and will be removed in 2.13.
      name: force
    - default: false
      defaultValue: 7z
      description: The path to the `7z` executable to use for extracting files from
        the ISO.
      name: executable
    description: Extract files from an ISO image
    name: linux-iso-extract
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The file to modify.
        Before Ansible 2.3 this option was only usable as `dest`, `destfile` and `name`.
      name: path
      required: true
    - description: |-
        The regular expression to look for in every line of the file.
        For `state=present`, the pattern to replace if found. Only the last line found will be replaced.
        For `state=absent`, the pattern of the line(s) to remove.
        If the regular expression is not matched, the line will be added to the file in keeping with `insertbefore` or `insertafter` settings.
        When modifying a line the regexp should typically match both the initial state of the line as well as its state after replacement by `line` to ensure idempotence.
        Uses Python regular expressions. See `http://docs.python.org/2/library/re.html`.
      name: regexp
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether the line should be there or not.
      name: state
      predefined:
      - absent
      - present
    - description: |-
        The line to insert/replace into the file.
        Required for `state=present`.
        If `backrefs` is set, may contain backreferences that will get expanded with the `regexp` capture groups if the regexp matches.
      name: line
    - default: false
      defaultValue: "False"
      description: |-
        Used with `state=present`.
        If set, `line` can contain backreferences (both positional and named) that will get populated if the `regexp` matches.
        This parameter changes the operation of the module slightly; `insertbefore` and `insertafter` will be ignored, and if the `regexp` does not match anywhere in the file, the file will be left unchanged.
        If the `regexp` does match, the last matching line will be replaced by the expanded line parameter.
      name: backrefs
    - auto: PREDEFINED
      default: false
      defaultValue: EOF
      description: |-
        Used with `state=present`.
        If specified, the line will be inserted after the last match of specified regular expression.
        If the first match is required, use(firstmatch=yes).
        A special value is available; `EOF` for inserting the line at the end of the file.
        If specified regular expression has no matches, EOF will be used instead.
        If `insertbefore` is set, default value `EOF` will be ignored.
        If regular expressions are passed to both `regexp` and `insertafter`, `insertafter` is only honored if no match for `regexp` is found.
        May not be used with `backrefs` or `insertbefore`.
      name: insertafter
      predefined:
      - EOF
      - '*regex*'
    - auto: PREDEFINED
      description: |-
        Used with `state=present`.
        If specified, the line will be inserted before the last match of specified regular expression.
        If the first match is required, use `firstmatch=yes`.
        A value is available; `BOF` for inserting the line at the beginning of the file.
        If specified regular expression has no matches, the line will be inserted at the end of the file.
        If regular expressions are passed to both `regexp` and `insertbefore`, `insertbefore` is only honored if no match for `regexp` is found.
        May not be used with `backrefs` or `insertafter`.
      name: insertbefore
      predefined:
      - BOF
      - '*regex*'
    - default: false
      defaultValue: "False"
      description: |-
        Used with `state=present`.
        If specified, the file will be created if it does not already exist.
        By default it will fail if the file is missing.
      name: create
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - default: false
      defaultValue: "False"
      description: |-
        Used with `insertafter` or `insertbefore`.
        If set, `insertafter` and `insertbefore` will work with the first line that matches the given regular expression.
      name: firstmatch
    - description: All arguments accepted by the `file` module also work here.
      name: others
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    - description: |-
        The validation command to run before copying into place.
        The path to the file to validate is passed in via '%s' which must be present as in the examples below.
        The command is passed securely so shell features like expansion and pipes will not work.
      name: validate
    description: Manage lines in text files
    name: linux-lineinfile
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The file to modify.
        Before Ansible 2.3 this option was only usable as `dest`, `destfile` and `name`.
      name: path
      required: true
    - description: |-
        The regular expression to look for in the contents of the file.
        Uses Python regular expressions; see `http://docs.python.org/2/library/re.html`.
        Uses MULTILINE mode, which means `^` and `$` match the beginning and end of the file, as well as the beginning and end respectively of `each line` of the file.
        Does not use DOTALL, which means the `.` special character matches any character `except newlines`. A common mistake is to assume that a negated character set like `[^#]` will also not match newlines.
        In order to exclude newlines, they must be added to the set like `[^#\n]`.
        Note that, as of Ansible 2.0, short form tasks should have any escape sequences backslash-escaped in order to prevent them being parsed as string literal escapes. See the examples.
      name: regexp
      required: true
    - description: |-
        The string to replace regexp matches.
        May contain backreferences that will get expanded with the regexp capture groups if the regexp matches.
        If not set, matches are removed entirely.
        Backreferences can be used ambiguously like `\1`, or explicitly like `\g<1>`.
      name: replace
    - description: |-
        If specified, only content after this match will be replaced/removed.
        Can be used in combination with `before`.
        Uses Python regular expressions; see `http://docs.python.org/2/library/re.html`.
        Uses DOTALL, which means the `.` special character `can match newlines`.
      name: after
    - description: |-
        If specified, only content before this match will be replaced/removed.
        Can be used in combination with `after`.
        Uses Python regular expressions; see `http://docs.python.org/2/library/re.html`.
        Uses DOTALL, which means the `.` special character `can match newlines`.
      name: before
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - description: All arguments accepted by the `file` module also work here.
      name: others
    - default: false
      defaultValue: utf-8
      description: The character encoding for reading and writing the file.
      name: encoding
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    - description: |-
        The validation command to run before copying into place.
        The path to the file to validate is passed in via '%s' which must be present as in the examples below.
        The command is passed securely so shell features like expansion and pipes will not work.
      name: validate
    description: Replace all instances of a particular string in a file using a back-referenced
      regular expression
    name: linux-replace
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The full path of the file/object to get the facts of.
      name: path
      required: true
    - default: false
      defaultValue: "False"
      description: Whether to follow symlinks.
      name: follow
    - default: false
      defaultValue: "True"
      description: Whether to return a checksum of the file.
      name: get_checksum
    - auto: PREDEFINED
      default: false
      defaultValue: sha1
      description: |-
        Algorithm to determine checksum of file.
        Will throw an error if the host is unable to use specified algorithm.
        The remote host has to support the hashing method specified, `md5` can be unavailable if the host is FIPS-140 compliant.
      name: checksum_algorithm
      predefined:
      - md5
      - sha1
      - sha224
      - sha256
      - sha384
      - sha512
    - default: false
      defaultValue: "True"
      description: |-
        Use file magic and return data about the nature of the file. this uses the 'file' utility found on most Linux/Unix systems.
        This will add both `mime_type` and 'charset' fields to the return, if possible.
        In Ansible 2.3 this option changed from 'mime' to 'get_mime' and the default changed to 'Yes'.
      name: get_mime
    - default: false
      defaultValue: "True"
      description: Get file attributes using lsattr tool if present.
      name: get_attributes
    description: Retrieve file or file system status
    name: linux-stat
    outputs:
    - contextPath: Linux.stat.exists
      description: If the destination path actually exists or not
      type: boolean
    - contextPath: Linux.stat.path
      description: The full path of the file/object to get the facts of
      type: string
    - contextPath: Linux.stat.mode
      description: Unix permissions of the file in octal representation as a string
      type: string
    - contextPath: Linux.stat.isdir
      description: Tells you if the path is a directory
      type: boolean
    - contextPath: Linux.stat.ischr
      description: Tells you if the path is a character device
      type: boolean
    - contextPath: Linux.stat.isblk
      description: Tells you if the path is a block device
      type: boolean
    - contextPath: Linux.stat.isreg
      description: Tells you if the path is a regular file
      type: boolean
    - contextPath: Linux.stat.isfifo
      description: Tells you if the path is a named pipe
      type: boolean
    - contextPath: Linux.stat.islnk
      description: Tells you if the path is a symbolic link
      type: boolean
    - contextPath: Linux.stat.issock
      description: Tells you if the path is a unix domain socket
      type: boolean
    - contextPath: Linux.stat.uid
      description: Numeric id representing the file owner
      type: number
    - contextPath: Linux.stat.gid
      description: Numeric id representing the group of the owner
      type: number
    - contextPath: Linux.stat.size
      description: Size in bytes for a plain file, amount of data for some special
        files
      type: number
    - contextPath: Linux.stat.inode
      description: Inode number of the path
      type: number
    - contextPath: Linux.stat.dev
      description: Device the inode resides on
      type: number
    - contextPath: Linux.stat.nlink
      description: Number of links to the inode (hard links)
      type: number
    - contextPath: Linux.stat.atime
      description: Time of last access
    - contextPath: Linux.stat.mtime
      description: Time of last modification
    - contextPath: Linux.stat.ctime
      description: Time of last metadata update or creation (depends on OS)
    - contextPath: Linux.stat.wusr
      description: Tells you if the owner has write permission
      type: boolean
    - contextPath: Linux.stat.rusr
      description: Tells you if the owner has read permission
      type: boolean
    - contextPath: Linux.stat.xusr
      description: Tells you if the owner has execute permission
      type: boolean
    - contextPath: Linux.stat.wgrp
      description: Tells you if the owner's group has write permission
      type: boolean
    - contextPath: Linux.stat.rgrp
      description: Tells you if the owner's group has read permission
      type: boolean
    - contextPath: Linux.stat.xgrp
      description: Tells you if the owner's group has execute permission
      type: boolean
    - contextPath: Linux.stat.woth
      description: Tells you if others have write permission
      type: boolean
    - contextPath: Linux.stat.roth
      description: Tells you if others have read permission
      type: boolean
    - contextPath: Linux.stat.xoth
      description: Tells you if others have execute permission
      type: boolean
    - contextPath: Linux.stat.isuid
      description: Tells you if the invoking user's id matches the owner's id
      type: boolean
    - contextPath: Linux.stat.isgid
      description: Tells you if the invoking user's group id matches the owner's group
        id
      type: boolean
    - contextPath: Linux.stat.lnk_source
      description: Target of the symlink normalized for the remote filesystem
      type: string
    - contextPath: Linux.stat.lnk_target
      description: Target of the symlink.  Note that relative paths remain relative
      type: string
    - contextPath: Linux.stat.md5
      description: md5 hash of the path; this will be removed in Ansible 2.9 in favor
        of the checksum return value
      type: string
    - contextPath: Linux.stat.checksum
      description: hash of the path
      type: string
    - contextPath: Linux.stat.pw_name
      description: User name of owner
      type: string
    - contextPath: Linux.stat.gr_name
      description: Group name of owner
      type: string
    - contextPath: Linux.stat.mimetype
      description: file magic data or mime-type
      type: string
    - contextPath: Linux.stat.charset
      description: file character set or encoding
      type: string
    - contextPath: Linux.stat.readable
      description: Tells you if the invoking user has the right to read the path
      type: boolean
    - contextPath: Linux.stat.writeable
      description: Tells you if the invoking user has the right to write the path
      type: boolean
    - contextPath: Linux.stat.executable
      description: Tells you if the invoking user has execute permission on the path
      type: boolean
    - contextPath: Linux.stat.attributes
      description: list of file attributes
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Path on the source host that will be synchronized to the destination.
        The path can be absolute or relative.
      name: src
      required: true
    - description: |-
        Path on the destination host that will be synchronized from the source.
        The path can be absolute or relative.
      name: dest
      required: true
    - description: |-
        Port number for ssh on the destination host.
        Prior to Ansible 2.0, the ansible_ssh_port inventory var took precedence over this value.
        This parameter defaults to the value of `ansible_ssh_port` or `ansible_port`, the `remote_port` config setting or the value from ssh client configuration if none of the former have been set.
      name: dest_port
    - auto: PREDEFINED
      default: false
      defaultValue: push
      description: |-
        Specify the direction of the synchronization.
        In push mode the localhost or delegate is the source.
        In pull mode the remote host in context is the source.
      name: mode
      predefined:
      - pull
      - push
    - default: false
      defaultValue: "True"
      description: Mirrors the rsync archive flag, enables recursive, links, perms,
        times, owner, group flags and -D.
      name: archive
    - default: false
      defaultValue: "False"
      description: Skip based on checksum, rather than mod-time & size; Note that
        that "archive" option is still enabled by default - the "checksum" option
        will not disable it.
      name: checksum
    - default: false
      defaultValue: "True"
      description: |-
        Compress file data during the transfer.
        In most cases, leave this enabled unless it causes problems.
      name: compress
    - default: false
      defaultValue: "False"
      description: Skip creating new files on receiver.
      name: existing_only
    - default: false
      defaultValue: "False"
      description: |-
        Delete files in `dest` that don't exist (after transfer, not before) in the `src` path.
        This option requires `recursive=yes`.
        This option ignores excluded files and behaves like the rsync opt --delete-excluded.
      name: delete
    - default: false
      defaultValue: "False"
      description: Transfer directories without recursing.
      name: dirs
    - description: |-
        Recurse into directories.
        This parameter defaults to the value of the archive option.
      name: recursive
    - description: |-
        Copy symlinks as symlinks.
        This parameter defaults to the value of the archive option.
      name: links
    - default: false
      defaultValue: "False"
      description: Copy symlinks as the item that they point to (the referent) is
        copied, rather than the symlink.
      name: copy_links
    - description: |-
        Preserve permissions.
        This parameter defaults to the value of the archive option.
      name: perms
    - description: |-
        Preserve modification times.
        This parameter defaults to the value of the archive option.
      name: times
    - description: |-
        Preserve owner (super user only).
        This parameter defaults to the value of the archive option.
      name: owner
    - description: |-
        Preserve group.
        This parameter defaults to the value of the archive option.
      name: group
    - description: |-
        Specify the rsync command to run on the remote host. See `--rsync-path` on the rsync man page.
        To specify the rsync command to run on the local host, you need to set this your task var `ansible_rsync_path`.
      name: rsync_path
    - default: false
      defaultValue: "0"
      description: Specify a `--timeout` for the rsync command in seconds.
      name: rsync_timeout
    - default: false
      defaultValue: "True"
      description: |-
        Put user@ for the remote paths.
        If you have a custom ssh config to define the remote user for a host that does not match the inventory user, you should set this parameter to `no`.
      name: set_remote_user
    - default: false
      defaultValue: "False"
      description: Use the ssh_args specified in ansible.cfg.
      name: use_ssh_args
    - description: |-
        Specify additional rsync options by passing in an array.
        Note that an empty string in `rsync_opts` will end up transfer the current working directory.
      isArray: true
      name: rsync_opts
    - default: false
      defaultValue: "False"
      description: Tells rsync to keep the partial file which should make a subsequent
        transfer of the rest of the file much faster.
      name: partial
    - default: false
      defaultValue: "False"
      description: Verify destination host key.
      name: verify_host
    - description: Specify the private key to use for SSH-based rsync connections
        (e.g. `~/.ssh/id_rsa`).
      name: private_key
    - description: Add a destination to hard link against during the rsync.
      isArray: true
      name: link_dest
    description: A wrapper around rsync to make common tasks in your playbooks quick
      and easy
    name: linux-synchronize
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: file
      description: Whether to create file or directory.
      name: state
      predefined:
      - directory
      - file
    - description: |-
        Location where temporary file or directory should be created.
        If path is not specified, the default system temporary directory will be used.
      name: path
    - default: false
      defaultValue: ansible.
      description: Prefix of file/directory name created by module.
      name: prefix
    - default: false
      description: Suffix of file/directory name created by module.
      name: suffix
    description: Creates temporary files and directories
    name: linux-tempfile
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        If `remote_src=no` (default), local path to archive file to copy to the target server; can be absolute or relative. If `remote_src=yes`, path on the target server to existing archive file to unpack.
        If `remote_src=yes` and `src` contains `://`, the remote machine will download the file from the URL first. (version_added 2.0). This is only for simple cases, for full download support use the `get_url` module.
      name: src
      required: true
    - description: Remote absolute path where the archive should be unpacked.
      name: dest
      required: true
    - default: false
      defaultValue: "True"
      description: |-
        If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look for src archive at the target machine.
        This option has been deprecated in favor of `remote_src`.
        This option is mutually exclusive with `remote_src`.
      name: copy
    - description: If the specified absolute path (file or directory) already exists,
        this step will `not` be run.
      name: creates
    - default: false
      defaultValue: "False"
      description: If set to True, return the list of files that are contained in
        the tarball.
      name: list_files
    - description: List the directory and file entries that you would like to exclude
        from the unarchive action.
      isArray: true
      name: exclude
    - default: false
      defaultValue: "False"
      description: Do not replace existing files that are newer than files from the
        archive.
      name: keep_newer
    - default: false
      description: |-
        Specify additional options by passing in an array.
        Each space-separated command-line option should be a new element of the array. See examples.
        Command-line options with multiple elements must use multiple lines in the array, one for each element.
      isArray: true
      name: extra_opts
    - default: false
      defaultValue: "False"
      description: |-
        Set to `yes` to indicate the archived file is already on the remote system and not local to the Ansible controller.
        This option is mutually exclusive with `copy`.
      name: remote_src
    - default: false
      defaultValue: "True"
      description: |-
        This only applies if using a https URL as the source of the file.
        This should only set to `no` used on personally controlled sites using self-signed certificate.
        Prior to 2.2 the code worked as if this was set to `yes`.
      name: validate_certs
    - default: false
      defaultValue: "True"
      description: This option controls the autodecryption of source files using vault.
      name: decrypt
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Unpacks an archive after (optionally) copying it from the local machine.
    name: linux-unarchive
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Path to the file to operate on.
        This file must exist ahead of time.
        This parameter is required, unless `xmlstring` is given.
      name: path
      required: true
    - description: |-
        A string containing XML on which to operate.
        This parameter is required, unless `path` is given.
      name: xmlstring
      required: true
    - description: |-
        A valid XPath expression describing the item(s) you want to manipulate.
        Operates on the document root, `/`, by default.
      name: xpath
    - description: |-
        The namespace `prefix:uri` mapping for the XPath expression.
        Needs to be a `dict`, not a `list` of items.
      isArray: true
      name: namespaces
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Set or remove an xpath selection (node(s), attribute(s)).
      name: state
      predefined:
      - absent
      - present
    - description: |-
        The attribute to select when using parameter `value`.
        This is a string, not prepended with `@`.
      name: attribute
    - description: |-
        Desired state of the selected attribute.
        Either a string, or to unset a value, the Python `None` keyword (YAML Equivalent, `null`).
        Elements default to no value (but present).
        Attributes default to an empty string.
      name: value
    - description: |-
        Add additional child-element(s) to a selected element for a given `xpath`.
        Child elements must be given in a list and each item may be either a string (eg. `children=ansible` to add an empty `<ansible/>` child element), or a hash where the key is an element name and the value is the element value.
        This parameter requires `xpath` to be set.
      isArray: true
      name: add_children
    - description: |-
        Set the child-element(s) of a selected element for a given `xpath`.
        Removes any existing children.
        Child elements must be specified as in `add_children`.
        This parameter requires `xpath` to be set.
      isArray: true
      name: set_children
    - default: false
      defaultValue: "False"
      description: |-
        Search for a given `xpath` and provide the count of any matches.
        This parameter requires `xpath` to be set.
      name: count
    - default: false
      defaultValue: "False"
      description: |-
        Search for a given `xpath` and print out any matches.
        This parameter requires `xpath` to be set.
      name: print_match
    - default: false
      defaultValue: "False"
      description: Pretty print XML output.
      name: pretty_print
    - auto: PREDEFINED
      description: |-
        Search for a given `xpath` and get content.
        This parameter requires `xpath` to be set.
      name: content
      predefined:
      - attribute
      - text
    - auto: PREDEFINED
      default: false
      defaultValue: yaml
      description: Type of input for `add_children` and `set_children`.
      name: input_type
      predefined:
      - xml
      - yaml
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - default: false
      defaultValue: "False"
      description: |-
        Remove CDATA tags surrounding text values.
        Note that this might break your XML file if text values contain characters that could be interpreted as XML.
      name: strip_cdata_tags
    - default: false
      defaultValue: "False"
      description: |-
        Add additional child-element(s) before the first selected element for a given `xpath`.
        Child elements must be given in a list and each item may be either a string (eg. `children=ansible` to add an empty `<ansible/>` child element), or a hash where the key is an element name and the value is the element value.
        This parameter requires `xpath` to be set.
      name: insertbefore
    - default: false
      defaultValue: "False"
      description: |-
        Add additional child-element(s) after the last selected element for a given `xpath`.
        Child elements must be given in a list and each item may be either a string (eg. `children=ansible` to add an empty `<ansible/>` child element), or a hash where the key is an element name and the value is the element value.
        This parameter requires `xpath` to be set.
      name: insertafter
    description: Manage bits and pieces of XML files or strings
    name: linux-xml
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The command module takes command to run.
      name: command
      required: true
    - description: A filename, when it already exists, this step will `not` be run.
      name: creates
    - description: A filename, when it does not exist, this step will `not` be run.
      name: removes
    - description: Change into this directory before running the command.
      name: chdir
    - description: Mapping of expected string/regex and string to respond with. If
        the response is a list, successive matches return successive responses. List
        functionality is new in 2.1.
      isArray: true
      name: responses
      required: true
    - default: false
      defaultValue: "30"
      description: Amount of time in seconds to wait for the expected strings. Use
        `null` to disable timeout.
      name: timeout
    - default: false
      defaultValue: "False"
      description: Whether or not to echo out your response strings.
      name: echo
    description: Executes a command and responds to prompts.
    name: linux-expect
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of a bower package to install
      name: name
    - default: false
      defaultValue: "no"
      description: Install packages from local cache, if the packages were installed
        before
      name: offline
    - default: false
      defaultValue: "no"
      description: Install with --production flag
      name: production
    - description: The base path where to install the bower packages
      name: path
      required: true
    - description: Relative path to bower executable from install path
      name: relative_execpath
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The state of the bower package
      name: state
      predefined:
      - present
      - absent
      - latest
    - description: The version to be installed
      name: version
    description: Manage bower packages with bower
    name: linux-bower
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The path to the bundler executable
      name: executable
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The desired state of the Gem bundle. `latest` updates gems to the
        most recent, acceptable version
      name: state
      predefined:
      - present
      - latest
    - default: false
      defaultValue: temporary working directory
      description: The directory to execute the bundler commands from. This directory
        needs to contain a valid Gemfile or .bundle/ directory
      name: chdir
    - description: A list of Gemfile groups to exclude during operations. This only
        applies when state is `present`. Bundler considers this a 'remembered' property
        for the Gemfile and will automatically exclude groups in future operations
        even if `exclude_groups` is not set
      name: exclude_groups
    - default: false
      defaultValue: "no"
      description: Only applies if state is `present`. If set removes any gems on
        the target host that are not in the gemfile
      name: clean
    - default: false
      defaultValue: Gemfile in current directory
      description: Only applies if state is `present`. The path to the gemfile to
        use to install gems.
      name: gemfile
    - default: false
      defaultValue: "no"
      description: If set only installs gems from the cache on the target host
      name: local
    - default: false
      defaultValue: "no"
      description: Only applies if state is `present`. If set it will install gems
        in ./vendor/bundle instead of the default location. Requires a Gemfile.lock
        file to have been created prior
      name: deployment_mode
    - default: false
      defaultValue: "yes"
      description: Only applies if state is `present`. Installs gems in the local
        user's cache or for all users
      name: user_install
    - default: false
      defaultValue: RubyGems gem paths
      description: Only applies if state is `present`. Specifies the directory to
        install the gems into. If `chdir` is set then this path is relative to `chdir`
      name: gem_path
    - description: Only applies if state is `present`. Specifies the directory to
        install any gem bins files to. When executed the bin files will run within
        the context of the Gemfile and fail if any required gem dependencies are not
        installed. If `chdir` is set then this path is relative to `chdir`
      name: binstub_directory
    - description: A space separated string of additional commands that can be applied
        to the Bundler command. Refer to the Bundler documentation for more information
      name: extra_args
    description: Manage Ruby Gem dependencies with Bundler
    name: linux-bundler
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: install
      description: Composer command like "install", "update" and so on.
      name: command
    - description: Composer arguments like required package, version and so on.
      name: arguments
    - description: Path to PHP Executable on the remote host, if PHP is not in PATH.
      name: executable
    - description: |-
        Directory of your project (see --working-dir). This is required when the command is not run globally.
        Will be ignored if `global_command=true`.
      name: working_dir
    - default: false
      defaultValue: "False"
      description: Runs the specified command globally.
      name: global_command
    - default: false
      defaultValue: "False"
      description: Forces installation from package sources when possible (see --prefer-source).
      name: prefer_source
    - default: false
      defaultValue: "False"
      description: Forces installation from package dist even for dev versions (see
        --prefer-dist).
      name: prefer_dist
    - default: false
      defaultValue: "True"
      description: Disables installation of require-dev packages (see --no-dev).
      name: no_dev
    - default: false
      defaultValue: "False"
      description: Skips the execution of all scripts defined in composer.json (see
        --no-scripts).
      name: no_scripts
    - default: false
      defaultValue: "False"
      description: Disables all plugins ( see --no-plugins ).
      name: no_plugins
    - default: false
      defaultValue: "True"
      description: |-
        Optimize autoloader during autoloader dump (see --optimize-autoloader).
        Convert PSR-0/4 autoloading to classmap to get a faster autoloader.
        Recommended especially for production, but can take a bit of time to run.
      name: optimize_autoloader
    - default: false
      defaultValue: "False"
      description: |-
        Autoload classes from classmap only.
        Implicitely enable optimize_autoloader.
        Recommended especially for production, but can take a bit of time to run.
      name: classmap_authoritative
    - default: false
      defaultValue: "False"
      description: Uses APCu to cache found/not-found classes
      name: apcu_autoloader
    - default: false
      defaultValue: "False"
      description: Ignore php, hhvm, lib-* and ext-* requirements and force the installation
        even if the local machine does not fulfill these.
      name: ignore_platform_reqs
    description: Dependency Manager for PHP
    name: linux-composer
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of the Perl library to install. You may use the "full
        distribution path", e.g.  MIYAGAWA/Plack-0.99_05.tar.gz
      name: name
    - description: The local directory from where to install
      name: from_path
    - default: false
      defaultValue: "False"
      description: Do not run unit tests
      name: notest
    - description: Specify the install base to install modules
      name: locallib
    - description: Specifies the base URL for the CPAN mirror to use
      name: mirror
    - default: false
      defaultValue: "False"
      description: Use the mirror's index file instead of the CPAN Meta DB
      name: mirror_only
    - default: false
      defaultValue: "False"
      description: Only install dependencies
      name: installdeps
    - description: minimum version of perl module to consider acceptable
      name: version
    - default: false
      defaultValue: "False"
      description: |-
        Use this if you want to install modules to the system perl include path. You must be root or have "passwordless" sudo for this to work.
        This uses the cpanm commandline option '--sudo', which has nothing to do with ansible privilege escalation.
      name: system_lib
    - description: Override the path to the cpanm executable
      name: executable
    description: Manages Perl library dependencies.
    name: linux-cpanm
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of the gem to be managed.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The desired state of the gem. `latest` ensures that the latest
        version is installed.
      name: state
      predefined:
      - present
      - absent
      - latest
    - description: The path to a local gem used as installation source.
      name: gem_source
    - default: false
      defaultValue: "yes"
      description: Whether to include dependencies or not.
      name: include_dependencies
    - description: The repository from which the gem will be installed
      name: repository
    - default: false
      defaultValue: "yes"
      description: Install gem in user's local gems cache or for all users
      name: user_install
    - description: Override the path to the gem executable
      name: executable
    - description: Install the gems into a specific directory. These gems will be
        independent from the global installed ones. Specifying this requires user_install
        to be false.
      name: install_dir
    - default: false
      defaultValue: "no"
      description: Rewrite the shebang line on installed scripts to use /usr/bin/env.
      name: env_shebang
    - description: Version of the gem to be installed/removed.
      name: version
    - default: false
      defaultValue: "no"
      description: Allow installation of pre-release versions of the gem.
      name: pre_release
    - default: false
      defaultValue: "no"
      description: Install with or without docs.
      name: include_doc
    - description: Allow adding build flags for gem compilation
      name: build_flags
    - default: false
      defaultValue: "no"
      description: Force gem to install, bypassing dependency checks.
      name: force
    description: Manage Ruby gems
    name: linux-gem
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The Maven groupId coordinate
      name: group_id
      required: true
    - description: The maven artifactId coordinate
      name: artifact_id
      required: true
    - default: false
      defaultValue: latest
      description: The maven version coordinate
      name: version
    - description: The maven classifier coordinate
      name: classifier
    - default: false
      defaultValue: jar
      description: The maven type/extension coordinate
      name: extension
    - default: false
      defaultValue: http://repo1.maven.org/maven2
      description: |-
        The URL of the Maven Repository to download from.
        Use s3://... if the repository is hosted on Amazon S3, added in version 2.2.
        Use file://... if the repository is local, added in version 2.6
      name: repository_url
    - description: The username to authenticate as to the Maven Repository. Use AWS
        secret key of the repository is hosted on S3
      name: username
    - description: The password to authenticate with to the Maven Repository. Use
        AWS secret access key of the repository is hosted on S3
      name: password
    - description: Add custom HTTP headers to a request in hash/dict format.
      isArray: true
      name: headers
    - description: |-
        The path where the artifact should be written to
        If file mode or ownerships are specified and destination path already exists, they affect the downloaded file
      name: dest
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The desired state of the artifact
      name: state
      predefined:
      - present
      - absent
    - default: false
      defaultValue: "10"
      description: Specifies a timeout in seconds for the connection attempt
      name: timeout
    - default: false
      defaultValue: "yes"
      description: If `no`, SSL certificates will not be validated. This should only
        be set to `no` when no other option exists.
      name: validate_certs
    - default: false
      defaultValue: "no"
      description: |-
        If `yes`, the downloaded artifact's name is preserved, i.e the version number remains part of it.
        This option only has effect when `dest` is a directory and `version` is set to `latest`.
      name: keep_name
    - auto: PREDEFINED
      default: false
      defaultValue: download
      description: |-
        If `never`, the md5 checksum will never be downloaded and verified.
        If `download`, the md5 checksum will be downloaded and verified only after artifact download. This is the default.
        If `change`, the md5 checksum will be downloaded and verified if the destination already exist, to verify if they are identical. This was the behaviour before 2.6. Since it downloads the md5 before (maybe) downloading the artifact, and since some repository software, when acting as a proxy/cache, return a 404 error if the artifact has not been cached yet, it may fail unexpectedly. If you still need it, you should consider using `always` instead - if you deal with a checksum, it is better to use it to verify integrity after download.
        `always` combines `download` and `change`.
      name: verify_checksum
      predefined:
      - never
      - download
      - change
      - always
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Downloads an Artifact from a Maven Repository
    name: linux-maven-artifact
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The name of a node.js library to install
      name: name
    - description: The base path where to install the node.js libraries
      name: path
    - description: The version to be installed
      name: version
    - default: false
      defaultValue: "False"
      description: Install the node.js library globally
      name: global
    - description: |-
        The executable location for npm.
        This is useful if you are using a version manager, such as nvm
      name: executable
    - default: false
      defaultValue: "False"
      description: Use the `--ignore-scripts` flag when installing.
      name: ignore_scripts
    - default: false
      defaultValue: "False"
      description: Use the `--unsafe-perm` flag when installing.
      name: unsafe_perm
    - default: false
      defaultValue: "False"
      description: Install packages based on package-lock file, same as running npm
        ci
      name: ci
    - default: false
      defaultValue: "False"
      description: Install dependencies in production mode, excluding devDependencies
      name: production
    - description: The registry to install modules from.
      name: registry
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: The state of the node.js library
      name: state
      predefined:
      - present
      - absent
      - latest
    description: Manage node.js packages with npm
    name: linux-npm
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the package to install, upgrade, or remove.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Desired state of the package.
      name: state
      predefined:
      - present
      - absent
      - latest
    - description: Path to the pear executable
      name: executable
    description: Manage pear/pecl packages
    name: linux-pear
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The name of a Python library to install or the url(bzr+,hg+,git+,svn+) of the remote package.
        This can be a list (since 2.2) and contain version specifiers (since 2.7).
      isArray: true
      name: name
    - description: The version number to install of the Python library specified in
        the `name` parameter.
      name: version
    - description: The path to a pip requirements file, which should be local to the
        remote system. File can be specified as a relative path if using the chdir
        option.
      name: requirements
    - description: An optional path to a `virtualenv` directory to install into. It
        cannot be specified together with the 'executable' parameter (added in 2.1).
        If the virtualenv does not exist, it will be created before installing packages.
        The optional virtualenv_site_packages, virtualenv_command, and virtualenv_python
        options affect the creation of the virtualenv.
      name: virtualenv
    - default: false
      defaultValue: "no"
      description: Whether the virtual environment will inherit packages from the
        global site-packages directory.  Note that if this setting is changed on an
        already existing virtual environment it will not have any effect, the environment
        must be deleted and newly created.
      name: virtualenv_site_packages
    - default: false
      defaultValue: virtualenv
      description: The command or a pathname to the command to create the virtual
        environment with. For example `pyvenv`, `virtualenv`, `virtualenv2`, `~/bin/virtualenv`,
        `/usr/local/bin/virtualenv`.
      name: virtualenv_command
    - description: The Python executable used for creating the virtual environment.
        For example `python3.5`, `python2.7`. When not specified, the Python version
        used to run the ansible module is used. This parameter should not be used
        when `virtualenv_command` is using `pyvenv` or the `-m venv` module.
      name: virtualenv_python
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: |-
        The state of module
        The 'forcereinstall' option is only available in Ansible 2.1 and above.
      name: state
      predefined:
      - absent
      - forcereinstall
      - latest
      - present
    - description: Extra arguments passed to pip.
      name: extra_args
    - default: false
      defaultValue: "no"
      description: Pass the editable flag.
      name: editable
    - description: cd into this directory before running the command
      name: chdir
    - description: |-
        The explicit executable or pathname for the pip executable, if different from the Ansible Python interpreter. For example `pip3.3`, if there are both Python 2.7 and 3.3 installations in the system and you want to run pip for the Python 3.3 installation.
        Mutually exclusive with `virtualenv` (added in 2.1).
        Does not affect the Ansible Python interpreter.
        The setuptools package must be installed for both the Ansible Python interpreter and for the version of Python specified by this option.
      name: executable
    - description: The system umask to apply before installing the pip package. This
        is useful, for example, when installing on systems that have a very restrictive
        umask by default (e.g., "0077") and you want to pip install packages which
        are to be used by all users. Note that this requires you to specify desired
        umask mode as an octal string, (e.g., "0022").
      name: umask
    description: Manages Python library dependencies
    name: linux-pip
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: '[''pip'']'
      description: A list of the pip executables that will be used to get the packages.
        They can be supplied with the full path or just the executable name, i.e `pip3.7`.
      isArray: true
      name: clients
    description: pip package information
    name: linux-pip-package-info
    outputs:
    - contextPath: Linux.packages.python
      description: A dictionary with each pip client which then contains a list of
        dicts with python package information
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The name of a node.js library to install
        If omitted all packages in package.json are installed.
      name: name
    - description: |-
        The base path where Node.js libraries will be installed.
        This is where the node_modules folder lives.
      name: path
    - description: |-
        The version of the library to be installed.
        Must be in semver format. If "latest" is desired, use "state" arg instead
      name: version
    - default: false
      defaultValue: "False"
      description: Install the node.js library globally
      name: global
    - description: The executable location for yarn.
      name: executable
    - default: false
      defaultValue: "False"
      description: Use the --ignore-scripts flag when installing.
      name: ignore_scripts
    - default: false
      defaultValue: "False"
      description: |-
        Install dependencies in production mode.
        Yarn will ignore any dependencies under devDependencies in package.json
      name: production
    - description: The registry to install modules from.
      name: registry
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: |-
        Installation state of the named node.js library
        If absent is selected, a name option must be provided
      name: state
      predefined:
      - present
      - absent
      - latest
    description: Manage node.js packages with Yarn
    name: linux-yarn
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: "no"
      description: During upgrade, reset versioned world dependencies and change logic
        to prefer replacing or downgrading packages (instead of holding them) if the
        currently installed package is no longer available from any repository.
      name: available
    - description: A package name, like `foo`, or multiple packages, like `foo, bar`.
      name: name
    - description: A package repository or multiple repositories. Unlike with the
        underlying apk command, this list will override the system repositories rather
        than supplement them.
      name: repository
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: |-
        Indicates the desired package(s) state.
        `present` ensures the package(s) is/are present.
        `absent` ensures the package(s) is/are absent.
        `latest` ensures the package(s) is/are present and the latest version(s).
      name: state
      predefined:
      - present
      - absent
      - latest
    - default: false
      defaultValue: "no"
      description: Update repository indexes. Can be run with other steps or on it's
        own.
      name: update_cache
    - default: false
      defaultValue: "no"
      description: Upgrade all installed packages to their latest version.
      name: upgrade
    description: Manages apk packages
    name: linux-apk
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A list of package names, like `foo`, or package specifier with
        version, like `foo=1.0`. Name wildcards (fnmatch) like `apt*` and version
        wildcards like `foo=1.0*` are also supported.
      name: name
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Indicates the desired package state. `latest` ensures that the
        latest version is installed. `build-dep` ensures the package build dependencies
        are installed. `fixed` attempt to correct a system with broken dependencies
        in place.
      name: state
      predefined:
      - absent
      - build-dep
      - latest
      - present
      - fixed
    - default: false
      defaultValue: "no"
      description: Run the equivalent of `apt-get update` before the operation. Can
        be run as part of the package installation or as a separate step.
      name: update_cache
    - default: false
      defaultValue: "0"
      description: |-
        Update the apt cache if its older than the `cache_valid_time`. This option is set in seconds.
        As of Ansible 2.4, if explicitly set, this sets `update_cache=yes`.
      name: cache_valid_time
    - default: false
      defaultValue: "no"
      description: Will force purging of configuration files if the module state is
        set to `absent`.
      name: purge
    - description: Corresponds to the `-t` option for `apt` and sets pin priorities
      name: default_release
    - description: Corresponds to the `--no-install-recommends` option for `apt`.
        `yes` installs recommended packages.  `no` does not install recommended packages.
        By default, Ansible will use the same defaults as the operating system. Suggested
        packages are never installed.
      name: install_recommends
    - default: false
      defaultValue: "no"
      description: |-
        Corresponds to the `--force-yes` to `apt-get` and implies `allow_unauthenticated: yes`
        This option will disable checking both the packages' signatures and the certificates of the web servers they are downloaded from.
        This option *is not* the equivalent of passing the `-f` flag to `apt-get` on the command line
        **This is a destructive operation with the potential to destroy your system, and it should almost never be used.** Please also see `man apt-get` for more information.
      name: force
    - default: false
      defaultValue: "no"
      description: |-
        Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage their own apt-key setup.
        `allow_unauthenticated` is only supported with state: `install`/`present`
      name: allow_unauthenticated
    - auto: PREDEFINED
      default: false
      defaultValue: "no"
      description: |-
        If yes or safe, performs an aptitude safe-upgrade.
        If full, performs an aptitude full-upgrade.
        If dist, performs an apt-get dist-upgrade.
        Note: This does not upgrade a specific package, use state=latest for that.
        Note: Since 2.4, apt-get is used as a fall-back if aptitude is not present.
      name: upgrade
      predefined:
      - dist
      - full
      - "no"
      - safe
      - "yes"
    - default: false
      defaultValue: force-confdef,force-confold
      description: |-
        Add dpkg options to apt command. Defaults to '-o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options::=--force-confold"'
        Options should be supplied as comma separated list
      name: dpkg_options
    - description: |-
        Path to a .deb package on the remote machine.
        If :// in the path, ansible will attempt to download deb before installing. (Version added 2.1)
        Requires the `xz-utils` package to extract the control file of the deb package to install.
      name: deb
    - default: false
      defaultValue: "no"
      description: |-
        If `yes`, remove unused dependency packages for all module states except `build-dep`. It can also be used as the only option.
        Previous to version 2.4, autoclean was also an alias for autoremove, now it is its own separate command. See documentation for further information.
      name: autoremove
    - default: false
      defaultValue: "no"
      description: If `yes`, cleans the local repository of retrieved package files
        that can no longer be downloaded.
      name: autoclean
    - description: |-
        Force the exit code of /usr/sbin/policy-rc.d.
        For example, if `policy_rc_d=101` the installed package will not trigger a service start.
        If /usr/sbin/policy-rc.d already exist, it is backed up and restored after the package installation.
        If `null`, the /usr/sbin/policy-rc.d isn't created/changed.
      name: policy_rc_d
    - default: false
      defaultValue: "no"
      description: Only upgrade a package if it is already installed.
      name: only_upgrade
    - default: false
      defaultValue: "no"
      description: Force usage of apt-get instead of aptitude
      name: force_apt_get
    description: Manages apt-packages
    name: linux-apt
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        The identifier of the key.
        Including this allows check mode to correctly report the changed state.
        If specifying a subkey's id be aware that apt-key does not understand how to remove keys via a subkey id.  Specify the primary key's id instead.
        This parameter is required when `state` is set to `absent`.
      name: id
    - description: The keyfile contents to add to the keyring.
      name: data
    - description: The path to a keyfile on the remote server to add to the keyring.
      name: file
    - description: The full path to specific keyring file in /etc/apt/trusted.gpg.d/
      name: keyring
    - description: The URL to retrieve key from.
      name: url
    - description: The keyserver to retrieve key from.
      name: keyserver
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Ensures that the key is present (added) or absent (revoked).
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "yes"
      description: If `no`, SSL certificates for the target url will not be validated.
        This should only be used on personally controlled sites using self-signed
        certificates.
      name: validate_certs
    description: Add or remove an apt key
    name: linux-apt-key
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the repository to add or remove.
      name: repo
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Indicates the desired repository state.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "no"
      description: |-
        Remove other then added repositories
        Used if `state=present`
      name: remove_others
    - default: false
      defaultValue: "no"
      description: Update the package database after changing repositories.
      name: update
    description: Manage APT repositories via apt-repo
    name: linux-apt-repo
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A source string for the repository.
      name: repo
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: A source string state.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "0644"
      description: The octal mode for newly created files in sources.list.d
      name: mode
    - default: false
      defaultValue: "yes"
      description: Run the equivalent of `apt-get update` when a change occurs.  Cache
        updates are run after making changes.
      name: update_cache
    - default: false
      defaultValue: "yes"
      description: If `no`, SSL certificates for the target repo will not be validated.
        This should only be used on personally controlled sites using self-signed
        certificates.
      name: validate_certs
    - description: Sets the name of the source list file in sources.list.d. Defaults
        to a file name based on the repository source url. The .list extension will
        be automatically added.
      name: filename
    - description: Override the distribution codename to use for PPA repositories.
        Should usually only be set when working with a PPA on a non-Ubuntu target
        (e.g. Debian or Mint)
      name: codename
    description: Add and remove APT repositories
    name: linux-apt-repository
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: name of package to install, upgrade or remove.
      name: pkg
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Indicates the desired package state.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "no"
      description: update the package database first `apt-get update`.
      name: update_cache
    description: apt_rpm package manager
    name: linux-apt-rpm
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the package
      name: name
      required: true
    - auto: PREDEFINED
      description: The selection state to set the package to.
      name: selection
      predefined:
      - install
      - hold
      - deinstall
      - purge
      required: true
    description: Dpkg package selection selections
    name: linux-dpkg-selections
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: flatpak
      description: |-
        The path to the `flatpak` executable to use.
        By default, this module looks for the `flatpak` executable on the path.
      name: executable
    - auto: PREDEFINED
      default: false
      defaultValue: system
      description: |-
        The installation method to use.
        Defines if the `flatpak` is supposed to be installed globally for the whole `system` or only for the current `user`.
      name: method
      predefined:
      - system
      - user
    - description: |-
        The name of the flatpak to manage.
        When used with `state=present`, `name` can be specified as an `http(s`) URL to a `flatpakref` file or the unique reverse DNS name that identifies a flatpak.
        When supplying a reverse DNS name, you can use the `remote` option to specify on what remote to look for the flatpak. An example for a reverse DNS name is `org.gnome.gedit`.
        When used with `state=absent`, it is recommended to specify the name in the reverse DNS format.
        When supplying an `http(s`) URL with `state=absent`, the module will try to match the installed flatpak based on the name of the flatpakref to remove it. However, there is no guarantee that the names of the flatpakref file and the reverse DNS name of the installed flatpak do match.
      name: name
      required: true
    - default: false
      defaultValue: flathub
      description: |-
        The flatpak remote (repository) to install the flatpak from.
        By default, `flathub` is assumed, but you do need to add the flathub flatpak_remote before you can use this.
        See the `flatpak_remote` module for managing flatpak remotes.
      name: remote
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Indicates the desired package state.
      name: state
      predefined:
      - absent
      - present
    description: Manage flatpaks
    name: linux-flatpak
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: flatpak
      description: |-
        The path to the `flatpak` executable to use.
        By default, this module looks for the `flatpak` executable on the path.
      name: executable
    - description: |-
        The URL to the `flatpakrepo` file representing the repository remote to add.
        When used with `state=present`, the flatpak remote specified under the `flatpakrepo_url` is added using the specified installation `method`.
        When used with `state=absent`, this is not required.
        Required when `state=present`.
      name: flatpakrepo_url
    - auto: PREDEFINED
      default: false
      defaultValue: system
      description: |-
        The installation method to use.
        Defines if the `flatpak` is supposed to be installed globally for the whole `system` or only for the current `user`.
      name: method
      predefined:
      - system
      - user
    - description: |-
        The desired name for the flatpak remote to be registered under on the managed host.
        When used with `state=present`, the remote will be added to the managed host under the specified `name`.
        When used with `state=absent` the remote with that name will be removed.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Indicates the desired package state.
      name: state
      predefined:
      - absent
      - present
    description: Manage flatpak repository remotes
    name: linux-flatpak-remote
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: list of names of packages to install/remove
      name: name
    - default: false
      defaultValue: /usr/local/bin
      description: A ':' separated list of paths to search for 'brew' executable.
        Since a package (`formula` in homebrew parlance) location is prefixed relative
        to the actual path of `brew` command, providing an alternative `brew` path
        enables managing different set of packages in an alternative location in the
        system.
      name: path
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: state of the package
      name: state
      predefined:
      - head
      - latest
      - present
      - absent
      - linked
      - unlinked
    - default: false
      defaultValue: "no"
      description: update homebrew itself first
      name: update_homebrew
    - default: false
      defaultValue: "no"
      description: upgrade all homebrew packages
      name: upgrade_all
    - description: options flags to install a package
      name: install_options
    description: Package manager for Homebrew
    name: linux-homebrew
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: name of cask to install/remove
      name: name
      required: true
    - default: false
      defaultValue: /usr/local/bin
      description: ''':'' separated list of paths to search for ''brew'' executable.'
      name: path
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: state of the cask
      name: state
      predefined:
      - present
      - absent
      - upgraded
    - description: The sudo password to be passed to SUDO_ASKPASS.
      name: sudo_password
    - default: false
      defaultValue: "no"
      description: update homebrew itself first. Note that `brew cask update` is a
        synonym for `brew update`.
      name: update_homebrew
    - description: options flags to install a package
      name: install_options
    - default: false
      defaultValue: "no"
      description: allow external apps
      name: accept_external_apps
    - default: false
      defaultValue: "no"
      description: upgrade all casks (mutually exclusive with `upgrade`)
      name: upgrade_all
    - default: false
      defaultValue: "no"
      description: upgrade all casks (mutually exclusive with `upgrade_all`)
      name: upgrade
    - default: false
      defaultValue: "no"
      description: upgrade casks that auto update; passes --greedy to brew cask outdated
        when checking if an installed cask has a newer version available
      name: greedy
    description: Install/uninstall homebrew casks.
    name: linux-homebrew-cask
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The GitHub user/organization repository to tap.
      name: name
      required: true
    - description: |-
        The optional git URL of the repository to tap. The URL is not assumed to be on GitHub, and the protocol doesn't have to be HTTP. Any location and protocol that git can handle is fine.
        `name` option may not be a list of multiple taps (but a single tap instead) when this option is provided.
      name: url
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: state of the repository.
      name: state
      predefined:
      - present
      - absent
    description: Tap a Homebrew repository.
    name: linux-homebrew-tap
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: The overlay id to install, synchronize, or uninstall. Use 'ALL'
        to sync all of the installed overlays (can be used only when `state=updated`).
      name: name
      required: true
    - description: An URL of the alternative overlays list that defines the overlay
        to install. This list will be fetched and saved under `${overlay_defs}`/${name}.xml),
        where `overlay_defs` is readed from the Layman's configuration.
      name: list_url
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether to install (`present`), sync (`updated`), or uninstall
        (`absent`) the overlay.
      name: state
      predefined:
      - present
      - absent
      - updated
    - default: false
      defaultValue: "yes"
      description: If `no`, SSL certificates will not be validated. This should only
        be set to `no` when no other option exists.  Prior to 1.9.3 the code defaulted
        to `no`.
      name: validate_certs
    description: Manage Gentoo overlays
    name: linux-layman
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Package name, or package specifier with version.
        Syntax varies with package manager. For example `name-1.0` or `name=1.0`.
        Package names also vary with package manager; this module will not "translate" them per distro. For example `libyaml-dev`, `libyaml-devel`.
      name: name
      required: true
    - description: |-
        Whether to install (`present`), or remove (`absent`) a package.
        You can use other states like `latest` ONLY if they are supported by the underlying package module(s) executed.
      name: state
      required: true
    - default: false
      defaultValue: auto
      description: |-
        The required package manager module to use (yum, apt, etc). The default 'auto' will use existing facts or try to autodetect it.
        You should only use this field if the automatic selection is not working for some reason.
      name: use
    description: Generic OS package manager
    name: linux-package
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: '[''auto'']'
      description: |-
        The package manager used by the system so we can query the package information.
        Since 2.8 this is a list and can support multiple package managers per system.
        The 'portage' and 'pkg' options were added in version 2.8.
      isArray: true
      name: manager
      predefined:
      - auto
      - rpm
      - apt
      - portage
      - pkg
    - auto: PREDEFINED
      default: false
      defaultValue: first
      description: This option controls how the module queries the package managers
        on the system. `first` means it will return only information for the first
        supported package manager available. `all` will return information for all
        supported and available package managers on the system.
      name: strategy
      predefined:
      - first
      - all
    description: package information as facts
    name: linux-package-facts
    outputs:
    - contextPath: Linux.ansible_facts.packages
      description: '[''Maps the package name to a non-empty list of dicts with package
        information.'', ''Every dict in the list corresponds to one installed version
        of the package.'', ''The fields described below are present for all package
        managers. Depending on the package manager, there might be more fields for
        a package.'']'
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: auto
      description: |-
        This module supports `yum` (as it always has), this is known as `yum3`/`YUM3`/`yum-deprecated` by upstream yum developers. As of Ansible 2.7+, this module also supports `YUM4`, which is the "new yum" and it has an `dnf` backend.
        By default, this module will select the backend based on the `ansible_pkg_mgr` fact.
      name: use_backend
      predefined:
      - auto
      - yum
      - yum4
      - dnf
    - description: |-
        A package name or package specifier with version, like `name-1.0`.
        If a previous version is specified, the task also needs to turn `allow_downgrade` on. See the `allow_downgrade` documentation for caveats with downgrading packages.
        When using state=latest, this can be `'*'` which means run `yum -y update`.
        You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated string of packages or (as of 2.0) a list of packages.
      isArray: true
      name: name
    - description: Package name(s) to exclude when state=present, or latest
      name: exclude
    - description: |-
        Package name to run the equivalent of yum list --show-duplicates <package> against. In addition to listing packages, use can also list the following: `installed`, `updates`, `available` and `repos`.
        This parameter is mutually exclusive with `name`.
      name: list
    - auto: PREDEFINED
      description: |-
        Whether to install (`present` or `installed`, `latest`), or remove (`absent` or `removed`) a package.
        `present` and `installed` will simply ensure that a desired package is installed.
        `latest` will update the specified package if it's not of the latest available version.
        `absent` and `removed` will remove the specified package.
        Default is `None`, however in effect the default action is `present` unless the `autoremove` option is enabled for this module, then `absent` is inferred.
      name: state
      predefined:
      - absent
      - installed
      - latest
      - present
      - removed
    - description: |-
        `Repoid` of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a `","`.
        As of Ansible 2.7, this can alternatively be a list instead of `","` separated string
      name: enablerepo
    - description: |-
        `Repoid` of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a `","`.
        As of Ansible 2.7, this can alternatively be a list instead of `","` separated string
      name: disablerepo
    - description: The remote yum configuration file to use for the transaction.
      name: conf_file
    - default: false
      defaultValue: "no"
      description: Whether to disable the GPG checking of signatures of packages being
        installed. Has an effect only if state is `present` or `latest`.
      name: disable_gpg_check
    - default: false
      defaultValue: "no"
      description: Skip packages with broken dependencies(devsolve) and are causing
        problems.
      name: skip_broken
    - default: false
      defaultValue: "no"
      description: Force yum to check if cache is out of date and redownload if needed.
        Has an effect only if state is `present` or `latest`.
      name: update_cache
    - default: false
      defaultValue: "yes"
      description: |-
        This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to `no`, the SSL certificates will not be validated.
        This should only set to `no` used on personally controlled sites using self-signed certificates as it avoids verifying the source site.
        Prior to 2.1 the code worked as if this was set to `yes`.
      name: validate_certs
    - default: false
      defaultValue: "no"
      description: |-
        When using latest, only update installed packages. Do not install packages.
        Has an effect only if state is `latest`
      name: update_only
    - default: false
      defaultValue: /
      description: Specifies an alternative installroot, relative to which all packages
        will be installed.
      name: installroot
    - default: false
      defaultValue: "no"
      description: If set to `yes`, and `state=latest` then only installs updates
        that have been marked security related.
      name: security
    - default: false
      defaultValue: "no"
      description: If set to `yes`, and `state=latest` then only installs updates
        that have been marked bugfix related.
      name: bugfix
    - default: false
      defaultValue: "no"
      description: Specify if the named package and version is allowed to downgrade
        a maybe already installed higher version of that package. Note that setting
        allow_downgrade=True can make this module behave in a non-idempotent way.
        The task could end up with a set of packages that does not match the complete
        list of specified packages to install (because dependencies between the downgraded
        package and others can cause changes to the packages which were in the earlier
        transaction).
      name: allow_downgrade
    - description: '`Plugin` name to enable for the install/update operation. The
        enabled plugin will not persist beyond the transaction.'
      name: enable_plugin
    - description: '`Plugin` name to disable for the install/update operation. The
        disabled plugins will not persist beyond the transaction.'
      name: disable_plugin
    - description: Specifies an alternative release from which all packages will be
        installed.
      name: releasever
    - default: false
      defaultValue: "no"
      description: |-
        If `yes`, removes all "leaf" packages from the system that were originally installed as dependencies of user-installed packages but which are no longer required by any such package. Should be used alone or when state is `absent`
        NOTE: This feature requires yum >= 3.4.3 (RHEL/CentOS 7+)
      name: autoremove
    - description: |-
        Disable the excludes defined in YUM config files.
        If set to `all`, disables all excludes.
        If set to `main`, disable excludes defined in [main] in yum.conf.
        If set to `repoid`, disable excludes defined for given repo id.
      name: disable_excludes
    - default: false
      defaultValue: "no"
      description: Only download the packages, do not install them.
      name: download_only
    - default: false
      defaultValue: "30"
      description: Amount of time to wait for the yum lockfile to be freed.
      name: lock_timeout
    - default: false
      defaultValue: "yes"
      description: |-
        Will also install all packages linked by a weak dependency relation.
        NOTE: This feature requires yum >= 4 (RHEL/CentOS 8+)
      name: install_weak_deps
    - description: |-
        Specifies an alternate directory to store packages.
        Has an effect only if `download_only` is specified.
      name: download_dir
    description: Manages packages with the I(yum) package manager
    name: linux-yum
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - default: false
      defaultValue: "yes"
      description: If set to `yes` Yum will download packages and metadata from this
        repo in parallel, if possible.
      name: async
    - default: false
      defaultValue: "0"
      description: |-
        Maximum available network bandwidth in bytes/second. Used with the `throttle` option.
        If `throttle` is a percentage and bandwidth is `0` then bandwidth throttling will be disabled. If `throttle` is expressed as a data rate (bytes/sec) then this option is ignored. Default is `0` (no bandwidth throttling).
      name: bandwidth
    - description: |-
        URL to the directory where the yum repository's 'repodata' directory lives.
        It can also be a list of multiple URLs.
        This, the `metalink` or `mirrorlist` parameters are required if `state` is set to `present`.
      name: baseurl
    - default: false
      defaultValue: "1000"
      description: Relative cost of accessing this repository. Useful for weighing
        one repo's packages as greater/less than any other.
      name: cost
    - default: false
      defaultValue: "100"
      description: When the relative size of deltarpm metadata vs pkgs is larger than
        this, deltarpm metadata is not downloaded from the repo. Note that you can
        give values over `100`, so `200` means that the metadata is required to be
        half the size of the packages. Use `0` to turn off this check, and always
        download metadata.
      name: deltarpm_metadata_percentage
    - default: false
      defaultValue: "75"
      description: When the relative size of delta vs pkg is larger than this, delta
        is not used. Use `0` to turn off delta rpm processing. Local repositories
        (with file:// `baseurl`) have delta rpms turned off by default.
      name: deltarpm_percentage
    - description: |-
        A human readable string describing the repository. This option corresponds to the "name" property in the repo file.
        This parameter is only required if `state` is set to `present`.
      name: description
    - default: false
      defaultValue: "yes"
      description: This tells yum whether or not use this repository.
      name: enabled
    - default: false
      defaultValue: "yes"
      description: Determines whether yum will allow the use of package groups for
        this repository.
      name: enablegroups
    - description: |-
        List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. `*` and `?`) are allowed.
        The list can also be a regular YAML array.
      name: exclude
    - auto: PREDEFINED
      default: false
      defaultValue: roundrobin
      description: |-
        `roundrobin` randomly selects a URL out of the list of URLs to start with and proceeds through each of them as it encounters a failure contacting the host.
        `priority` starts from the first `baseurl` listed and reads through them sequentially.
      name: failovermethod
      predefined:
      - roundrobin
      - priority
    - description: File name without the `.repo` extension to save the repo in. Defaults
        to the value of `name`.
      name: file
    - description: A URL pointing to the ASCII-armored CA key file for the repository.
      name: gpgcakey
    - description: |-
        Tells yum whether or not it should perform a GPG signature check on packages.
        No default setting. If the value is not set, the system setting from `/etc/yum.conf` or system default of `no` will be used.
      name: gpgcheck
    - description: |-
        A URL pointing to the ASCII-armored GPG key file for the repository.
        It can also be a list of multiple URLs.
      name: gpgkey
    - auto: PREDEFINED
      default: false
      defaultValue: all
      description: |-
        Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does.
        `all` means that all HTTP downloads should be cached.
        `packages` means that only RPM package downloads should be cached (but not repository metadata downloads).
        `none` means that no HTTP downloads should be cached.
      name: http_caching
      predefined:
      - all
      - packages
      - none
    - description: Include external configuration file. Both, local path and URL is
        supported. Configuration file will be inserted at the position of the `include=`
        line. Included files may contain further include lines. Yum will abort with
        an error if an inclusion loop is detected.
      name: include
    - description: |-
        List of packages you want to only use from a repository. This should be a space separated list. Shell globs using wildcards (eg. `*` and `?`) are allowed. Substitution variables (e.g. `$releasever`) are honored here.
        The list can also be a regular YAML array.
      name: includepkgs
    - auto: PREDEFINED
      default: false
      defaultValue: whatever
      description: |-
        Determines how yum resolves host names.
        `4` or `IPv4` - resolve to IPv4 addresses only.
        `6` or `IPv6` - resolve to IPv6 addresses only.
      name: ip_resolve
      predefined:
      - "4"
      - "6"
      - IPv4
      - IPv6
      - whatever
    - default: false
      defaultValue: "no"
      description: This tells yum whether or not HTTP/1.1 keepalive should be used
        with this repository. This can improve transfer speeds by using one connection
        when downloading multiple files from a repository.
      name: keepalive
    - auto: PREDEFINED
      default: false
      defaultValue: "1"
      description: Either `1` or `0`. Determines whether or not yum keeps the cache
        of headers and packages after successful installation.
      name: keepcache
      predefined:
      - "0"
      - "1"
    - default: false
      defaultValue: "21600"
      description: |-
        Time (in seconds) after which the metadata will expire.
        Default value is 6 hours.
      name: metadata_expire
    - auto: PREDEFINED
      default: false
      defaultValue: read-only:present
      description: |-
        Filter the `metadata_expire` time, allowing a trade of speed for accuracy if a command doesn't require it. Each yum command can specify that it requires a certain level of timeliness quality from the remote repos. from "I'm about to install/upgrade, so this better be current" to "Anything that's available is good enough".
        `never` - Nothing is filtered, always obey `metadata_expire`.
        `read-only:past` - Commands that only care about past information are filtered from metadata expiring. Eg. `yum history` info (if history needs to lookup anything about a previous transaction, then by definition the remote package was available in the past).
        `read-only:present` - Commands that are balanced between past and future. Eg. `yum list yum`.
        `read-only:future` - Commands that are likely to result in running other commands which will require the latest metadata. Eg. `yum check-update`.
        Note that this option does not override "yum clean expire-cache".
      name: metadata_expire_filter
      predefined:
      - never
      - read-only:past
      - read-only:present
      - read-only:future
    - description: |-
        Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for the entire repository are generated by converting the mirrors for the repomd.xml file to a `baseurl`.
        This, the `baseurl` or `mirrorlist` parameters are required if `state` is set to `present`.
      name: metalink
    - description: |-
        Specifies a URL to a file containing a list of baseurls.
        This, the `baseurl` or `metalink` parameters are required if `state` is set to `present`.
      name: mirrorlist
    - default: false
      defaultValue: "21600"
      description: |-
        Time (in seconds) after which the mirrorlist locally cached will expire.
        Default value is 6 hours.
      name: mirrorlist_expire
    - description: |-
        Unique repository ID. This option builds the section name of the repository in the repo file.
        This parameter is only required if `state` is set to `present` or `absent`.
      name: name
      required: true
    - description: Password to use with the username for basic authentication.
      name: password
    - default: false
      defaultValue: "99"
      description: |-
        Enforce ordered protection of repositories. The value is an integer from 1 to 99.
        This option only works if the YUM Priorities plugin is installed.
      name: priority
    - default: false
      defaultValue: "no"
      description: Protect packages from updates from other repositories.
      name: protect
    - description: URL to the proxy server that yum should use. Set to `_none_` to
        disable the global proxy setting.
      name: proxy
    - description: Password for this proxy.
      name: proxy_password
    - description: Username to use for proxy.
      name: proxy_username
    - default: false
      defaultValue: "no"
      description: This tells yum whether or not it should perform a GPG signature
        check on the repodata from this repository.
      name: repo_gpgcheck
    - default: false
      defaultValue: /etc/yum.repos.d
      description: Directory where the `.repo` files will be stored.
      name: reposdir
    - default: false
      defaultValue: "10"
      description: Set the number of times any attempt to retrieve a file should retry
        before returning an error. Setting this to `0` makes yum try forever.
      name: retries
    - default: false
      defaultValue: "no"
      description: |-
        Enables support for S3 repositories.
        This option only works if the YUM S3 plugin is installed.
      name: s3_enabled
    - default: false
      defaultValue: "no"
      description: If set to `yes` yum will continue running if this repository cannot
        be contacted for any reason. This should be set carefully as all repos are
        consulted for any given command.
      name: skip_if_unavailable
    - default: false
      defaultValue: "no"
      description: |-
        Whether yum should check the permissions on the paths for the certificates on the repository (both remote and local).
        If we can't read any of the files then yum will force `skip_if_unavailable` to be `yes`. This is most useful for non-root processes which use yum on repos that have client cert files which are readable only by root.
      name: ssl_check_cert_permissions
    - description: Path to the directory containing the databases of the certificate
        authorities yum should use to verify SSL certificates.
      name: sslcacert
    - description: Path to the SSL client certificate yum should use to connect to
        repos/remote sites.
      name: sslclientcert
    - description: Path to the SSL client key yum should use to connect to repos/remote
        sites.
      name: sslclientkey
    - default: false
      defaultValue: "yes"
      description: Defines whether yum should verify SSL certificates/hosts at all.
      name: sslverify
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: State of the repo file.
      name: state
      predefined:
      - absent
      - present
    - description: |-
        Enable bandwidth throttling for downloads.
        This option can be expressed as a absolute data rate in bytes/sec. An SI prefix (k, M or G) may be appended to the bandwidth value.
      name: throttle
    - default: false
      defaultValue: "30"
      description: Number of seconds to wait for a connection before timing out.
      name: timeout
    - default: false
      defaultValue: releasever basearch
      description: When a repository id is displayed, append these yum variables to
        the string if they are used in the `baseurl`/etc. Variables are appended in
        the order listed (and found).
      name: ui_repoid_vars
    - description: Username to use for basic authentication to a repo or really any
        url.
      name: username
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Add or remove YUM repositories
    name: linux-yum-repository
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: |-
        Package name `name` or package specifier or a list of either.
        Can include a version like `name=1.0`, `name>3.4` or `name<=2.7`. If a version is given, `oldpackage` is implied and zypper is allowed to update the package within the version range given.
        You can also pass a url or a local path to a rpm file.
        When using state=latest, this can be '*', which updates all installed packages.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: |-
        `present` will make sure the package is installed. `latest`  will make sure the latest version of the package is installed. `absent`  will make sure the specified package is not installed. `dist-upgrade` will make sure the latest version of all installed packages from all enabled repositories is installed.
        When using `dist-upgrade`, `name` should be `'*'`.
      name: state
      predefined:
      - present
      - latest
      - absent
      - dist-upgrade
    - auto: PREDEFINED
      default: false
      defaultValue: package
      description: The type of package to be operated on.
      name: type
      predefined:
      - package
      - patch
      - pattern
      - product
      - srcpackage
      - application
    - description: |-
        Add additional global target options to `zypper`.
        Options should be supplied in a single line as if given in the command line.
      name: extra_args_precommand
    - default: false
      defaultValue: "no"
      description: Whether to disable to GPG signature checking of the package signature
        being installed. Has an effect only if state is `present` or `latest`.
      name: disable_gpg_check
    - default: false
      defaultValue: "yes"
      description: Corresponds to the `--no-recommends` option for `zypper`. Default
        behavior (`yes`) modifies zypper's default behavior; `no` does install recommended
        packages.
      name: disable_recommends
    - default: false
      defaultValue: "no"
      description: Adds `--force` option to `zypper`. Allows to downgrade packages
        and change vendor or architecture.
      name: force
    - default: false
      defaultValue: "no"
      description: Run the equivalent of `zypper refresh` before the operation. Disabled
        in check mode.
      name: update_cache
    - default: false
      defaultValue: "no"
      description: Adds `--oldpackage` option to `zypper`. Allows to downgrade packages
        with less side-effects than force. This is implied as soon as a version is
        specified as part of the package name.
      name: oldpackage
    - description: |-
        Add additional options to `zypper` command.
        Options should be supplied in a single line as if given in the command line.
      name: extra_args
    description: Manage packages on SUSE and openSUSE
    name: linux-zypper
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: A name for the repository. Not required when adding repofiles.
      name: name
    - description: URI of the repository or .repo file. Required when state=present.
      name: repo
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: A source string state.
      name: state
      predefined:
      - absent
      - present
    - description: A description of the repository
      name: description
    - default: false
      defaultValue: "no"
      description: |-
        Whether to disable GPG signature checking of all packages. Has an effect only if state is `present`.
        Needs zypper version >= 1.6.2.
      name: disable_gpg_check
    - default: false
      defaultValue: "yes"
      description: Enable autorefresh of the repository.
      name: autorefresh
    - description: |-
        Set priority of repository. Packages will always be installed from the repository with the smallest priority number.
        Needs zypper version >= 1.12.25.
      name: priority
    - default: false
      defaultValue: "no"
      description: Overwrite multiple repository entries, if repositories with both
        name and URL already exist.
      name: overwrite_multiple
    - default: false
      defaultValue: "no"
      description: |-
        Automatically import the gpg signing key of the new or changed repository.
        Has an effect only if state is `present`. Has no effect on existing (unchanged) repositories or in combination with `absent`.
        Implies runrefresh.
        Only works with `.repo` files if `name` is given explicitly.
      name: auto_import_keys
    - default: false
      defaultValue: "no"
      description: |-
        Refresh the package list of the given repository.
        Can be used with repo=* to refresh all repositories.
      name: runrefresh
    - default: false
      defaultValue: "yes"
      description: Set repository to enabled (or disabled).
      name: enabled
    description: Add and remove Zypper repositories
    name: linux-zypper-repository
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the snap to install or remove. Can be a list of snaps.
      name: name
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Desired state of the package.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "False"
      description: Confinement policy. The classic confinement allows a snap to have
        the same level of access to the system as "classic" packages, like those managed
        by APT. This option corresponds to the --classic argument. This option can
        only be specified if there is a single snap in the task.
      name: classic
    - default: false
      defaultValue: stable
      description: Define which release of a snap is installed and tracked for updates.
        This option can only be specified if there is a single snap in the task.
      name: channel
    description: Manages snaps
    name: linux-snap
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: whether to register and subscribe (`present`), or unregister (`absent`)
        a system
      name: state
      predefined:
      - present
      - absent
    - description: access.redhat.com or Sat6  username
      name: username
    - description: access.redhat.com or Sat6 password
      name: password
    - description: Specify an alternative Red Hat Subscription Management or Sat6
        server
      name: server_hostname
    - description: Enable or disable https server certificate verification when connecting
        to `server_hostname`
      name: server_insecure
    - description: Specify CDN baseurl
      name: rhsm_baseurl
    - description: Specify an alternative location for a CA certificate for CDN
      name: rhsm_repo_ca_cert
    - description: Specify a HTTP proxy hostname
      name: server_proxy_hostname
    - description: Specify a HTTP proxy port
      name: server_proxy_port
    - description: Specify a user for HTTP proxy with basic authentication
      name: server_proxy_user
    - description: Specify a password for HTTP proxy with basic authentication
      name: server_proxy_password
    - default: false
      defaultValue: "no"
      description: |-
        Upon successful registration, auto-consume available subscriptions
        Added in favor of deprecated autosubscribe in 2.5.
      name: auto_attach
    - description: supply an activation key for use with registration
      name: activationkey
    - description: Organization ID to use in conjunction with activationkey
      name: org_id
    - description: Register with a specific environment in the destination org. Used
        with Red Hat Satellite 6.x or Katello
      name: environment
    - default: false
      defaultValue: ^$
      description: |-
        Specify a subscription pool name to consume.  Regular expressions accepted. Use `pool_ids` instead if
        possible, as it is much faster. Mutually exclusive with `pool_ids`.
      name: pool
    - default: false
      defaultValue: '[]'
      description: |-
        Specify subscription pool IDs to consume. Prefer over `pool` when possible as it is much faster.
        A pool ID may be specified as a `string` - just the pool ID (ex. `0123456789abcdef0123456789abcdef`),
        or as a `dict` with the pool ID as the key, and a quantity as the value (ex.
        `0123456789abcdef0123456789abcdef: 2`. If the quantity is provided, it is used to consume multiple
        entitlements from a pool (the pool must support this). Mutually exclusive with `pool`.
      name: pool_ids
    - description: The type of unit to register, defaults to system
      name: consumer_type
    - description: Name of the system to register, defaults to the hostname
      name: consumer_name
    - description: |-
        References an existing consumer ID to resume using a previous registration
        for this system. If the  system's identity certificate is lost or corrupted,
        this option allows it to resume using its previous identity and subscriptions.
        The default is to not specify a consumer ID so a new ID is created.
      name: consumer_id
    - default: false
      defaultValue: "no"
      description: Register the system even if it is already registered
      name: force_register
    - description: Set a release version
      name: release
    - default: false
      defaultValue: '{}'
      description: Set syspurpose attributes in file `/etc/rhsm/syspurpose/syspurpose.json`
        and synchronize these attributes with RHSM server. Syspurpose attributes help
        attach the most appropriate subscriptions to the system automatically. When
        `syspurpose.json` file already contains some attributes, then new attributes
        overwrite existing attributes. When some attribute is not listed in the new
        list of attributes, the existing attribute will be removed from `syspurpose.json`
        file. Unknown attributes are ignored.
      isArray: true
      name: syspurpose
    description: Manage registration and subscriptions to RHSM using the C(subscription-manager)
      command
    name: linux-redhat-subscription
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Name of the software channel.
      name: name
      required: true
    - description: Name of the system as it is known in RHN/Satellite.
      name: sysname
      required: true
    - default: false
      defaultValue: present
      description: Whether the channel should be present or not, taking action if
        the state is different from what is stated.
      name: state
    - description: The full URL to the RHN/Satellite API.
      name: url
      required: true
    - description: RHN/Satellite login.
      name: user
      required: true
    - description: RHN/Satellite password.
      name: password
      required: true
    description: Adds or removes Red Hat software channels
    name: linux-rhn-channel
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: Whether to register (`present`), or unregister (`absent`) a system.
      name: state
      predefined:
      - absent
      - present
    - description: Red Hat Network username.
      name: username
    - description: Red Hat Network password.
      name: password
    - description: |-
        Specify an alternative Red Hat Network server URL.
        The default is the current value of `serverURL` from `/etc/sysconfig/rhn/up2date`.
      name: server_url
    - description: Supply an activation key for use with registration.
      name: activationkey
    - description: Supply an profilename for use with registration.
      name: profilename
    - description: Supply a custom ssl CA certificate file for use with registration.
      name: ca_cert
    - description: Supply an organizational id for use with registration.
      name: systemorgid
    - default: false
      defaultValue: '[]'
      description: Optionally specify a list of channels to subscribe to upon successful
        registration.
      isArray: true
      name: channels
    - default: false
      defaultValue: "False"
      description: If `no`, extended update support will be requested.
      name: enable_eus
    - default: false
      defaultValue: "False"
      description: If `yes`, the registered node will not upload its installed packages
        information to Satellite server.
      name: nopackages
    description: Manage Red Hat Network registration using the C(rhnreg_ks) command
    name: linux-rhn-register
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: RHSM release version to use (use null to unset)
      name: release
      required: true
    description: Set or Unset RHSM Release version
    name: linux-rhsm-release
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: If state is equal to present or disabled, indicates the desired
        repository state.
      name: state
      predefined:
      - present
      - enabled
      - absent
      - disabled
      required: true
    - description: |-
        The ID of repositories to enable.
        To operate on several repositories this can accept a comma separated list or a YAML list.
      name: name
      required: true
    - default: false
      defaultValue: "False"
      description: Disable all currently enabled repositories that are not not specified
        in `name`. Only set this to `True` if passing in a list of repositories to
        the `name` field. Using this with `loop` will most likely not have the desired
        result.
      name: purge
    description: Manage RHSM repositories using the subscription-manager command
    name: linux-rhsm-repository
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: Key that will be modified. Can be a url, a file on the managed
        node, or a keyid if the key already exists in the database.
      name: key
      required: true
    - auto: PREDEFINED
      default: false
      defaultValue: present
      description: If the key will be imported or removed from the rpm db.
      name: state
      predefined:
      - absent
      - present
    - default: false
      defaultValue: "yes"
      description: |-
        If `no` and the `key` is a url starting with https, SSL certificates will not be validated.
        This should only be used on personally controlled sites using self-signed certificates.
      name: validate_certs
    - description: |-
        The long-form fingerprint of the key being imported.
        This will be used to verify the specified key.
      name: fingerprint
    description: Adds or removes a gpg key from the rpm db
    name: linux-rpm-key
  - arguments:
    - description: hostname or IP of target. Optionally the port can be specified
        using :PORT. If multiple targets are specified using an array, the integration
        will use the configured concurrency factor for high performance.
      isArray: true
      name: host
      required: true
    - description: HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path
      name: url
      required: true
    - description: |-
        Absolute path of where to download the file to.
        If `dest` is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, `force` has no effect.
        If `dest` is a directory, the file will always be downloaded (regardless of the `force` option), but replaced only if the contents changed..
      name: dest
      required: true
    - description: |-
        Absolute path of where temporary file is downloaded to.
        When run on Ansible 2.5 or greater, path defaults to ansible's remote_tmp setting
        When run on Ansible prior to 2.5, it defaults to `TMPDIR`, `TEMP` or `TMP` env variables or a platform specific value.
        `https://docs.python.org/2/library/tempfile.html#tempfile.tempdir`
      name: tmp_dest
    - default: false
      defaultValue: "False"
      description: |-
        If `yes` and `dest` is not a directory, will download the file every time and replace the file if the contents change. If `no`, the file will only be downloaded if the destination does not exist. Generally should be `yes` only for small local files.
        Prior to 0.6, this module behaved as if `yes` was the default.
        Alias `thirsty` has been deprecated and will be removed in 2.13.
      name: force
    - default: false
      defaultValue: "False"
      description: Create a backup file including the timestamp information so you
        can get the original file back if you somehow clobbered it incorrectly.
      name: backup
    - default: false
      description: If a SHA-256 checksum is passed to this parameter, the digest of
        the destination file will be calculated after it is downloaded to ensure its
        integrity and verify that the transfer completed successfully. This option
        is deprecated. Use `checksum` instead.
      name: sha256sum
    - default: false
      description: |-
        If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. Format: <algorithm>:<checksum|url>, e.g. checksum="sha256:D98291AC[...]B6DC7B97", checksum="sha256:http://example.com/path/sha256sum.txt"
        If you worry about portability, only the sha1 algorithm is available on all platforms and python versions.
        The third party hashlib library can be installed for access to additional algorithms.
        Additionally, if a checksum is passed to this parameter, and the file exist under the `dest` location, the `destination_checksum` would be calculated, and if checksum equals `destination_checksum`, the file download would be skipped (unless `force` is true). If the checksum does not equal `destination_checksum`, the destination file is deleted.
      name: checksum
    - default: false
      defaultValue: "True"
      description: if `no`, it will not use a proxy, even if one is defined in an
        environment variable on the target hosts.
      name: use_proxy
    - default: false
      defaultValue: "True"
      description: |-
        If `no`, SSL certificates will not be validated.
        This should only be used on personally controlled sites using self-signed certificates.
      name: validate_certs
    - default: false
      defaultValue: "10"
      description: Timeout in seconds for URL request.
      name: timeout
    - description: |-
        Add custom HTTP headers to a request in hash/dict format.
        The hash/dict format was added in Ansible 2.6.
        Previous versions used a `"key:value,key:value"` string format.
        The `"key:value,key:value"` string format is deprecated and will be removed in version 2.10.
      name: headers
    - description: |-
        The username for use in HTTP basic authentication.
        This parameter can be used without `url_password` for sites that allow empty passwords.
        Since version 2.8 you can also use the `username` alias for this option.
      name: url_username
    - description: |-
        The password for use in HTTP basic authentication.
        If the `url_username` parameter is not specified, the `url_password` parameter will not be used.
        Since version 2.8 you can also use the 'password' alias for this option.
      name: url_password
    - default: false
      defaultValue: "False"
      description: |-
        Force the sending of the Basic authentication header upon initial request.
        httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail.
      name: force_basic_auth
    - description: |-
        PEM formatted certificate chain file to be used for SSL client authentication.
        This file can also include the key as well, and if the key is included, `client_key` is not required.
      name: client_cert
    - description: |-
        PEM formatted file that contains your private key to be used for SSL client authentication.
        If `client_cert` contains both the certificate and key, this option is not required.
      name: client_key
    - default: false
      defaultValue: ansible-httpget
      description: Header to identify as, generally appears in web server logs.
      name: http_agent
    - description: |-
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod` remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like `0644` or `01777`) or quote it (like `'644'` or `'1777'`) so Ansible receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx` or `u=rw,g=r,o=r`).
        As of Ansible 2.6, the mode may also be the special string `preserve`.
        When set to `preserve` the file will be given the same permissions as the source file.
      name: mode
    - description: Name of the user that should own the file/directory, as would be
        fed to `chown`.
      name: owner
    - description: Name of the group that should own the file/directory, as would
        be fed to `chown`.
      name: group
    - description: |-
        The user part of the SELinux file context.
        By default it uses the `system` policy, where applicable.
        When set to `_default`, it will use the `user` portion of the policy if available.
      name: seuser
    - description: |-
        The role part of the SELinux file context.
        When set to `_default`, it will use the `role` portion of the policy if available.
      name: serole
    - description: |-
        The type part of the SELinux file context.
        When set to `_default`, it will use the `type` portion of the policy if available.
      name: setype
    - default: false
      defaultValue: s0
      description: |-
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range`.
        When set to `_default`, it will use the `level` portion of the policy if available.
      name: selevel
    - default: false
      defaultValue: "False"
      description: |-
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
      name: unsafe_writes
    - description: |-
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr` on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr`.
        The `=` operator is assumed as default, otherwise `+` or `-` operators need to be included in the string.
      name: attributes
    description: Downloads files from HTTP, HTTPS, or FTP to node
    name: linux-get-url
  dockerimage: demisto/ansible-runner:1.0.0.16542
  runonce: false
  script: ''
  subtype: python3
  type: python
fromversion: 6.0.0
tests:
- No tests (auto formatted)
