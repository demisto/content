id: Cortex XDR - Port Scan
version: -1
name: Cortex XDR - Port Scan
description: |-
  Investigates a Cortex XDR incident containing internal port scan alerts. The playbook:
  - Syncs data with Cortex XDR
  - Enriches the hostname and IP address of the attacking endpoint
  - Notifies management about host compromise
  - Escalates the incident in case of lateral movement alert detection
  - Hunts malware associated with the alerts across the organization
  - Blocks detected malware associated with the incident
  - Blocks IPs associated with the malware
  - Isolates the attacking endpoint
  - Allows manual blocking of ports that were used for host login following the port scan
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 7c46d5ad-2e77-4213-8d84-4de23934ce23
    type: start
    task:
      id: 7c46d5ad-2e77-4213-8d84-4de23934ce23
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 20
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 8277520e-1e78-403a-8914-018cd06cc1f3
    type: title
    task:
      id: 8277520e-1e78-403a-8914-018cd06cc1f3
      version: -1
      name: Triage
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "92"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 145
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: dd99e02f-59f3-403d-86ed-0c56428cd7ad
    type: regular
    task:
      id: dd99e02f-59f3-403d-86ed-0c56428cd7ad
      version: -1
      name: Check if attacker is internal or external
      description: Uses an automated script to determine if the IP used in the incident
        is in one of the ranges provided.
      scriptName: IsIPInRanges
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      ip:
        complex:
          root: AttackerIPs
          transformers:
          - operator: uniq
      ipRanges: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 40,
          "y": 880
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: fb9bb58b-4c96-4820-84a6-ea829168c785
    type: regular
    task:
      id: fb9bb58b-4c96-4820-84a6-ea829168c785
      version: -1
      name: Save whitelisted hostnames as list
      description: Saves the whitelisted hostnames, if any were configured in the
        playbook inputs.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: WhitelistedHostnames
      stringify: {}
      value:
        complex:
          root: inputs.WhitelistedHostnames
          transformers:
          - operator: splitAndTrim
            args:
              delimiter:
                value:
                  simple: ','
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 860,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: 7a7a6ec8-c9fa-415a-87bc-bc507762e35e
    type: regular
    task:
      id: 7a7a6ec8-c9fa-415a-87bc-bc507762e35e
      version: -1
      name: Save email addresses to notify
      description: Saves the email addresses to notify about the compromised host,
        if any were configured in the playbook inputs.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: EmailAddressesToNotify
      stringify: {}
      value:
        complex:
          root: inputs.EmailAddressesToNotify
          transformers:
          - operator: splitAndTrim
            args:
              delimiter:
                value:
                  simple: ','
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1270,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "32":
    id: "32"
    taskid: 9de655f8-11e9-4297-8a3d-90b5c7878c91
    type: condition
    task:
      id: 9de655f8-11e9-4297-8a3d-90b5c7878c91
      version: -1
      name: Has there been a successful login to the scanned host?
      description: Manually check if there has been a successful login to the scanned
        host following the port scan.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "87"
      "yes":
      - "34"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1740,
          "y": 3100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "34":
    id: "34"
    taskid: 5ade44c2-fea8-45bf-81fd-a1f00699998a
    type: regular
    task:
      id: 5ade44c2-fea8-45bf-81fd-a1f00699998a
      version: -1
      name: Block ports used for exploitation on the scanned host
      description: Manually block the port/s associated with vulnerable services or
        that allowed the attacker to gain unauthorized access to the target machine.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1740,
          "y": 3325
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "37":
    id: "37"
    taskid: 60870224-e9dc-4cab-8f05-eaf6e832a45c
    type: regular
    task:
      id: 60870224-e9dc-4cab-8f05-eaf6e832a45c
      version: -1
      name: Save attacker IPs
      description: Saves the IP address from which the port scan originated.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      append: {}
      key:
        simple: AttackerIPs
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          accessor: Incident.alerts.host_ip
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 40,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "40":
    id: "40"
    taskid: 73644573-1b41-4de6-847a-036fa9003a86
    type: regular
    task:
      id: 73644573-1b41-4de6-847a-036fa9003a86
      version: -1
      name: Save attacker username
      description: Saves the username associated with the port scan.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: AttackerUsername
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          filters:
          - - operator: isExists
              left:
                value:
                  simple: user_name
                iscontext: true
          - - operator: isNotEqualString
              left:
                value:
                  simple: user_name
                iscontext: true
              right:
                value:
                  simple: N/A
          accessor: Incident.alerts
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: user_name
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "42":
    id: "42"
    taskid: 8cbe42bf-2e02-4201-8a2a-10d019de3b5f
    type: title
    task:
      id: 8cbe42bf-2e02-4201-8a2a-10d019de3b5f
      version: -1
      name: Detection
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "93"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "45":
    id: "45"
    taskid: 21793aba-c2ca-4961-85e9-10b3ff85b818
    type: regular
    task:
      id: 21793aba-c2ca-4961-85e9-10b3ff85b818
      version: -1
      name: Save file artifacts
      description: Saves file artifacts associated with the incident.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: FileArtifacts
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          accessor: Incident.file_artifacts
          transformers:
          - operator: uniq
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "46":
    id: "46"
    taskid: d9ea6596-fcd4-4f66-8bae-e6d654b358d4
    type: regular
    task:
      id: d9ea6596-fcd4-4f66-8bae-e6d654b358d4
      version: -1
      name: Save attacker hostname
      description: Saves the hostname that performed the port scan.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: AttackerHostnames
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          accessor: Incident.alerts.host_name
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -370,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "48":
    id: "48"
    taskid: c233bda6-bc73-4094-89bf-d7c8d15315c0
    type: condition
    task:
      id: c233bda6-bc73-4094-89bf-d7c8d15315c0
      version: -1
      name: Was there a case of lateral movement following the scan?
      description: Checks whether there was a lateral movement alert that came after
        the port scan alert.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "60"
      "yes":
      - "86"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: LateralMovementFirstDatetime
            iscontext: true
      - - operator: isBefore
          left:
            value:
              simple: PortScanFirstDatetime
            iscontext: true
          right:
            value:
              simple: LateralMovementFirstDatetime
            iscontext: true
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "49":
    id: "49"
    taskid: c15ebabb-7bd3-420f-8a0e-e98c9b1a0407
    type: regular
    task:
      id: c15ebabb-7bd3-420f-8a0e-e98c9b1a0407
      version: -1
      name: Save incident alerts
      description: Saves the alerts associated with this incident in a new context
        key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "50"
      - "97"
    scriptarguments:
      append: {}
      key:
        simple: IncidentAlerts
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          accessor: Incident.alerts
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2090,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "50":
    id: "50"
    taskid: 8d3ea69c-7a79-4d44-8316-4b8e628791ca
    type: regular
    task:
      id: 8d3ea69c-7a79-4d44-8316-4b8e628791ca
      version: -1
      name: Save port scan date time
      description: Saves the date and time of the first port scan alert.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append:
        simple: "false"
      key:
        simple: PortScanFirstDatetime
      stringify: {}
      value:
        complex:
          root: IncidentAlerts
          filters:
          - - operator: containsGeneral
              left:
                value:
                  simple: IncidentAlerts.name
                iscontext: true
              right:
                value:
                  simple: Port Scan
              ignorecase: true
          accessor: detection_timestamp
          transformers:
          - operator: sort
            args:
              descending: {}
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
          - operator: TimeStampToDate
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2090,
          "y": 890
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "51":
    id: "51"
    taskid: fe20e8a9-9913-4989-8337-1cc117319cf4
    type: regular
    task:
      id: fe20e8a9-9913-4989-8337-1cc117319cf4
      version: -1
      name: Save lateral movement date time
      description: Saves the date and time of the first lateral movement alert, when
        it exists.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append:
        simple: "false"
      key:
        simple: LateralMovementFirstDatetime
      stringify: {}
      value:
        complex:
          root: IncidentAlerts
          filters:
          - - operator: containsGeneral
              left:
                value:
                  simple: IncidentAlerts.category
                iscontext: true
              right:
                value:
                  simple: Lateral Movement
              ignorecase: true
          accessor: detection_timestamp
          transformers:
          - operator: sort
            args:
              descending: {}
          - operator: atIndex
            args:
              index:
                value:
                  simple: "0"
          - operator: TimeStampToDate
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2750,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "52":
    id: "52"
    taskid: 3c6b03b5-80b2-4526-8a5d-4571103d4f6e
    type: regular
    task:
      id: 3c6b03b5-80b2-4526-8a5d-4571103d4f6e
      version: -1
      name: Investigate affected endpoints
      description: Manually investigate endpoints infected with the malware.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 3660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "54":
    id: "54"
    taskid: 658cbdbe-d7d7-4575-86dc-03de7c56e103
    type: condition
    task:
      id: 658cbdbe-d7d7-4575-86dc-03de7c56e103
      version: -1
      name: Were internal hosts infected with malware?
      description: Checks whether internal hosts were related in any way to the SHA256
        hash of the malware associated with this incident.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "61"
      "yes":
      - "72"
      - "62"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: PANWHunting
                accessor: DetectedInternalHosts
            iscontext: true
    view: |-
      {
        "position": {
          "x": 220,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "59":
    id: "59"
    taskid: e02d1a26-fc02-47af-8409-b98f7206acb0
    type: playbook
    task:
      id: e02d1a26-fc02-47af-8409-b98f7206acb0
      version: -1
      name: PANW - Hunting and threat detection by indicator type V2
      description: "Integrations list: Cortex (Traps, PAN-OS, Analytics)\nThis is
        a multipurpose playbook used for hunting and threat detection. The playbook
        receives inputs based on hashes, IP addresses, or domain names provided manually
        or from outputs by other playbooks. \nWith the received indicators, the playbook
        leverages Palo Alto Cortex data received by products such as Traps, Analytics
        and Pan-OS to search for IP addresses and hosts related to that specific hash.
        \nThe output provided by the playbook facilitates pivoting searches for possibly
        affected hosts, IP addresses, or users."
      playbookName: PANW - Hunting and threat detection by indicator type V2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "54"
      - "67"
    scriptarguments:
      IPAddresses: {}
      InternalRange:
        complex:
          root: inputs.InternalIPRanges
      MD5: {}
      SHA1: {}
      SHA256:
        complex:
          root: FileArtifacts
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: is_malicious
                iscontext: true
              right:
                value:
                  simple: "true"
              ignorecase: true
            - operator: isNotEqualString
              left:
                value:
                  simple: file_wildfire_verdict
                iscontext: true
              right:
                value:
                  simple: BENIGN
              ignorecase: true
          accessor: file_sha256
      URLDomain: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 450,
          "y": 3100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
  "60":
    id: "60"
    taskid: 94865e07-4176-494c-815b-36d6e15aee37
    type: title
    task:
      id: 94865e07-4176-494c-815b-36d6e15aee37
      version: -1
      name: Containment & Remediation
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "94"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 2660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "61":
    id: "61"
    taskid: 53c86ada-28b3-46de-8da2-e799b8a88bd9
    type: playbook
    task:
      id: 53c86ada-28b3-46de-8da2-e799b8a88bd9
      version: -1
      name: Calculate Severity - Generic v2
      description: |-
        Calculate and assign the incident severity based on the highest returned severity level from the following calculations:

        - DBotScores of indicators
        - Critical assets
        - Email authenticity
        - Current incident severity
      playbookName: Calculate Severity - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "81"
    scriptarguments:
      Account:
        complex:
          root: Account
          transformers:
          - operator: uniq
      CriticalEndpoints:
        complex:
          root: inputs.CriticalHostnames
      CriticalGroups:
        complex:
          root: inputs.CriticalADGroups
      CriticalUsers:
        complex:
          root: inputs.CriticalUsernames
      DBotScore:
        complex:
          root: DBotScore
      EmailAuthenticityCheck: {}
      Endpoint:
        complex:
          root: Endpoint
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 470,
          "y": 3840
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "62":
    id: "62"
    taskid: 564342aa-8759-4b57-81c9-f8251f7362b7
    type: regular
    task:
      id: 564342aa-8759-4b57-81c9-f8251f7362b7
      version: -1
      name: Save involved hostnames to endpoint objects
      description: Saves hostnames related to this incident in the Endpoint.Hostname
        context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "52"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Endpoint.Hostname
      stringify: {}
      value:
        complex:
          root: PANWHunting
          accessor: DetectedInternalHosts
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 60,
          "y": 3485
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "63":
    id: "63"
    taskid: 6d49f70a-f26a-4fa6-80e9-70a448ad330a
    type: regular
    task:
      id: 6d49f70a-f26a-4fa6-80e9-70a448ad330a
      version: -1
      name: Escalate incident to higher tier
      description: Assigns the incident to a random user who has the role configured
        in the RoleForEscalation playbook input.
      scriptName: AssignAnalystToIncident
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "60"
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall:
        complex:
          root: inputs.OnCall
      roles:
        complex:
          root: inputs.RoleForEscalation
      username: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 140,
          "y": 2475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "64":
    id: "64"
    taskid: 612da2fe-8435-4296-860c-3f3406c69d9d
    type: condition
    task:
      id: 612da2fe-8435-4296-860c-3f3406c69d9d
      version: -1
      name: Can the incident be auto-escalated to a higher tier?
      description: Checks whether a role from which analysts can be assigned to the
        incident was configured in the RoleForEscalation playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "65"
      "yes":
      - "63"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.RoleForEscalation
            iscontext: true
    view: |-
      {
        "position": {
          "x": 140,
          "y": 2300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "65":
    id: "65"
    taskid: ef28b658-0ec9-4697-8b88-2d48a854d590
    type: regular
    task:
      id: ef28b658-0ec9-4697-8b88-2d48a854d590
      version: -1
      name: Manually escalate incident
      description: Manually assign the incident to an analyst of a higher tier.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "60"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -280,
          "y": 2475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "66":
    id: "66"
    taskid: 36ca3b97-fe38-46cd-80e9-1e2ec5967245
    type: regular
    task:
      id: 36ca3b97-fe38-46cd-80e9-1e2ec5967245
      version: -1
      name: Save critical usernames as list
      description: Saves any usernames of critical users that are configured in the
        playbook inputs.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      append: {}
      key:
        simple: CriticalUsernames
      stringify: {}
      value:
        complex:
          root: inputs.CriticalUsernames
          transformers:
          - operator: splitAndTrim
            args:
              delimiter:
                value:
                  simple: ','
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1680,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "67":
    id: "67"
    taskid: 7f35d238-c12d-4a4d-8882-f60193205889
    type: condition
    task:
      id: 7f35d238-c12d-4a4d-8882-f60193205889
      version: -1
      name: Are external IPs associated with the malware?
      description: Checks whether the SHA256 hash of the malware associated with this
        incident was found related to any external IP addresses.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "61"
      "yes":
      - "68"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: PANWHunting
                accessor: DetectedExternalIPs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 720,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "68":
    id: "68"
    taskid: da2051e1-6927-4981-8029-bb62d9aa8b3b
    type: condition
    task:
      id: da2051e1-6927-4981-8029-bb62d9aa8b3b
      version: -1
      name: Can the external IPs be blocked automatically?
      description: Checks whether the external IPs associated with the malware's SHA256
        hash can be blocked automatically.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "69"
      "yes":
      - "70"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.BlockAttackerIP
            iscontext: true
          right:
            value:
              simple: "true"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 3475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "69":
    id: "69"
    taskid: d788391d-43fe-46d8-86de-104abc8ccb81
    type: regular
    task:
      id: d788391d-43fe-46d8-86de-104abc8ccb81
      version: -1
      name: Manually block IPs associated with the malware
      description: Manually block external IPs associated with the malware infection.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 830,
          "y": 3660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "70":
    id: "70"
    taskid: bc083d17-bb8e-484e-8e41-a0bbb1ef4a51
    type: playbook
    task:
      id: bc083d17-bb8e-484e-8e41-a0bbb1ef4a51
      version: -1
      name: Block IP - Generic v2
      description: |-
        This playbook blocks malicious IPs using all integrations that are enabled.

        Supported integrations for this playbook:
        * Check Point Firewall
        * Palo Alto Networks Minemeld
        * Palo Alto Networks PAN-OS
        * Zscaler
      playbookName: Block IP - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    scriptarguments:
      AutoCommit:
        simple: "No"
      CustomBlockRule:
        simple: "True"
      DAG: {}
      EDLServerIP: {}
      IP:
        complex:
          root: PANWHunting
          accessor: DetectedExternalIPs
          transformers:
          - operator: uniq
      IPBlacklistMiner: {}
      IPListName: {}
      LogForwarding: {}
      StaticAddressGroup: {}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 1250,
          "y": 3660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "71":
    id: "71"
    taskid: 4aa93eea-6c1f-4581-836b-0fdbe9add734
    type: playbook
    task:
      id: 4aa93eea-6c1f-4581-836b-0fdbe9add734
      version: -1
      name: Block File - Generic v2
      description: ""
      playbookName: Block File - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: true
    view: |-
      {
        "position": {
          "x": -370,
          "y": 3660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "72":
    id: "72"
    taskid: 158f2967-e083-4320-80b9-c59a5457e271
    type: condition
    task:
      id: 158f2967-e083-4320-80b9-c59a5457e271
      version: -1
      name: Can the file be automatically blocked on all endpoints?
      description: Checks whether malicious files associated with the incident can
        be blocked automatically using various EDR integrations.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "73"
      "yes":
      - "71"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.BlockMaliciousFiles
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": -370,
          "y": 3485
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "73":
    id: "73"
    taskid: 019f9c6b-61aa-4aab-85c2-b92bab3899bb
    type: regular
    task:
      id: 019f9c6b-61aa-4aab-85c2-b92bab3899bb
      version: -1
      name: Manually block the file on all endpoints
      description: Manually block malicious files associated with the incident using
        EDR integrations.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -800,
          "y": 3660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "75":
    id: "75"
    taskid: 4830e0a6-14de-40fb-8b7a-331a28311f0b
    type: condition
    task:
      id: 4830e0a6-14de-40fb-8b7a-331a28311f0b
      version: -1
      name: Can a host compromise notification be sent via email?
      description: Checks whether any email addresses to notify were configured, and
        whether any mail sender integrations are enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "48"
      "yes":
      - "76"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.EmailAddressesToNotify
            iscontext: true
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: brand
                      iscontext: true
                    right:
                      value:
                        simple: EWS v2
                  - operator: isEqualString
                    left:
                      value:
                        simple: brand
                      iscontext: true
                    right:
                      value:
                        simple: Gmail
                  - operator: isEqualString
                    left:
                      value:
                        simple: brand
                      iscontext: true
                    right:
                      value:
                        simple: Gmail Single User
                - - operator: isEqualString
                    left:
                      value:
                        simple: state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    view: |-
      {
        "position": {
          "x": 170,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "76":
    id: "76"
    taskid: b9dc1315-c732-4365-8561-999d8662de3d
    type: regular
    task:
      id: b9dc1315-c732-4365-8561-999d8662de3d
      version: -1
      name: Send notification emails about compromise
      description: Sends an email to the email addresses configured in the playbook
        inputs telling them that a host was compromised.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "48"
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body: {}
      cc: {}
      from: {}
      htmlBody: {}
      replyTo: {}
      subject:
        simple: Port scan & potential compromise
      templateParams: {}
      to:
        complex:
          root: inputs.EmailAddressesToNotify
          transformers:
          - operator: splitAndTrim
            args:
              delimiter:
                value:
                  simple: ','
          - operator: uniq
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 170,
          "y": 1800
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "77":
    id: "77"
    taskid: 286f079f-f592-420f-881f-f2af0405ab41
    type: condition
    task:
      id: 286f079f-f592-420f-881f-f2af0405ab41
      version: -1
      name: Can attacker hosts be isolated?
      description: Checks whether attacker hostnames exist in context, are not whitelisted,
        and the IsolateEndpointAutomatically input is set to True.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "78"
      "yes":
      - "84"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: AttackerHostnames
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: inputs.IsolateEndpointAutomatically
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isExists
          left:
            value:
              complex:
                root: AttackerHostnames
                filters:
                - - operator: notIn
                    left:
                      value:
                        simple: AttackerHostnames
                      iscontext: true
                    right:
                      value:
                        simple: WhitelistedHostnames
                      iscontext: true
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1550,
          "y": 3100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "78":
    id: "78"
    taskid: b1d73a2e-7823-4147-80ed-f666ad970851
    type: regular
    task:
      id: b1d73a2e-7823-4147-80ed-f666ad970851
      version: -1
      name: Manually isolate attacker endpoint
      description: Manually isolate the endpoint that performed the port scan, if
        the endpoint was not specified in the WhitelistedHostnames playbook input.
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1790,
          "y": 3280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "79":
    id: "79"
    taskid: b69262ea-4383-4218-824b-e13233a2c5a1
    type: playbook
    task:
      id: b69262ea-4383-4218-824b-e13233a2c5a1
      version: -1
      name: Isolate Endpoint - Generic
      description: |-
        This playbook isolates a given endpoint using the following integrations:
        - Carbon Black Enterprise Response
        - Palo Alto Networks Traps
      playbookName: Isolate Endpoint - Generic
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    scriptarguments:
      EndpointId:
        complex:
          root: PaloAltoNetworksXDREndpoint
          filters:
          - - operator: in
              left:
                value:
                  simple: PaloAltoNetworksXDREndpoint.endpoint_name
                iscontext: true
              right:
                value:
                  simple: AttackerHostnames
                iscontext: true
          accessor: endpoint_id
          transformers:
          - operator: uniq
      Hostname:
        complex:
          root: AttackerHostnames
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": -1300,
          "y": 3580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "80":
    id: "80"
    taskid: 11521065-d8aa-4e7e-8b53-2c77657f6ba7
    type: regular
    task:
      id: 11521065-d8aa-4e7e-8b53-2c77657f6ba7
      version: -1
      name: Sync XDR event
      description: Syncs a single incident between Demisto and XDR. This script uses
        the xdr-get-incident-extra-data command and outputs to the context the entire
        incident JSON. When the incident is updated in XDR, the Demisto incident will
        be updated accordingly. When an incident is updated in Demisto, the script
        executes the xdr-update-incident command and update the incident in XDR.
      scriptName: XDRSyncScript
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
      - "46"
      - "37"
      - "45"
      - "15"
      - "24"
      - "49"
      - "66"
    scriptarguments:
      alert_count: {}
      assigned_user_mail: {}
      assigned_user_pretty_name: {}
      description: {}
      first: {}
      high_severity_alert_count: {}
      host_count: {}
      incident_id:
        complex:
          root: incident
          accessor: xdrincidentid
      interval:
        simple: "5"
      low_severity_alert_count: {}
      med_severity_alert_count: {}
      notes: {}
      playbook_to_run: {}
      resolve_comment: {}
      severity: {}
      status: {}
      user_count: {}
      verbose: {}
      xdr_alerts: {}
      xdr_file_artifacts: {}
      xdr_incident_from_previous_run: {}
      xdr_incident_markdown_field: {}
      xdr_network_artifacts: {}
      xdr_url: {}
    results:
    - XDRSyncScriptTaskID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "81":
    id: "81"
    taskid: 51b45449-8567-4a5f-871e-ee3f197b067f
    type: regular
    task:
      id: 51b45449-8567-4a5f-871e-ee3f197b067f
      version: -1
      name: Stop XDR sync
      description: Stops synchronization between the Cortex XDR incident and this
        investigation.
      scriptName: StopScheduledTask
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "82"
    scriptarguments:
      taskID:
        complex:
          root: XDRSyncScriptTaskID
          transformers:
          - operator: uniq
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 470,
          "y": 4030
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "82":
    id: "82"
    taskid: 15bc7cde-88d7-4ff6-8389-64f1b0a2ef6b
    type: regular
    task:
      id: 15bc7cde-88d7-4ff6-8389-64f1b0a2ef6b
      version: -1
      name: Close incident in Cortex XDR
      description: Closes the incident in Cortex XDR.
      script: '|||xdr-update-incident'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "83"
    scriptarguments:
      assigned_user_mail: {}
      assigned_user_pretty_name: {}
      incident_id:
        complex:
          root: incident
          accessor: xdrincidentid
      manual_severity: {}
      resolve_comment: {}
      status: {}
      unassign_user: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 470,
          "y": 4200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "83":
    id: "83"
    taskid: 0c124ca8-5d37-4e19-83a1-53f67beef180
    type: regular
    task:
      id: 0c124ca8-5d37-4e19-83a1-53f67beef180
      version: -1
      name: Close Demisto investigation
      description: Close the current incident in Demisto.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "96"
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 470,
          "y": 4380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "84":
    id: "84"
    taskid: 366c1ef2-5cb7-4dc2-8b26-8cde056e287c
    type: regular
    task:
      id: 366c1ef2-5cb7-4dc2-8b26-8cde056e287c
      version: -1
      name: xdr-get-endpoints
      description: Gets a list of endpoints, according to the passed filters. Filtering
        by multiple fields will be concatenated using AND condition (OR is not supported).
        Maximum result set size is 100. Offset is the zero-based number of endpoint
        from the start of the result set (start by counting from 0).
      script: '|||xdr-get-endpoints'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "95"
    scriptarguments:
      alias_name: {}
      dist_name: {}
      endpoint_id_list: {}
      first_seen_gte: {}
      first_seen_lte: {}
      group_name: {}
      hostname:
        complex:
          root: AttackerHostnames
          transformers:
          - operator: uniq
      ip_list: {}
      isolate: {}
      last_seen_gte: {}
      last_seen_lte: {}
      limit: {}
      page: {}
      platform: {}
      sort_by: {}
      sort_order: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1300,
          "y": 3280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "86":
    id: "86"
    taskid: f0f2d1d0-d4c1-4089-8ed9-31e88ea93610
    type: title
    task:
      id: f0f2d1d0-d4c1-4089-8ed9-31e88ea93610
      version: -1
      name: Exploitation
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "64"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 140,
          "y": 2170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "87":
    id: "87"
    taskid: 0818dc59-3276-4a92-86b3-20a0c006774c
    type: title
    task:
      id: 0818dc59-3276-4a92-86b3-20a0c006774c
      version: -1
      name: Port Blocking Unneeded
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "61"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 3680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "88":
    id: "88"
    taskid: a6627a56-c465-4d96-8e3e-4f1ed0ed6bbb
    type: title
    task:
      id: a6627a56-c465-4d96-8e3e-4f1ed0ed6bbb
      version: -1
      name: Port Blocking
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1740,
          "y": 2950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "89":
    id: "89"
    taskid: 43adfaa6-26d4-4f0b-8429-90088ffa1094
    type: title
    task:
      id: 43adfaa6-26d4-4f0b-8429-90088ffa1094
      version: -1
      name: Malware Hunting
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "59"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 2940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "90":
    id: "90"
    taskid: 887a43af-e9fe-4c60-85ca-611d319676f0
    type: title
    task:
      id: 887a43af-e9fe-4c60-85ca-611d319676f0
      version: -1
      name: Host Isolation
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "77"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1550,
          "y": 2950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "91":
    id: "91"
    taskid: 9f4c3903-549c-4273-8a45-b98e203a2dc3
    type: playbook
    task:
      id: 9f4c3903-549c-4273-8a45-b98e203a2dc3
      version: -1
      name: IP Enrichment - Internal - Generic v2
      description: ""
      playbookName: IP Enrichment - Internal - Generic v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "48"
    scriptarguments:
      IP:
        complex:
          root: AttackerIPs
          transformers:
          - operator: uniq
      InternalRange:
        complex:
          root: inputs.InternalIPRanges
      ResolveIP:
        simple: "True"
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 730,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "92":
    id: "92"
    taskid: cb51a083-1e21-44b5-8901-116962d8c5b5
    type: regular
    task:
      id: cb51a083-1e21-44b5-8901-116962d8c5b5
      version: -1
      name: Update incident stage
      description: Updates the stage of the port scan investigation to "Triage".
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "80"
    scriptarguments:
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      destinationhostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      infectedhosts: {}
      investigationstage:
        simple: Triage
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      systemdefault: {}
      systems: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "93":
    id: "93"
    taskid: 4a2b9672-7df4-496d-8852-9669a2b078ac
    type: regular
    task:
      id: 4a2b9672-7df4-496d-8852-9669a2b078ac
      version: -1
      name: Update incident stage
      description: Updates the stage of the port scan investigation to "Detection".
        Additionally, saves gathered incident data to incident fields.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "91"
      - "75"
    scriptarguments:
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      destinationhostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      infectedhosts: {}
      investigationstage:
        simple: Detection
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname:
        complex:
          root: AttackerHostnames
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
      sourceip:
        complex:
          root: AttackerIPs
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ', '
      src: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      systemdefault: {}
      systems: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "94":
    id: "94"
    taskid: 87e6b32a-23a6-4aed-8103-6ffdbe0d2928
    type: regular
    task:
      id: 87e6b32a-23a6-4aed-8103-6ffdbe0d2928
      version: -1
      name: Update incident stage
      description: Updates the stage of the port scan investigation to "Containment
        & Remediation". Additionally, saves gathered incident data to incident fields.
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "88"
      - "89"
      - "90"
    scriptarguments:
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerusername: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      destinationhostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      hostname: {}
      id: {}
      infectedhosts: {}
      investigationstage:
        simple: Containment & Remediation
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      markdowntest: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portscantimestamp: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      sectorofaffectedparty: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      systemdefault: {}
      systems: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      urlsslverification: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpcid: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    reputationcalc: 1
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 2780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "95":
    id: "95"
    taskid: 1fc18b5e-5f11-47f6-8f94-f8bad97fc719
    type: regular
    task:
      id: 1fc18b5e-5f11-47f6-8f94-f8bad97fc719
      version: -1
      name: Save XDR endpoints
      description: Saves the XDR endpoints under the PaloAltoNetworksXDREndpoint context
        key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "79"
    scriptarguments:
      append: {}
      key:
        simple: PaloAltoNetworksXDREndpoint
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR
          accessor: Endpoint
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1300,
          "y": 3420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "96":
    id: "96"
    taskid: 0dfd512e-ddfc-40ab-879c-301b55822d1a
    type: title
    task:
      id: 0dfd512e-ddfc-40ab-879c-301b55822d1a
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 470,
          "y": 4550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "97":
    id: "97"
    taskid: 40036b5f-2d29-4c29-80a7-9f8cdd508a94
    type: condition
    task:
      id: 40036b5f-2d29-4c29-80a7-9f8cdd508a94
      version: -1
      name: Was there a lateral movement alert?
      description: Checks whether one of the received alerts is a lateral movement
        alert.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "42"
      "yes":
      - "51"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: IncidentAlerts
                filters:
                - - operator: containsGeneral
                    left:
                      value:
                        simple: IncidentAlerts.category
                      iscontext: true
                    right:
                      value:
                        simple: Lateral Movement
                accessor: detection_timestamp
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2530,
          "y": 890
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {
      "32_34_yes": 0.51,
      "32_87_#default#": 0.72,
      "48_60_#default#": 0.18,
      "48_86_yes": 0.56,
      "54_61_#default#": 0.38,
      "54_72_yes": 0.89,
      "64_63_yes": 0.44,
      "67_61_#default#": 0.39,
      "68_69_#default#": 0.47,
      "68_70_yes": 0.57,
      "72_71_yes": 0.4,
      "72_73_#default#": 0.76,
      "75_48_#default#": 0.52,
      "75_76_yes": 0.59,
      "77_78_#default#": 0.54
    },
    "paper": {
      "dimensions": {
        "height": 4595,
        "width": 4920,
        "x": -1790,
        "y": 20
      }
    }
  }
inputs:
- key: WhitelistedPorts
  value: {}
  required: false
  description: A list of comma-separated ports that should not be blocked even if
    used in an attack.
  playbookInputQuery: null
- key: BlockAttackerIP
  value:
    simple: "False"
  required: false
  description: Whether attacking IPs should be automatically blocked using firewalls.
  playbookInputQuery: null
- key: WhitelistedHostnames
  value:
    simple: AdminPC
  required: false
  description: A list of comma-separated hostnames that should not be isolated even
    if used in an attack.
  playbookInputQuery: null
- key: EmailAddressesToNotify
  value: {}
  required: false
  description: A list of comma-separated values of email addresses that should receive
    a notification about compromised hosts.
  playbookInputQuery: null
- key: CriticalUsernames
  value: {}
  required: false
  description: A list of comma-separated names of critical users in the organization.
    This will affect the calculated severity of the incident.
  playbookInputQuery: null
- key: IsolateEndpointAutomatically
  value:
    simple: "False"
  required: false
  description: Whether to automatically isolate endpoints, or opt for manual user
    approval. True means isolation will be done automatically.
  playbookInputQuery: null
- key: InternalIPRanges
  value: {}
  required: false
  description: 'A list of IP ranges to check the IP against. The list should be provided
    in CIDR notation, separated by commas. An example of a list of ranges would be:
    "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes). If a list is not provided,
    will use default list provided in the IsIPInRanges script (the known IPv4 private
    address ranges).'
  playbookInputQuery: null
- key: CriticalHostnames
  value:
    simple: AdminPC
  required: false
  description: A list of comma-separated names of critical endpoints in the organization.
    This will affect the calculated severity of the incident.
  playbookInputQuery: null
- key: RoleForEscalation
  value: {}
  required: false
  description: The name of the Demisto role of the users that the incident can be
    escalated to in case of developments like lateral movement.
  playbookInputQuery: null
- key: BlockMaliciousFiles
  value:
    simple: "False"
  required: false
  description: Whether to automatically block malicious files involved with the incident
    across all endpoints in the organization.
  playbookInputQuery: null
- key: CriticalADGroups
  value:
    simple: admins
  required: false
  description: CSV of DN names of critical Active Directory groups. This will affect
    the severity calculated for this incident.
  playbookInputQuery: null
- key: OnCall
  value:
    simple: "false"
  required: false
  description: Set to true to assign only the users that are currently on shift.
  playbookInputQuery: null
outputs: []
fromversion: 5.0.0
tests:
- no test