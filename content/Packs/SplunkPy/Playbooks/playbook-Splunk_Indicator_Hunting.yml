id: Splunk Indicator Hunting
version: -1
fromversion: 5.0.0
name: Splunk Indicator Hunting
description: This playbook queries Splunk for indicators such as file hashes, IP addresses,
  domains, or urls. It outputs detected users, ip addresses, and hostnames related
  to the indicators.
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: 4dbd8b35-00b4-42eb-8b71-43c7b3ca437d
    type: start
    task:
      id: 4dbd8b35-00b4-42eb-8b71-43c7b3ca437d
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '54'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": -280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '2':
    id: '2'
    taskid: 9dd2e0ca-2b1f-4f73-8bfb-019540e5b2f9
    type: title
    task:
      id: 9dd2e0ca-2b1f-4f73-8bfb-019540e5b2f9
      version: -1
      name: Hash Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '8'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -690,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '5':
    id: '5'
    taskid: cece138b-9b8e-4227-8f30-df121b32b2a5
    type: title
    task:
      id: cece138b-9b8e-4227-8f30-df121b32b2a5
      version: -1
      name: IP Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '7'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 990,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '6':
    id: '6'
    taskid: 32b954e1-13a3-4ad0-850c-0da6d85df323
    type: title
    task:
      id: 32b954e1-13a3-4ad0-850c-0da6d85df323
      version: -1
      name: Domain/Url Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '9'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3230,
          "y": 190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '7':
    id: '7'
    taskid: 9f5cc60c-036f-470a-8a62-3669641b2e99
    type: condition
    task:
      id: 9f5cc60c-036f-470a-8a62-3669641b2e99
      version: -1
      description: ''
      name: Is there an IP to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '50'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 990,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '8':
    id: '8'
    taskid: 3e8c605b-d3ce-40f2-88b9-e2514e3141c8
    type: condition
    task:
      id: 3e8c605b-d3ce-40f2-88b9-e2514e3141c8
      version: -1
      description: ''
      name: Is there a hash to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '26'
      - '27'
      - '38'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -690,
          "y": 355
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '9':
    id: '9'
    taskid: cd127e84-9a7d-480c-81ee-d409b04cd47e
    type: condition
    task:
      id: cd127e84-9a7d-480c-81ee-d409b04cd47e
      version: -1
      description: ''
      name: Is there a Domain/Url to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '11'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomain
            iscontext: true
    view: |-
      {
        "position": {
          "x": 3230,
          "y": 480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '11':
    id: '11'
    taskid: 48521f4b-2565-477b-88d5-c7741d102522
    type: condition
    task:
      id: 48521f4b-2565-477b-88d5-c7741d102522
      version: -1
      description: ''
      name: Was there a custom domain/url field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '89'
      'yes':
      - '90'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomainField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 3230,
          "y": 970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '20':
    id: '20'
    taskid: d3bfaa75-40da-4ed8-82bf-e5dfdabd160b
    type: regular
    task:
      id: d3bfaa75-40da-4ed8-82bf-e5dfdabd160b
      version: -1
      name: Set MD5 to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '69'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2920,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '21':
    id: '21'
    taskid: 1cd43a10-0846-4e69-83ee-239c50d46e22
    type: condition
    task:
      id: 1cd43a10-0846-4e69-83ee-239c50d46e22
      version: -1
      description: ''
      name: Was there a custom MD5 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '82'
      'yes':
      - '81'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SplunkMD5Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2700,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '22':
    id: '22'
    taskid: 162956bb-d6f5-4e4a-8d31-6b94fddf3e78
    type: condition
    task:
      id: 162956bb-d6f5-4e4a-8d31-6b94fddf3e78
      version: -1
      description: ''
      name: Is there an MD5 to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '21'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1900,
          "y": 805
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '26':
    id: '26'
    taskid: c3559eab-0438-4e18-8fa9-779588ef1b2a
    type: title
    task:
      id: c3559eab-0438-4e18-8fa9-779588ef1b2a
      version: -1
      name: MD5 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '22'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1900,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '27':
    id: '27'
    taskid: bb0c3fab-62b6-430e-8b43-28e8270d4274
    type: title
    task:
      id: bb0c3fab-62b6-430e-8b43-28e8270d4274
      version: -1
      name: SHA1 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '29'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1400,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '29':
    id: '29'
    taskid: e4e37a3b-6cda-4737-8171-d41893536058
    type: condition
    task:
      id: e4e37a3b-6cda-4737-8171-d41893536058
      version: -1
      description: ''
      name: Is there a SHA1 hash to search
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '31'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": -960,
          "y": 805
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '31':
    id: '31'
    taskid: 6f0e21b1-b8a4-4371-8542-4d3b1019eedc
    type: condition
    task:
      id: 6f0e21b1-b8a4-4371-8542-4d3b1019eedc
      version: -1
      description: ''
      name: Was there a custom SHA1 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '84'
      'yes':
      - '83'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkSHA1Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1400,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '38':
    id: '38'
    taskid: 1d9bf6ee-8637-4da9-8c31-8b368ff5b2f9
    type: title
    task:
      id: 1d9bf6ee-8637-4da9-8c31-8b368ff5b2f9
      version: -1
      name: SHA256 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '39'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '39':
    id: '39'
    taskid: 1eeca1cf-e1b2-44fc-8df1-069f87bbc032
    type: condition
    task:
      id: 1eeca1cf-e1b2-44fc-8df1-069f87bbc032
      version: -1
      description: ''
      name: Is there a SHA256 hash to search
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '41'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": 360,
          "y": 805
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '41':
    id: '41'
    taskid: f1e73c90-c287-4e3c-821e-fd41253442f6
    type: condition
    task:
      id: f1e73c90-c287-4e3c-821e-fd41253442f6
      version: -1
      description: ''
      name: Was there a custom SHA256 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '86'
      'yes':
      - '85'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkSHA256Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -70,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '48':
    id: '48'
    taskid: 2b4d9f60-e913-47bf-816e-177b48d6d69e
    type: title
    task:
      id: 2b4d9f60-e913-47bf-816e-177b48d6d69e
      version: -1
      name: Done Searching
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '107'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '50':
    id: '50'
    taskid: 758baf47-0e00-4de2-81fa-36e4cbbf3dce
    type: condition
    task:
      id: 758baf47-0e00-4de2-81fa-36e4cbbf3dce
      version: -1
      description: ''
      name: Was there a custom IP field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '88'
      'yes':
      - '87'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkIPField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1380,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '54':
    id: '54'
    taskid: 5e232c9c-765b-46b9-8428-5c1ce973403b
    type: condition
    task:
      id: 5e232c9c-765b-46b9-8428-5c1ce973403b
      version: -1
      description: ''
      name: Is Splunk enabled?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '2'
      - '5'
      - '6'
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: SplunkPy
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    view: |-
      {
        "position": {
          "x": 780,
          "y": -140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '57':
    id: '57'
    taskid: 4fafcfd9-fc26-43b5-888f-1ddcb32d5651
    type: regular
    task:
      id: 4fafcfd9-fc26-43b5-888f-1ddcb32d5651
      version: -1
      name: Splunk search with custom fields
      description: Search Splunk for events using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.URLDomainField
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: ' *'
              list2:
                value:
                  simple: inputs.SplunkURLDomainField
                iscontext: true
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: $1*
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3010,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '64':
    id: '64'
    taskid: aaf187b1-b832-45da-8152-cace168d5819
    type: regular
    task:
      id: aaf187b1-b832-45da-8152-cace168d5819
      version: -1
      name: Splunk search with custom fields
      description: Search Splunk for events using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkIPField
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.IPAddress
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1150,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '69':
    id: '69'
    taskid: 261029db-caf5-41e5-86a4-0ef0c4911670
    type: regular
    task:
      id: 261029db-caf5-41e5-86a4-0ef0c4911670
      version: -1
      name: Splunk search without custom fields
      description: Search Splunk for events without using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      app: {}
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2920,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '71':
    id: '71'
    taskid: 3beb9baf-e3db-4d9f-8bcf-b9316304951a
    type: regular
    task:
      id: 3beb9baf-e3db-4d9f-8bcf-b9316304951a
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events without using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1610,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '72':
    id: '72'
    taskid: 40164b40-4b16-44d2-84f7-22b37f5a858f
    type: regular
    task:
      id: 40164b40-4b16-44d2-84f7-22b37f5a858f
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events without using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -370,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '74':
    id: '74'
    taskid: 482dfa08-1395-454d-8964-00c416ec39e0
    type: regular
    task:
      id: 482dfa08-1395-454d-8964-00c416ec39e0
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events without using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: DomainURL
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: '*$1*'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3460,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '78':
    id: '78'
    taskid: 14e48935-712b-402f-8550-0d0ea1902ea9
    type: regular
    task:
      id: 14e48935-712b-402f-8550-0d0ea1902ea9
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkSHA1Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA1
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1200,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '79':
    id: '79'
    taskid: 3270831b-d3e0-49c8-8d0d-2d7a984420f3
    type: regular
    task:
      id: 3270831b-d3e0-49c8-8d0d-2d7a984420f3
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkSHA256Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA256
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 80,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '80':
    id: '80'
    taskid: 3f2b6108-f78c-4293-8f11-c938a6a774a9
    type: regular
    task:
      id: 3f2b6108-f78c-4293-8f11-c938a6a774a9
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: IP
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '81':
    id: '81'
    taskid: a460d968-b21e-4560-8904-e91172dd8f50
    type: title
    task:
      id: a460d968-b21e-4560-8904-e91172dd8f50
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '122'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2490,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '82':
    id: '82'
    taskid: 874f982c-7c14-4c4a-80b1-ce0b06fc12c6
    type: title
    task:
      id: 874f982c-7c14-4c4a-80b1-ce0b06fc12c6
      version: -1
      name: Splunk-free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '20'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2920,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '83':
    id: '83'
    taskid: 78020ff1-a587-4479-8c95-0bb03f9e6ace
    type: title
    task:
      id: 78020ff1-a587-4479-8c95-0bb03f9e6ace
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '78'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1200,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '84':
    id: '84'
    taskid: b77258be-0d37-4adf-8d46-7abcd45ae834
    type: title
    task:
      id: b77258be-0d37-4adf-8d46-7abcd45ae834
      version: -1
      name: Splunk-free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '112'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1610,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '85':
    id: '85'
    taskid: 8f2c1cc4-1bc1-4fb8-8f2d-469b6a64646d
    type: title
    task:
      id: 8f2c1cc4-1bc1-4fb8-8f2d-469b6a64646d
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '79'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 80,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '86':
    id: '86'
    taskid: 40e20f5c-d512-4f09-8819-0ff00575e505
    type: title
    task:
      id: 40e20f5c-d512-4f09-8819-0ff00575e505
      version: -1
      name: Splunk-free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '113'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -370,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '87':
    id: '87'
    taskid: ae105610-32c4-44ba-8b7f-c9bc3b8be0c1
    type: title
    task:
      id: ae105610-32c4-44ba-8b7f-c9bc3b8be0c1
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '64'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1150,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '88':
    id: '88'
    taskid: 66259488-2ddd-48b9-83d2-3e756291fe8e
    type: title
    task:
      id: 66259488-2ddd-48b9-83d2-3e756291fe8e
      version: -1
      name: Splunk-free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '114'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '89':
    id: '89'
    taskid: 4e260a76-f248-438e-8506-d6a50ef9698a
    type: title
    task:
      id: 4e260a76-f248-438e-8506-d6a50ef9698a
      version: -1
      name: Splunk-free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '115'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3460,
          "y": 1340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '90':
    id: '90'
    taskid: 2f14773a-41a5-4f64-8ba3-d1470884d2f2
    type: title
    task:
      id: 2f14773a-41a5-4f64-8ba3-d1470884d2f2
      version: -1
      name: Splunk-query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '57'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3010,
          "y": 1340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '107':
    id: '107'
    taskid: 02d690c6-7ff8-4c63-861a-bfebc899be5b
    type: condition
    task:
      id: 02d690c6-7ff8-4c63-861a-bfebc899be5b
      version: -1
      name: Have results been detected?
      description: ''
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '127'
      'yes':
      - '123'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2785
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '108':
    id: '108'
    taskid: 83c25e49-c267-4cb0-839a-f76e16bb31ef
    type: regular
    task:
      id: 83c25e49-c267-4cb0-839a-f76e16bb31ef
      version: -1
      name: Set detected IP addresses
      description: Checks if the IP addresses were returned in the search results.
        If the IP addresses were returned, they are set in Context. Otherwise, no
        value is set.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '116'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              key:
                value:
                  simple: Splunk.Result
                iscontext: true
              list:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2820,
          "y": 3490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '109':
    id: '109'
    taskid: 7a1c9314-ffe0-45d7-8679-a4287c1be666
    type: regular
    task:
      id: 7a1c9314-ffe0-45d7-8679-a4287c1be666
      version: -1
      name: Set detected user names
      description: Checks if the user names were returned in the search results. If
        the user names were returned, they are set in Context. Otherwise, no value
        is set.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '127'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              key:
                value:
                  simple: Splunk.Result
                iscontext: true
              list:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1050,
          "y": 3460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '110':
    id: '110'
    taskid: 4e7f15e5-94b0-48ed-8d59-063556a3afdc
    type: regular
    task:
      id: 4e7f15e5-94b0-48ed-8d59-063556a3afdc
      version: -1
      name: Set detected host names
      description: Checks if host names were returned in the search results.
        If host names were returned, they are set in Context. Otherwise, no
        value is set.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '138'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              key:
                value:
                  simple: Splunk.Result
                iscontext: true
              list:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1940,
          "y": 3460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '112':
    id: '112'
    taskid: 9979fc68-4310-440d-8db0-bffe6895b4e4
    type: regular
    task:
      id: 9979fc68-4310-440d-8db0-bffe6895b4e4
      version: -1
      name: Set a SHA1 hash to array
      description: Sets a SHA1 hash value into the context with the given context
        key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '71'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA1
      stringify: {}
      value:
        complex:
          root: inputs.SHA1
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1610,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '113':
    id: '113'
    taskid: 03f0fef4-4e3a-4df2-841d-7b87d0ce7575
    type: regular
    task:
      id: 03f0fef4-4e3a-4df2-841d-7b87d0ce7575
      version: -1
      name: Set a SHA256 hash to array
      description: Sets a SHA256 hash value into the context with the given context
        key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '72'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA256
      stringify: {}
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -370,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '114':
    id: '114'
    taskid: 5723e193-2eb8-4f82-849f-51ccc49d3ee1
    type: regular
    task:
      id: 5723e193-2eb8-4f82-849f-51ccc49d3ee1
      version: -1
      name: Set an IP address to array
      description: Sets a value for an IP address into the context with the given
        context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '80'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IP
      stringify: {}
      value:
        complex:
          root: inputs.IPAddress
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '115':
    id: '115'
    taskid: d969dec2-158b-4b1b-87fd-619ba8c44286
    type: regular
    task:
      id: d969dec2-158b-4b1b-87fd-619ba8c44286
      version: -1
      name: Set DomainUrl to array
      description: Sets a Domain or URL value into the context with the given context
        key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '74'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURL
      value:
        complex:
          root: inputs.URLDomain
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3460,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '116':
    id: '116'
    taskid: 94701cbb-3c79-4bd6-8b8e-c4f476d08018
    type: title
    task:
      id: 94701cbb-3c79-4bd6-8b8e-c4f476d08018
      version: -1
      name: Sort internal and external IP addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '117'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3020,
          "y": 3800
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '117':
    id: '117'
    taskid: 4fc0f11a-af51-4e39-834f-f925e463feb8
    type: condition
    task:
      id: 4fc0f11a-af51-4e39-834f-f925e463feb8
      version: -1
      description: ''
      name: Are there detected IP addresses?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '121'
      'yes':
      - '118'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.DetectedIPs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 3020,
          "y": 3930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '118':
    id: '118'
    taskid: e3b8232b-eee8-42b6-8762-c517c65e8d52
    type: regular
    task:
      id: e3b8232b-eee8-42b6-8762-c517c65e8d52
      version: -1
      name: Determine whether the IP address is internal or external
      description: If the IP address is in one of the ranges provided, a yes value
        is returned. Otherwise, a no is returned.
      scriptName: IsIPInRanges
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '119'
    scriptarguments:
      ip:
        simple: ${Splunk.DetectedIPs}
      ipRanges:
        simple: ${inputs.InternalRange}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3290,
          "y": 4165
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '119':
    id: '119'
    taskid: ede48e1d-c9d5-4f4a-8371-7abd66130e62
    type: regular
    task:
      id: ede48e1d-c9d5-4f4a-8371-7abd66130e62
      version: -1
      name: Set detected IP addresses as internal
      description: IP addresses that were found to be internal, are
          written to the Splunk.DetectedInternalIPs context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '120'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedInternalIPs
      stringify: {}
      value:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: 'yes'
          accessor: Address
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3290,
          "y": 4380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '120':
    id: '120'
    taskid: f95fab26-3f29-4fc9-80f2-852af16dc321
    type: regular
    task:
      id: f95fab26-3f29-4fc9-80f2-852af16dc321
      version: -1
      name: Set detected IP addresses as external
      description: IP addresses that were found to be external, are
        written to the Splunk.DetectedExternalIPs context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '121'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedExternalIPs
      stringify: {}
      value:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: 'no'
          accessor: Address
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3290,
          "y": 4610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '121':
    id: '121'
    taskid: 81b349f7-49e5-4ace-8904-191a038cff4d
    type: title
    task:
      id: 81b349f7-49e5-4ace-8904-191a038cff4d
      version: -1
      name: Done sorting IP addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '127'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3030,
          "y": 4860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '122':
    id: '122'
    taskid: cbd3559b-06bf-497f-8d8e-61ca86a87099
    type: regular
    task:
      id: cbd3559b-06bf-497f-8d8e-61ca86a87099
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events using custom fields.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkMD5Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.MD5
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.IPFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.UserFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.HostFieldsToReturn
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2490,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '123':
    id: '123'
    taskid: eae4ef10-2763-4d01-8a7e-f8dad5db561d
    type: title
    task:
      id: eae4ef10-2763-4d01-8a7e-f8dad5db561d
      version: -1
      name: Setting results to outputs
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '135'
      - '136'
      - '137'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2150,
          "y": 2960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '124':
    id: '124'
    taskid: 5cc384fb-59ea-457c-8f34-8d9a711c9ca3
    type: condition
    task:
      id: 5cc384fb-59ea-457c-8f34-8d9a711c9ca3
      version: -1
      description: ''
      name: Are there investigation fields for IP's?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '129'
      'yes':
      - '108'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPFieldsToReturn
            iscontext: true
    view: |-
      {
        "position": {
          "x": 3010,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '125':
    id: '125'
    taskid: 2108b67d-ebf6-42da-85b1-421e28dc69bc
    type: condition
    task:
      id: 2108b67d-ebf6-42da-85b1-421e28dc69bc
      version: -1
      description: ''
      name: Are there investigation fields for host names?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '133'
      'yes':
      - '110'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.HostFieldsToReturn
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2150,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '126':
    id: '126'
    taskid: f209019f-1fff-463f-8a51-58d27a79d4f5
    type: condition
    task:
      id: f209019f-1fff-463f-8a51-58d27a79d4f5
      version: -1
      description: ''
      name: Are there investigation fields for user names?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '131'
      'yes':
      - '109'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.UserFieldsToReturn
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '127':
    id: '127'
    taskid: 4173da23-64e4-40d5-8f82-41b40b6562fc
    type: title
    task:
      id: 4173da23-64e4-40d5-8f82-41b40b6562fc
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 5010
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '129':
    id: '129'
    taskid: 9d168d0e-9ca5-4da6-88d2-645d8e99bf1b
    type: regular
    task:
      id: 9d168d0e-9ca5-4da6-88d2-645d8e99bf1b
      version: -1
      name: Manually list detected IP addresses
      description: Provide a list of comma separated IP addresses in the input screen. This task is relevant if you have not entered any values in the IP investigation fields.
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '130'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3220,
          "y": 3490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '130':
    id: '130'
    taskid: 55a7a15a-0ed4-4961-8a2d-d40f4eee920f
    type: regular
    task:
      id: 55a7a15a-0ed4-4961-8a2d-d40f4eee920f
      version: -1
      name: Set manual IP addresses
      description: Sets to context the IP addresses provided by the previous task.
      scriptName: commentsToContext
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '116'
    scriptarguments:
      contextKey:
        simple: Splunk.DetectedIPs
      entryId:
        simple: ${lastCompletedTaskEntries.[0]}
      listSeperator:
        simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3230,
          "y": 3630
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '131':
    id: '131'
    taskid: 9d479d9b-8344-4503-8df2-2be1faa6be49
    type: regular
    task:
      id: 9d479d9b-8344-4503-8df2-2be1faa6be49
      version: -1
      name: Manually list detected user names
      description: Provide a list of comma separated user names in the input screen. This task is relevant if you have not entered any values in the user name investigation fields.
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '132'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1450,
          "y": 3460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '132':
    id: '132'
    taskid: 691b6764-e453-4369-81a5-57c55d90d09d
    type: regular
    task:
      id: 691b6764-e453-4369-81a5-57c55d90d09d
      version: -1
      name: Set manual user names
      description: Sets to context the user names provided by the previous task.
      scriptName: commentsToContext
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '127'
    scriptarguments:
      contextKey:
        simple: Splunk.DetectedUsers
      entryId:
        simple: ${lastCompletedTaskEntries.[0]}
      listSeperator:
        simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1450,
          "y": 3610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '133':
    id: '133'
    taskid: cf2b7d98-132d-4903-84bb-3b16f48bdfc8
    type: regular
    task:
      id: cf2b7d98-132d-4903-84bb-3b16f48bdfc8
      version: -1
      name: Manually list detected host names
      description: Provide a list of comma separated host names in the input screen. This task is relevant if you have not entered any values in the host names investigation fields.
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '134'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2340,
          "y": 3460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '134':
    id: '134'
    taskid: 4052430e-6fcd-4073-832e-2ef9b2f9016d
    type: regular
    task:
      id: 4052430e-6fcd-4073-832e-2ef9b2f9016d
      version: -1
      name: Set manual host names
      description: Sets to context the host names provided by the previous task.
      scriptName: commentsToContext
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '138'
    scriptarguments:
      contextKey:
        simple: Splunk.DetectedHosts
      entryId:
        simple: ${lastCompletedTaskEntries.[0]}
      listSeperator:
        simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2340,
          "y": 3600
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '135':
    id: '135'
    taskid: 617d2894-f629-4061-8b4c-ec31440f0c7d
    type: title
    task:
      id: 617d2894-f629-4061-8b4c-ec31440f0c7d
      version: -1
      name: Setting user names
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '126'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1260,
          "y": 3160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '136':
    id: '136'
    taskid: 64012f63-5c91-4b23-86f8-3cae9ffc9d17
    type: title
    task:
      id: 64012f63-5c91-4b23-86f8-3cae9ffc9d17
      version: -1
      name: Setting host names
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '125'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2150,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '137':
    id: '137'
    taskid: c297e2f5-150f-42c6-8d07-16c920c7b4f7
    type: title
    task:
      id: c297e2f5-150f-42c6-8d07-16c920c7b4f7
      version: -1
      name: Setting IP addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '124'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3010,
          "y": 3160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '138':
    id: '138'
    taskid: c02f7075-e5da-4829-89e9-487a957ef08c
    type: title
    task:
      id: c02f7075-e5da-4829-89e9-487a957ef08c
      version: -1
      name: Sort internal and external host names
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '139'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1940,
          "y": 3810
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '139':
    id: '139'
    taskid: 30d5b0f7-bec9-48a1-8910-d891e18b7d5d
    type: condition
    task:
      id: 30d5b0f7-bec9-48a1-8910-d891e18b7d5d
      version: -1
      description: ''
      name: Are there detected host names?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '141'
      'yes':
      - '144'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.DetectedHosts
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1940,
          "y": 3930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '140':
    id: '140'
    taskid: dbc3d952-1313-4344-81dc-12d46fda425d
    type: regular
    task:
      id: dbc3d952-1313-4344-81dc-12d46fda425d
      version: -1
      name: Determine whether the host names are internal or external
      description: Returns yes if the host name provided matches the organizations
        internal nameing convenstion.
      scriptName: IsInternalHostName
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '142'
    scriptarguments:
      domainName:
        simple: 1${inputs.InternalDomainName}
      hostName:
        complex:
          root: Splunk
          accessor: DetectedHosts
      internalRegex:
        simple: ${inputs.InternalHostRegex}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2210,
          "y": 4360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '141':
    id: '141'
    taskid: 1bdf7891-8309-491d-833f-08801905ef93
    type: title
    task:
      id: 1bdf7891-8309-491d-833f-08801905ef93
      version: -1
      name: Done sorting host names
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '127'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1940,
          "y": 4860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '142':
    id: '142'
    taskid: 1459cc81-34e2-46a9-82fc-a3b59ff5723e
    type: regular
    task:
      id: 1459cc81-34e2-46a9-82fc-a3b59ff5723e
      version: -1
      name: Set detected host names as internal
      description: Host names that were found to be internal, are written
        to the Splunk.DetectedInternalHosts context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '143'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedInternalHosts
      stringify: {}
      value:
        complex:
          root: Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Endpoint.IsInternal
                iscontext: true
              right:
                value:
                  simple: 'true'
          accessor: Hostname
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2210,
          "y": 4515
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '143':
    id: '143'
    taskid: c8e6de4d-504c-40c6-8053-4aab8ce6f943
    type: regular
    task:
      id: c8e6de4d-504c-40c6-8053-4aab8ce6f943
      version: -1
      name: Set detected host names as external
      description: Host names that were found to be external, are
        written to the Splunk.DetectedExternalHosts context key.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '141'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedExternalHosts
      stringify: {}
      value:
        complex:
          root: Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Endpoint.IsInternal
                iscontext: true
              right:
                value:
                  simple: 'false'
          accessor: Hostname
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2210,
          "y": 4660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '144':
    id: '144'
    taskid: d93a4511-0c53-48ed-876c-9512680048e8
    type: condition
    task:
      id: d93a4511-0c53-48ed-876c-9512680048e8
      version: -1
      description: ''
      name: Has the domain name been provided?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '145'
      'yes':
      - '140'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.InternalDomainName
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2410,
          "y": 4165
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '145':
    id: '145'
    taskid: 08b05df0-d433-4cab-819a-8a0a708f6cdb
    type: regular
    task:
      id: 08b05df0-d433-4cab-819a-8a0a708f6cdb
      version: -1
      name: Set detected host names as internal
      description: Hostnames that were detected as internal according to the inputs are set to the
          Splunk.DetectedInternalHosts key. In case the domain name was not provided in the inputs
          all host names will be set as internal.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '141'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedInternalHosts
      stringify: {}
      value:
        simple: Splunk.DetectedHosts
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2650,
          "y": 4455
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 5355,
        "width": 6760,
        "x": -2920,
        "y": -280
      }
    }
  }
inputs:
- key: MD5
  value: {}
  required: false
  description: MD5 hash file or an array of hashes for which to search.
- key: SplunkMD5Field
  value: {}
  required: false
  description: The name of the fields, in Splunk, in which to find the MD5 hash. You can enter multiple field names using a comma-separated format. If no field is specified, the search
    uses quick filter.
- key: SHA1
  value: {}
  required: false
  description: SHA1 hash file or an array of hashes on which to search.
- key: SplunkSHA1Field
  value: {}
  required: false
  description: The name of the fields, in Splunk, in which to find the SHA1 field. You can enter multiple field names using a comma-separated format. If no field is specified, the search
    uses quick filter.
- key: SHA256
  value: {}
  required: false
  description: SHA256 hash file or an array of hashes on which to search.
- key: SplunkSHA256Field
  value: {}
  required: false
  description: The name of the fields, in Splunk, in which to find the SHA256. You can enter multiple field names using a comma-separated format. If no field is specified, the search
    uses quick filter.
- key: IPAddress
  value: {}
  required: false
  description: |
    Source or destination IP on which to search. Can be a single address or an array of addresses.
- key: SplunkIPField
  value: {}
  required: false
  description:
    The name of the fields, in Splunk, in which to find the IP addresses. You can enter multiple field names using a comma-separated format. For example, sourceip,destinationip.
- key: URLDomain
  value: {}
  required: false
  description: |
    Domain or Url can be single or an array of domain/urls to search. By default the LIKE clause is used.
- key: SplunkURLDomainField
  value: {}
  required: false
  description: The name of the fields, in Splunk, in which to find the URL/Domain. If no field is specified,
    the search uses quick filter. Only one field can be used in this parameter.
- key: earliest_time
  value:
    simple: -1d
  required: false
  description: |-
    Earliest time to search.
    Examples:
    -7d
    -24h

    More examples
    https://docs.splunk.com/Documentation/Splunk/8.0.0/Search/Specifytimemodifiersinyoursearch


    For more examples view
    https://docs.splunk.com/Documentation/Splunk/8.0.0/SearchReference/SearchTimeModifiers

    It is recommended to set a limit for the time frame.
- key: latest_time
  value: {}
  required: false
  description: |-
    Latest time to search.
    Examples:
    -6d
    -23h

    More examples
    https://docs.splunk.com/Documentation/Splunk/8.0.0/Search/Specifytimemodifiersinyoursearch


    For more examples view
    https://docs.splunk.com/Documentation/Splunk/8.0.0/SearchReference/SearchTimeModifiers

    It is recommended to set a limit for the time frame.
- key: event_limit
  value:
    simple: '100'
  required: true
  description: Limit the number of events returned by query. This argument is not
    mandatory for the command, but is mandatory for the playbook.
- key: IPFieldsToReturn
  value: {}
  required: false
  description: The value of the IP fields to return from Splunk when the specified indicator is found.
                These values are used as inputs in the Setting IP addresses section. For example, src,src_ip,dst,dst_ip.
- key: UserFieldsToReturn
  value: {}
  required: false
  description: The value of the username fields to return from Splunk when the specified indicator is found.
                 These values are used as inputs in the Setting user names section. For example, username,src_username,dst_username.
- key: HostFieldsToReturn
  value: {}
  required: false
  description: The value of the hostname fields to return from Splunk when the specified indicator is found.
                 These values are used as inputs in the Setting host names section. For example, hostname,src_hostname, dst_hostname.
- key: InternalIPRange
  value: {}
  required: false
  description: 'A list of internal IP ranges to check IP addresses against. The list
    should be provided in CIDR format, separated by commas. An example of a list of
    ranges could be: 172.16.0.0/12,10.0.0.0/8,192.168.0.0/16. If a list of IP ranges
    is not provided, the list provided in the IsIPInRanges script (the known IPv4
    private address ranges) is used by default.'
- key: IndexName
  value:
    simple: '*'
  required: true
  description: A single Spunk index to use in the search.
- key: SelectFields
  value:
    simple: source,timestamp
  required: true
  description: Use this field to include additional enrichment data for the Splunk query. If you have defined one or more investigation fields,
               the SelectField should not include those fields. If there are no other investigation fields defined,
               the SelectField must contain some value.
               Enter a comma-separated list of field names as they appear in Splunk. * is valid value, but not recommended since it creates large output.
- key: InternalDomainName
  value: {}
  required: false
  description: The organizations internal domain name. This is provided for the script
    IsInternalHostName that checks if the detected host names are internal or external
    if the hosts contain the internal domains suffix. For example demisto.com. If
    there is more than one domain, use the | character to separate values such as (demisto.com|test.com)
- key: InternalHostRegex
  value: {}
  required: false
  description: This is provided for the script IsInternalHostName that checks if
    the detected host names are internal or external. if the hosts match the organizations
    naming convention. For example the host testpc1 will have the following regex
    \w{6}\d{1}
outputs:
- contextPath: Splunk.DetectedUsers
  description: Users detected based on the username field in your search.
  type: string
- contextPath: Splunk.DetectedInternalIPs
  description: Internal IP addresses detected by your search.
  type: string
- contextPath: Splunk.DetectedExternalIPs
  description: External IP addresses detected by your search.
  type: string
- contextPath: Splunk.DetectedInternalHosts
  description: Internal host names detected based on the fields in your search.
  type: string
- contextPath: Splunk.DetectedExternalHosts
  description: External host names detected based on the fields in your search.
  type: string
tests:
- Splunk Indicator Hunting Test