description: |-
  Detonates one or more remote files using the Joe Security sandbox integration.
  Returns relevant reports to the War Room and file reputations to the context data.
  This type of analysis is available for Windows only and works only for direct download links.
id: detonate_file_from_url_-_joesecurity
inputs:
- description: URL of the web file to detonate. The FileUrl is taken from the context.
  key: FileURL
  required: false
  value: {}
- description: Duration for executing the pooling (in minutes)
  key: Interval
  required: false
  value:
    simple: "1"
- description: The duration after which to stop pooling and to resume the playbook
    (in minutes)
  key: Timeout
  required: false
  value:
    simple: "15"
- description: 'Operating system to run the analysis on (comma-separated). Supported
    values are: w7, w7x64, w7_1, w7_2, w7native, android2, android3, mac1, w7l, w7x64l,
    w10, android4, w7x64native, w7_3, w10native, android5native_1, w7_4, w7_5, w10x64,
    w7x64_hvm, android6, iphone1, w7_sec, macvm, w7_lang_packs, w7x64native_hvm, lnxubuntu1,
    lnxcentos1, android7_nougat'
  key: Systems
  required: false
  value: {}
- description: Comments for the analysis.
  key: Comments
  required: false
  value: {}
- description: Enable internet access (boolean). True= internet access (default),
    False= no internet access.
  key: InternetAccess
  required: false
  value:
    simple: "True"
- description: 'The resource type to download. Default is html. Supported values are:
    html, lighthtml, executive, pdf, classhtml, xml, lightxml, classxml, clusterxml,
    irxml, json, jsonfixed, lightjson, lightjsonfixed, irjson, irjsonfixed, shoots
    (screenshots), openioc, maec, misp, graphreports, memstrings, binstrings, sample,
    cookbook, bins (dropped files), unpackpe (unpacked PE files), unpack, ida, pcap,
    pcapslim, memdumps, yara'
  key: ReportFileType
  required: false
  value:
    simple: html
name: Detonate File From URL - JoeSecurity
outputs:
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: File.Name
  description: Filename (only in case of report type=json)
  type: string
- contextPath: File.Size
  description: File size (only in case of report type=json)
  type: number
- contextPath: File.MD5
  description: MD5 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.Type
  description: File type e.g. "PE" (only in case of report type=json)
  type: string
- contextPath: File.SHA256
  description: SHA256 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.EntryID
  description: The Entry ID of the sample
  type: string
- contextPath: File.Malicious.Description
  description: For malicious files, the reason for the vendor to make the decision
  type: string
- contextPath: DBotScore.Indicator
  description: The indicator we tested (only in case of report type=json)
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator (only in case of report type=json)
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score (only in case of report type=json)
  type: string
- contextPath: IP.Address
  description: IP's relevant to the sample
  type: string
- contextPath: DBotScore.Score
  description: The actual score (only in case of report type=json)
  type: number
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: b04c121d-294e-4dd0-8148-d9fe0f44be04
      iscommand: false
      name: ""
      version: -1
    taskid: b04c121d-294e-4dd0-8148-d9fe0f44be04
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    scriptarguments:
      comments:
        complex:
          root: inputs.Comments
      file_id: {}
      internet-access:
        complex:
          root: inputs.InternetAccess
      sample_url:
        complex:
          root: inputs.FileURL
      should_wait: {}
      systems:
        complex:
          root: inputs.Systems
    separatecontext: false
    task:
      brand: Joe Security
      id: 30046540-617f-435d-82c9-5896133731c9
      iscommand: true
      name: JoeSecurity Upload File
      script: Joe Security|||joe-analysis-submit-sample
      type: regular
      version: -1
    taskid: 30046540-617f-435d-82c9-5896133731c9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "3"
    note: false
    scriptarguments:
      Ids:
        complex:
          root: Joe.Analysis.WebID
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: webid
      PollingCommandName:
        simple: joe-analysis-info
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: Joe.Analysis(val.Status != 'finished').WebID
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: fa0efa09-f941-4246-8d98-ca8f49bfcb9f
      iscommand: false
      name: GenericPolling
      playbookName: GenericPolling
      type: playbook
      version: -1
    taskid: fa0efa09-f941-4246-8d98-ca8f49bfcb9f
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    scriptarguments:
      type:
        complex:
          root: inputs.ReportFileType
      webid:
        complex:
          root: Joe.Analysis.WebID
    separatecontext: false
    task:
      brand: Joe Security
      id: ee24b1e9-5f12-4937-8ab3-91e440ef548b
      iscommand: true
      name: JoeSecurity Get Report
      script: Joe Security|||joe-download-report
      type: regular
      version: -1
    taskid: ee24b1e9-5f12-4937-8ab3-91e440ef548b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 7e59cb60-98d6-49a0-8c7f-522c1247ee73
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 7e59cb60-98d6-49a0-8c7f-522c1247ee73
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
  "6":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.FileURL
          operator: isExists
      label: "yes"
    id: "6"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Look for file URLs to detonate
      id: cae5f3d9-284f-4540-8155-670496cc11b8
      iscommand: false
      name: Is there a File to detonate?
      type: condition
      version: -1
    taskid: cae5f3d9-284f-4540-8155-670496cc11b8
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
  "7":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: Joe Security
                root: modules
                transformers:
                - args:
                    field:
                      value:
                        simple: state
                  operator: getField
          operator: isEqualString
          right:
            value:
              simple: active
      label: "yes"
    id: "7"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "6"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Check if integration instance is enabled
      id: 9bd7ec07-2925-4bff-8116-3ea116ef4340
      iscommand: false
      name: Is JoeSecurity sandbox enabled?
      type: condition
      version: -1
    taskid: 9bd7ec07-2925-4bff-8116-3ea116ef4340
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
