args:
- default: true
  description: ID of the entry containing the file to detonate.
  name: entryID
  required: true
- description: (optional) Label of the machine to use for analysis
  name: machine
- description: (optional) analysis package to be used for the analysis
  name: package
- description: (optional) analysis timeout (in seconds)
  name: timeout
- description: (optional) enable to enforce the execution for the full timeout value
  name: enforce_timeout
- description: (optional) - name of the platform to select the analysis machine from
    (e.g. “windows”)
  name: platform
- description: (optional) - define machine to start by tags. Platform must be set
    to use that. Tags are comma separated
  name: tags
- description: (optional) - enable the creation of a full memory dump of the analysis
    machine
  name: memory
- description: (optional) - options to pass to the analysis package
  name: options
comment: Adds a file to the list of pending tasks. Returns the ID of the newly created
  task.
commonfields:
  id: CuckooDetonateFile
  version: -1
dependson:
  must:
  - cuckoo-create-task-from-file
name: CuckooDetonateFile
runonce: false
script: |-
  res =  demisto.executeCommand("cuckoo-create-task-from-file", demisto.args())
  if isError(res[0]):
      demisto.results(res)
  else:
      taskid = demisto.get(res[0], 'Contents.task_id')
      if taskid:
          demisto.setContext('CuckooTaskID', str(taskid))
          demisto.results('Task #' + str(taskid) + " added.")
      else:
          demisto.results( res + [{ "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'No taskID returned.' }] )
scripttarget: 0
system: true
tags:
- cuckoo
type: python
