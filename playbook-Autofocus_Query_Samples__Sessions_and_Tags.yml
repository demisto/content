description: |-
  This playbook is used for querying the PANW threat intelligence Autofocus system. The playbook accepts indicators such as IP's, hashes, domains to run basic queries or mode advanced queries that can leverage several query parameters. In order to run the more advanced queries its recommended to use the Autofocus UI https://autofocus.paloaltonetworks.com/#/dashboard/organization to created a query and than use the export search button. The result can be used as a playbook input.

  The playbook supports searching both the Samples API and the sessions API.
id: Autofocus Query Samples, Sessions and Tags
inputs:
- description: |-
    Scope can be
    Private
    Public
    Global
  key: Scope
  required: false
  value: {}
- description: |
    Query needs to be provided in order to determine what to search for. Query is currently only in JSON format which can be extracted from the Autofocus web console API radio button.

    Query example for searching hashes can be

    {"operator":"any","children":[{"field":"sample.sha256","operator":"is","value":"4f79697b40d0932e91105bd496908f8e02c130a0e36f6d3434d6243e79ef82e0"},{"field":"sample.sha256","operator":"is","value":"7e93723c0c34ef98444e5ce9013fef220975b96291a79053fd4c9b3d3550aeb3"}]}

    Another example for searching for an IP
    {"operator":"any","children":[{"field":"sample.src_ip","operator":"is","value":"1.1.1.1"},{"field":"sample.dst_ip","operator":"is","value":"1.1.1.1"},{"field":"sample.src_ip","operator":"is","value":"2.2.2.2"},{"field":"sample.dst_ip","operator":"is","value":"2.2.2.2"}]}
  key: SampleQuery
  required: false
  value: {}
- description: |
    Query needs to be provided in order to determine what to search for. Query is currently only in JSON format which can be extracted from the Autofocus web console API radio button.

    Query example for searching hashes can be

    {"operator":"any","children":[{"field":"session.sha256","operator":"is","value":"4f79697b40d0932e91105bd496908f8e02c130a0e36f6d3434d6243e79ef82e0"},{"field":"session.sha256","operator":"is","value":"7e93723c0c34ef98444e5ce9013fef220975b96291a79053fd4c9b3d3550aeb3"}]}

    Another example for searching for an IP
    {"operator":"any","children":[{"field":"session.src_ip","operator":"is","value":"1.1.1.1"},{"field":"session.dst_ip","operator":"is","value":"1.1.1.1"},{"field":"session.src_ip","operator":"is","value":"2.2.2.2"},{"field":"session.dst_ip","operator":"is","value":"2.2.2.2"}]}
  key: SessionQuery
  required: false
  value: {}
- description: IP to query
  key: IP
  required: false
  value: {}
- description: Hash to query
  key: Hash
  required: false
  value: {}
- description: URL to query
  key: URL
  required: false
  value: {}
- description: Domain to query
  key: Domain
  required: false
  value: {}
- description: |
    Values can be session, sample, tag,all
  key: Search Type
  required: true
  value: {}
- description: Values can be Malware,Benign,Phishing,Greyware
  key: Wildfire Verdict
  required: false
  value: {}
- description: |-
    Timestamp in the following format
    2019-09-12T00:00:00
    This parameter checks for sessions prior to this timestamp
  key: Sessions time before
  required: false
  value: {}
- description: |-
    Timestamp in the following format
    2019-09-12T00:00:00
    This parameter checks for sessions after this timestamp
  key: Sessions time after
  required: false
  value: {}
- description: |-
    Timestamp in the following format
    2019-09-12T00:00:00
    This parameter checks for when the sample was first seen after this date.
  key: Sample first seen
  required: false
  value: {}
- description: |-
    Timestamp in the following format
    2019-09-12T00:00:00
    This parameter checks for when the sample was last modified after this date.
  key: Sample last modified
  required: false
  value: {}
- description: Values can be industry, organization, all, global.
  key: Tags scope
  required: false
  value: {}
- description: Values can be Actor, Campaign, Exploit, Malicious Behavior, Malware
    Family
  key: Tags class
  required: false
  value: {}
- description: Values can be True, False. If true the search will only focus on private
    (non public) objects. Default is false
  key: Tags private
  required: false
  value: {}
- description: Values can be True, False. If true the search will only focus on public
    (non private) objects. Default is false.
  key: Tags public
  required: false
  value: {}
- description: Values can be True, False. Default is false.
  key: Commodity
  required: false
  value: {}
- description: Values can be True, False. Default is false objects that have been
    analyzed by Palo Alto's Unit 42 global threat intelligence team.
  key: Unit 42
  required: false
  value: {}
name: Autofocus Query Samples, Sessions and Tags
outputs:
- contextPath: AutoFocus.SessionsResults
  description: Results of Autofocus sessions search.
  type: string
- contextPath: AutoFocus.SamplesResults
  description: Results of Autofocus samples search.
  type: string
- contextPath: AutoFocus.TopTagResults
  description: Results of Autofocus tags search.
  type: string
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Playbook started.
      id: 9745a269-e023-4903-88ec-065a56f9775e
      iscommand: false
      name: ""
      version: -1
    taskid: 9745a269-e023-4903-88ec-065a56f9775e
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 387.5,
          "y": 30
        }
      }
  "1":
    continueonerror: true
    id: "1"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    scriptarguments:
      domain:
        complex:
          root: inputs.Domain
      file_hash:
        complex:
          root: inputs.Hash
      first_seen: {}
      ip:
        complex:
          root: inputs.IP
      last_updated: {}
      max_results: {}
      order: {}
      query:
        complex:
          root: inputs.SampleQuery
      scope:
        complex:
          root: inputs.Scope
      sort: {}
      url:
        complex:
          root: inputs.URL
      wildfire_verdict: {}
    separatecontext: false
    task:
      brand: ""
      description: Submit search to autofocus-search-samples.
      id: 321ce51e-70fb-49d5-8ada-25f4d2c411e5
      iscommand: true
      name: Submit search to Autofocus - sample hash
      script: '|||autofocus-search-samples'
      type: regular
      version: -1
    taskid: 321ce51e-70fb-49d5-8ada-25f4d2c411e5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 565
        }
      }
  "4":
    id: "4"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Done
      id: b4492bfe-cd15-4815-835e-e926c94aba72
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: b4492bfe-cd15-4815-835e-e926c94aba72
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 387.5,
          "y": 1250
        }
      }
  "5":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: brand
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: AutoFocus V2
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
      label: "yes"
    id: "5"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "7"
      - "8"
      - "11"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if Autofocus is enabled.
      id: d8d223e4-96dd-4069-81f5-adad2ff8759a
      iscommand: false
      name: Is Autofocus enabled?
      type: condition
      version: -1
    taskid: d8d223e4-96dd-4069-81f5-adad2ff8759a
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 387.5,
          "y": 155
        }
      }
  "6":
    id: "6"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          accessor: SamplesSearch.AFCookie
          root: AutoFocus
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: af_cookie
      PollingCommandName:
        simple: autofocus-samples-search-results
      Timeout:
        simple: "10"
      dt:
        simple: AutoFocus.SamplesSearch(val.Status != 'complete').AFCookie
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use this playbook as a sub-playbook to  query PANW Autofocus Threat intelligence system. This sub-playbook is the same as the generic polling sub-playbook besides that it provides outputs in the playbook. The reason for that is that in Autofocus its impossible to query the results of the same query more than once so the outputs have to be in the polling context.

        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: d8565659-495d-4e14-8d80-387359ac0af6
      iscommand: false
      name: AutoFocusPolling
      playbookName: AutoFocusPolling
      type: playbook
      version: -1
    taskid: d8565659-495d-4e14-8d80-387359ac0af6
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 930
        }
      }
  "7":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: sample
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: all
      label: "yes"
    id: "7"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if search for samples is relevant.
      id: a341cc83-185a-4401-87a7-3a742402f2f0
      iscommand: false
      name: Search samples?
      type: condition
      version: -1
    taskid: a341cc83-185a-4401-87a7-3a742402f2f0
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 50,
          "y": 360
        }
      }
  "8":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: session
        - left:
            iscontext: true
            value:
              simple: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: all
      label: "Yes"
    id: "8"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "9"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if search for sessions is relevant.
      id: 743f013d-bcca-4b2a-86fe-ccbb8c873394
      iscommand: false
      name: Search Sessions?
      type: condition
      version: -1
    taskid: 743f013d-bcca-4b2a-86fe-ccbb8c873394
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 735,
          "y": 360
        }
      }
  "9":
    continueonerror: true
    id: "9"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    scriptarguments:
      domain:
        complex:
          root: inputs.Domain
      file_hash:
        complex:
          root: inputs.Hash
      ip:
        complex:
          root: inputs.IP
      max_results: {}
      order: {}
      query:
        complex:
          root: inputs.SessionQuery
      sort: {}
      time_after: {}
      time_before: {}
      time_range: {}
      url:
        complex:
          root: inputs.URL
    separatecontext: false
    task:
      brand: ""
      description: Submit search to autofocus-search-sessions.
      id: 6157126e-ff31-4e10-872e-4a1c8fede04d
      iscommand: true
      name: Submit search to Autofocus - Sessions hash
      script: '|||autofocus-search-sessions'
      type: regular
      version: -1
    taskid: 6157126e-ff31-4e10-872e-4a1c8fede04d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 735,
          "y": 545
        }
      }
  "10":
    id: "10"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          accessor: SessionsSearch.AFCookie
          root: AutoFocus
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: af_cookie
      PollingCommandName:
        simple: autofocus-sessions-search-results
      Timeout:
        simple: "10"
      dt:
        simple: AutoFocus.SessionsSearch(val.Status != 'complete').AFCookie
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use this playbook as a sub-playbook to  query PANW Autofocus Threat intelligence system. This sub-playbook is the same as the generic polling sub-playbook besides that it provides outputs in the playbook. The reason for that is that in Autofocus its impossible to query the results of the same query more than once so the outputs have to be in the polling context.

        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: ecc5d644-5a48-4d9b-82c2-30e927febd19
      iscommand: false
      name: AutoFocusPolling
      playbookName: AutoFocusPolling
      type: playbook
      version: -1
    taskid: ecc5d644-5a48-4d9b-82c2-30e927febd19
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 720,
          "y": 930
        }
      }
  "11":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: tag
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.Search Type
          operator: isEqualString
          right:
            value:
              simple: all
      label: "yes"
    id: "11"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "12"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Checks if search for tags is relevant.
      id: 5aa339af-876f-43e9-8060-3668730316e6
      iscommand: false
      name: Search Tags?
      type: condition
      version: -1
    taskid: 5aa339af-876f-43e9-8060-3668730316e6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1307.5,
          "y": 360
        }
      }
  "12":
    continueonerror: true
    id: "12"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "16"
    note: false
    scriptarguments:
      class:
        complex:
          root: inputs.Tags class
      commodity:
        complex:
          root: inputs.Commodity
      private:
        complex:
          root: inputs.Tags private
      public:
        complex:
          root: inputs.Tags public
      scope:
        complex:
          root: inputs.Tags scope
      unit42:
        complex:
          root: inputs.Unit 42
    separatecontext: false
    task:
      brand: ""
      description: Performs a search to identify the most popular tags.
      id: b0eae75d-921d-4f6e-822f-10a2b0d20934
      iscommand: true
      name: Submit search to Autofocus - tags
      script: '|||autofocus-top-tags-search'
      type: regular
      version: -1
    taskid: b0eae75d-921d-4f6e-822f-10a2b0d20934
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1307.5,
          "y": 545
        }
      }
  "13":
    id: "13"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          accessor: TopTagsSearch.AFCookie
          root: AutoFocus
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: af_cookie
      PollingCommandName:
        simple: autofocus-top-tags-results
      Timeout:
        simple: "10"
      dt:
        simple: AutoFocus.TopTagsSearch(val.Status != 'complete').AFCookie
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use this playbook as a sub-playbook to  query PANW Autofocus Threat intelligence system. This sub-playbook is the same as the generic polling sub-playbook besides that it provides outputs in the playbook. The reason for that is that in Autofocus its impossible to query the results of the same query more than once so the outputs have to be in the polling context.

        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: c2b392ae-5a29-474a-80fb-16416eef4c7c
      iscommand: false
      name: AutoFocusPolling
      playbookName: AutoFocusPolling
      type: playbook
      version: -1
    taskid: c2b392ae-5a29-474a-80fb-16416eef4c7c
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1307.5,
          "y": 915
        }
      }
  "14":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: SessionsSearch
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AutoFocus.SessionsSearch.AFCookie
                    operator: isExists
                root: AutoFocus
          operator: isExists
      label: "yes"
    id: "14"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "10"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: b410308b-959c-469a-8b69-18b972fb9d7c
      iscommand: false
      name: Was submit session search to AutoFocus successful?
      type: condition
      version: -1
    taskid: b410308b-959c-469a-8b69-18b972fb9d7c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 735,
          "y": 720
        }
      }
  "15":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: SamplesSearch
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AutoFocus.SamplesSearch.AFCookie
                    operator: isExists
                root: AutoFocus
          operator: isExists
      label: "yes"
    id: "15"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "6"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: c05bd427-2b75-4af6-8099-b55eb79a62d8
      iscommand: false
      name: Was submit sample search to AutoFocus successful?
      type: condition
      version: -1
    taskid: c05bd427-2b75-4af6-8099-b55eb79a62d8
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 50,
          "y": 740
        }
      }
  "16":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: TopTagsSearch
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AutoFocus.TopTagsSearch.AFCookie
                    operator: isExists
                root: AutoFocus
          operator: isExists
      label: "yes"
    id: "16"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "13"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: ce2d7194-c6b9-4341-83a0-bf7b564f1ddf
      iscommand: false
      name: Was submit tags search to AutoFocus successful?
      type: condition
      version: -1
    taskid: ce2d7194-c6b9-4341-83a0-bf7b564f1ddf
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1307.5,
          "y": 720
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "5_4_#default#": 0.53
    },
    "paper": {
      "dimensions": {
        "height": 1285,
        "width": 1637.5,
        "x": 50,
        "y": 30
      }
    }
  }
