args:
- default: true
  description: The date to use in the object
  name: date
- description: The date format for the result, can be ISO/GMT/UTC/Locale/Date/Year/Month/Day/DayInWeek/Hours
  name: dateFormat
- description: prefix the keys in the context for the results
  name: contextKey
- description: Will subtract monthsAgo months from current time
  name: monthsAgo
- description: Will subtract minutesAgo minutes from current time
  name: minutesAgo
- description: Will subtract hoursAgo hours from current time
  name: hoursAgo
comment: |
  Retrieves the current date and time.
commonfields:
  id: GetTime
  version: -1
enabled: true
name: GetTime
outputs:
- contextPath: TimeNowUnix
  description: number of milliseconds since 1970/01/01
- contextPath: TimeNow
  description: current time in ISO format
runonce: false
script: |-
  var d = new Date();
  if ((args.date) && (args.date.length > 0)){
      d =  new Date(args.date);
  }
  if (args.monthsAgo){
      d.setMonth(d.getMonth() - args.monthsAgo);
  }
  if (args.minutesAgo){
      d.setMinutes(d.getMinutes() - args.minutesAgo);
  }
  if (args.hoursAgo){
      d.setHours(d.getHours() - args.hoursAgo);
  }

  prefix = '';
  if (args.contextKey) {
      prefix = args.contextKey;
  }
  var timeStr = String(d);
  if ((args.dateFormat) && (args.dateFormat.length > 0)){
      switch(args.dateFormat.toLowerCase()) {
          case 'iso':
              timeStr = d.toISOString();
              break;
          case 'gmt':
          case 'utc':
              timeStr = d.toUTCString();
              break;
          case 'locale':
              timeStr = d.toLocaleString();
              break;
          case 'date':
              timeStr = d.toDateString();
              break;
          case 'year':
              timeStr = d.getFullYear();
              break;
          case 'month':
              timeStr = d.getMonth();
              break;
          case 'day':
              timeStr = d.getDate();
              break;
          case 'dayinweek':
              timeStr = d.getDay();
              break;
          case 'hours':
              timeStr = d.getHours();
              break;
          case 'utchours':
              timeStr = d.getUTCHours();
              break;
          case 'minutes':
              timeStr = d.getMinutes();
              break;


          default:
              throw 'Unsupported date format: '+args.dateFormat
      }
  }

  context = {};
  context[prefix+'TimeNowUnix'] = d.getTime();
  context[prefix+'TimeNow'] = timeStr;
  return {
      Type : entryTypes.note,
      Contents : timeStr,
      ContentsFormat : formats.json,
      HumanReadable : timeStr,
      EntryContext : context
  };
scripttarget: 0
system: true
tags:
- Utility
type: javascript
