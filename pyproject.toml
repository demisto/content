[tool.poetry]
name = "content"
version = "0.1.0"
description = "Cortex XSOAR content"
authors = ["Cortex XSOAR"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8,<3.11"
defusedxml = "^0.7.1"

[tool.poetry.group.dev.dependencies]
demisto_sdk = "1.14.1"
requests = "^2.22.0"
pre-commit = "^2.20.0"

[tool.poetry.group.linters.dependencies]
mypy = "^0.982"
flake8 = "^4.0.1"
ruff = "^0.0.264"

[tool.poetry.group.testing.dependencies]
pytest = "^7.1.2"
requests-mock = "^1.9.3"
pytest-mock = "^3.7.0"
freezegun = "^1.1.0"
mock-open = "^1.4.0"

# If mypy requires for a `types-*` package, add it here with `poetry add --group typing <package>`
[tool.poetry.group.typing.dependencies]
types-python-dateutil = "^2.8.19.3"

# This is the python dependencies from the py3-native docker image.
# See https://github.com/demisto/dockerfiles/blob/master/docker/py3-native/pyproject.toml
[tool.poetry.group.native]
optional = true

[tool.poetry.group.native.dependencies]
opensearch_dsl = "*"
aiohttp = "*"
python-magic = "*"
pan-os-python = "*"
pdf2image = "*"
bs4 = "*"
lxml = "*"
chardet = "*"
six = "*"
pygments = "*"
numpy = "*"
scikit-learn = "*"
nltk = "*"
pandas = "*"
urllib3 = "*"
python-docx = "*"
enum34 = "*"
pypdf2 = "*"
pikepdf = "*"
boto3 = "*"
msal = "*"
cryptography = "*"
tzlocal = "*"
defusedxml = "*"
isodate = "*"
future = "*"
idna = "*"
pycparser = "*"
cffi = "*"
asn1crypto = "*"
certifi = "*"
cached-property = "*"
phrases-case = "*"
pyvirtualdisplay = "*"
parse-emails = "*"
slack-sdk = {extras = ["optional"], version = "*"}
pyjwt = {extras = ["crypto"],version = "*"}
google-api-python-client = "*"
exchangelib = "*"
requests-oauthlib = "*"
oauthlib = "*"
requests-ntlm = "*"
oauth2client = "*"
dill = "*"
eli5 = "*"
packaging = "*"
rtfde = "*"
webdriver-manager = "*"
selenium = "*"
cymruwhois = "*"
simplejson = "*"
networkx = "*"
slackclient = "*"
dpkt = "*"
aiodns = "*"
pysocks = "^1.7.0"  # must be 1.7.0 or above, cause 1.6.8 doesn't work on python 3.10
jbxapi = "*"
python-whois = "*"
ipwhois = "*"
edgegrid-python = "*"
tldextract = "*"

[tool.poetry.group.ci]
optional = true

[tool.poetry.group.ci.dependencies]
blessings = "^1.7"
coloredlogs = "^15.0.1"
pandas = "^1.3.3"
prettytable = "^3.2.0"
pyspellchecker = "^0.6.2"
sendgrid = "^6.6.0"
slack_sdk = "^3.11.2"
timeout_decorator = "^0.5.0"
ujson = "^5.1.0"
yamlordereddictloader = "^0.4.0"
parinx = {git = "https://github.com/npsolve/parinx.git", rev = "6493798ceba8089345d970f71be4a896eb6b081d"}
python-gitlab = "^3.0.0"
PyGithub = "^1.54.1"
ansible-runner = "^2.2.0"
paramiko = "^2.11.0"
boto3 = "^1.23.5"
jsonschema = "^4.6.0"
google-cloud-bigquery = "^3.2.0"
db-dtypes = "^1.0.1"
google-cloud-secret-manager = "^2.13.0"
json5 = "^0.9.10"

[tool.ruff]
select = ["E", "F", "PLE"]
ignore = [
    "E501", # line too long
    
    "E402", # module-import-not-at-top-of-file	
    "F403", # undefined-local-with-import-star
    "F405", # undefined-local-with-import-star-usage
    "F821", # undefined-name
    "W605", # invalid-escape-sequence
]
extend-exclude = ["CommonServerPython", "test_data"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
# fixable = []
# unfixable = []

line-length = 120
target-version = "py310"
src = ["Packs/Base/Scripts/CommonServerPython", "Tests/demistomock", "Packs/ApiModules/Scripts/*"]

[tool.ruff.per-file-ignores]
"**/*_test.py" = []

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
namespace_packages = true
show_error_codes = true
follow_imports = "silent"
pretty = true
allow_redefinition = true
junit_xml = ".report_mypy.xml"
exclude = ["test_data", "tests_data", ".venv", ".*_test.py$", "test_.*.py", "infrastructure_tests", "CommonServerPython.py", "demistomock.py"]

[tool.pytest]
junit_family = "xunit1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"